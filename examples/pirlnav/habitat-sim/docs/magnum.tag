<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>AbstractUiShader.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>AbstractUiShader_8h</filename>
    <includes id="AbstractShaderProgram_8h" name="AbstractShaderProgram.h" local="no" imported="no">Magnum/GL/AbstractShaderProgram.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="no" imported="no">Magnum/Math/Matrix3.h</includes>
    <class kind="class">Magnum::Ui::AbstractUiShader</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>Anchor.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>Anchor_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <includes id="Range_8h" name="Range.h" local="no" imported="no">Magnum/Math/Range.h</includes>
    <includes id="Ui_8h" name="Ui.h" local="yes" imported="no">Magnum/Ui/Ui.h</includes>
    <class kind="class">Magnum::Ui::Anchor</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Snap &gt;</type>
      <name>Snaps</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>abf82220e5ebfc36efdff609efcb9ae01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Snap</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>adb75721c5ea61dfb3b39cdae3743482b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482ba945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482ba92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482ba2ad9d63b69c4a10a5cc9cad923133bc4">Bottom</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482baa4ffdcf0dc1f31b9acaf295d75b51d00">Top</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482babb372b16a6afd593f17b8fbdb297d823">InsideX</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482bae1a26b20ef38819a20b38008f8436ee6">InsideY</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482bac87437e57753ee4bc03f6ce6b2a37d97">NoSpaceX</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482ba52bc69c5b52cb1ef358ec05222e8f4c5">NoSpaceY</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>BasicGLLayer.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicGLLayer_8h</filename>
    <includes id="GL_2Buffer_8h" name="Buffer.h" local="no" imported="no">Magnum/GL/Buffer.h</includes>
    <includes id="GL_2Mesh_8h" name="Mesh.h" local="no" imported="no">Magnum/GL/Mesh.h</includes>
    <includes id="BasicLayer_8h" name="BasicLayer.h" local="yes" imported="no">Magnum/Ui/BasicLayer.h</includes>
    <class kind="class">Magnum::Ui::BasicGLLayer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>BasicGLLayer.hpp</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicGLLayer_8hpp</filename>
    <includes id="BasicGLLayer_8h" name="BasicGLLayer.h" local="yes" imported="no">BasicGLLayer.h</includes>
    <includes id="AbstractUiShader_8h" name="AbstractUiShader.h" local="yes" imported="no">Magnum/Ui/AbstractUiShader.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>BasicInstancedGLLayer.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicInstancedGLLayer_8h</filename>
    <includes id="GL_2Buffer_8h" name="Buffer.h" local="no" imported="no">Magnum/GL/Buffer.h</includes>
    <includes id="GL_2Mesh_8h" name="Mesh.h" local="no" imported="no">Magnum/GL/Mesh.h</includes>
    <includes id="BasicInstancedLayer_8h" name="BasicInstancedLayer.h" local="yes" imported="no">Magnum/Ui/BasicInstancedLayer.h</includes>
    <class kind="class">Magnum::Ui::BasicInstancedGLLayer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>BasicInstancedGLLayer.hpp</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicInstancedGLLayer_8hpp</filename>
    <includes id="BasicInstancedGLLayer_8h" name="BasicInstancedGLLayer.h" local="yes" imported="no">BasicInstancedGLLayer.h</includes>
    <includes id="AbstractUiShader_8h" name="AbstractUiShader.h" local="yes" imported="no">Magnum/Ui/AbstractUiShader.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>BasicInstancedLayer.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicInstancedLayer_8h</filename>
    <includes id="Range_8h" name="Range.h" local="no" imported="no">Magnum/Math/Range.h</includes>
    <includes id="Ui_8h" name="Ui.h" local="yes" imported="no">Magnum/Ui/Ui.h</includes>
    <class kind="class">Magnum::Ui::BasicInstancedLayer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>BasicInstancedLayer.hpp</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicInstancedLayer_8hpp</filename>
    <includes id="BasicInstancedLayer_8h" name="BasicInstancedLayer.h" local="yes" imported="no">BasicInstancedLayer.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>BasicLayer.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicLayer_8h</filename>
    <includes id="Range_8h" name="Range.h" local="no" imported="no">Magnum/Math/Range.h</includes>
    <includes id="Ui_8h" name="Ui.h" local="yes" imported="no">Magnum/Ui/Ui.h</includes>
    <class kind="class">Magnum::Ui::BasicLayer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>BasicLayer.hpp</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicLayer_8hpp</filename>
    <includes id="BasicLayer_8h" name="BasicLayer.h" local="yes" imported="no">BasicLayer.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>BasicPlane.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicPlane_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <includes id="Range_8h" name="Range.h" local="no" imported="no">Magnum/Math/Range.h</includes>
    <includes id="Ui_8h" name="Ui.h" local="yes" imported="no">Magnum/Ui/Ui.h</includes>
    <class kind="class">Magnum::Ui::AbstractPlane</class>
    <class kind="class">Magnum::Ui::BasicPlane</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; PlaneFlag &gt;</type>
      <name>PlaneFlags</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a25efa17947864ff2d297cc5f560cc62e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PlaneFlag</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>ae45be3c82cb871a531ca61b5f228015c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ae45be3c82cb871a531ca61b5f228015ca7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a668ca2e16644e9d8e6b077ed9d2262cd</anchor>
      <arglist>(Debug &amp;debug, PlaneFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>af1efee2fa682422665c299232d1870b9</anchor>
      <arglist>(Debug &amp;debug, PlaneFlags value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BasicPlane.hpp</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicPlane_8hpp</filename>
    <includes id="BasicPlane_8h" name="BasicPlane.h" local="yes" imported="no">BasicPlane.h</includes>
    <includes id="AbstractUiShader_8h" name="AbstractUiShader.h" local="yes" imported="no">Magnum/Ui/AbstractUiShader.h</includes>
    <includes id="BasicUserInterface_8h" name="BasicUserInterface.h" local="yes" imported="no">Magnum/Ui/BasicUserInterface.h</includes>
    <includes id="Widget_8h" name="Widget.h" local="yes" imported="no">Magnum/Ui/Widget.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>BasicUserInterface.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicUserInterface_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="no" imported="no">Magnum/Math/Vector2.h</includes>
    <includes id="Ui_8h" name="Ui.h" local="yes" imported="no">Magnum/Ui/Ui.h</includes>
    <class kind="class">Magnum::Ui::AbstractUserInterface</class>
    <class kind="class">Magnum::Ui::BasicUserInterface</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>Button.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>Button_8h</filename>
    <includes id="Widget_8h" name="Widget.h" local="yes" imported="no">Magnum/Ui/Widget.h</includes>
    <includes id="Style_8h" name="Style.h" local="yes" imported="no">Magnum/Ui/Style.h</includes>
    <class kind="class">Magnum::Ui::Button</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>Input.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>Input_8h</filename>
    <includes id="Text_8h" name="Text.h" local="no" imported="no">Magnum/Text/Text.h</includes>
    <includes id="Widget_8h" name="Widget.h" local="yes" imported="no">Magnum/Ui/Widget.h</includes>
    <includes id="Style_8h" name="Style.h" local="yes" imported="no">Magnum/Ui/Style.h</includes>
    <class kind="class">Magnum::Ui::Input</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>Label.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>Label_8h</filename>
    <includes id="Text_8h" name="Text.h" local="no" imported="no">Magnum/Text/Text.h</includes>
    <includes id="Widget_8h" name="Widget.h" local="yes" imported="no">Magnum/Ui/Widget.h</includes>
    <includes id="Style_8h" name="Style.h" local="yes" imported="no">Magnum/Ui/Style.h</includes>
    <class kind="class">Magnum::Ui::Label</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>Modal.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>Modal_8h</filename>
    <includes id="Text_8h" name="Text.h" local="no" imported="no">Magnum/Text/Text.h</includes>
    <includes id="Widget_8h" name="Widget.h" local="yes" imported="no">Magnum/Ui/Widget.h</includes>
    <includes id="Style_8h" name="Style.h" local="yes" imported="no">Magnum/Ui/Style.h</includes>
    <class kind="class">Magnum::Ui::Modal</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>Style.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>Style_8h</filename>
    <includes id="Color_8h" name="Color.h" local="no" imported="no">Magnum/Math/Color.h</includes>
    <includes id="Range_8h" name="Range.h" local="no" imported="no">Magnum/Math/Range.h</includes>
    <includes id="AbstractUiShader_8h" name="AbstractUiShader.h" local="yes" imported="no">Magnum/Ui/AbstractUiShader.h</includes>
    <includes id="Ui_8h" name="Ui.h" local="yes" imported="no">Magnum/Ui/Ui.h</includes>
    <class kind="class">Magnum::Ui::StyleConfiguration</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a3a950dd64c0c17160f00681acf28d71c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a3a950dd64c0c17160f00681acf28d71ca87b7760f14fbff78d8819291f36ab9a0">Button</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a3a950dd64c0c17160f00681acf28d71cab021df6aac4654c454f46c77646e745f">Label</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a3a950dd64c0c17160f00681acf28d71ca324118a6721dd6b8a9b9f4e327df2bf5">Input</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a3a950dd64c0c17160f00681acf28d71cac59d6df802c32f037c2a15ff75faec17">Modal</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>ad16021b9313de52986ac0ff6e92b346c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346ca7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346caeee0168be69b854c20621fc6f01cc3fc">Hover</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346cad78a68f6a85421ae121c2cb5b73a1040">Pressed</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346ca4d3d769b812b6faa6b76e1a8abaece2d">Active</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346cab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346ca7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Style</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>ab8c9d883509415e4668b9165e63c10de</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea074de7e7c226d5c60f8af14c20725352">Primary</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea505a83f220c02df2f85c3810cd9ceb38">Success</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea4059b0251f66a18cb56f544728796875">Info</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea0eaadb4fcb48a0a0ed7bc9868be9fbaa">Warning</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea990816b607ebf99b1415760965e4d564">Danger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea8ed64ce6e8032ddb62a463ffa78881d9">Dim</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea745e3db6a7ffd50e1a72b39482f0882d">Flat</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>aa164d931b7585de7abc12588d41b9c55</anchor>
      <arglist>(Debug &amp;debug, Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a328fb1fa2dd19b12b50706df41c2ce53</anchor>
      <arglist>(Debug &amp;debug, State value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>aed40c9f728962b3d3ff3794ca563a5b0</anchor>
      <arglist>(Debug &amp;debug, Style value)</arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration</type>
      <name>defaultStyleConfiguration</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a757a55d7cb2d73c2e757e308cd8d9e14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration</type>
      <name>mcssDarkStyleConfiguration</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a1f6e9b3376c1bc4f6f913e2bcbf37b57</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Ui.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>Ui_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <class kind="class">Magnum::Ui::BasicInstancedLayer</class>
    <class kind="class">Magnum::Ui::BasicInstancedGLLayer</class>
    <class kind="class">Magnum::Ui::BasicLayer</class>
    <class kind="class">Magnum::Ui::BasicGLLayer</class>
    <class kind="class">Magnum::Ui::BasicPlane</class>
    <class kind="class">Magnum::Ui::BasicUserInterface</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>UserInterface.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>UserInterface_8h</filename>
    <includes id="GL_2Buffer_8h" name="Buffer.h" local="no" imported="no">Magnum/GL/Buffer.h</includes>
    <includes id="Texture_8h" name="Texture.h" local="no" imported="no">Magnum/GL/Texture.h</includes>
    <includes id="Text_8h" name="Text.h" local="no" imported="no">Magnum/Text/Text.h</includes>
    <includes id="AbstractUiShader_8h" name="AbstractUiShader.h" local="yes" imported="no">Magnum/Ui/AbstractUiShader.h</includes>
    <includes id="BasicUserInterface_8h" name="BasicUserInterface.h" local="yes" imported="no">Magnum/Ui/BasicUserInterface.h</includes>
    <includes id="Style_8h" name="Style.h" local="yes" imported="no">Magnum/Ui/Style.h</includes>
    <class kind="class">Magnum::Ui::UserInterface</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>ValidatedInput.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>ValidatedInput_8h</filename>
    <includes id="Input_8h" name="Input.h" local="yes" imported="no">Magnum/Ui/Input.h</includes>
    <class kind="class">Magnum::Ui::ValidatedInput</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>Widget.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>Widget_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <includes id="Range_8h" name="Range.h" local="no" imported="no">Magnum/Math/Range.h</includes>
    <includes id="Ui_8h" name="Ui.h" local="yes" imported="no">Magnum/Ui/Ui.h</includes>
    <class kind="class">Magnum::Ui::Widget</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; WidgetFlag &gt;</type>
      <name>WidgetFlags</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a8f043ada252e182e750e0f74407965de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WidgetFlag</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a45de09c646008bdb65fc358488fd64b6</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6a3ef193e1ac8f2bc3d7226a29d6b09875">Hovered</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6ad78a68f6a85421ae121c2cb5b73a1040">Pressed</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6a4d3d769b812b6faa6b76e1a8abaece2d">Active</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6ab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6a7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a0310478aa60fec3a2e0e4e2226751a95</anchor>
      <arglist>(Debug &amp;debug, WidgetFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>ad24ec2ad8310d61add110dbe738e8566</anchor>
      <arglist>(Debug &amp;debug, WidgetFlags value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DebugDraw.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/BulletIntegration/</path>
    <filename>DebugDraw_8h</filename>
    <includes id="GL_2Buffer_8h" name="Buffer.h" local="no" imported="no">Magnum/GL/Buffer.h</includes>
    <includes id="GL_2Mesh_8h" name="Mesh.h" local="no" imported="no">Magnum/GL/Mesh.h</includes>
    <includes id="VertexColor_8h" name="VertexColor.h" local="no" imported="no">Magnum/Shaders/VertexColor.h</includes>
    <includes id="integration_2src_2Magnum_2BulletIntegration_2Integration_8h" name="Integration.h" local="yes" imported="no">Magnum/BulletIntegration/Integration.h</includes>
    <class kind="class">Magnum::BulletIntegration::DebugDraw</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::BulletIntegration</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1BulletIntegration.html</anchorfile>
      <anchor>a3ad6b49cdf01acc63fe23aac3711bb60</anchor>
      <arglist>(Debug &amp;debug, DebugDraw::Mode value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MotionState.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/BulletIntegration/</path>
    <filename>MotionState_8h</filename>
    <includes id="AbstractFeature_8h" name="AbstractFeature.h" local="no" imported="no">Magnum/SceneGraph/AbstractFeature.h</includes>
    <includes id="AbstractTranslationRotation3D_8h" name="AbstractTranslationRotation3D.h" local="no" imported="no">Magnum/SceneGraph/AbstractTranslationRotation3D.h</includes>
    <class kind="class">Magnum::BulletIntegration::MotionState</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::BulletIntegration</namespace>
  </compound>
  <compound kind="file">
    <name>ConvertShapeNode.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/DartIntegration/</path>
    <filename>ConvertShapeNode_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="no" imported="no">Magnum/Math/Vector3.h</includes>
    <includes id="Trade_8h" name="Trade.h" local="no" imported="no">Magnum/Trade/Trade.h</includes>
    <includes id="DartIntegration_8h" name="DartIntegration.h" local="yes" imported="no">Magnum/DartIntegration/DartIntegration.h</includes>
    <class kind="struct">Magnum::DartIntegration::ShapeData</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DartIntegration</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; ConvertShapeType &gt;</type>
      <name>ConvertShapeTypes</name>
      <anchorfile>namespaceMagnum_1_1DartIntegration.html</anchorfile>
      <anchor>a1d0206f742a4e62ea38e79ed9c19f7d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ConvertShapeType</name>
      <anchorfile>namespaceMagnum_1_1DartIntegration.html</anchorfile>
      <anchor>a015b848b4da3dd03f1fc32b860d04ba6</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1DartIntegration.html" anchor="a015b848b4da3dd03f1fc32b860d04ba6ad92a8333dd3ccb895cc65f7455b71206">Material</enumvalue>
      <enumvalue file="namespaceMagnum_1_1DartIntegration.html" anchor="a015b848b4da3dd03f1fc32b860d04ba6a07ee3427562e4f1a5c9f2bfb17fd9eee">Primitive</enumvalue>
      <enumvalue file="namespaceMagnum_1_1DartIntegration.html" anchor="a015b848b4da3dd03f1fc32b860d04ba6a710fdb6adb881b408116ef95335e1961">Mesh</enumvalue>
      <enumvalue file="namespaceMagnum_1_1DartIntegration.html" anchor="a015b848b4da3dd03f1fc32b860d04ba6ab1c94ca2fbc3e78fc30069c8d0f01680">All</enumvalue>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; ShapeData &gt;</type>
      <name>convertShapeNode</name>
      <anchorfile>namespaceMagnum_1_1DartIntegration.html</anchorfile>
      <anchor>a57f5733847272ce2d0dd1b29223dff38</anchor>
      <arglist>(dart::dynamics::ShapeNode &amp;shapeNode, ConvertShapeTypes convertTypes, Trade::AbstractImporter *importer=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DartIntegration.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/DartIntegration/</path>
    <filename>DartIntegration_8h</filename>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DartIntegration</namespace>
  </compound>
  <compound kind="file">
    <name>World.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/DartIntegration/</path>
    <filename>World_8h</filename>
    <includes id="AbstractFeature_8h" name="AbstractFeature.h" local="no" imported="no">Magnum/SceneGraph/AbstractFeature.h</includes>
    <includes id="SceneGraph_2AbstractObject_8h" name="AbstractObject.h" local="no" imported="no">Magnum/SceneGraph/AbstractObject.h</includes>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <includes id="integration_2src_2Magnum_2DartIntegration_2Object_8h" name="Object.h" local="yes" imported="no">Magnum/DartIntegration/Object.h</includes>
    <class kind="class">Magnum::DartIntegration::World</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DartIntegration</namespace>
  </compound>
  <compound kind="file">
    <name>GeometryIntegration.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/EigenIntegration/</path>
    <filename>GeometryIntegration_8h</filename>
    <includes id="Quaternion_8h" name="Quaternion.h" local="no" imported="no">Magnum/Math/Quaternion.h</includes>
    <includes id="integration_2src_2Magnum_2EigenIntegration_2Integration_8h" name="Integration.h" local="yes" imported="no">Magnum/EigenIntegration/Integration.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::EigenIntegration</namespace>
    <member kind="function">
      <type>To</type>
      <name>cast</name>
      <anchorfile>namespaceMagnum_1_1EigenIntegration.html</anchorfile>
      <anchor>a33f32d9f98971afab137d9acdd839f6f</anchor>
      <arglist>(const Math::Quaternion&lt; T &gt; &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GtcIntegration.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/GlmIntegration/</path>
    <filename>GtcIntegration_8h</filename>
    <includes id="Quaternion_8h" name="Quaternion.h" local="yes" imported="no">Magnum/Math/Quaternion.h</includes>
    <namespace>glm</namespace>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a43ad475150aa58183fd943518f570598</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tquat&lt; T, q &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GtxIntegration.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/GlmIntegration/</path>
    <filename>GtxIntegration_8h</filename>
    <includes id="DualQuaternion_8h" name="DualQuaternion.h" local="yes" imported="no">Magnum/Math/DualQuaternion.h</includes>
    <includes id="GtcIntegration_8h" name="GtcIntegration.h" local="yes" imported="no">Magnum/GlmIntegration/GtcIntegration.h</includes>
    <namespace>glm</namespace>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a990d160f10118373a348bd734493ebed</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tdualquat&lt; T, q &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Context.hpp</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/ImGuiIntegration/</path>
    <filename>Context_8hpp</filename>
    <includes id="integration_2src_2Magnum_2ImGuiIntegration_2Integration_8h" name="Integration.h" local="yes" imported="no">Magnum/ImGuiIntegration/Integration.h</includes>
    <includes id="integration_2src_2Magnum_2ImGuiIntegration_2Context_8h" name="Context.h" local="yes" imported="no">Magnum/ImGuiIntegration/Context.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::ImGuiIntegration</namespace>
  </compound>
  <compound kind="file">
    <name>Widgets.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/ImGuiIntegration/</path>
    <filename>Widgets_8h</filename>
    <includes id="Range_8h" name="Range.h" local="no" imported="no">Magnum/Math/Range.h</includes>
    <includes id="Color_8h" name="Color.h" local="no" imported="no">Magnum/Math/Color.h</includes>
    <includes id="GL_8h" name="GL.h" local="no" imported="no">Magnum/GL/GL.h</includes>
    <includes id="integration_2src_2Magnum_2ImGuiIntegration_2Integration_8h" name="Integration.h" local="yes" imported="no">Magnum/ImGuiIntegration/Integration.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::ImGuiIntegration</namespace>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>namespaceMagnum_1_1ImGuiIntegration.html</anchorfile>
      <anchor>ae843621d2754d7d7645163fd4e2de80f</anchor>
      <arglist>(GL::Texture2D &amp;texture, const Vector2 &amp;size, const Range2D &amp;uvRange={{}, Vector2{1.0f}}, const Color4 &amp;tintColor=Color4{1.0f}, const Color4 &amp;borderColor={})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>imageButton</name>
      <anchorfile>namespaceMagnum_1_1ImGuiIntegration.html</anchorfile>
      <anchor>a6cca662c778c7e52336ffa46f79c9348</anchor>
      <arglist>(GL::Texture2D &amp;texture, const Vector2 &amp;size, const Range2D &amp;uvRange={{}, Vector2{1.0f}}, Int framePadding=-1, const Color4 &amp;backgroundColor={}, const Color4 &amp;tintColor=Color4{1.0f})</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Compositor.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/OvrIntegration/</path>
    <filename>Compositor_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <includes id="OvrIntegration_8h" name="OvrIntegration.h" local="yes" imported="no">Magnum/OvrIntegration/OvrIntegration.h</includes>
    <class kind="class">Magnum::OvrIntegration::Layer</class>
    <class kind="class">Magnum::OvrIntegration::HeadLockableLayer</class>
    <class kind="class">Magnum::OvrIntegration::LayerEyeFov</class>
    <class kind="class">Magnum::OvrIntegration::LayerQuad</class>
    <class kind="class">Magnum::OvrIntegration::Compositor</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OvrIntegration</namespace>
    <member kind="enumeration">
      <type></type>
      <name>LayerType</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a77b0ed14328c2faa7b2519b746c4ce90</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a77b0ed14328c2faa7b2519b746c4ce90a10cad50ddd2638ffc443bc4bb874f95e">EyeFov</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a77b0ed14328c2faa7b2519b746c4ce90ae9017664588010860a92ceb5f8fcb824">Quad</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a77b0ed14328c2faa7b2519b746c4ce90ad0845b10e8e64b028afc0b1fb22ffca4">EyeMatrix</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>Conversion.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/OvrIntegration/</path>
    <filename>Conversion_8h</filename>
    <includes id="integration_2src_2Magnum_2OvrIntegration_2Integration_8h" name="Integration.h" local="yes" imported="no">Magnum/OvrIntegration/Integration.h</includes>
  </compound>
  <compound kind="file">
    <name>OvrIntegration.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/OvrIntegration/</path>
    <filename>OvrIntegration_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OvrIntegration</namespace>
  </compound>
  <compound kind="file">
    <name>Session.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/OvrIntegration/</path>
    <filename>Session_8h</filename>
    <includes id="Texture_8h" name="Texture.h" local="no" imported="no">Magnum/GL/Texture.h</includes>
    <includes id="Conversion_8h" name="Conversion.h" local="yes" imported="no">Magnum/OvrIntegration/Conversion.h</includes>
    <includes id="OvrIntegration_8h" name="OvrIntegration.h" local="yes" imported="no">Magnum/OvrIntegration/OvrIntegration.h</includes>
    <class kind="class">Magnum::OvrIntegration::PoseState</class>
    <class kind="class">Magnum::OvrIntegration::InputState</class>
    <class kind="class">Magnum::OvrIntegration::TextureSwapChain</class>
    <class kind="class">Magnum::OvrIntegration::Session</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OvrIntegration</namespace>
  </compound>
  <compound kind="file">
    <name>Document.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/Magnum/OpenDdl/</path>
    <filename>OpenDdl_2Document_8h</filename>
    <includes id="OpenDdl_2OpenDdl_8h" name="OpenDdl.h" local="yes" imported="no">Magnum/OpenDdl/OpenDdl.h</includes>
    <includes id="OpenDdl_2Type_8h" name="Type.h" local="yes" imported="no">Magnum/OpenDdl/Type.h</includes>
    <class kind="struct">Magnum::OpenDdl::CharacterLiteral</class>
    <class kind="class">Magnum::OpenDdl::Document</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OpenDdl</namespace>
    <namespace>Magnum::OpenDdl::Validation</namespace>
    <member kind="typedef">
      <type>std::initializer_list&lt; std::pair&lt; Int, std::pair&lt; Int, Int &gt; &gt; &gt;</type>
      <name>Structures</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>a1e6b6eba2d16c215adbbef9c2562b7be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Document.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/OpenGexImporter/OpenDdl/</path>
    <filename>lugins_2OpenGexImporter_2OpenDdl_2Document_8h</filename>
    <includes id="OpenDdl_2Document_8h" name="Document.h" local="yes" imported="no">Magnum/OpenDdl/Document.h</includes>
  </compound>
  <compound kind="file">
    <name>OpenDdl.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/Magnum/OpenDdl/</path>
    <filename>OpenDdl_2OpenDdl_8h</filename>
    <includes id="Types_8h" name="Types.h" local="no" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OpenDdl</namespace>
  </compound>
  <compound kind="file">
    <name>OpenDdl.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/OpenGexImporter/OpenDdl/</path>
    <filename>lugins_2OpenGexImporter_2OpenDdl_2OpenDdl_8h</filename>
    <includes id="OpenDdl_2OpenDdl_8h" name="OpenDdl.h" local="yes" imported="no">Magnum/OpenDdl/OpenDdl.h</includes>
  </compound>
  <compound kind="file">
    <name>Property.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/Magnum/OpenDdl/</path>
    <filename>OpenDdl_2Property_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <includes id="OpenDdl_2Document_8h" name="Document.h" local="yes" imported="no">Magnum/OpenDdl/Document.h</includes>
    <class kind="class">Magnum::OpenDdl::Property</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OpenDdl</namespace>
  </compound>
  <compound kind="file">
    <name>Property.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/OpenGexImporter/OpenDdl/</path>
    <filename>lugins_2OpenGexImporter_2OpenDdl_2Property_8h</filename>
    <includes id="OpenDdl_2Property_8h" name="Property.h" local="yes" imported="no">Magnum/OpenDdl/Property.h</includes>
  </compound>
  <compound kind="file">
    <name>Structure.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/Magnum/OpenDdl/</path>
    <filename>OpenDdl_2Structure_8h</filename>
    <includes id="OpenDdl_2Document_8h" name="Document.h" local="yes" imported="no">Magnum/OpenDdl/Document.h</includes>
    <class kind="class">Magnum::OpenDdl::Structure</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OpenDdl</namespace>
  </compound>
  <compound kind="file">
    <name>Structure.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/OpenGexImporter/OpenDdl/</path>
    <filename>lugins_2OpenGexImporter_2OpenDdl_2Structure_8h</filename>
    <includes id="OpenDdl_2Structure_8h" name="Structure.h" local="yes" imported="no">Magnum/OpenDdl/Structure.h</includes>
  </compound>
  <compound kind="file">
    <name>Type.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/Magnum/OpenDdl/</path>
    <filename>OpenDdl_2Type_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OpenDdl</namespace>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a4009db4d647b9aca8556805c331b9ce2</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2ac26f15e86e3de4c398a8273272aba034">Bool</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2aa245c3230debe5c956484ecc6fa93877">Byte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2aeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a30bb747c98bccdd11b3f89e644c4d0ad">Short</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2ac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a1686a6c336b71b36d77354cea19a8b52">Int</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a0c72cf9e88a9782dbad0fde761ae9352">UnsignedLong</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a8394f0347c184cf156ac5924dccb773b">Long</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2ad909d38d705ce75386dd86e611a82f5b">Double</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a27118326006d3829667a400ad23d5d98">String</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a63d5049791d9d79d86e9a108b0a999ca">Reference</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2aa1fa27779242b4902f7ae3bdd5c6d508">Type</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a90589c47f06eb971d548591f23c285af">Custom</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PropertyType</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a82efc07fb689b4b8a8520a15cb1e0a24</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24ac26f15e86e3de4c398a8273272aba034">Bool</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24aa245c3230debe5c956484ecc6fa93877">Byte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24aeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a30bb747c98bccdd11b3f89e644c4d0ad">Short</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24ac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a1686a6c336b71b36d77354cea19a8b52">Int</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a0c72cf9e88a9782dbad0fde761ae9352">UnsignedLong</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a8394f0347c184cf156ac5924dccb773b">Long</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24ad909d38d705ce75386dd86e611a82f5b">Double</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a27118326006d3829667a400ad23d5d98">String</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a63d5049791d9d79d86e9a108b0a999ca">Reference</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24aa1fa27779242b4902f7ae3bdd5c6d508">Type</enumvalue>
    </member>
    <member kind="enumvalue">
      <name>UnknownIdentifier</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a5da1ea5d4835eb24512f889e92560479a04e754b073ff12e4cd5c65c74b0f73c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a0889969b8815dd0139622559b09b78a3</anchor>
      <arglist>(Debug &amp;debug, Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a3b1df866907b4e20bb899e8dc803bc9b</anchor>
      <arglist>(Debug &amp;debug, PropertyType value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Type.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/OpenGexImporter/OpenDdl/</path>
    <filename>lugins_2OpenGexImporter_2OpenDdl_2Type_8h</filename>
    <includes id="OpenDdl_2Type_8h" name="Type.h" local="yes" imported="no">Magnum/OpenDdl/Type.h</includes>
  </compound>
  <compound kind="file">
    <name>Validation.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/Magnum/OpenDdl/</path>
    <filename>OpenDdl_2Validation_8h</filename>
    <includes id="OpenDdl_2Type_8h" name="Type.h" local="yes" imported="no">Magnum/OpenDdl/Type.h</includes>
    <class kind="struct">Magnum::OpenDdl::Validation::RequiredPropertyType</class>
    <class kind="class">Magnum::OpenDdl::Validation::Property</class>
    <class kind="class">Magnum::OpenDdl::Validation::Structure</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OpenDdl</namespace>
    <namespace>Magnum::OpenDdl::Validation</namespace>
    <member kind="typedef">
      <type>std::initializer_list&lt; Property &gt;</type>
      <name>Properties</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>aaf1e085b806e79ad4689bcc45a8813ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::initializer_list&lt; Type &gt;</type>
      <name>Primitives</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>a7f9bfa8a467d3956e1ba3128c0285503</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr RequiredPropertyType</type>
      <name>RequiredProperty</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>ae85ee16ee3a7b8c1e3b9dcdd26f24c56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr RequiredPropertyType</type>
      <name>OptionalProperty</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>a7c926c8ec7eec3eec79dd687eab2e03f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Validation.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/OpenGexImporter/OpenDdl/</path>
    <filename>lugins_2OpenGexImporter_2OpenDdl_2Validation_8h</filename>
    <includes id="OpenDdl_2Validation_8h" name="Validation.h" local="yes" imported="no">Magnum/OpenDdl/Validation.h</includes>
  </compound>
  <compound kind="file">
    <name>AssimpImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/AssimpImporter/</path>
    <filename>AssimpImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::AssimpImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>DdsImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/DdsImporter/</path>
    <filename>DdsImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::DdsImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>DevIlImageImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/DevIlImageImporter/</path>
    <filename>DevIlImageImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::DevIlImageImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>DrFlacImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/DrFlacAudioImporter/</path>
    <filename>DrFlacImporter_8h</filename>
    <includes id="Audio_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Audio/AbstractImporter.h</includes>
    <class kind="class">Magnum::Audio::DrFlacImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
  </compound>
  <compound kind="file">
    <name>DrMp3Importer.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/DrMp3AudioImporter/</path>
    <filename>DrMp3Importer_8h</filename>
    <includes id="Audio_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Audio/AbstractImporter.h</includes>
    <class kind="class">Magnum::Audio::DrMp3Importer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
  </compound>
  <compound kind="file">
    <name>DrWavImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/DrWavAudioImporter/</path>
    <filename>DrWavImporter_8h</filename>
    <includes id="Audio_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Audio/AbstractImporter.h</includes>
    <class kind="class">Magnum::Audio::DrWavImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
  </compound>
  <compound kind="file">
    <name>Faad2Importer.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/Faad2AudioImporter/</path>
    <filename>Faad2Importer_8h</filename>
    <includes id="Audio_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Audio/AbstractImporter.h</includes>
    <class kind="class">Magnum::Audio::Faad2Importer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
  </compound>
  <compound kind="file">
    <name>FreeTypeFont.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/FreeTypeFont/</path>
    <filename>FreeTypeFont_8h</filename>
    <includes id="AbstractFont_8h" name="AbstractFont.h" local="no" imported="no">Magnum/Text/AbstractFont.h</includes>
    <class kind="class">Magnum::Text::FreeTypeFont</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
  </compound>
  <compound kind="file">
    <name>HarfBuzzFont.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/HarfBuzzFont/</path>
    <filename>HarfBuzzFont_8h</filename>
    <includes id="FreeTypeFont_8h" name="FreeTypeFont.h" local="yes" imported="no">MagnumPlugins/FreeTypeFont/FreeTypeFont.h</includes>
    <class kind="class">Magnum::Text::HarfBuzzFont</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
  </compound>
  <compound kind="file">
    <name>JpegImageConverter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/JpegImageConverter/</path>
    <filename>JpegImageConverter_8h</filename>
    <includes id="AbstractImageConverter_8h" name="AbstractImageConverter.h" local="no" imported="no">Magnum/Trade/AbstractImageConverter.h</includes>
    <class kind="class">Magnum::Trade::JpegImageConverter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>JpegImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/JpegImporter/</path>
    <filename>JpegImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::JpegImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>MiniExrImageConverter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/MiniExrImageConverter/</path>
    <filename>MiniExrImageConverter_8h</filename>
    <includes id="AbstractImageConverter_8h" name="AbstractImageConverter.h" local="no" imported="no">Magnum/Trade/AbstractImageConverter.h</includes>
    <class kind="class">Magnum::Trade::MiniExrImageConverter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>OpenGex.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/OpenGexImporter/</path>
    <filename>OpenGex_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
    <namespace>Magnum::Trade::OpenGex</namespace>
    <member kind="enumvalue">
      <name>Animation</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253af6304a6d8f2b01e13c2c03605012974f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Atten</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a3315a33f9cb5091a3b345490b505ad98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneCountArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a5e03287e50a9f6c52a96e9640a421c39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneIndexArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a714317d24ba7565cdf496364d16a9685</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneNode</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a7befe320b8fca7e7dcdec2b0f9d499e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneRefArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a6812f44800f182c8e94f5491cac105c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneWeightArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a56ee38e9394b75f64e62e6ced8742b54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CameraNode</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a79f93a7971247339463c3443d84cc6ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CameraObject</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a9d30b4eba79b224629783fff2d715542</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Clip</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a5e5ba5fbc4f9f16da02dbc66e58e275a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Color</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253aa305118a547fad84e384a955e9f0a1b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Extension</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a449c75f33e58cc2eb597c310cfeb5fac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GeometryNode</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253aa8b521e7303f947b6399cd3cd89add8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GeometryObject</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253ab9c0282c868cfceb40b18595ec09229e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IndexArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a6f887a76d1a7c1feec058b6246e83416</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a6dad8335d3b0813d55a4c60ef049ffc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LightNode</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253ac8d133985294c96dff732ffbbee59552</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LightObject</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a5de337af814f611451f4beeefdcc9da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Material</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a2982962fd9e99b00b4359b514aee881a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaterialRef</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253af39c57ecb85b2f39f559f692771ac749</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Mesh</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a6d661040b1fb0e10b974fe00b7bf3f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Metric</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a72fedae492949f109c5a671714ea11e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Morph</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a8226a1c8b12b430b159901155419f1b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MorphWeight</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a9fc57ac008463f0658dd45d2da01c799</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Name</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a9fb68c4b6dde8bbfa5a0338529adc39a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Node</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253adf1cf043fcf03377aa66d637fa39452b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ObjectRef</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a49193eba0a0ec0e3b7896fa9aeed31ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Param</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253afa110c5e2ac4a8bc1fa05c1f44690fda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Rotation</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253afea1cb9c8299c7ec22c61165fc21c689</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Scale</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a55d05b90c547fdab267e7b295fee5b87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Skeleton</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253af6d3ca18ff250a79bc6baba3dc217b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Skin</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a7e6348fd496b7cf7023295dc02d08063</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Texture</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a3d7bd43b2ed5863a1ba7e13e929b34f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Time</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a25494f92a1dc0c0fb91402b35a7fa813</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Track</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a794e6449746fc499f0a1e63cd1a02962</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Transform</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253ae734064831130b08157f87eb2fec5c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Translation</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a914fd569607f44f239d3f603a4d13ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Value</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a13a96ad06820240b8ffb3f97164232a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VertexArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253ac135467232e5951ff43f8067e418447f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>applic</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba9a26f4e136d781b2c1848520ae3141f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>attrib</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba516e438559e8f2bab01700d47aa6f197</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>begin</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fbae6626e94c1015e5b49fd45e1dd92d35d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba2dce971eae3a260036e6d9713d772486</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>curve</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fbad557c97bc0247e863099b2921b606775</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>end</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba7d34c05f5781373d6c7fac56d18f7d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>front</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba8a5263bb2eed3a692e0f4f195a82e18c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>index</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fbaadc159aa83eeca7f6445d433a33e2aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba9bf1cb45e2b8651c9e22d7446abcd4fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kind</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fbac06e90780bba6ce7025c18dadf06d184</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lod</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba193e71c288b7ae8e54e47b42e20921fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>material</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba154577709fcaa2cd5c0c7f938cb623e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>morph</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fbac552ac8ad16bad93b1b626ff5a87c0ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>motion_blur</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba224f46f7716477f92e775f86fdad3f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>object</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fbae8c5cec062765c72668d1e378c168087</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>primitive</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba8153a3da7f9d0d647723ecba0a285ce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>restart</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba71f9f08ca8c42c41b73c0e637b653bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shadow</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fbaded2827f0f93ee44c700b4b3e12ec82e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>target</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba596bb86cf21072c10f8650dab16d390d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>texcoord</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba33f759f009a97cf9ef59b5995aa3ffb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>two_sided</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba821084236c6eedf8d87a18d4b172f187</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>type</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba418aa48c09c18d8ea99d0917ee51ef7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>visible</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fbaa998be9a9713013727605f355b066820</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OpenGexImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/OpenGexImporter/</path>
    <filename>OpenGexImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <includes id="OpenDdl_2OpenDdl_8h" name="OpenDdl.h" local="yes" imported="no">Magnum/OpenDdl/OpenDdl.h</includes>
    <class kind="class">Magnum::Trade::OpenGexImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>PngImageConverter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/PngImageConverter/</path>
    <filename>PngImageConverter_8h</filename>
    <includes id="AbstractImageConverter_8h" name="AbstractImageConverter.h" local="no" imported="no">Magnum/Trade/AbstractImageConverter.h</includes>
    <class kind="class">Magnum::Trade::PngImageConverter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>PngImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/PngImporter/</path>
    <filename>PngImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::PngImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>StanfordImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/StanfordImporter/</path>
    <filename>StanfordImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::StanfordImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>StbImageConverter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/StbImageConverter/</path>
    <filename>StbImageConverter_8h</filename>
    <includes id="AbstractImageConverter_8h" name="AbstractImageConverter.h" local="no" imported="no">Magnum/Trade/AbstractImageConverter.h</includes>
    <class kind="class">Magnum::Trade::StbImageConverter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>StbImageImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/StbImageImporter/</path>
    <filename>StbImageImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::StbImageImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>StbTrueTypeFont.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/StbTrueTypeFont/</path>
    <filename>StbTrueTypeFont_8h</filename>
    <includes id="AbstractFont_8h" name="AbstractFont.h" local="no" imported="no">Magnum/Text/AbstractFont.h</includes>
    <class kind="class">Magnum::Text::StbTrueTypeFont</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
  </compound>
  <compound kind="file">
    <name>StbVorbisImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/StbVorbisAudioImporter/</path>
    <filename>StbVorbisImporter_8h</filename>
    <includes id="Audio_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Audio/AbstractImporter.h</includes>
    <class kind="class">Magnum::Audio::StbVorbisImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
  </compound>
  <compound kind="file">
    <name>TinyGltfImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/TinyGltfImporter/</path>
    <filename>TinyGltfImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::TinyGltfImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractResourceLoader.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>AbstractResourceLoader_8h</filename>
    <includes id="ResourceManager_8h" name="ResourceManager.h" local="yes" imported="no">Magnum/ResourceManager.h</includes>
    <class kind="class">Magnum::AbstractResourceLoader</class>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>Animation.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Animation/</path>
    <filename>Animation_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Animation</namespace>
  </compound>
  <compound kind="file">
    <name>Easing.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Animation/</path>
    <filename>Easing_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Constants_8h" name="Constants.h" local="yes" imported="no">Magnum/Math/Constants.h</includes>
    <includes id="Animation_8h" name="Animation.h" local="yes" imported="no">Magnum/Animation/Animation.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Animation</namespace>
    <namespace>Magnum::Animation::Easing</namespace>
    <member kind="function">
      <type>Float</type>
      <name>linear</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a5b0d6d16818389f891baf711dc8bfedd</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>step</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a9754e41fef3a305471bfe5fe20799e97</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>smoothstep</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a20b4ad4811c2b1508ec11dc85f20203d</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>smootherstep</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a5786fe164126351b83ce986f0442be33</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>quadraticIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a42447d664f17e9bd1fd237b604ea46ea</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>quadraticOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>adcf17c38a919a5c1ba4d10c7a145f85f</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>quadraticInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a1ab2d81d7e5c4f3361d155787b5f8bdb</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>cubicIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a71ee0ffe55a4d852ad099588da305afa</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>cubicOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a502125c065d3afa8efa527d3d2594a23</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>cubicInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a6f3d5eace4ebf9fe93f9089b8791e996</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>quarticIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a5a6ab8141e07283706ac7138fae5be16</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>quarticOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a723cd8306fedf44e234f738ad58b3b1f</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>quarticInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>ab4cec4b92eff9cd1c69286edb98d9ac3</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>quinticIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a10a74b0bca42119b94f5e1222d357bb4</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>quinticOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>ab37a718ef836a1aadc2cf840ffde71b6</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>quinticInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a29ef8bef9d9f33e778bfa8e3bbddfc2b</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>sineIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a1690363458094e85a31374a8d8ee1969</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>sineOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>aa64c9a52df2aab5fe740a55aafe63937</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>sineInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a97eb3c79c640a48b38a534c94850e116</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>circularIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a98320037cdebd47067f3f3190def913c</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>circularOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>ad87a830d9bb66142f92eb970095373f6</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>circularInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a2a82c9138d9ddc82010a29d49003b198</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>exponentialIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>af857c717460c4524ecbbdd7a11c74dc1</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>exponentialOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>ae4b7be5563f6298cb4c9e4dabf753ab8</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>exponentialInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a80f1980eab08cacfb2b0f55a67230535</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>elasticIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>ae5b7bd6fe5593ba28f8dda179adfdd47</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>elasticOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>ad247322493066688fbb042c965af4166</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>elasticInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a9df1887a4dc149e0df411b42332e4d86</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>backIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>ac7e43a3372a93da80cdc5580deab470a</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>backOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a404e31a0be7ec55867cd23c6c3ac69d8</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>backInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a1d95c24c71a7f2114a54924a98c14d90</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>bounceIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a6ae6d7e8e814e09da00036e67e29cbaa</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>bounceOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>acc0514727e73fd90ee32b173145d46ff</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>bounceInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a1f22da78c238201979e94c4936c8b860</anchor>
      <arglist>(Float t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Interpolation.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Animation/</path>
    <filename>Interpolation_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Functions_8h" name="Functions.h" local="yes" imported="no">Magnum/Math/Functions.h</includes>
    <includes id="Animation_8h" name="Animation.h" local="yes" imported="no">Magnum/Animation/Animation.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Animation</namespace>
    <member kind="typedef">
      <type>typename Implementation::ResultTraits&lt; V &gt;::Type</type>
      <name>ResultOf</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>ac8b8482a5c46bec4b7b1253ade2e0348</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Interpolation</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a18879dd1e299ab5c0b00e17a44d60625</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a18879dd1e299ab5c0b00e17a44d60625acb17869fe51048b5a5c4c6106551a255">Constant</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a18879dd1e299ab5c0b00e17a44d60625a32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a18879dd1e299ab5c0b00e17a44d60625a4cff6afc4963881749f7742fbb4d1392">Spline</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a18879dd1e299ab5c0b00e17a44d60625a90589c47f06eb971d548591f23c285af">Custom</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Extrapolation</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a0a6fd70d79a26dbdf4289251d3977903</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a0a6fd70d79a26dbdf4289251d3977903a94e6a82e363b2f395cbe9321cbc445e7">Extrapolated</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a0a6fd70d79a26dbdf4289251d3977903acb17869fe51048b5a5c4c6106551a255">Constant</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a0a6fd70d79a26dbdf4289251d3977903ac5c553b84166a5bf8154c0ce83f8b362">DefaultConstructed</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>ab49c5174f0e3c112295a3ba401b5e486</anchor>
      <arglist>(Debug &amp;debug, Interpolation value)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>interpolatorFor</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a06c344537adcb2abe4f4a6ce5f397dba</anchor>
      <arglist>(Interpolation interpolation) -&gt; R(*)(const V &amp;, const V &amp;, Float)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a2cb37d9efc18c050da0af1a5ccf6dbb9</anchor>
      <arglist>(Debug &amp;debug, Extrapolation value)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>interpolate</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>af41a638940b3dad82022e00207a86b9d</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const K &gt; &amp;keys, const Containers::StridedArrayView1D&lt; const V &gt; &amp;values, Extrapolation before, Extrapolation after, R(*interpolator)(const V &amp;, const V &amp;, Float), K frame, std::size_t &amp;hint)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>interpolateStrict</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a428c4d01d812c2c8159044c6e8da987e</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const K &gt; &amp;keys, const Containers::StridedArrayView1D&lt; const V &gt; &amp;values, R(*interpolator)(const V &amp;, const V &amp;, Float), K frame, std::size_t &amp;hint)</arglist>
    </member>
    <member kind="function">
      <type>constexpr auto</type>
      <name>ease</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a63b471cb7d35b67e01df0ee86f6c6caf</anchor>
      <arglist>() -&gt; ResultOf&lt; V &gt;(*)(const V &amp;, const V &amp;, Float)</arglist>
    </member>
    <member kind="function">
      <type>constexpr auto</type>
      <name>easeClamped</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>aa4247b1e3b3f2a4de250eaab8fb37b15</anchor>
      <arglist>() -&gt; ResultOf&lt; V &gt;(*)(const V &amp;, const V &amp;, Float)</arglist>
    </member>
    <member kind="function">
      <type>constexpr auto</type>
      <name>unpack</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a7a500985f318cff6760fdf1bb0780c23</anchor>
      <arglist>() -&gt; ResultOf&lt; V &gt;(*)(const V &amp;, const V &amp;, Float)</arglist>
    </member>
    <member kind="function">
      <type>constexpr auto</type>
      <name>unpackEase</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a762d89c96a152330e2955aa914a8633a</anchor>
      <arglist>() -&gt; ResultOf&lt; V &gt;(*)(const V &amp;, const V &amp;, Float)</arglist>
    </member>
    <member kind="function">
      <type>constexpr auto</type>
      <name>unpackEaseClamped</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a824130187e19fff65d1b3ad9682afa05</anchor>
      <arglist>() -&gt; ResultOf&lt; V &gt;(*)(const V &amp;, const V &amp;, Float)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Player.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Animation/</path>
    <filename>Player_8h</filename>
    <includes id="Track_8h" name="Track.h" local="yes" imported="no">Magnum/Animation/Track.h</includes>
    <includes id="Range_8h" name="Range.h" local="yes" imported="no">Magnum/Math/Range.h</includes>
    <class kind="class">Magnum::Animation::Player</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Animation</namespace>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a0391132e8d759e91d3e88f97da8deaad</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a0391132e8d759e91d3e88f97da8deaadac9dbb2b7c84159b632d71e512eba8428">Playing</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a0391132e8d759e91d3e88f97da8deaadae99180abf47a8b3a856e0bcb2656990a">Paused</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a0391132e8d759e91d3e88f97da8deaadac23e2b09ebe6bf4cb5e2a9abe85c0be2">Stopped</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a05625e61374928e843f733ab4ceeb9cc</anchor>
      <arglist>(Debug &amp;debug, State value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Player.hpp</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Animation/</path>
    <filename>Player_8hpp</filename>
    <includes id="Player_8h" name="Player.h" local="yes" imported="no">Player.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Animation</namespace>
  </compound>
  <compound kind="file">
    <name>Track.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Animation/</path>
    <filename>Track_8h</filename>
    <includes id="Animation_8h" name="Animation.h" local="yes" imported="no">Magnum/Animation/Animation.h</includes>
    <includes id="Interpolation_8h" name="Interpolation.h" local="yes" imported="no">Magnum/Animation/Interpolation.h</includes>
    <includes id="Range_8h" name="Range.h" local="yes" imported="no">Magnum/Math/Range.h</includes>
    <class kind="class">Magnum::Animation::Track</class>
    <class kind="class">Magnum::Animation::TrackViewStorage</class>
    <class kind="class">Magnum::Animation::TrackView</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Animation</namespace>
  </compound>
  <compound kind="file">
    <name>Array.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Array_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="BoolVector_8h" name="BoolVector.h" local="yes" imported="no">Magnum/Math/BoolVector.h</includes>
    <class kind="class">Magnum::Array</class>
    <class kind="class">Magnum::Array1D</class>
    <class kind="class">Magnum::Array2D</class>
    <class kind="class">Magnum::Array3D</class>
    <namespace>Magnum</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2c022de6a506d510afb76bef6f382f10</anchor>
      <arglist>(Debug &amp;debug, const Array&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0006f1ddb183ade30e6696eae4d9e41e</anchor>
      <arglist>(Debug &amp;debug, const Array1D&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0fd13dadee773ce45ed6ab0a7cfe1630</anchor>
      <arglist>(Debug &amp;debug, const Array2D&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac95c370506ed1052ae50af8d3ab81fd1</anchor>
      <arglist>(Debug &amp;debug, const Array3D&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractImporter.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>Audio_2AbstractImporter_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="BufferFormat_8h" name="BufferFormat.h" local="yes" imported="no">Magnum/Audio/BufferFormat.h</includes>
    <class kind="class">Magnum::Audio::AbstractImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractImporter.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>Trade_2AbstractImporter_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <includes id="FileCallback_8h" name="FileCallback.h" local="yes" imported="no">Magnum/FileCallback.h</includes>
    <class kind="class">Magnum::Trade::AbstractImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
    <member kind="typedef">
      <type>InputFileCallbackPolicy</type>
      <name>ImporterFileCallbackPolicy</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a4f346999e9e7d01b160fdefd9916eebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aef6bc92c8398c94aa71feeb75a737fec</anchor>
      <arglist>(Debug &amp;debug, AbstractImporter::Feature value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>af013d6d5cd121a77359f53e7d3ccbdf4</anchor>
      <arglist>(Debug &amp;debug, AbstractImageConverter::Features value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Audio.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>Audio_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
  </compound>
  <compound kind="file">
    <name>Buffer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>Audio_2Buffer_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Audio_8h" name="Audio.h" local="yes" imported="no">Magnum/Audio/Audio.h</includes>
    <includes id="BufferFormat_8h" name="BufferFormat.h" local="yes" imported="no">Magnum/Audio/BufferFormat.h</includes>
    <class kind="class">Magnum::Audio::Buffer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
  </compound>
  <compound kind="file">
    <name>Buffer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>GL_2Buffer_8h</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="GL_2AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/GL/AbstractObject.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <class kind="class">Magnum::GL::Buffer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="enumeration">
      <type></type>
      <name>BufferUsage</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a40d39a1d3b2db27a7ce97615273ba11b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a40d39a1d3b2db27a7ce97615273ba11bab831b12d8d415645f1f00e37e0426ca2">StreamDraw</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a40d39a1d3b2db27a7ce97615273ba11ba10953b8796ab666281dc734e99aa5180">StreamRead</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a40d39a1d3b2db27a7ce97615273ba11ba72d80d051f94e8aa1e3dc1ebfb6cc8cc">StreamCopy</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a40d39a1d3b2db27a7ce97615273ba11bac3ed2ba606af12869974bdab26334e6c">StaticDraw</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a40d39a1d3b2db27a7ce97615273ba11ba3b35249bb273aea8b56c05f2c914a38a">StaticRead</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a40d39a1d3b2db27a7ce97615273ba11bac5a66e746248ebb7fe5f99443172fca7">StaticCopy</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a40d39a1d3b2db27a7ce97615273ba11ba07988dce2d161630856fb73bc06682c0">DynamicDraw</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a40d39a1d3b2db27a7ce97615273ba11ba2ca7cf82bf5d2f11738ae1a371d5ae32">DynamicRead</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a40d39a1d3b2db27a7ce97615273ba11bac572ac15b4bcbc9e975b79480e253c14">DynamicCopy</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a9024465ba0e0014d55008545bee2493d</anchor>
      <arglist>(Debug &amp;debug, Buffer::TargetHint value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a41d8e7d6b7a2d9d12dcca72630d3a23a</anchor>
      <arglist>(Debug &amp;debug, Buffer::Target value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BufferFormat.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>BufferFormat_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
    <member kind="enumeration">
      <type></type>
      <name>BufferFormat</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a82b47f7e510b21d4c77cfbd2626c3acf</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfabc5c44624758954f1a4af1e009f5cf6e">Mono8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfaab2f4f7e4448e8c91c89774787a1cc2c">Mono16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfac6b222ce6dafa010da034571a80c21f3">Stereo8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa851cd6283aaf71edd18bb2fcda2505f4">Stereo16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfaa3ef86eb1edf1b0d24120152d02b9ef5">MonoALaw</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfaf898d946fe1d41fc95e314810ca89496">StereoALaw</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfaad3e4303ede6b64317a9ff173efa71bc">MonoMuLaw</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfac95d445585d921a97b8accb0e18947e5">StereoMuLaw</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa3b5536c3d1aaf79c160d903fcb9b0373">MonoFloat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa1a929985b34ac6a5fdb5711034db8c2e">StereoFloat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa1fbed8d9457b7fceea35133e4f1abcd9">MonoDouble</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa22e42f9014076820ae2392d3e446f06f">StereoDouble</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa81a164b246c5014e888b66929f52f590">Quad8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa58a29325c4b5d157cb99990258c5489e">Quad16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa0ad8b41946d63884e26b54328db993f4">Quad32</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfadf41c9c4fa8da9fe9f8f2e5a72af2524">Rear8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa9cc2022589783937583eb8b0d9647977">Rear16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfabdf29e461ff3e3d5a74989bd5f88e085">Rear32</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa8aea3b11005e9d26048ead9c6a42f5f6">Surround51Channel8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa97352bb35a7fd55284a8abcee934750b">Surround51Channel16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfab00d9219a3bd6bc39879c3b190b975d5">Surround51Channel32</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa5cc44f6f8cc3fcb9e82950f2a8cd5138">Surround61Channel8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfae73828019aeecb9a50fb8969ec37a692">Surround61Channel16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfaa2719df150529fd80a2d27f14e1960e3">Surround61Channel32</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa64e05f42c7d9f67c13383329b4492e82">Surround71Channel8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa36fb3772c6c7c3102f312473b1a0f466">Surround71Channel16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa8917bb1aa8b402c02ee777e8d59a51ec">Surround71Channel32</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a83f2c83c1b6e8fff1e6988716d58d8ca</anchor>
      <arglist>(Debug &amp;debug, BufferFormat value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Context.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>src_2Magnum_2Audio_2Context_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="BoolVector_8h" name="BoolVector.h" local="yes" imported="no">Magnum/Math/BoolVector.h</includes>
    <class kind="class">Magnum::Audio::Extension</class>
    <class kind="class">Magnum::Audio::Context</class>
    <class kind="class">Magnum::Audio::Context::Configuration</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_ASSERT_AUDIO_EXTENSION_SUPPORTED</name>
      <anchorfile>src_2Magnum_2Audio_2Context_8h.html</anchorfile>
      <anchor>a2d62af334d5472dc333a0f380cba8b33</anchor>
      <arglist>(extension)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>aaaa4894d3c9ef0fd261da648c8850155</anchor>
      <arglist>(Debug &amp;debug, Context::HrtfStatus value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Context.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>src_2Magnum_2GL_2Context_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="BoolVector_8h" name="BoolVector.h" local="yes" imported="no">Magnum/Math/BoolVector.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/GL/OpenGL.h</includes>
    <class kind="class">Magnum::GL::Extension</class>
    <class kind="class">Magnum::GL::Context</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_ASSERT_GL_VERSION_SUPPORTED</name>
      <anchorfile>src_2Magnum_2GL_2Context_8h.html</anchorfile>
      <anchor>a2985ba4f210c9d897376e9ac4a9ae51f</anchor>
      <arglist>(version)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_ASSERT_GL_EXTENSION_SUPPORTED</name>
      <anchorfile>src_2Magnum_2GL_2Context_8h.html</anchorfile>
      <anchor>abd755e7fcddc40b82313ff4608d6c8ff</anchor>
      <arglist>(extension)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a0d4db4d0216dee7835c81b44f0e0a4e0</anchor>
      <arglist>(Debug &amp;debug, Context::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ad2a1b71ac5740761d3d5f922c0578ddf</anchor>
      <arglist>(Debug &amp;debug, Context::Flags value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a9333b5940a6dfc9e3432f8231ded74bc</anchor>
      <arglist>(Debug &amp;debug, Context::DetectedDriver value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ad75f14aae1be07e6094458ae5eab06a7</anchor>
      <arglist>(Debug &amp;debug, Context::DetectedDrivers value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Context.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/ImGuiIntegration/</path>
    <filename>integration_2src_2Magnum_2ImGuiIntegration_2Context_8h</filename>
    <includes id="Timeline_8h" name="Timeline.h" local="no" imported="no">Magnum/Timeline.h</includes>
    <includes id="AbstractShaderProgram_8h" name="AbstractShaderProgram.h" local="no" imported="no">Magnum/GL/AbstractShaderProgram.h</includes>
    <includes id="Texture_8h" name="Texture.h" local="no" imported="no">Magnum/GL/Texture.h</includes>
    <includes id="GL_2Buffer_8h" name="Buffer.h" local="no" imported="no">Magnum/GL/Buffer.h</includes>
    <includes id="GL_2Mesh_8h" name="Mesh.h" local="no" imported="no">Magnum/GL/Mesh.h</includes>
    <class kind="class">Magnum::ImGuiIntegration::Context</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::ImGuiIntegration</namespace>
  </compound>
  <compound kind="file">
    <name>Context.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/OvrIntegration/</path>
    <filename>integration_2src_2Magnum_2OvrIntegration_2Context_8h</filename>
    <includes id="Compositor_8h" name="Compositor.h" local="yes" imported="no">Magnum/OvrIntegration/Compositor.h</includes>
    <includes id="Session_8h" name="Session.h" local="yes" imported="no">Magnum/OvrIntegration/Session.h</includes>
    <includes id="OvrIntegration_8h" name="OvrIntegration.h" local="yes" imported="no">Magnum/OvrIntegration/OvrIntegration.h</includes>
    <class kind="struct">Magnum::OvrIntegration::Error</class>
    <class kind="class">Magnum::OvrIntegration::Context</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OvrIntegration</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; DetectResult &gt;</type>
      <name>DetectResults</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a4fe10611df2e827d955a22c45a88028c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DetectResult</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>abe437794a1624b8ecdcdb909d72ee895</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="abe437794a1624b8ecdcdb909d72ee895a7970e3e8bdee1773a50915479ffbabb7">ServiceRunning</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="abe437794a1624b8ecdcdb909d72ee895a66b7262d619bd3873bac68927465f0c5">HmdConnected</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a898ef35965e30a1d246cfa56c4c6ef1d</anchor>
      <arglist>(Debug &amp;debug, DetectResult value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Extensions.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>Audio_2Extensions_8h</filename>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
    <namespace>Magnum::Audio::Extensions</namespace>
  </compound>
  <compound kind="file">
    <name>Extensions.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>GL_2Extensions_8h</filename>
    <includes id="Version_8h" name="Version.h" local="yes" imported="no">Magnum/GL/Version.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <namespace>Magnum::GL::Extensions</namespace>
  </compound>
  <compound kind="file">
    <name>Listener.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>Listener_8h</filename>
    <includes id="Audio_8h" name="Audio.h" local="yes" imported="no">Magnum/Audio/Audio.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="AbstractFeature_8h" name="AbstractFeature.h" local="yes" imported="no">Magnum/SceneGraph/AbstractFeature.h</includes>
    <class kind="class">Magnum::Audio::Listener</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
    <member kind="typedef">
      <type>Listener&lt; 2 &gt;</type>
      <name>Listener2D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a23dcba0cf950684d9fa2d43c30eb3e3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Listener&lt; 3 &gt;</type>
      <name>Listener3D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a50c798d426179331206e1983ad47bd89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Playable.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>Playable_8h</filename>
    <includes id="Source_8h" name="Source.h" local="yes" imported="no">Magnum/Audio/Source.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <includes id="AbstractGroupedFeature_8h" name="AbstractGroupedFeature.h" local="yes" imported="no">Magnum/SceneGraph/AbstractGroupedFeature.h</includes>
    <class kind="class">Magnum::Audio::Playable</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
    <member kind="typedef">
      <type>Playable&lt; 2 &gt;</type>
      <name>Playable2D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>af895c685c030560bdc3c1625e90bddbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Playable&lt; 3 &gt;</type>
      <name>Playable3D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>ac1131f1afb177ee22ae2911181cc8918</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PlayableGroup.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>PlayableGroup_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Audio_8h" name="Audio.h" local="yes" imported="no">Magnum/Audio/Audio.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="FeatureGroup_8h" name="FeatureGroup.h" local="yes" imported="no">Magnum/SceneGraph/FeatureGroup.h</includes>
    <class kind="class">Magnum::Audio::PlayableGroup</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
    <member kind="typedef">
      <type>PlayableGroup&lt; 2 &gt;</type>
      <name>PlayableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>aa2ee38e80ebc52fe99f90f4c3f683620</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PlayableGroup&lt; 3 &gt;</type>
      <name>PlayableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>acf9fa459536aa2b4553e6a2f0198a900</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Renderer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>Audio_2Renderer_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="src_2Magnum_2Audio_2Context_8h" name="Context.h" local="yes" imported="no">Magnum/Audio/Context.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::Audio::Renderer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>af5ed7655c31326a82464a3856ce8adaa</anchor>
      <arglist>(Debug &amp;debug, Renderer::Error value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>ad9b6a4047aa891ba272662f35fd78414</anchor>
      <arglist>(Debug &amp;debug, Renderer::DistanceModel value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Renderer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>GL_2Renderer_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/GL/OpenGL.h</includes>
    <class kind="class">Magnum::GL::Renderer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>af5ed7655c31326a82464a3856ce8adaa</anchor>
      <arglist>(Debug &amp;debug, Renderer::Error value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a4b42fb5b1eb68a0a42794f44ef20faf5</anchor>
      <arglist>(Debug &amp;debug, Renderer::ResetNotificationStrategy value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a41f92605fac305549dc1f4bdb6957fa7</anchor>
      <arglist>(Debug &amp;debug, Renderer::GraphicsResetStatus value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Renderer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Text/</path>
    <filename>Text_2Renderer_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Range_8h" name="Range.h" local="yes" imported="no">Magnum/Math/Range.h</includes>
    <includes id="GL_2Buffer_8h" name="Buffer.h" local="yes" imported="no">Magnum/GL/Buffer.h</includes>
    <includes id="GL_2Mesh_8h" name="Mesh.h" local="yes" imported="no">Magnum/GL/Mesh.h</includes>
    <includes id="Text_8h" name="Text.h" local="yes" imported="no">Magnum/Text/Text.h</includes>
    <includes id="Alignment_8h" name="Alignment.h" local="yes" imported="no">Magnum/Text/Alignment.h</includes>
    <class kind="class">Magnum::Text::AbstractRenderer</class>
    <class kind="class">Magnum::Text::Renderer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
    <member kind="typedef">
      <type>Renderer&lt; 2 &gt;</type>
      <name>Renderer2D</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>a2410d31063c8db63437a8cc44ff84e8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Renderer&lt; 3 &gt;</type>
      <name>Renderer3D</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>a4b69f1bb3ee0486ceed6c41cfebfcb81</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Source.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>Source_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Audio_8h" name="Audio.h" local="yes" imported="no">Magnum/Audio/Audio.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::Audio::Source</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a0a8de3ea9665f8333aabda2b530b9d7d</anchor>
      <arglist>(Debug &amp;debug, Source::State value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a65cb864cce21416949dca720e3f488f4</anchor>
      <arglist>(Debug &amp;debug, Source::Type value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BufferData.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/DebugTools/</path>
    <filename>BufferData_8h</filename>
    <includes id="GL_2Buffer_8h" name="Buffer.h" local="yes" imported="no">Magnum/GL/Buffer.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DebugTools</namespace>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>bufferSubData</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a3bfef58b1af77c155747d1d9b53b55ca</anchor>
      <arglist>(GL::Buffer &amp;buffer, GLintptr offset, GLsizeiptr size)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>bufferData</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a0d9e45c0369943648463c6f5a2ff42d3</anchor>
      <arglist>(GL::Buffer &amp;buffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CompareImage.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/DebugTools/</path>
    <filename>CompareImage_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="class">Magnum::DebugTools::CompareImage</class>
    <class kind="class">Magnum::DebugTools::CompareImageFile</class>
    <class kind="class">Magnum::DebugTools::CompareImageToFile</class>
    <class kind="class">Magnum::DebugTools::CompareFileToImage</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DebugTools</namespace>
  </compound>
  <compound kind="file">
    <name>DebugTools.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/DebugTools/</path>
    <filename>DebugTools_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DebugTools</namespace>
  </compound>
  <compound kind="file">
    <name>ForceRenderer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/DebugTools/</path>
    <filename>ForceRenderer_8h</filename>
    <includes id="Resource_8h" name="Resource.h" local="yes" imported="no">Magnum/Resource.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <includes id="Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <includes id="Drawable_8h" name="Drawable.h" local="yes" imported="no">Magnum/SceneGraph/Drawable.h</includes>
    <includes id="Shaders_8h" name="Shaders.h" local="yes" imported="no">Magnum/Shaders/Shaders.h</includes>
    <class kind="class">Magnum::DebugTools::ForceRendererOptions</class>
    <class kind="class">Magnum::DebugTools::ForceRenderer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DebugTools</namespace>
    <member kind="typedef">
      <type>ForceRenderer&lt; 2 &gt;</type>
      <name>ForceRenderer2D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>ab424a866e4229e281823e583db39ad4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ForceRenderer&lt; 3 &gt;</type>
      <name>ForceRenderer3D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a2071f737c8f9bf87b840e6c12609c281</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ObjectRenderer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/DebugTools/</path>
    <filename>ObjectRenderer_8h</filename>
    <includes id="Resource_8h" name="Resource.h" local="yes" imported="no">Magnum/Resource.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <includes id="Drawable_8h" name="Drawable.h" local="yes" imported="no">Magnum/SceneGraph/Drawable.h</includes>
    <includes id="Shaders_8h" name="Shaders.h" local="yes" imported="no">Magnum/Shaders/Shaders.h</includes>
    <class kind="class">Magnum::DebugTools::ObjectRendererOptions</class>
    <class kind="class">Magnum::DebugTools::ObjectRenderer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DebugTools</namespace>
    <member kind="typedef">
      <type>ObjectRenderer&lt; 2 &gt;</type>
      <name>ObjectRenderer2D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a15125d3c82e81b2ce5f8b30cf05b331d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectRenderer&lt; 3 &gt;</type>
      <name>ObjectRenderer3D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a784fac03e2e3837cd90f088564eadc3c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Profiler.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/DebugTools/</path>
    <filename>Profiler_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <class kind="class">Magnum::DebugTools::Profiler</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DebugTools</namespace>
  </compound>
  <compound kind="file">
    <name>ResourceManager.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/DebugTools/</path>
    <filename>DebugTools_2ResourceManager_8h</filename>
    <includes id="ResourceManager_8h" name="ResourceManager.h" local="yes" imported="no">Magnum/ResourceManager.h</includes>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="DebugTools_8h" name="DebugTools.h" local="yes" imported="no">Magnum/DebugTools/DebugTools.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <includes id="SceneGraph_8h" name="SceneGraph.h" local="yes" imported="no">Magnum/SceneGraph/SceneGraph.h</includes>
    <class kind="class">Magnum::DebugTools::ResourceManager</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DebugTools</namespace>
  </compound>
  <compound kind="file">
    <name>ResourceManager.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>ResourceManager_8h</filename>
    <includes id="Resource_8h" name="Resource.h" local="yes" imported="no">Magnum/Resource.h</includes>
    <includes id="AbstractResourceLoader_8h" name="AbstractResourceLoader.h" local="yes" imported="no">AbstractResourceLoader.h</includes>
    <class kind="class">Magnum::AbstractResourceLoader</class>
    <class kind="class">Magnum::ResourceManager</class>
    <namespace>Magnum</namespace>
    <member kind="enumeration">
      <type></type>
      <name>ResourceDataState</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3dfce2e738ef695a502966dcfaa2d615</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a3dfce2e738ef695a502966dcfaa2d615a16bfbf9c462762cf1cba4134ec53c504">Loading</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a3dfce2e738ef695a502966dcfaa2d615a38c300f4fc9ce8a77aad4a30de05cad8">NotFound</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a3dfce2e738ef695a502966dcfaa2d615ad924522d30d6615e9f71e91504364a9d">Mutable</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a3dfce2e738ef695a502966dcfaa2d615abeae421a14a34f831c113f61323d1ab3">Final</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResourcePolicy</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aabe552f4e54e32a9706638e6423af077</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="aabe552f4e54e32a9706638e6423af077abad08a863dfd6ade28fd8ef69b15005a">Resident</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aabe552f4e54e32a9706638e6423af077ae1ba155a9f2e8c3be94020eef32a0301">Manual</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aabe552f4e54e32a9706638e6423af077a3dbff95bbc40eaab0fb54197ff7f56c6">ReferenceCounted</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>Screenshot.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/DebugTools/</path>
    <filename>Screenshot_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DebugTools</namespace>
    <member kind="function">
      <type>bool</type>
      <name>screenshot</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a66cd81ac668af7f8dffcd27ee47b2019</anchor>
      <arglist>(GL::AbstractFramebuffer &amp;framebuffer, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>screenshot</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a55b3076fc8e5c4de5aa79b544bb46424</anchor>
      <arglist>(PluginManager::Manager&lt; Trade::AbstractImageConverter &gt; &amp;manager, GL::AbstractFramebuffer &amp;framebuffer, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>screenshot</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a7882f4d876628589eda4f0f16322e4f8</anchor>
      <arglist>(GL::AbstractFramebuffer &amp;framebuffer, PixelFormat format, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>screenshot</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>add0b77dda13df585e51a7c0e7f3c4098</anchor>
      <arglist>(PluginManager::Manager&lt; Trade::AbstractImageConverter &gt; &amp;manager, GL::AbstractFramebuffer &amp;framebuffer, const PixelFormat format, const std::string &amp;filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TextureImage.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/DebugTools/</path>
    <filename>TextureImage_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DebugTools</namespace>
    <member kind="function">
      <type>void</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>afdcb5b50a808bfa96a5da1483806e368</anchor>
      <arglist>(GL::Texture2D &amp;texture, Int level, const Range2Di &amp;range, Image2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image2D</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a2f1f5f3098c9a3a1886edf40bbe3a7f6</anchor>
      <arglist>(GL::Texture2D &amp;texture, Int level, const Range2Di &amp;range, Image2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a541945db04f64cb983e33ec11e0be242</anchor>
      <arglist>(GL::CubeMapTexture &amp;texture, GL::CubeMapCoordinate coordinate, Int level, const Range2Di &amp;range, Image2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image2D</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a963c44fa93ba2a1a76b29d73de152076</anchor>
      <arglist>(GL::CubeMapTexture &amp;texture, GL::CubeMapCoordinate coordinate, Int level, const Range2Di &amp;range, Image2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>ae9d83854ed5028043bd9e0951faf5182</anchor>
      <arglist>(GL::Texture2D &amp;texture, Int level, const Range2Di &amp;range, GL::BufferImage2D &amp;image, GL::BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>GL::BufferImage2D</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a52beaa2e90552e75e43b2eb0db287691</anchor>
      <arglist>(GL::Texture2D &amp;texture, Int level, const Range2Di &amp;range, GL::BufferImage2D &amp;&amp;image, GL::BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a50dd5b95598d556ff9da4b8fab7c0bcc</anchor>
      <arglist>(GL::CubeMapTexture &amp;texture, GL::CubeMapCoordinate coordinate, Int level, const Range2Di &amp;range, GL::BufferImage2D &amp;image, GL::BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>GL::BufferImage2D</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a4bbbfd364415ece3a6128156fc7a86bd</anchor>
      <arglist>(GL::CubeMapTexture &amp;texture, GL::CubeMapCoordinate coordinate, Int level, const Range2Di &amp;range, GL::BufferImage2D &amp;&amp;image, GL::BufferUsage usage)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DimensionTraits.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>DimensionTraits_8h</filename>
    <includes id="Math_8h" name="Math.h" local="yes" imported="no">Magnum/Math/Math.h</includes>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <class kind="struct">Magnum::DimensionTraits</class>
    <namespace>Magnum</namespace>
    <member kind="typedef">
      <type>typename DimensionTraits&lt; dimensions, T &gt;::VectorType</type>
      <name>VectorTypeFor</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a022aba204e515fbaa051f9ec7274b20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename DimensionTraits&lt; dimensions, T &gt;::RangeType</type>
      <name>RangeTypeFor</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3a90a71567e8cb1174697e8607d7f854</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename DimensionTraits&lt; dimensions, T &gt;::MatrixType</type>
      <name>MatrixTypeFor</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a66bd8e5ed82475aaa74ae683a28875d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FileCallback.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>FileCallback_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <member kind="enumeration">
      <type></type>
      <name>InputFileCallbackPolicy</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad1e6da3c6e20d9bc3d488f0126c5c21d</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="ad1e6da3c6e20d9bc3d488f0126c5c21da21a5bcd08cdd088335d18f69f74653cb">LoadTemporary</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad1e6da3c6e20d9bc3d488f0126c5c21da3abc4c0a3801b18b2ac7bd4f661c1f46">LoadPermanent</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad1e6da3c6e20d9bc3d488f0126c5c21daec8db16682dce388085f20c20903b0cf">LoadPernament</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad1e6da3c6e20d9bc3d488f0126c5c21dad3d2e617335f08df83599665eef8a418">Close</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9f1425b2c32a25dda5169157fe875a33</anchor>
      <arglist>(Debug &amp;debug, InputFileCallbackPolicy value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractFramebuffer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>AbstractFramebuffer_8h</filename>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <includes id="GL_2AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/GL/AbstractObject.h</includes>
    <includes id="Range_8h" name="Range.h" local="yes" imported="no">Magnum/Math/Range.h</includes>
    <class kind="class">Magnum::GL::AbstractFramebuffer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; FramebufferClear &gt;</type>
      <name>FramebufferClearMask</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ab01cae3ec614cfc08dc9cb57b7474bbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; FramebufferBlit &gt;</type>
      <name>FramebufferBlitMask</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a31205b9572d4cd97ed30455a17ace1d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FramebufferClear</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a84c9d96fc42070ef5cd7238baac5def3</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a84c9d96fc42070ef5cd7238baac5def3acb5feb1b7314637725a2e73bdc9f7295">Color</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a84c9d96fc42070ef5cd7238baac5def3a675056ad1441b6375b2c5abd48c27ef1">Depth</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a84c9d96fc42070ef5cd7238baac5def3ad821e7ccd4d4c25a491ba1a9ea248895">Stencil</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FramebufferBlit</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a7b31579beaad957300391508ac385877</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a7b31579beaad957300391508ac385877acb5feb1b7314637725a2e73bdc9f7295">Color</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a7b31579beaad957300391508ac385877a675056ad1441b6375b2c5abd48c27ef1">Depth</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a7b31579beaad957300391508ac385877ad821e7ccd4d4c25a491ba1a9ea248895">Stencil</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FramebufferBlitFilter</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a3b5bb8f87a28f939bd015e1cc76c7f2c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3b5bb8f87a28f939bd015e1cc76c7f2ca60494f02d440f316319dd0fad40ad007">Nearest</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3b5bb8f87a28f939bd015e1cc76c7f2ca32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FramebufferTarget</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a4eed8d34b2909ba469a622ce860b43f0</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4eed8d34b2909ba469a622ce860b43f0a7a1a5f3e79fdc91edf2f5ead9d66abb4">Read</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4eed8d34b2909ba469a622ce860b43f0a2d03c2d5a7ec65ef4619e0582c272ec2">Draw</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractObject.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>GL_2AbstractObject_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/GL/OpenGL.h</includes>
    <class kind="class">Magnum::GL::AbstractObject</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; ObjectFlag &gt;</type>
      <name>ObjectFlags</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a2538f8905d17b9d887491e9211ca8755</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ObjectFlag</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ac3ca8b3f7b3943f4220ff066d02ae4d2</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ac3ca8b3f7b3943f4220ff066d02ae4d2a0eceeb45861f9585dd7a97a3e36f85c6">Created</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ac3ca8b3f7b3943f4220ff066d02ae4d2a50dd1297fc0f8a96753257b224b1e5b8">DeleteOnDestruction</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractObject.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>SceneGraph_2AbstractObject_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="SceneGraph_8h" name="SceneGraph.h" local="yes" imported="no">Magnum/SceneGraph/SceneGraph.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractObject</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>AbstractObject&lt; 2, T &gt;</type>
      <name>AbstractBasicObject2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a9ba6f965849b32eec2a4bf716f57c0f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicObject2D&lt; Float &gt;</type>
      <name>AbstractObject2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a4dc2f3b5d4fa5de326d57fd394bc02f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractObject&lt; 3, T &gt;</type>
      <name>AbstractBasicObject3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>afcd46917ca137989e38c5f756a1d020b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicObject3D&lt; Float &gt;</type>
      <name>AbstractObject3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aebce906e64701c696f6ee3b2b01ae348</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractQuery.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>AbstractQuery_8h</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="GL_2AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/GL/AbstractObject.h</includes>
    <class kind="class">Magnum::GL::AbstractQuery</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractShaderProgram.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>AbstractShaderProgram_8h</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="GL_2AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/GL/AbstractObject.h</includes>
    <includes id="Attribute_8h" name="Attribute.h" local="yes" imported="no">Magnum/GL/Attribute.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <class kind="class">Magnum::GL::AbstractShaderProgram</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractTexture.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>AbstractTexture_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="GL_2AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/GL/AbstractObject.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <class kind="class">Magnum::GL::AbstractTexture</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
  </compound>
  <compound kind="file">
    <name>Attribute.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>Attribute_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/GL/OpenGL.h</includes>
    <class kind="class">Magnum::GL::Attribute</class>
    <class kind="class">Magnum::GL::DynamicAttribute</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a0eb7a0597aa54dac06f74058f7591913</anchor>
      <arglist>(Debug &amp;debug, Attribute&lt; T &gt;::Components)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a74a95cad0d549a952ac6a097e5c92b0b</anchor>
      <arglist>(Debug &amp;debug, Attribute&lt; T &gt;::DataType)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BufferImage.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>BufferImage_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="PixelStorage_8h" name="PixelStorage.h" local="yes" imported="no">Magnum/PixelStorage.h</includes>
    <includes id="GL_2Buffer_8h" name="Buffer.h" local="yes" imported="no">Magnum/GL/Buffer.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" imported="no">Magnum/Math/Vector4.h</includes>
    <class kind="class">Magnum::GL::BufferImage</class>
    <class kind="class">Magnum::GL::CompressedBufferImage</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="typedef">
      <type>BufferImage&lt; 1 &gt;</type>
      <name>BufferImage1D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ab21826e2c7241f872cb2c41badd3befc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BufferImage&lt; 2 &gt;</type>
      <name>BufferImage2D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a27593b6df921b51ca094cb26d5df5243</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BufferImage&lt; 3 &gt;</type>
      <name>BufferImage3D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>aa9af14bf86aedc496e7d929a8d8a012f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedBufferImage&lt; 1 &gt;</type>
      <name>CompressedBufferImage1D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a3cc59639b0f7023257750c19e49c9eee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedBufferImage&lt; 2 &gt;</type>
      <name>CompressedBufferImage2D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a4f87f1e4919aa2eff5082afeaf16de57</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedBufferImage&lt; 3 &gt;</type>
      <name>CompressedBufferImage3D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a0decb20094b0d5054f3d87e3d0c955a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BufferTexture.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>BufferTexture_8h</filename>
    <includes id="AbstractTexture_8h" name="AbstractTexture.h" local="yes" imported="no">Magnum/GL/AbstractTexture.h</includes>
    <class kind="class">Magnum::GL::BufferTexture</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
  </compound>
  <compound kind="file">
    <name>BufferTextureFormat.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>BufferTextureFormat_8h</filename>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/GL/OpenGL.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="enumeration">
      <type></type>
      <name>BufferTextureFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a8123583510befde47788d7998cb67878</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878acfff813d86d447fa2a9c858650ebbb90">R8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a0367a93b9e3e7aa2fbe9802d80298e46">RG8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ab4b279046a02077466fa26cabb00c642">RGBA8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a9a486e1a3c543c7c58e1cc8086dc4239">R16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a2b66caa416f0a28686ade3fc30ab223a">RG16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a50989efe15b375dce8ba3a5714fe2543">RGBA16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a477722a31a67b4a8f4bdb09e796e343b">R8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a65264dd5d010ab021cbec10f07f97ed5">RG8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878aeb843f86a572765b9be8a71bd9563bea">RGBA8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a1ab8b9cd2509e2ccf930739d6d29ff35">R8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878af16a55975b8a8daa365e5b3cb116a001">RG8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ab99d001604e415e4ea7f107daaffd6dd">RGBA8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ac13d06830e39e268be15adfae07d9eb0">R16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a4475a780df31a86ece088a8aac082b12">RG16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ae418a751a46186248578aecf3f30a26c">RGBA16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a3bf53b9d9aca5ddf22161b4c9d362f3f">R16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878af0c6bc16df3d36b62adc241a797148de">RG16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a3d8d82a913260a439bf38ed05d6d2f46">RGBA16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a2c102dbf18ef5770d3beb5385661c1c2">R32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ac16ead63f9b07b5c97635edac05412cd">RG32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ae240d3e394b6a7cfa467efe512e96bb4">RGB32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ac050956335d883e2f6ed07cc6b0c90d8">RGBA32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a88996871eb63291d92c2f9d83219648a">R32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a56014c7d6ebfadbff4d0d4d3c20a0243">RG32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a8305c7f5432d31774cceb858c966b22e">RGB32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a9f87275b4130dd118085dd75ee6a7ac1">RGBA32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a8dfbaada0d68227f5c299c2aa637df68">R16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ad28539b874a2bc4c5d40f49b375af474">RG16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878aa29d843695056f9c171a9eb702d6910a">RGBA16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878aca70b53fb0610461a2327973614a76ce">R32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ab968b93cd3c34fc9583050ce7e267394">RG32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ad8936cc7055546f79128b9dbfb8c8bbb">RGB32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a703a7a81e586669c930e3dcaf3e8c428">RGBA32F</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>CubeMapTexture.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>CubeMapTexture_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">Magnum/Array.h</includes>
    <includes id="Sampler_8h" name="Sampler.h" local="yes" imported="no">Magnum/Sampler.h</includes>
    <includes id="AbstractTexture_8h" name="AbstractTexture.h" local="yes" imported="no">Magnum/GL/AbstractTexture.h</includes>
    <includes id="GL_2Sampler_8h" name="Sampler.h" local="yes" imported="no">Magnum/GL/Sampler.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <class kind="class">Magnum::GL::CubeMapTexture</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="enumeration">
      <type></type>
      <name>CubeMapCoordinate</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ae7e757e675322bf695a525cab0b86b3f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae7e757e675322bf695a525cab0b86b3fa9f082d04c481aab268b9f614d2ffd129">PositiveX</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae7e757e675322bf695a525cab0b86b3fa963a8a64a09d54efc81b136ca6be21b2">NegativeX</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae7e757e675322bf695a525cab0b86b3fac53c385ced96bd629c0f45a902aceba3">PositiveY</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae7e757e675322bf695a525cab0b86b3fae4d5f02ceecd15caf66e9f0b2393c86b">NegativeY</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae7e757e675322bf695a525cab0b86b3fa1921c16ffdafaf04e378ca1b6774c0ce">PositiveZ</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae7e757e675322bf695a525cab0b86b3fada76df034cd139bd515761c8bb8e3090">NegativeZ</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>CubeMapTextureArray.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>CubeMapTextureArray_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">Magnum/Array.h</includes>
    <includes id="Sampler_8h" name="Sampler.h" local="yes" imported="no">Magnum/Sampler.h</includes>
    <includes id="AbstractTexture_8h" name="AbstractTexture.h" local="yes" imported="no">Magnum/GL/AbstractTexture.h</includes>
    <includes id="GL_2Sampler_8h" name="Sampler.h" local="yes" imported="no">Magnum/GL/Sampler.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::GL::CubeMapTextureArray</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
  </compound>
  <compound kind="file">
    <name>DebugOutput.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>DebugOutput_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/GL/OpenGL.h</includes>
    <class kind="class">Magnum::GL::DebugOutput</class>
    <class kind="class">Magnum::GL::DebugMessage</class>
    <class kind="class">Magnum::GL::DebugGroup</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a8ebfbeb18914398a29b94bb905a2d27d</anchor>
      <arglist>(Debug &amp;debug, DebugOutput::Source value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a46414fbbd0eb0fa569512e82d9ee9e22</anchor>
      <arglist>(Debug &amp;debug, DebugOutput::Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a89d1fd21bfaa208055a8c0c9520776e2</anchor>
      <arglist>(Debug &amp;debug, DebugOutput::Severity value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a757e23b71bfbb06869da1eba3b7d45da</anchor>
      <arglist>(Debug &amp;debug, DebugMessage::Source value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ab1f7b8a72a9a538560f8f0606ca1f4a8</anchor>
      <arglist>(Debug &amp;debug, DebugMessage::Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ac94d5fde25c824e3f7cafb1c0ff7cb13</anchor>
      <arglist>(Debug &amp;debug, DebugGroup::Source value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DefaultFramebuffer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>DefaultFramebuffer_8h</filename>
    <includes id="AbstractFramebuffer_8h" name="AbstractFramebuffer.h" local="yes" imported="no">Magnum/GL/AbstractFramebuffer.h</includes>
    <class kind="class">Magnum::GL::DefaultFramebuffer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a67c85d774decf9566ce34f0861b88198</anchor>
      <arglist>(Debug &amp;debug, DefaultFramebuffer::Status value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Framebuffer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>Framebuffer_8h</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="AbstractFramebuffer_8h" name="AbstractFramebuffer.h" local="yes" imported="no">Magnum/GL/AbstractFramebuffer.h</includes>
    <class kind="class">Magnum::GL::Framebuffer</class>
    <class kind="class">Magnum::GL::Framebuffer::ColorAttachment</class>
    <class kind="class">Magnum::GL::Framebuffer::DrawAttachment</class>
    <class kind="class">Magnum::GL::Framebuffer::BufferAttachment</class>
    <class kind="class">Magnum::GL::Framebuffer::InvalidationAttachment</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a969df0ccdd40303d80c983c3eda61ef8</anchor>
      <arglist>(Debug &amp;debug, Framebuffer::Status value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GL.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>GL_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
  </compound>
  <compound kind="file">
    <name>ImageFormat.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>ImageFormat_8h</filename>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/GL/OpenGL.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="enumeration">
      <type></type>
      <name>ImageAccess</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a22f6df05eb9102b082a37ce813dbe276</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a22f6df05eb9102b082a37ce813dbe276a131fb182a881796e7606ed6da27f1197">ReadOnly</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a22f6df05eb9102b082a37ce813dbe276a53dfe5089ae9e65887cb0215cb0098f5">WriteOnly</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a22f6df05eb9102b082a37ce813dbe276a70a2a84088d405a2e3f1e3accaa16723">ReadWrite</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ImageFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a4703eb65d2fc9fa7f632baf228504904</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904acfff813d86d447fa2a9c858650ebbb90">R8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a0367a93b9e3e7aa2fbe9802d80298e46">RG8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ab4b279046a02077466fa26cabb00c642">RGBA8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ae24128a61e28847e5cae93e146f3c396">R8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a0c1bc4554d3ca92e8ed03fde8fb668fc">RG8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a77b2290184a281692c88cea55f7e4709">RGBA8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a9a486e1a3c543c7c58e1cc8086dc4239">R16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a2b66caa416f0a28686ade3fc30ab223a">RG16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a50989efe15b375dce8ba3a5714fe2543">RGBA16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a3be85f3a039758c6edb91c91b7af98d2">R16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a7e7693eb3b20e62d8af832c2fe116559">RG16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a825f61116ed1837ab9125c3e1921d860">RGBA16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a477722a31a67b4a8f4bdb09e796e343b">R8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a65264dd5d010ab021cbec10f07f97ed5">RG8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904aeb843f86a572765b9be8a71bd9563bea">RGBA8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a1ab8b9cd2509e2ccf930739d6d29ff35">R8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904af16a55975b8a8daa365e5b3cb116a001">RG8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ab99d001604e415e4ea7f107daaffd6dd">RGBA8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ac13d06830e39e268be15adfae07d9eb0">R16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a4475a780df31a86ece088a8aac082b12">RG16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ae418a751a46186248578aecf3f30a26c">RGBA16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a3bf53b9d9aca5ddf22161b4c9d362f3f">R16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904af0c6bc16df3d36b62adc241a797148de">RG16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a3d8d82a913260a439bf38ed05d6d2f46">RGBA16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a2c102dbf18ef5770d3beb5385661c1c2">R32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ac16ead63f9b07b5c97635edac05412cd">RG32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ac050956335d883e2f6ed07cc6b0c90d8">RGBA32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a88996871eb63291d92c2f9d83219648a">R32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a56014c7d6ebfadbff4d0d4d3c20a0243">RG32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a9f87275b4130dd118085dd75ee6a7ac1">RGBA32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a8dfbaada0d68227f5c299c2aa637df68">R16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ad28539b874a2bc4c5d40f49b375af474">RG16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904aa29d843695056f9c171a9eb702d6910a">RGBA16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904aca70b53fb0610461a2327973614a76ce">R32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ab968b93cd3c34fc9583050ce7e267394">RG32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a703a7a81e586669c930e3dcaf3e8c428">RGBA32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ac749b8eee74e3b7b60f8774178537dea">R11FG11FB10F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a4cad8c5058101f0f527e306958b6641b">RGB10A2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a1d8555f4846b8791e329e36dcd5239dc">RGB10A2UI</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>Mesh.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>GL_2Mesh_8h</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="GL_2AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/GL/AbstractObject.h</includes>
    <includes id="Attribute_8h" name="Attribute.h" local="yes" imported="no">Magnum/GL/Attribute.h</includes>
    <includes id="GL_2Buffer_8h" name="Buffer.h" local="yes" imported="no">Magnum/GL/Buffer.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <class kind="class">Magnum::GL::Mesh</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="enumeration">
      <type></type>
      <name>MeshPrimitive</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a23bf590a12c81b345fffe099c42a9bc7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7a75dd5f1160a3f02b6fae89c54361a1b3">Points</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7aa0b0293a2db49f5f93c15a62e095c819">Lines</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7a2ba065d2b3004087cc8f111bf56f134b">LineLoop</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7ae7f9e73b8edd21f420a63b3ace5768a2">LineStrip</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7a72ba2961719d09dc64d6088bb7b6e13a">LinesAdjacency</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7a826457761e4d352b8f54d7d47b80dbaa">LineStripAdjacency</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7a7ca66fdfaad3eb33fc65d7490178f856">Triangles</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7a1da0b9ead8b051940a89214bae22831c">TriangleStrip</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7a18d58fde618e4a30e2dfdc122e693047">TriangleFan</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7a17eff3f9b5c0afdaacaeaf79238e36d5">TrianglesAdjacency</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7a6b682fd6550f90f75722e4a7d38f3949">TriangleStripAdjacency</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7ac4d283323af70979073f5cb6145f3a4b">Patches</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MeshIndexType</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a6a528f7612a957b6d7b5d5f1e3388820</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a6a528f7612a957b6d7b5d5f1e3388820a8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a6a528f7612a957b6d7b5d5f1e3388820aeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a6a528f7612a957b6d7b5d5f1e3388820ac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
    </member>
    <member kind="function">
      <type>MeshPrimitive</type>
      <name>meshPrimitive</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a490b82a53ed07151dc0fc03ee4d3332e</anchor>
      <arglist>(Magnum::MeshPrimitive primitive)</arglist>
    </member>
    <member kind="function">
      <type>MeshIndexType</type>
      <name>meshIndexType</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ac702527f8d92c066c961f319d4f0788b</anchor>
      <arglist>(Magnum::MeshIndexType type)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a4b44a44902ca99975228ecd9b99c4e2e</anchor>
      <arglist>(Debug &amp;debug, MeshPrimitive value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a562525c121e92f785bede2fdafe8b62d</anchor>
      <arglist>(Debug &amp;debug, MeshIndexType value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Mesh.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Mesh_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::MeshPrimitive &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::MeshIndexType &gt;</class>
    <namespace>Magnum</namespace>
    <member kind="enumeration">
      <type></type>
      <name>MeshPrimitive</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a52379a327f55566ec9aa4c72eaacbc0f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a52379a327f55566ec9aa4c72eaacbc0fa75dd5f1160a3f02b6fae89c54361a1b3">Points</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a52379a327f55566ec9aa4c72eaacbc0faa0b0293a2db49f5f93c15a62e095c819">Lines</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a52379a327f55566ec9aa4c72eaacbc0fa2ba065d2b3004087cc8f111bf56f134b">LineLoop</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a52379a327f55566ec9aa4c72eaacbc0fae7f9e73b8edd21f420a63b3ace5768a2">LineStrip</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a52379a327f55566ec9aa4c72eaacbc0fa7ca66fdfaad3eb33fc65d7490178f856">Triangles</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a52379a327f55566ec9aa4c72eaacbc0fa1da0b9ead8b051940a89214bae22831c">TriangleStrip</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a52379a327f55566ec9aa4c72eaacbc0fa18d58fde618e4a30e2dfdc122e693047">TriangleFan</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MeshIndexType</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0e8c9116ac182d4d2bf5f37b28bc39dc</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a0e8c9116ac182d4d2bf5f37b28bc39dca8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0e8c9116ac182d4d2bf5f37b28bc39dcaeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0e8c9116ac182d4d2bf5f37b28bc39dcac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a58c54ddbe369385b333026e6a47c9d8f</anchor>
      <arglist>(Debug &amp;debug, MeshPrimitive value)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>meshIndexTypeSize</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7c835932cf5a5fdfa38be434566ab3bc</anchor>
      <arglist>(MeshIndexType type)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7c16aaec84343295414d8c3468f091f2</anchor>
      <arglist>(Debug &amp;debug, MeshIndexType value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MeshView.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>MeshView_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/GL/OpenGL.h</includes>
    <class kind="class">Magnum::GL::MeshView</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
  </compound>
  <compound kind="file">
    <name>MultisampleTexture.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>MultisampleTexture_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="AbstractTexture_8h" name="AbstractTexture.h" local="yes" imported="no">Magnum/GL/AbstractTexture.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::GL::MultisampleTexture</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="typedef">
      <type>MultisampleTexture&lt; 2 &gt;</type>
      <name>MultisampleTexture2D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a0e034eda62f5ab49675300a0bba83672</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MultisampleTexture&lt; 3 &gt;</type>
      <name>MultisampleTexture2DArray</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>abb6076d2f85102b7b1736fb8df961bce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MultisampleTextureSampleLocations</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>afddc4b64b09025c8d8f5ac4742985ec7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afddc4b64b09025c8d8f5ac4742985ec7ae4964d078936084e4df8afce581a2c7f">NotFixed</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afddc4b64b09025c8d8f5ac4742985ec7a4457d440870ad6d42bab9082d9bf9b61">Fixed</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>OpenGL.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>OpenGL_8h</filename>
  </compound>
  <compound kind="file">
    <name>OpenGLTester.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>OpenGLTester_8h</filename>
    <includes id="GL_2Renderer_8h" name="Renderer.h" local="yes" imported="no">Magnum/GL/Renderer.h</includes>
    <includes id="TimeQuery_8h" name="TimeQuery.h" local="yes" imported="no">Magnum/GL/TimeQuery.h</includes>
    <class kind="class">Magnum::GL::OpenGLTester</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_VERIFY_NO_GL_ERROR</name>
      <anchorfile>OpenGLTester_8h.html</anchorfile>
      <anchor>adbb51f69f7073df87427ecdd98420e6b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PixelFormat.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>GL_2PixelFormat_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/GL/OpenGL.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="enumeration">
      <type></type>
      <name>PixelFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a0f1b8f543578e719e4d68645170dd209</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209aee38e4d5dd68c4e440825018d549cb47">Red</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209ad382816a3cbeed082c9e216e7392eed1">Green</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a9594eec95be70e7b1710f730fdda33d9">Blue</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a280f73691109aeaa235ffddd2d154d9b">Luminance</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209abac953e88f6d79514b0b6fc42eb6f3b7">RG</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a780701651d86fd20708e81e7ad48c078">LuminanceAlpha</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a889574aebacda6bfd3e534e2b49b8028">RGB</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209aea3495a278957dc58165e48a8945469f">RGBA</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a2ad5640ebdec72fc79531d1778c6c2dc">BGR</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a5a1fe3c61c9e2fd6dbbc823589f6e697">BGRA</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a1f3f09bca5728eb7af4ea263ae84b9f1">SRGB</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a5dfd728b3bee2ad053d22203c3e8f2b8">SRGBAlpha</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a3774ed2915a508b6652a18b368a82a40">RedInteger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a108f898baf120f2b888ce842b430ad41">GreenInteger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a02f2197d037a51e8791768a670ea5ca9">BlueInteger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209ac614904b10b846a993192fd483fd0f8d">RGInteger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a893f9d29983ee73833f207885e688927">RGBInteger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a5beae36e40eb87168d14300e4b38a966">RGBAInteger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209afc927856045b7f1d1bf641aeb660aa5f">BGRInteger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a29874b26b860b0ddc3f3b447fc96849f">BGRAInteger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a19c8f1ee3a700e77e87053eee47f6bc8">DepthComponent</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209ac07ade4f9906db3ee8e4e7053dac1dee">StencilIndex</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a2fa8076285272883c91e14402975a441">DepthStencil</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PixelType</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>afc1b93b57053e76beed7ec9a5c48fa73</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73aa245c3230debe5c956484ecc6fa93877">Byte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73aeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a30bb747c98bccdd11b3f89e644c4d0ad">Short</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73ac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a1686a6c336b71b36d77354cea19a8b52">Int</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73ad35523d81610cee8b87cdac1853ad51f">HalfFloat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a131ebe9fa09dd81ada14f4d5ef22a5b2">UnsignedByte332</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73aaf08cd4bda32cbbc17aa1f038787b49b">UnsignedByte233Rev</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a9d948d3fd54e7a0e9b0a7160d30e60bd">UnsignedShort565</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73ad6ec07a536b4ddfa016eb3401cf15ea7">UnsignedShort565Rev</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a0ebf3ad4b14b5318b24eccbcb77ef881">UnsignedShort4444</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a49338e95b8a984e8ff863ba90cb6f25a">UnsignedShort4444Rev</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73ad48678934f71e808d76d168449e41533">UnsignedShort5551</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a7529deae08b78021635e47e49463a94b">UnsignedShort1555Rev</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73add65f4f231b5604c5866304f361d0b54">UnsignedInt8888</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a6fc9cc90f443b7408146a06802257ab0">UnsignedInt8888Rev</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a92660ebc482fda288d7b5c8a13995d55">UnsignedInt1010102</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73af181e9b017ba4f6226f947aef3d86755">UnsignedInt2101010Rev</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73ae90d4986e1e586a607c7a9bc906f0b34">UnsignedInt10F11F11FRev</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a15d9f69c3205d33007ca888cbf438f45">UnsignedInt5999Rev</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a97788b3aa5f586ee2e387dd091a80bb1">UnsignedInt248</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a492e9449323f9bf94ab4465e823a7b64">Float32UnsignedInt248Rev</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CompressedPixelFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a3d55f4d2412f6a9913220e80820847dd</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddaee38e4d5dd68c4e440825018d549cb47">Red</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddabac953e88f6d79514b0b6fc42eb6f3b7">RG</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda889574aebacda6bfd3e534e2b49b8028">RGB</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddaea3495a278957dc58165e48a8945469f">RGBA</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddaa3bed52b596f3b91bee25aa10394d27f">RedRgtc1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda62a8382f8aa2f858c49e427277a50872">RGRgtc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda75771c41918045589327f8283c8e352b">SignedRedRgtc1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda8fd2f045102ec87ada6ce64504fba872">SignedRGRgtc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddab7916cd38ad43474594d62f109fbf184">RGBBptcUnsignedFloat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddac7dd302cf140a18d635bbc80e1d5e783">RGBBptcSignedFloat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda7dd6aed4d4b349a913acdf49d5152e6f">RGBABptcUnorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddae7dbe7b43bd444b07f3cb60d3bd85413">SRGBAlphaBptcUnorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda2b383b452d4df4e2a7b7c749d5809f9f">RGB8Etc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda8eab3b04a17e67eed15dc5ac8315dc08">SRGB8Etc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda355cb5853c206ddfcf3fd3d27b91a9b1">RGB8PunchthroughAlpha1Etc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddace1e71dfb30dc15b2e56605daf8d0ce7">SRGB8PunchthroughAlpha1Etc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda98348631c6532dca147ed76111c3ca13">RGBA8Etc2Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda0725b0958585442fa72335c352a4f31b">SRGB8Alpha8Etc2Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda1adfe9f5f9890951fdd91d9ed0f6d782">R11Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddac30713a6d506c10c43c7bcaa69fcbac5">SignedR11Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda45ebf94b3877605e10852bcc28f4fcaa">RG11Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddae7fb874dcd270f657787a2df8ca76fdf">SignedRG11Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda202cb4f41f66d0b27bfc6f968f5d4e64">RGBS3tcDxt1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda5651aff1d9255d714952c05ddc992f47">RGBAS3tcDxt1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddab1b608a98cb05d81c057fb369922718d">RGBAS3tcDxt3</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda2a3b16cfc97107c276f6d8e5d1f1f311">RGBAS3tcDxt5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda4d54b5762d22b6cccbde8ecd2fadcf45">RGBAAstc4x4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddaca48b83bf02a4c74f477b92c766ee7b0">SRGB8Alpha8Astc4x4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddaa2b69ce26a065fc75905a70d03829757">RGBAAstc5x4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda9b3927d698dd5349e8eb9f68e9c6c6a1">SRGB8Alpha8Astc5x4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda8867cb489f247c08bcfc0a5b42726414">RGBAAstc5x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda1860eb6d1eb2911ba7f5e6afd715b1b2">SRGB8Alpha8Astc5x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddac905ed9f991dc301e8a713b9edc420bc">RGBAAstc6x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda77632c655108204cc7496ce98fe192d8">SRGB8Alpha8Astc6x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda6622396055bf65a5993a6cb9cf66265f">RGBAAstc6x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda960bc98e3d2ceacfad471d1db50ffc76">SRGB8Alpha8Astc6x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddaf7f012ccc372ef62e682256dbd93aefb">RGBAAstc8x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda1d8b727d6330b5cd196d7197cbc2c626">SRGB8Alpha8Astc8x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddaae5be3648e3d9ceb03d30b49251c0629">RGBAAstc8x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddafc2666906090246eefb829972ead8280">SRGB8Alpha8Astc8x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda43204df6edcc8d05b25e7efb58934f46">RGBAAstc8x8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddaaef0fa49535ce0cfac9dc45cbf22dc6f">SRGB8Alpha8Astc8x8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda6d0c85423c4abf4c177c93447a4b7777">RGBAAstc10x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda0f413861153fe70fc44eb26acf2eaa99">SRGB8Alpha8Astc10x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddad034ed7edf6c7208a351589ed2e5f17a">RGBAAstc10x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda98ce333cbad0ca0b10b47673ba3c9610">SRGB8Alpha8Astc10x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda5d145bbb1f4d7494d1ef3c2a554a2691">RGBAAstc10x8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddacb5ca548816c10b8e9328ffdfe4c584a">SRGB8Alpha8Astc10x8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda01f17158c3d1005268197fdd4990749d">RGBAAstc10x10</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda7db9b87a93dfa09f1bd47035f34028ce">SRGB8Alpha8Astc10x10</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda939449aabd0a436676eb40d18dc2cd10">RGBAAstc12x10</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda7b95d2f5ff8e629c4799a667d7b21fc9">SRGB8Alpha8Astc12x10</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda202b3c29a027a3edfd8df16f1bc65544">RGBAAstc12x12</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda2635212e4b84e4b77fd26175e564d013">SRGB8Alpha8Astc12x12</enumvalue>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPixelFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a0c16ea119f48d7bc3a27370f21a1d9de</anchor>
      <arglist>(Magnum::PixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>PixelFormat</type>
      <name>pixelFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>aa481129214ef74d5f599867b2edb1c8e</anchor>
      <arglist>(Magnum::PixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>PixelType</type>
      <name>pixelType</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>acef19e186d99b0190944fc4c91aad515</anchor>
      <arglist>(Magnum::PixelFormat format, UnsignedInt extra=0)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>pixelSize</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a426d95810d81105f5f330805335ca676</anchor>
      <arglist>(PixelFormat format, PixelType type)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>adba7ceaa4cfe049c21a480d4589fd5da</anchor>
      <arglist>(Debug &amp;debug, PixelFormat value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a94a4f70394fe63d61cc31b4c96406f82</anchor>
      <arglist>(Debug &amp;debug, PixelType value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasCompressedPixelFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a4d50de0a3f7e010a943cde4ff2768485</anchor>
      <arglist>(Magnum::CompressedPixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelFormat</type>
      <name>compressedPixelFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a9c3fb5463562c07a462267f5dce9831c</anchor>
      <arglist>(Magnum::CompressedPixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a9e41f324b92c9209e9c2e9935dd8d809</anchor>
      <arglist>(Debug &amp;debug, CompressedPixelFormat value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PixelFormat.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>PixelFormat_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <member kind="enumeration">
      <type></type>
      <name>PixelFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0f3e774f6adcfb4b7d06df036c378c24</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a38502c4c445d4185bded1a03050f4e65">R8Unorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a1923c3304921d5d85f077a0fa96035e5">RG8Unorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a7f99e709f9536b7ed7efd6cc5202b1c5">RGB8Unorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ada510a01104cbfe4b683ae77a78e763b">RGBA8Unorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ae24128a61e28847e5cae93e146f3c396">R8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a0c1bc4554d3ca92e8ed03fde8fb668fc">RG8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a0ed70c0ecaf24c9abe9b121dd6fbc7be">RGB8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a77b2290184a281692c88cea55f7e4709">RGBA8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a477722a31a67b4a8f4bdb09e796e343b">R8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a65264dd5d010ab021cbec10f07f97ed5">RG8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24afc5e2f0963f0ce3529e8aee36d827bbd">RGB8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24aeb843f86a572765b9be8a71bd9563bea">RGBA8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a1ab8b9cd2509e2ccf930739d6d29ff35">R8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24af16a55975b8a8daa365e5b3cb116a001">RG8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a57a36f0c89bfa81cdd9a69e2ad2df08b">RGB8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ab99d001604e415e4ea7f107daaffd6dd">RGBA8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24abac1d498c5af33e368fe3bd1b13ebc6b">R16Unorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ad3a87f305a0581a21d7cc9ee12af4570">RG16Unorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ad39fb9fb684c35901a56b89557b04d7b">RGB16Unorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a799c97a5ddc9ad29e7fc311ff76c3eb3">RGBA16Unorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a3be85f3a039758c6edb91c91b7af98d2">R16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a7e7693eb3b20e62d8af832c2fe116559">RG16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a31fe77f7173ed54fdc96a4f752083205">RGB16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a825f61116ed1837ab9125c3e1921d860">RGBA16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ac13d06830e39e268be15adfae07d9eb0">R16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a4475a780df31a86ece088a8aac082b12">RG16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24adfb1f628557b0014586b94400f06777b">RGB16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ae418a751a46186248578aecf3f30a26c">RGBA16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a3bf53b9d9aca5ddf22161b4c9d362f3f">R16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24af0c6bc16df3d36b62adc241a797148de">RG16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24aff7632ef49d4bbe6b35050ac957a04c8">RGB16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a3d8d82a913260a439bf38ed05d6d2f46">RGBA16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a2c102dbf18ef5770d3beb5385661c1c2">R32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ac16ead63f9b07b5c97635edac05412cd">RG32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ae240d3e394b6a7cfa467efe512e96bb4">RGB32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ac050956335d883e2f6ed07cc6b0c90d8">RGBA32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a88996871eb63291d92c2f9d83219648a">R32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a56014c7d6ebfadbff4d0d4d3c20a0243">RG32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a8305c7f5432d31774cceb858c966b22e">RGB32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a9f87275b4130dd118085dd75ee6a7ac1">RGBA32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a8dfbaada0d68227f5c299c2aa637df68">R16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ad28539b874a2bc4c5d40f49b375af474">RG16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a25cd126670bd567a899c64c4e6e8ca7d">RGB16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24aa29d843695056f9c171a9eb702d6910a">RGBA16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24aca70b53fb0610461a2327973614a76ce">R32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ab968b93cd3c34fc9583050ce7e267394">RG32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ad8936cc7055546f79128b9dbfb8c8bbb">RGB32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a703a7a81e586669c930e3dcaf3e8c428">RGBA32F</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CompressedPixelFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6aa5c7abd3ed7e272d99436adf5131e0</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a6aa5c7abd3ed7e272d99436adf5131e0af53704a814d5ac59a0da8e6cfb810686">Bc1RGBUnorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a6aa5c7abd3ed7e272d99436adf5131e0a7e444ac8255d7a9fea6946bad447bd2f">Bc1RGBAUnorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a6aa5c7abd3ed7e272d99436adf5131e0a38ed31f589a9300614a3367af7308434">Bc2RGBAUnorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a6aa5c7abd3ed7e272d99436adf5131e0aae2fbdf1f86d5b9b719f51dfae8e995f">Bc3RGBAUnorm</enumvalue>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>pixelSize</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0b7bf2313cad99f16b84cd0614938273</anchor>
      <arglist>(PixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae2509f72eca955fc87ec575528155148</anchor>
      <arglist>(Debug &amp;debug, PixelFormat value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isPixelFormatImplementationSpecific</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a244398943d1850b1280c78f3ae7b53c1</anchor>
      <arglist>(PixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>constexpr PixelFormat</type>
      <name>pixelFormatWrap</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad07c2fb70a87d650973ae8ebad2f8375</anchor>
      <arglist>(T implementationSpecific)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>pixelFormatUnwrap</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aa2041e9d6b5c3bf33327a4a0f1697227</anchor>
      <arglist>(PixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0c50432f4e10cb29a6cce20876fbb13a</anchor>
      <arglist>(Debug &amp;debug, CompressedPixelFormat value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isCompressedPixelFormatImplementationSpecific</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a631c7f11b72573ab9ca2aa955edd0387</anchor>
      <arglist>(CompressedPixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>constexpr CompressedPixelFormat</type>
      <name>compressedPixelFormatWrap</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aada7d03605ff434eee0438021e170e72</anchor>
      <arglist>(T implementationSpecific)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>compressedPixelFormatUnwrap</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>abf18f1f8da6d30c3f64f1b4c65dfa53f</anchor>
      <arglist>(CompressedPixelFormat format)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PrimitiveQuery.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>PrimitiveQuery_8h</filename>
    <includes id="AbstractQuery_8h" name="AbstractQuery.h" local="yes" imported="no">Magnum/GL/AbstractQuery.h</includes>
    <class kind="class">Magnum::GL::PrimitiveQuery</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
  </compound>
  <compound kind="file">
    <name>RectangleTexture.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>RectangleTexture_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">Magnum/Array.h</includes>
    <includes id="Sampler_8h" name="Sampler.h" local="yes" imported="no">Magnum/Sampler.h</includes>
    <includes id="AbstractTexture_8h" name="AbstractTexture.h" local="yes" imported="no">Magnum/GL/AbstractTexture.h</includes>
    <includes id="GL_2Sampler_8h" name="Sampler.h" local="yes" imported="no">Magnum/GL/Sampler.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <class kind="class">Magnum::GL::RectangleTexture</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
  </compound>
  <compound kind="file">
    <name>Renderbuffer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>Renderbuffer_8h</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="GL_2AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/GL/AbstractObject.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <class kind="class">Magnum::GL::Renderbuffer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
  </compound>
  <compound kind="file">
    <name>RenderbufferFormat.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>RenderbufferFormat_8h</filename>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/GL/OpenGL.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="enumeration">
      <type></type>
      <name>RenderbufferFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>abdbfd17955cf0e7c38eff44f13fdcd42</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42aee38e4d5dd68c4e440825018d549cb47">Red</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42acfff813d86d447fa2a9c858650ebbb90">R8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42abac953e88f6d79514b0b6fc42eb6f3b7">RG</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a0367a93b9e3e7aa2fbe9802d80298e46">RG8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42aea3495a278957dc58165e48a8945469f">RGBA</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ab4b279046a02077466fa26cabb00c642">RGBA8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a9a486e1a3c543c7c58e1cc8086dc4239">R16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a2b66caa416f0a28686ade3fc30ab223a">RG16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a1cd42e2af35bdfb43d791f8cecdce4a4">RGB16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a50989efe15b375dce8ba3a5714fe2543">RGBA16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a477722a31a67b4a8f4bdb09e796e343b">R8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a65264dd5d010ab021cbec10f07f97ed5">RG8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42aeb843f86a572765b9be8a71bd9563bea">RGBA8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a1ab8b9cd2509e2ccf930739d6d29ff35">R8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42af16a55975b8a8daa365e5b3cb116a001">RG8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ab99d001604e415e4ea7f107daaffd6dd">RGBA8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ac13d06830e39e268be15adfae07d9eb0">R16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a4475a780df31a86ece088a8aac082b12">RG16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ae418a751a46186248578aecf3f30a26c">RGBA16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a3bf53b9d9aca5ddf22161b4c9d362f3f">R16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42af0c6bc16df3d36b62adc241a797148de">RG16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a3d8d82a913260a439bf38ed05d6d2f46">RGBA16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a2c102dbf18ef5770d3beb5385661c1c2">R32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ac16ead63f9b07b5c97635edac05412cd">RG32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ac050956335d883e2f6ed07cc6b0c90d8">RGBA32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a88996871eb63291d92c2f9d83219648a">R32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a56014c7d6ebfadbff4d0d4d3c20a0243">RG32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a9f87275b4130dd118085dd75ee6a7ac1">RGBA32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a8dfbaada0d68227f5c299c2aa637df68">R16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ad28539b874a2bc4c5d40f49b375af474">RG16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42aa29d843695056f9c171a9eb702d6910a">RGBA16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42aca70b53fb0610461a2327973614a76ce">R32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ab968b93cd3c34fc9583050ce7e267394">RG32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a703a7a81e586669c930e3dcaf3e8c428">RGBA32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a4cad8c5058101f0f527e306958b6641b">RGB10A2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a1d8555f4846b8791e329e36dcd5239dc">RGB10A2UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a145a041c8e2080c43fa129fb5b17d8be">RGB5A1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ad0194ebb93fd86b15f194ef73f81a01f">RGBA4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ac749b8eee74e3b7b60f8774178537dea">R11FG11FB10F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a3b73e4d15701467ed72f157ffaff680a">RGB565</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ad639700e92ceb4aaafdf02ebdb3e15a4">SRGB8Alpha8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a19c8f1ee3a700e77e87053eee47f6bc8">DepthComponent</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ab5743b6194329afdf89a6a32bbcc4124">DepthComponent16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42aedf2b17fc7b220c3b855af306c9f409d">DepthComponent24</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a1f519142b59a9d4382c6aa004acd7dd2">DepthComponent32</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a9e1081f1bca10bb12b11b81c23ccbdb2">DepthComponent32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ac07ade4f9906db3ee8e4e7053dac1dee">StencilIndex</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a560908539b7d178d0b9110e5f6fa2c88">StencilIndex1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a399d15fb10ce87fceba1c826ee904fba">StencilIndex4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a08af7fbfd260214add2e402d8427f0a8">StencilIndex8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a728c7335f0b2e511de1ccb95f67ad78f">StencilIndex16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a2fa8076285272883c91e14402975a441">DepthStencil</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a78181d4f5d4b30baefed6c0da0de894f">Depth24Stencil8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42abe0ddae1e70dc4233b16fc053a60e2fe">Depth32FStencil8</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>SampleQuery.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>SampleQuery_8h</filename>
    <includes id="AbstractQuery_8h" name="AbstractQuery.h" local="yes" imported="no">Magnum/GL/AbstractQuery.h</includes>
    <class kind="class">Magnum::GL::SampleQuery</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
  </compound>
  <compound kind="file">
    <name>Sampler.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>GL_2Sampler_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">Magnum/Array.h</includes>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/GL/OpenGL.h</includes>
    <class kind="class">Magnum::GL::Sampler</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="enumeration">
      <type></type>
      <name>SamplerFilter</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ac5625b1b6d9959c520df40ccaca38f70</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ac5625b1b6d9959c520df40ccaca38f70a60494f02d440f316319dd0fad40ad007">Nearest</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ac5625b1b6d9959c520df40ccaca38f70a32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SamplerMipmap</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a15af86b21783d0ab73ec2c9640a13dda</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a15af86b21783d0ab73ec2c9640a13ddaa095a1b43effec73955e31e790438de49">Base</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a15af86b21783d0ab73ec2c9640a13ddaa60494f02d440f316319dd0fad40ad007">Nearest</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a15af86b21783d0ab73ec2c9640a13ddaa32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SamplerWrapping</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ae807f5b816812ec007253cae4ddc4520</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae807f5b816812ec007253cae4ddc4520a7020426cfb0a204051be4b3053d2acc8">Repeat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae807f5b816812ec007253cae4ddc4520a12ce4a5977988214a6b098b8cb0bf695">MirroredRepeat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae807f5b816812ec007253cae4ddc4520a74556551231333c36debc3d373261134">ClampToEdge</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae807f5b816812ec007253cae4ddc4520afb07f88f6f11cc5ab9c951290716f147">ClampToBorder</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae807f5b816812ec007253cae4ddc4520a01f488e80fc32761aecfbeb3d1c8f26b">MirrorClampToEdge</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SamplerCompareMode</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a379113cf1be73c13cdd7b4895d286d98</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a379113cf1be73c13cdd7b4895d286d98a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a379113cf1be73c13cdd7b4895d286d98a55f2b6a9ca7e6205c9f597b7080c7e2f">CompareRefToTexture</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SamplerCompareFunction</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a8508ad3f6a7a528e5144a7e7f318417d</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8508ad3f6a7a528e5144a7e7f318417da6e7b34fa59e1bd229b207892956dc41c">Never</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8508ad3f6a7a528e5144a7e7f318417da68eec46437c384d8dad18d5464ebc35c">Always</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8508ad3f6a7a528e5144a7e7f318417da1cfdf0e8d0c87a228c1f40d9bee7888b">Less</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8508ad3f6a7a528e5144a7e7f318417daa4cbdbb6070a5abb35fc95ecf1e22c14">LessOrEqual</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8508ad3f6a7a528e5144a7e7f318417daf5f286e73bda105e538310b3190f75c5">Equal</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8508ad3f6a7a528e5144a7e7f318417da19bb0af2c3c530538cb41aff7f235b96">NotEqual</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8508ad3f6a7a528e5144a7e7f318417da6f2f0aefb3d22da0f3839453add5f937">GreaterOrEqual</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8508ad3f6a7a528e5144a7e7f318417da8768a6821cd735aea4f5b0df88c1fc6a">Greater</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SamplerDepthStencilMode</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a672e8bb03f26c7147c932b95b1cc424b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a672e8bb03f26c7147c932b95b1cc424ba19c8f1ee3a700e77e87053eee47f6bc8">DepthComponent</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a672e8bb03f26c7147c932b95b1cc424bac07ade4f9906db3ee8e4e7053dac1dee">StencilIndex</enumvalue>
    </member>
    <member kind="function">
      <type>SamplerFilter</type>
      <name>samplerFilter</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a5d9f203329afe7f2157eb2f0b721d914</anchor>
      <arglist>(Magnum::SamplerFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a72eb4eb787099206aeed4a33b1de3279</anchor>
      <arglist>(Debug &amp;debug, SamplerFilter value)</arglist>
    </member>
    <member kind="function">
      <type>SamplerMipmap</type>
      <name>samplerMipmap</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a38ae36b3ffddfd8a89352e2f7c65b5cd</anchor>
      <arglist>(Magnum::SamplerMipmap mipmap)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a71dcb2bed12a67da434cea582acf9bdf</anchor>
      <arglist>(Debug &amp;debug, SamplerMipmap value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSamplerWrapping</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a68da07f6da40ae70bf4f68a5a5ff2ae7</anchor>
      <arglist>(Magnum::SamplerWrapping wrapping)</arglist>
    </member>
    <member kind="function">
      <type>SamplerWrapping</type>
      <name>samplerWrapping</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a33005f2d6b256a528790d8676e55c91c</anchor>
      <arglist>(Magnum::SamplerWrapping wrapping)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; dimensions, SamplerWrapping &gt;</type>
      <name>samplerWrapping</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ac2aae6516f8473eb0de8f54c465bd53f</anchor>
      <arglist>(const Array&lt; dimensions, Magnum::SamplerWrapping &gt; &amp;wrapping)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ad78174e4316b2917fab9ff7d13a0b55f</anchor>
      <arglist>(Debug &amp;debug, SamplerWrapping value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a8e0b139605625de8bb53046c5fd72424</anchor>
      <arglist>(Debug &amp;debug, SamplerCompareMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>aee7d8763f95a57244519b5b6df0f0be4</anchor>
      <arglist>(Debug &amp;debug, SamplerCompareFunction value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>afc0c871f9862229e4b3a472d58b6cc81</anchor>
      <arglist>(Debug &amp;debug, SamplerDepthStencilMode value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Sampler.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Sampler_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <member kind="enumeration">
      <type></type>
      <name>SamplerFilter</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab7e48b045f33e73835c9e25477f2f211</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="ab7e48b045f33e73835c9e25477f2f211a60494f02d440f316319dd0fad40ad007">Nearest</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ab7e48b045f33e73835c9e25477f2f211a32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SamplerMipmap</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5b996fa37d96d43ab2f0df30b8309223</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a5b996fa37d96d43ab2f0df30b8309223a095a1b43effec73955e31e790438de49">Base</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a5b996fa37d96d43ab2f0df30b8309223a60494f02d440f316319dd0fad40ad007">Nearest</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a5b996fa37d96d43ab2f0df30b8309223a32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SamplerWrapping</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a81aecbedbcb819aa682a40af45873512</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a81aecbedbcb819aa682a40af45873512a7020426cfb0a204051be4b3053d2acc8">Repeat</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a81aecbedbcb819aa682a40af45873512a12ce4a5977988214a6b098b8cb0bf695">MirroredRepeat</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a81aecbedbcb819aa682a40af45873512a74556551231333c36debc3d373261134">ClampToEdge</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a81aecbedbcb819aa682a40af45873512afb07f88f6f11cc5ab9c951290716f147">ClampToBorder</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a81aecbedbcb819aa682a40af45873512a01f488e80fc32761aecfbeb3d1c8f26b">MirrorClampToEdge</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4c376efe76339da5ead03d817f3f8267</anchor>
      <arglist>(Debug &amp;debug, SamplerFilter value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0dfa3b86ec5e7ecadc76935dcf5f7482</anchor>
      <arglist>(Debug &amp;debug, SamplerMipmap value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a90ea80228405d6e8e13bf551bf55662d</anchor>
      <arglist>(Debug &amp;debug, SamplerWrapping value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Shader.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>Shader_8h</filename>
    <includes id="GL_2AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/GL/AbstractObject.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <class kind="class">Magnum::GL::Shader</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a7ade40fd2de1c917757f97dbd6c5ab11</anchor>
      <arglist>(Debug &amp;debug, Shader::Type value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Texture.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>Texture_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">Magnum/Array.h</includes>
    <includes id="Sampler_8h" name="Sampler.h" local="yes" imported="no">Magnum/Sampler.h</includes>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="AbstractTexture_8h" name="AbstractTexture.h" local="yes" imported="no">Magnum/GL/AbstractTexture.h</includes>
    <includes id="GL_2Sampler_8h" name="Sampler.h" local="yes" imported="no">Magnum/GL/Sampler.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::GL::Texture</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="typedef">
      <type>Texture&lt; 1 &gt;</type>
      <name>Texture1D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a689bcf5b324f011cb9242e10d113227a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Texture&lt; 2 &gt;</type>
      <name>Texture2D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a186b77bc7412f679b6a6a043d88b05a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Texture&lt; 3 &gt;</type>
      <name>Texture3D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a6346a4e43ba5119977909a7ce348bc9a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TextureArray.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>TextureArray_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">Magnum/Array.h</includes>
    <includes id="Sampler_8h" name="Sampler.h" local="yes" imported="no">Magnum/Sampler.h</includes>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="AbstractTexture_8h" name="AbstractTexture.h" local="yes" imported="no">Magnum/GL/AbstractTexture.h</includes>
    <includes id="GL_2Sampler_8h" name="Sampler.h" local="yes" imported="no">Magnum/GL/Sampler.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::GL::TextureArray</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="typedef">
      <type>TextureArray&lt; 1 &gt;</type>
      <name>Texture1DArray</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a8507a9ef37bbde339536e537d9afaf37</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TextureArray&lt; 2 &gt;</type>
      <name>Texture2DArray</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a7c9f5d6fb84cc057c47844cc748008f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TextureFormat.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>TextureFormat_8h</filename>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/GL/OpenGL.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="enumeration">
      <type></type>
      <name>TextureFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a97b777c3a35e1efd11bbbe565982926c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caee38e4d5dd68c4e440825018d549cb47">Red</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cacfff813d86d447fa2a9c858650ebbb90">R8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cabac953e88f6d79514b0b6fc42eb6f3b7">RG</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca0367a93b9e3e7aa2fbe9802d80298e46">RG8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca889574aebacda6bfd3e534e2b49b8028">RGB</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca165c6379d01617e12de274a3952efa63">RGB8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caea3495a278957dc58165e48a8945469f">RGBA</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cab4b279046a02077466fa26cabb00c642">RGBA8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cae24128a61e28847e5cae93e146f3c396">R8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca0c1bc4554d3ca92e8ed03fde8fb668fc">RG8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca0ed70c0ecaf24c9abe9b121dd6fbc7be">RGB8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca77b2290184a281692c88cea55f7e4709">RGBA8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca9a486e1a3c543c7c58e1cc8086dc4239">R16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca2b66caa416f0a28686ade3fc30ab223a">RG16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca1cd42e2af35bdfb43d791f8cecdce4a4">RGB16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca50989efe15b375dce8ba3a5714fe2543">RGBA16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca3be85f3a039758c6edb91c91b7af98d2">R16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca7e7693eb3b20e62d8af832c2fe116559">RG16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca31fe77f7173ed54fdc96a4f752083205">RGB16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca825f61116ed1837ab9125c3e1921d860">RGBA16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca477722a31a67b4a8f4bdb09e796e343b">R8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca65264dd5d010ab021cbec10f07f97ed5">RG8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cafc5e2f0963f0ce3529e8aee36d827bbd">RGB8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caeb843f86a572765b9be8a71bd9563bea">RGBA8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca1ab8b9cd2509e2ccf930739d6d29ff35">R8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caf16a55975b8a8daa365e5b3cb116a001">RG8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca57a36f0c89bfa81cdd9a69e2ad2df08b">RGB8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cab99d001604e415e4ea7f107daaffd6dd">RGBA8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cac13d06830e39e268be15adfae07d9eb0">R16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca4475a780df31a86ece088a8aac082b12">RG16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cadfb1f628557b0014586b94400f06777b">RGB16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cae418a751a46186248578aecf3f30a26c">RGBA16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca3bf53b9d9aca5ddf22161b4c9d362f3f">R16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caf0c6bc16df3d36b62adc241a797148de">RG16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caff7632ef49d4bbe6b35050ac957a04c8">RGB16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca3d8d82a913260a439bf38ed05d6d2f46">RGBA16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca2c102dbf18ef5770d3beb5385661c1c2">R32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cac16ead63f9b07b5c97635edac05412cd">RG32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cae240d3e394b6a7cfa467efe512e96bb4">RGB32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cac050956335d883e2f6ed07cc6b0c90d8">RGBA32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca88996871eb63291d92c2f9d83219648a">R32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca56014c7d6ebfadbff4d0d4d3c20a0243">RG32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca8305c7f5432d31774cceb858c966b22e">RGB32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca9f87275b4130dd118085dd75ee6a7ac1">RGBA32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca8dfbaada0d68227f5c299c2aa637df68">R16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cad28539b874a2bc4c5d40f49b375af474">RG16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca25cd126670bd567a899c64c4e6e8ca7d">RGB16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caa29d843695056f9c171a9eb702d6910a">RGBA16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caca70b53fb0610461a2327973614a76ce">R32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cab968b93cd3c34fc9583050ce7e267394">RG32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cad8936cc7055546f79128b9dbfb8c8bbb">RGB32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca703a7a81e586669c930e3dcaf3e8c428">RGBA32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca280f73691109aeaa235ffddd2d154d9b">Luminance</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca780701651d86fd20708e81e7ad48c078">LuminanceAlpha</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca95e4ca1fe4603b39d7e7a4686446d9be">R3B3G2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca988777bd9406d465bdf7d81a36b26749">RGB4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca51e72bb0b91ea20485e3ad7657b9a60e">RGB5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca3b73e4d15701467ed72f157ffaff680a">RGB565</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caa3ac59ae1fad21561752e23c2bebc6b8">RGB10</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cac65abdcc9466868b293bfb11179fedc5">RGB12</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cac749b8eee74e3b7b60f8774178537dea">R11FG11FB10F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca02f40147ece0d4ef4c1ec76a56e22224">RGB9E5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca1f3f09bca5728eb7af4ea263ae84b9f1">SRGB</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cab71c01d7fab5970416ff1c79c675dc15">SRGB8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca6d3435115853ddb0d9c1711d182ad6ac">RGBA2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cad0194ebb93fd86b15f194ef73f81a01f">RGBA4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca145a041c8e2080c43fa129fb5b17d8be">RGB5A1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca4cad8c5058101f0f527e306958b6641b">RGB10A2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca1d8555f4846b8791e329e36dcd5239dc">RGB10A2UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cafb9e3f60db71f694d22e9013646d38f5">RGBA12</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca5dfd728b3bee2ad053d22203c3e8f2b8">SRGBAlpha</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cad639700e92ceb4aaafdf02ebdb3e15a4">SRGB8Alpha8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca625185c9ec2ed5f455d19f1ca6a00773">CompressedRed</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca772bc5e58449cef708b6156078f3f5d8">CompressedRG</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cad0031186aeaf9a67a1eeb17f56dce93b">CompressedRGB</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caa1adbdbb4c32dcd365caa018b1f4c2ab">CompressedRGBA</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caae5c87496dd401b101d970d2be2d675d">CompressedRedRgtc1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caa00895171c7061e57b500fee14a937a8">CompressedRGRgtc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca1c0cc46455d26a44fb5bbfcc773e6caa">CompressedSignedRedRgtc1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca7d767450de41e4ad6f8a95fb4515e161">CompressedSignedRGRgtc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca863402c422be61e85e34a2e554b0a63c">CompressedRGBBptcUnsignedFloat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cab0ecb340d273932cde6de1fb444f3cb3">CompressedRGBBptcSignedFloat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caa245d27842b07f4ae9516d04fde441d1">CompressedRGBABptcUnorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca366916eda1a3218ad315dde357e5204a">CompressedSRGBAlphaBptcUnorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca14250c0d7728ef90e996ae03bf7489fa">CompressedRGB8Etc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca95d73b2acfa5cd90584226c70269f2e8">CompressedSRGB8Etc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cade54b50cd1b16008d3a617f80a34e2eb">CompressedRGB8PunchthroughAlpha1Etc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca6c4a43ca22963e72ff03d842afe8a0a2">CompressedSRGB8PunchthroughAlpha1Etc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca922c03efed4659f37f28437176325647">CompressedRGBA8Etc2Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca742b4f2e5cd4402729b02ec23a1025f9">CompressedSRGB8Alpha8Etc2Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cadb569da6b6f5e127591d8730ea79cb80">CompressedR11Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca6806ab0fb22fda8987dc1c44a10c36ad">CompressedSignedR11Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca45184ba1be0c480b35013d48e23474e6">CompressedRG11Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca5243d34520a11c285cb37e5a5cffd122">CompressedSignedRG11Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca85f12a3af9a3a4a4c39e15bc125705e2">CompressedRGBS3tcDxt1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca05dd6df6676af88937f4dacc52fd7f6d">CompressedRGBAS3tcDxt1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca414690e758599d93ae1083830f33b187">CompressedRGBAS3tcDxt3</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca3701300f3409e2b208ab0786ccf8a782">CompressedRGBAS3tcDxt5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caa1ce82ea6c38485be618682112e539df">CompressedRGBAAstc4x4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca28c4d91f38360c0d861795f0ef838681">CompressedSRGB8Alpha8Astc4x4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cab0c113c2534fc0708128e5f7176dd70a">CompressedRGBAAstc5x4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca51613f53b2a8518f5c88fea1162db2b2">CompressedSRGB8Alpha8Astc5x4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cad69c5b046d1173bee3e3f037f0751e89">CompressedRGBAAstc5x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caa763331ac876a25410af5ca632b6db7d">CompressedSRGB8Alpha8Astc5x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cab2684ddc399d9e8dc07bcfaa0852546a">CompressedRGBAAstc6x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca18060e31caa5f53be3dd9d524ece7dfb">CompressedSRGB8Alpha8Astc6x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca84f136529809b4b46a0735c95cd1dcc1">CompressedRGBAAstc6x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca3635c9d4ed5d3e7c2911aacc8e3ba08f">CompressedSRGB8Alpha8Astc6x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca41e0cbb1620e2f5f0a37785cfae3b152">CompressedRGBAAstc8x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca64c722ef1f0d0a1e09ecedaa7b939067">CompressedSRGB8Alpha8Astc8x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cac2c952a6cdd1c104e808fa5ce5f5d43e">CompressedRGBAAstc8x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca350a4a5331d25e3ee726b841381ed9f8">CompressedSRGB8Alpha8Astc8x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cade4424b334ae908d6259c6c8137793c8">CompressedRGBAAstc8x8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cab555414f12cc6348809920b4ae02ac2d">CompressedSRGB8Alpha8Astc8x8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca1bd7a9fc8fbe546d83daa0c1b41cc9c4">CompressedRGBAAstc10x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca3710b3e0d2eceb116d22c776f4841020">CompressedSRGB8Alpha8Astc10x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cac0052d00bbb4992139980926903db7df">CompressedRGBAAstc10x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca9e81ac0b2ce7a2295475d2e60c80907a">CompressedSRGB8Alpha8Astc10x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cabc1f2059e849224ea01d85db0048b4b8">CompressedRGBAAstc10x8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caa7d98a3596e139da1d5e7ed2f9a2d3cf">CompressedSRGB8Alpha8Astc10x8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca355d96c9193731337720859439453df9">CompressedRGBAAstc10x10</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cae8127849086ce85af225624ef25f19b4">CompressedSRGB8Alpha8Astc10x10</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca66524e68a55780a6f3457f20e8e6ace8">CompressedRGBAAstc12x10</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caad9de1fda6e81b47fe595f0377eaf688">CompressedSRGB8Alpha8Astc12x10</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cadde421f8ef9da00a961c291fa112d226">CompressedRGBAAstc12x12</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca076dbe24a47429ccef59ae197475c50a">CompressedSRGB8Alpha8Astc12x12</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca19c8f1ee3a700e77e87053eee47f6bc8">DepthComponent</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cab5743b6194329afdf89a6a32bbcc4124">DepthComponent16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caedf2b17fc7b220c3b855af306c9f409d">DepthComponent24</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca1f519142b59a9d4382c6aa004acd7dd2">DepthComponent32</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca9e1081f1bca10bb12b11b81c23ccbdb2">DepthComponent32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca08af7fbfd260214add2e402d8427f0a8">StencilIndex8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca2fa8076285272883c91e14402975a441">DepthStencil</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca78181d4f5d4b30baefed6c0da0de894f">Depth24Stencil8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cabe0ddae1e70dc4233b16fc053a60e2fe">Depth32FStencil8</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>TimeQuery.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>TimeQuery_8h</filename>
    <includes id="AbstractQuery_8h" name="AbstractQuery.h" local="yes" imported="no">Magnum/GL/AbstractQuery.h</includes>
    <class kind="class">Magnum::GL::TimeQuery</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
  </compound>
  <compound kind="file">
    <name>TransformFeedback.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>TransformFeedback_8h</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="GL_2AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/GL/AbstractObject.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <class kind="class">Magnum::GL::TransformFeedback</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
  </compound>
  <compound kind="file">
    <name>Version.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/GL/</path>
    <filename>Version_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::GL</namespace>
    <member kind="enumeration">
      <type></type>
      <name>Version</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a25a655e88f8aa4c4528819e7c68360bf</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa6f87fc2156f6b7da4cafba3714fb3c09">GL210</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfae32fe21dd789983eb99064a11c84c00a">GL300</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa0631a35644b3a4a74bec3151f6c9b031">GL310</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa2cd64d0051d11e3c1442d67813886d86">GL320</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfad957a7f239a0bf7df56130c678f6396c">GL330</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa369c4ba0fc139d909ee94a5cc4ddb531">GL400</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfab81b89342b5f32260e52b2105382a298">GL410</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa30a393172e9cfa2c36ba8c6036692fad">GL420</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfaa895d16b1ad08894fb826ac79f710f3c">GL430</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfac616f63c50e83d49ca399eb7a5252ca4">GL440</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa232d8bc0d273cd67fa1d295fc3c8a944">GL450</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfaacdfa76854572ac38222de5c4297ce93">GL460</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa2d3e1e712d28ed030790b46222941235">GLES200</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa94d9b97253a36a124f91d9e70153e989">GLES300</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfaeee309b0c4a4eddcdaed74228d9443c2">GLES310</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa07a471031bd29835eab03c246f5d92a8">GLES320</enumvalue>
    </member>
    <member kind="function">
      <type>constexpr Version</type>
      <name>version</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a45f59f24c88057292c8aa4fb1c8db0e5</anchor>
      <arglist>(Int major, Int minor)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Int, Int &gt;</type>
      <name>version</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>aea96e4fa154ad9f99426e857e8baab2b</anchor>
      <arglist>(Version version)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isVersionES</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>aab14823d7ee4166e0aba7a5390c9d935</anchor>
      <arglist>(Version version)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a3182f08d7ea54aad15c2e7465bf2bf53</anchor>
      <arglist>(Debug &amp;debug, Version value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Image.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Image_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="PixelStorage_8h" name="PixelStorage.h" local="yes" imported="no">Magnum/PixelStorage.h</includes>
    <class kind="class">Magnum::Image</class>
    <class kind="class">Magnum::CompressedImage</class>
    <namespace>Magnum</namespace>
    <member kind="typedef">
      <type>Image&lt; 1 &gt;</type>
      <name>Image1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae1b8a158cc31e09cbe1fba24fec2fa9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Image&lt; 2 &gt;</type>
      <name>Image2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a99b46de11af429ac8c1af52f59602cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Image&lt; 3 &gt;</type>
      <name>Image3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2388ee336623bf115b28b756a445931b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImage&lt; 1 &gt;</type>
      <name>CompressedImage1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae48c7bfe2c52754baf1d435592b79702</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImage&lt; 2 &gt;</type>
      <name>CompressedImage2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af2d28d2e31d7e620320c124c1e636207</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImage&lt; 3 &gt;</type>
      <name>CompressedImage3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0dddd7f6782f6c0047f712e4d50f938d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ImageView.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>ImageView_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="PixelStorage_8h" name="PixelStorage.h" local="yes" imported="no">Magnum/PixelStorage.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::ImageView</class>
    <class kind="class">Magnum::CompressedImageView</class>
    <namespace>Magnum</namespace>
    <member kind="typedef">
      <type>ImageView&lt; dimensions, const char &gt;</type>
      <name>BasicImageView</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a876e8ce27cf7df9fb6201f81406ae250</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicImageView&lt; 1 &gt;</type>
      <name>ImageView1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad6cbc90385cec67f103dae61d9d3bbd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicImageView&lt; 2 &gt;</type>
      <name>ImageView2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab6bcfc56373c89f9655b9f87f2566ca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicImageView&lt; 3 &gt;</type>
      <name>ImageView3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aedaaa1cbb49a03bbb3cafc132d42584e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageView&lt; dimensions, char &gt;</type>
      <name>BasicMutableImageView</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af62f11692685ea6c74d752ff71ecf54b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicMutableImageView&lt; 1 &gt;</type>
      <name>MutableImageView1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae0490cb632c2db81a8fb038fce48ae60</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicMutableImageView&lt; 2 &gt;</type>
      <name>MutableImageView2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac8d2058eea925905bfe83f7d5db93c54</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicMutableImageView&lt; 3 &gt;</type>
      <name>MutableImageView3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0eb96702168beb80f3e12301cb621019</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImageView&lt; dimensions, const char &gt;</type>
      <name>BasicCompressedImageView</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2138d3f22fed7afa0e2a705437071631</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicCompressedImageView&lt; 1 &gt;</type>
      <name>CompressedImageView1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a60316e5a48cf52d44eabdb0c9656c41b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicCompressedImageView&lt; 2 &gt;</type>
      <name>CompressedImageView2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aa65c2f90270d256799d0ad88f51b3c0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicCompressedImageView&lt; 3 &gt;</type>
      <name>CompressedImageView3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaaf1c516639176324b0c113d80f73cbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImageView&lt; dimensions, char &gt;</type>
      <name>BasicMutableCompressedImageView</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a35a9f731843c8c10ca97bac072bc4bfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicMutableCompressedImageView&lt; 1 &gt;</type>
      <name>MutableCompressedImageView1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a87ab485cce4fc929265a79edb4b2f8ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicMutableCompressedImageView&lt; 2 &gt;</type>
      <name>MutableCompressedImageView2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a84c876f73db1161bf43e6ea2d8f2670e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicMutableCompressedImageView&lt; 3 &gt;</type>
      <name>MutableCompressedImageView3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a993dd48773615e001f154221079614d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Magnum.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Magnum_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <includes id="Math_8h" name="Math.h" local="yes" imported="no">Magnum/Math/Math.h</includes>
    <namespace>Magnum</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_BUILD_DEPRECATED</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>a8fa4463a10327399ce45e0c89e4f5f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_BUILD_STATIC</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>ab3cb5d95ad0e97694869fb6119c3f9bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_BUILD_MULTITHREADED</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>af2d9ad7711f07880ba64835331927d64</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_TARGET_GL</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>a13da9ff866b4c173afd87f288a30a2e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_TARGET_GLES</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>a040fc39521bf551ab8455bc4e9cb3bfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_TARGET_GLES2</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>a530537d116aa1a63e49fd0b51d4b074e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_TARGET_GLES3</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>a245ca638b06571f87f3f94fd8d923b4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_TARGET_DESKTOP_GLES</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>af29c1321505940d85d292406c096f55e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_TARGET_WEBGL</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>a324f5f592a801cf550cf2351a4136f0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_TARGET_HEADLESS</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>a6dfcd4b8f56a7775aa9fc87cb07e7f43</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_TARGET_VK</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>ad7d1a5b6fa7ef1f48b1b9ec94c30aae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint8_t</type>
      <name>UnsignedByte</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a07cf9231dbda5f296cc205ab7ecb770f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int8_t</type>
      <name>Byte</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3326c49ec1ed9b0bb5e292c1ad81f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint16_t</type>
      <name>UnsignedShort</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a909e88e5e85c567e854bedac5ef40abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int16_t</type>
      <name>Short</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8a61fb6a9a4bb99d17c5501a668927f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>UnsignedInt</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8d47f9ac6d7ced811b3d355990a3732b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int32_t</type>
      <name>Int</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aee42530d46e85ad0d60312c3526f4c50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint64_t</type>
      <name>UnsignedLong</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a864ee326698465e20b52c19fd7044ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int64_t</type>
      <name>Long</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aadaf2d260758705587a825d8c8907a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>Float</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a232af7e6fd9b88195fbc59fcec2155cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Half</type>
      <name>Half</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae9ad232db78b650420d4a56d3d67f0e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::BoolVector&lt; 2 &gt;</type>
      <name>BoolVector2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>afc5f5955d48bb8a4edbf20309fce63dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::BoolVector&lt; 3 &gt;</type>
      <name>BoolVector3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a339fdabda899980a33990aa2e3c8a98a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::BoolVector&lt; 4 &gt;</type>
      <name>BoolVector4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a931bd102da709344ae82507d5a4f1f84</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Float &gt;</type>
      <name>Vector2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a867c5cc7c779e5f990bcfb4457eb81e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Float &gt;</type>
      <name>Vector3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6949fa86a0af6ed632c90d4223baeb59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Float &gt;</type>
      <name>Vector4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3f4cac6ff006e4e32682ebb2b117d7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; UnsignedInt &gt;</type>
      <name>Vector2ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4506781bc0ae351534004ec20d64cf2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; UnsignedInt &gt;</type>
      <name>Vector3ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a26df486c6774622c92b881350d4876a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; UnsignedInt &gt;</type>
      <name>Vector4ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aeabe8282965e92504504ce4eae543187</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Int &gt;</type>
      <name>Vector2i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae3ac51b4e18ff95be7dd874c1cc861f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Int &gt;</type>
      <name>Vector3i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a053340a86ab63e587ab3773ff1265784</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Int &gt;</type>
      <name>Vector4i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9e0f4dfa754bf25f9a9f39f84ae8f396</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color3&lt; Float &gt;</type>
      <name>Color3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a99bf0ab337b9ed6ff6ccfd8ea147a900</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color4&lt; Float &gt;</type>
      <name>Color4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5cb8f674ed695b93b434b44bd7c96805</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::ColorHsv&lt; Float &gt;</type>
      <name>ColorHsv</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3f2e0a0f0f64660057e1af647fd34456</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color3&lt; UnsignedByte &gt;</type>
      <name>Color3ub</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>afde3a07a49799b474c74f186f01cbc25</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color4&lt; UnsignedByte &gt;</type>
      <name>Color4ub</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1444bc0c8960f51e682cc718331c3c5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3&lt; Float &gt;</type>
      <name>Matrix3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7abac7ed657a50f2964d6b2c4a1f7677</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4&lt; Float &gt;</type>
      <name>Matrix4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a28cfaaad41fdc6b258092278ba4569d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x2&lt; Float &gt;</type>
      <name>Matrix2x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae1523b3078a9f2b0f6dd83daded9e970</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x3&lt; Float &gt;</type>
      <name>Matrix3x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7ee135be46a327f352d01287579e2acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x4&lt; Float &gt;</type>
      <name>Matrix4x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1beb3e75007fb50638fe5b25d513a688</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x3&lt; Float &gt;</type>
      <name>Matrix2x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3dced70ba66525d9bbb6b44e6227188</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x2&lt; Float &gt;</type>
      <name>Matrix3x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a689baccbb9256e282d2d68e3486dcc80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x4&lt; Float &gt;</type>
      <name>Matrix2x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7533874fc2ef4af1118a1727d56ec7e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x2&lt; Float &gt;</type>
      <name>Matrix4x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4b275037a57059729521813d5eff5afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x4&lt; Float &gt;</type>
      <name>Matrix3x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a007726fb14fe464a51d3f53970216df6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x3&lt; Float &gt;</type>
      <name>Matrix4x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a15f5e8da966dbdb9ec0c47e6de9ccf3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier2D&lt; Float &gt;</type>
      <name>QuadraticBezier2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aa076ea30523705e63fd29aa9a44a7924</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier3D&lt; Float &gt;</type>
      <name>QuadraticBezier3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aab522cde6ba1d070df7ea26749f2faf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier2D&lt; Float &gt;</type>
      <name>CubicBezier2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1deead2c643a2b9b053540b9c70202bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier3D&lt; Float &gt;</type>
      <name>CubicBezier3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1153a483856bb774602a3df94c7d53b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite1D&lt; Float &gt;</type>
      <name>CubicHermite1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4738e9771b61423499b9014b6b536e72</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite2D&lt; Float &gt;</type>
      <name>CubicHermite2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a225783dfa380bf6181feeda9c180ddfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite3D&lt; Float &gt;</type>
      <name>CubicHermite3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>adda2e9cca02ac9a5d1d42c4d487cc307</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermiteComplex&lt; Float &gt;</type>
      <name>CubicHermiteComplex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7e03d1307660bcc946569b18bcdee630</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermiteQuaternion&lt; Float &gt;</type>
      <name>CubicHermiteQuaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab5feff3497a6175e9e08a39443c91575</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Complex&lt; Float &gt;</type>
      <name>Complex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af8f959fbcda212df03f4db0c0b4d8e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualComplex&lt; Float &gt;</type>
      <name>DualComplex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a301eadaf85af10586dd8fee8a5c7f268</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Quaternion&lt; Float &gt;</type>
      <name>Quaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2e3f956058db79a46099bd104b08eeb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualQuaternion&lt; Float &gt;</type>
      <name>DualQuaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad64bf8f226da3f14dc0e88e2b5a6c251</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Constants&lt; Float &gt;</type>
      <name>Constants</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6c070a7b75b28d88915aa17af9b78c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Deg&lt; Float &gt;</type>
      <name>Deg</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a35aafd6ffb9da9a9e7b3805141ecbbb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Rad&lt; Float &gt;</type>
      <name>Rad</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0471754d0b583682b2dd2cf4d99077af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Float &gt;</type>
      <name>Range1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad4ec1efaa47da1a4b7815950683fb225</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Float &gt;</type>
      <name>Range2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a08b469227b1a8989c2c151d3a8899642</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Float &gt;</type>
      <name>Range3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7fbce9c90d2709f47e0d5f094f183208</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Int &gt;</type>
      <name>Range1Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a78544ddd221d110240d3da598b3450c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Int &gt;</type>
      <name>Range2Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aca08a3fe2d57fd40fce6d3d577b43e86</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Int &gt;</type>
      <name>Range3Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a055e641c454b6bfacd44c309c2c7aeb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Frustum&lt; Float &gt;</type>
      <name>Frustum</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aadbcb06e48ab10daaa2f6272b731194c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Double</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5f4cc6ae4658e5eee79148cf4738f789</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Double &gt;</type>
      <name>Vector2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaff377299fc19849bfed2a64fa80ff7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Double &gt;</type>
      <name>Vector3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a12999896f6eeea0c53b82f97886f32c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Double &gt;</type>
      <name>Vector4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7767801c66c95405c9c1ae3108f676d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3&lt; Double &gt;</type>
      <name>Matrix3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad1a28945c4fe29ad91e5da1244c5669e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4&lt; Double &gt;</type>
      <name>Matrix4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>addbaa6dd74e1967ef70a15e7bfaaabb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x2&lt; Double &gt;</type>
      <name>Matrix2x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac8b90a55a3ff885b42009b9f46cbc054</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x3&lt; Double &gt;</type>
      <name>Matrix3x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a44a1a23ecbda7c6343c052535481f16e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x4&lt; Double &gt;</type>
      <name>Matrix4x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aae9dc931fa1c545f2990891779fb665d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x3&lt; Double &gt;</type>
      <name>Matrix2x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae72831cf88f37efaf38129138d02a2b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x2&lt; Double &gt;</type>
      <name>Matrix3x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4e89a28c7b25d548658560d5651c8d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x4&lt; Double &gt;</type>
      <name>Matrix2x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4a2863ef1337008849345c9b8720dc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x2&lt; Double &gt;</type>
      <name>Matrix4x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a502dadb2e648b9cb785124d8e57613ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x4&lt; Double &gt;</type>
      <name>Matrix3x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3a80fad794621611bf170e5bb818135d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x3&lt; Double &gt;</type>
      <name>Matrix4x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a55e335c75732e3a13b400a3a8837d16a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier2D&lt; Float &gt;</type>
      <name>QuadraticBezier2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a28635f12b30809607b32ba90282735a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier3D&lt; Float &gt;</type>
      <name>QuadraticBezier3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7a1745348e3df1b36f543a9fb143520f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier2D&lt; Float &gt;</type>
      <name>CubicBezier2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5b4862b5ded9c45b0eaa23c143147e5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier3D&lt; Float &gt;</type>
      <name>CubicBezier3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a85efadd97b72b331eee0912da21a433b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite1D&lt; Double &gt;</type>
      <name>CubicHermite1Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a40cd0c5d0d941d7615d42225cad30f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite2D&lt; Double &gt;</type>
      <name>CubicHermite2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>add99a1908b03c3462d7e8bf06b0e7bf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite3D&lt; Double &gt;</type>
      <name>CubicHermite3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7fcfec87b22846699f11b2acdb462626</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermiteComplex&lt; Double &gt;</type>
      <name>CubicHermiteComplexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7f85116469a79165fe7305b477eb811a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermiteQuaternion&lt; Double &gt;</type>
      <name>CubicHermiteQuaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1a32c05ec0f998d2116a23be2cb38e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Complex&lt; Double &gt;</type>
      <name>Complexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a39c00aecf9014a896daa67ce80f588c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualComplex&lt; Double &gt;</type>
      <name>DualComplexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af5caf88b9b32ea8f5839e1033b75f8fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Quaternion&lt; Double &gt;</type>
      <name>Quaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a98a0b80388b8500611f9ac50ee5090d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualQuaternion&lt; Double &gt;</type>
      <name>DualQuaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3389caa75ddcc24e1c17b1e47928451</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Constants&lt; Double &gt;</type>
      <name>Constantsd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4b861df9ed0195727ce15b9499318c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Deg&lt; Double &gt;</type>
      <name>Degd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>abb6b2ed24bc5511b4d98fa6cdc446c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Rad&lt; Double &gt;</type>
      <name>Radd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a576be96b2eb268a0c84b7d8fbb5edf23</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Double &gt;</type>
      <name>Range1Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad0ade5e31406fc3dd7b85fb634c4a865</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Double &gt;</type>
      <name>Range2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac7dcda0b7320b7377e0bdabe6a2d4649</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Double &gt;</type>
      <name>Range3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af69768f0c458043b7a6a030340456e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Frustum&lt; Double &gt;</type>
      <name>Frustumd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaa52550cff11cf462303a5268fd42089</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint8_t</type>
      <name>UnsignedByte</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a07cf9231dbda5f296cc205ab7ecb770f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int8_t</type>
      <name>Byte</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3326c49ec1ed9b0bb5e292c1ad81f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint16_t</type>
      <name>UnsignedShort</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a909e88e5e85c567e854bedac5ef40abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int16_t</type>
      <name>Short</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8a61fb6a9a4bb99d17c5501a668927f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>UnsignedInt</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8d47f9ac6d7ced811b3d355990a3732b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int32_t</type>
      <name>Int</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aee42530d46e85ad0d60312c3526f4c50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint64_t</type>
      <name>UnsignedLong</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a864ee326698465e20b52c19fd7044ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int64_t</type>
      <name>Long</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aadaf2d260758705587a825d8c8907a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>Float</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a232af7e6fd9b88195fbc59fcec2155cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Half</type>
      <name>Half</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae9ad232db78b650420d4a56d3d67f0e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::BoolVector&lt; 2 &gt;</type>
      <name>BoolVector2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>afc5f5955d48bb8a4edbf20309fce63dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::BoolVector&lt; 3 &gt;</type>
      <name>BoolVector3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a339fdabda899980a33990aa2e3c8a98a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::BoolVector&lt; 4 &gt;</type>
      <name>BoolVector4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a931bd102da709344ae82507d5a4f1f84</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Float &gt;</type>
      <name>Vector2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a867c5cc7c779e5f990bcfb4457eb81e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Float &gt;</type>
      <name>Vector3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6949fa86a0af6ed632c90d4223baeb59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Float &gt;</type>
      <name>Vector4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3f4cac6ff006e4e32682ebb2b117d7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; UnsignedInt &gt;</type>
      <name>Vector2ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4506781bc0ae351534004ec20d64cf2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; UnsignedInt &gt;</type>
      <name>Vector3ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a26df486c6774622c92b881350d4876a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; UnsignedInt &gt;</type>
      <name>Vector4ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aeabe8282965e92504504ce4eae543187</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Int &gt;</type>
      <name>Vector2i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae3ac51b4e18ff95be7dd874c1cc861f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Int &gt;</type>
      <name>Vector3i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a053340a86ab63e587ab3773ff1265784</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Int &gt;</type>
      <name>Vector4i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9e0f4dfa754bf25f9a9f39f84ae8f396</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color3&lt; Float &gt;</type>
      <name>Color3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a99bf0ab337b9ed6ff6ccfd8ea147a900</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color4&lt; Float &gt;</type>
      <name>Color4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5cb8f674ed695b93b434b44bd7c96805</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::ColorHsv&lt; Float &gt;</type>
      <name>ColorHsv</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3f2e0a0f0f64660057e1af647fd34456</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color3&lt; UnsignedByte &gt;</type>
      <name>Color3ub</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>afde3a07a49799b474c74f186f01cbc25</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color4&lt; UnsignedByte &gt;</type>
      <name>Color4ub</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1444bc0c8960f51e682cc718331c3c5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3&lt; Float &gt;</type>
      <name>Matrix3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7abac7ed657a50f2964d6b2c4a1f7677</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4&lt; Float &gt;</type>
      <name>Matrix4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a28cfaaad41fdc6b258092278ba4569d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x2&lt; Float &gt;</type>
      <name>Matrix2x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae1523b3078a9f2b0f6dd83daded9e970</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x3&lt; Float &gt;</type>
      <name>Matrix3x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7ee135be46a327f352d01287579e2acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x4&lt; Float &gt;</type>
      <name>Matrix4x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1beb3e75007fb50638fe5b25d513a688</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x3&lt; Float &gt;</type>
      <name>Matrix2x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3dced70ba66525d9bbb6b44e6227188</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x2&lt; Float &gt;</type>
      <name>Matrix3x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a689baccbb9256e282d2d68e3486dcc80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x4&lt; Float &gt;</type>
      <name>Matrix2x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7533874fc2ef4af1118a1727d56ec7e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x2&lt; Float &gt;</type>
      <name>Matrix4x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4b275037a57059729521813d5eff5afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x4&lt; Float &gt;</type>
      <name>Matrix3x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a007726fb14fe464a51d3f53970216df6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x3&lt; Float &gt;</type>
      <name>Matrix4x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a15f5e8da966dbdb9ec0c47e6de9ccf3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier2D&lt; Float &gt;</type>
      <name>QuadraticBezier2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aa076ea30523705e63fd29aa9a44a7924</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier3D&lt; Float &gt;</type>
      <name>QuadraticBezier3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aab522cde6ba1d070df7ea26749f2faf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier2D&lt; Float &gt;</type>
      <name>CubicBezier2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1deead2c643a2b9b053540b9c70202bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier3D&lt; Float &gt;</type>
      <name>CubicBezier3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1153a483856bb774602a3df94c7d53b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite1D&lt; Float &gt;</type>
      <name>CubicHermite1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4738e9771b61423499b9014b6b536e72</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite2D&lt; Float &gt;</type>
      <name>CubicHermite2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a225783dfa380bf6181feeda9c180ddfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite3D&lt; Float &gt;</type>
      <name>CubicHermite3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>adda2e9cca02ac9a5d1d42c4d487cc307</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermiteComplex&lt; Float &gt;</type>
      <name>CubicHermiteComplex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7e03d1307660bcc946569b18bcdee630</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermiteQuaternion&lt; Float &gt;</type>
      <name>CubicHermiteQuaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab5feff3497a6175e9e08a39443c91575</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Complex&lt; Float &gt;</type>
      <name>Complex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af8f959fbcda212df03f4db0c0b4d8e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualComplex&lt; Float &gt;</type>
      <name>DualComplex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a301eadaf85af10586dd8fee8a5c7f268</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Quaternion&lt; Float &gt;</type>
      <name>Quaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2e3f956058db79a46099bd104b08eeb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualQuaternion&lt; Float &gt;</type>
      <name>DualQuaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad64bf8f226da3f14dc0e88e2b5a6c251</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Constants&lt; Float &gt;</type>
      <name>Constants</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6c070a7b75b28d88915aa17af9b78c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Deg&lt; Float &gt;</type>
      <name>Deg</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a35aafd6ffb9da9a9e7b3805141ecbbb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Rad&lt; Float &gt;</type>
      <name>Rad</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0471754d0b583682b2dd2cf4d99077af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Float &gt;</type>
      <name>Range1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad4ec1efaa47da1a4b7815950683fb225</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Float &gt;</type>
      <name>Range2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a08b469227b1a8989c2c151d3a8899642</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Float &gt;</type>
      <name>Range3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7fbce9c90d2709f47e0d5f094f183208</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Int &gt;</type>
      <name>Range1Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a78544ddd221d110240d3da598b3450c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Int &gt;</type>
      <name>Range2Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aca08a3fe2d57fd40fce6d3d577b43e86</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Int &gt;</type>
      <name>Range3Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a055e641c454b6bfacd44c309c2c7aeb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Frustum&lt; Float &gt;</type>
      <name>Frustum</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aadbcb06e48ab10daaa2f6272b731194c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Double</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5f4cc6ae4658e5eee79148cf4738f789</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Double &gt;</type>
      <name>Vector2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaff377299fc19849bfed2a64fa80ff7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Double &gt;</type>
      <name>Vector3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a12999896f6eeea0c53b82f97886f32c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Double &gt;</type>
      <name>Vector4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7767801c66c95405c9c1ae3108f676d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3&lt; Double &gt;</type>
      <name>Matrix3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad1a28945c4fe29ad91e5da1244c5669e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4&lt; Double &gt;</type>
      <name>Matrix4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>addbaa6dd74e1967ef70a15e7bfaaabb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x2&lt; Double &gt;</type>
      <name>Matrix2x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac8b90a55a3ff885b42009b9f46cbc054</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x3&lt; Double &gt;</type>
      <name>Matrix3x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a44a1a23ecbda7c6343c052535481f16e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x4&lt; Double &gt;</type>
      <name>Matrix4x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aae9dc931fa1c545f2990891779fb665d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x3&lt; Double &gt;</type>
      <name>Matrix2x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae72831cf88f37efaf38129138d02a2b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x2&lt; Double &gt;</type>
      <name>Matrix3x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4e89a28c7b25d548658560d5651c8d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x4&lt; Double &gt;</type>
      <name>Matrix2x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4a2863ef1337008849345c9b8720dc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x2&lt; Double &gt;</type>
      <name>Matrix4x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a502dadb2e648b9cb785124d8e57613ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x4&lt; Double &gt;</type>
      <name>Matrix3x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3a80fad794621611bf170e5bb818135d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x3&lt; Double &gt;</type>
      <name>Matrix4x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a55e335c75732e3a13b400a3a8837d16a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier2D&lt; Float &gt;</type>
      <name>QuadraticBezier2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a28635f12b30809607b32ba90282735a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier3D&lt; Float &gt;</type>
      <name>QuadraticBezier3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7a1745348e3df1b36f543a9fb143520f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier2D&lt; Float &gt;</type>
      <name>CubicBezier2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5b4862b5ded9c45b0eaa23c143147e5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier3D&lt; Float &gt;</type>
      <name>CubicBezier3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a85efadd97b72b331eee0912da21a433b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite1D&lt; Double &gt;</type>
      <name>CubicHermite1Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a40cd0c5d0d941d7615d42225cad30f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite2D&lt; Double &gt;</type>
      <name>CubicHermite2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>add99a1908b03c3462d7e8bf06b0e7bf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite3D&lt; Double &gt;</type>
      <name>CubicHermite3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7fcfec87b22846699f11b2acdb462626</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermiteComplex&lt; Double &gt;</type>
      <name>CubicHermiteComplexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7f85116469a79165fe7305b477eb811a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermiteQuaternion&lt; Double &gt;</type>
      <name>CubicHermiteQuaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1a32c05ec0f998d2116a23be2cb38e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Complex&lt; Double &gt;</type>
      <name>Complexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a39c00aecf9014a896daa67ce80f588c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualComplex&lt; Double &gt;</type>
      <name>DualComplexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af5caf88b9b32ea8f5839e1033b75f8fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Quaternion&lt; Double &gt;</type>
      <name>Quaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a98a0b80388b8500611f9ac50ee5090d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualQuaternion&lt; Double &gt;</type>
      <name>DualQuaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3389caa75ddcc24e1c17b1e47928451</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Constants&lt; Double &gt;</type>
      <name>Constantsd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4b861df9ed0195727ce15b9499318c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Deg&lt; Double &gt;</type>
      <name>Degd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>abb6b2ed24bc5511b4d98fa6cdc446c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Rad&lt; Double &gt;</type>
      <name>Radd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a576be96b2eb268a0c84b7d8fbb5edf23</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Double &gt;</type>
      <name>Range1Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad0ade5e31406fc3dd7b85fb634c4a865</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Double &gt;</type>
      <name>Range2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac7dcda0b7320b7377e0bdabe6a2d4649</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Double &gt;</type>
      <name>Range3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af69768f0c458043b7a6a030340456e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Frustum&lt; Double &gt;</type>
      <name>Frustumd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaa52550cff11cf462303a5268fd42089</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GaussJordan.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/Algorithms/</path>
    <filename>GaussJordan_8h</filename>
    <includes id="Matrix_8h" name="Matrix.h" local="yes" imported="no">Magnum/Math/Matrix.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Algorithms</namespace>
    <member kind="function">
      <type>bool</type>
      <name>gaussJordanInPlaceTransposed</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>afd51c7cc16e65c7e76054f3894c968c1</anchor>
      <arglist>(RectangularMatrix&lt; size, size, T &gt; &amp;a, RectangularMatrix&lt; size, rows, T &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>gaussJordanInPlace</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a34eea735d7911e9ac472ed98cd7b9128</anchor>
      <arglist>(RectangularMatrix&lt; size, size, T &gt; &amp;a, RectangularMatrix&lt; cols, size, T &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Matrix&lt; size, T &gt;</type>
      <name>gaussJordanInverted</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a8ec84b7776d70334669c6f11ad8253a1</anchor>
      <arglist>(Matrix&lt; size, T &gt; matrix)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GramSchmidt.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/Algorithms/</path>
    <filename>GramSchmidt_8h</filename>
    <includes id="RectangularMatrix_8h" name="RectangularMatrix.h" local="yes" imported="no">Magnum/Math/RectangularMatrix.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Algorithms</namespace>
    <member kind="function">
      <type>void</type>
      <name>gramSchmidtOrthogonalizeInPlace</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a18d7248a3ee6e2a4edc1c850724ce488</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>gramSchmidtOrthogonalize</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a65923466ad3890a5ef400f84940362d6</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gramSchmidtOrthonormalizeInPlace</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a097b3bec336a94a7d12443e2ea517105</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>gramSchmidtOrthonormalize</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a9acdde07b5c85594592c8032244e585b</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; matrix)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KahanSum.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/Algorithms/</path>
    <filename>KahanSum_8h</filename>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Algorithms</namespace>
    <member kind="function">
      <type>T</type>
      <name>kahanSum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>aa4696c9d956d5c6bb1833a29533be545</anchor>
      <arglist>(Iterator begin, Iterator end, T sum=T(0), T *compensation=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Qr.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/Algorithms/</path>
    <filename>Qr_8h</filename>
    <includes id="GramSchmidt_8h" name="GramSchmidt.h" local="yes" imported="no">Magnum/Math/Algorithms/GramSchmidt.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Algorithms</namespace>
    <member kind="function">
      <type>std::pair&lt; Matrix&lt; size, T &gt;, Matrix&lt; size, T &gt; &gt;</type>
      <name>qr</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>afa6848a3c35575e119f8b05a67822b43</anchor>
      <arglist>(const Matrix&lt; size, T &gt; &amp;matrix)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Svd.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/Algorithms/</path>
    <filename>Svd_8h</filename>
    <includes id="Functions_8h" name="Functions.h" local="yes" imported="no">Magnum/Math/Functions.h</includes>
    <includes id="Matrix_8h" name="Matrix.h" local="yes" imported="no">Magnum/Math/Matrix.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Algorithms</namespace>
    <member kind="function">
      <type>std::tuple&lt; RectangularMatrix&lt; cols, rows, T &gt;, Vector&lt; cols, T &gt;, Matrix&lt; cols, T &gt; &gt;</type>
      <name>svd</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>abe54bd778b9c6fdb93ccc6b3ef82c0e3</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; m)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Angle.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Angle_8h</filename>
    <includes id="Constants_8h" name="Constants.h" local="yes" imported="no">Magnum/Math/Constants.h</includes>
    <includes id="Math_8h" name="Math.h" local="yes" imported="no">Magnum/Math/Math.h</includes>
    <includes id="Unit_8h" name="Unit.h" local="yes" imported="no">Magnum/Math/Unit.h</includes>
    <class kind="class">Magnum::Math::Deg</class>
    <class kind="class">Magnum::Math::Rad</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; Magnum::Math::Deg&lt; Magnum::Float &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; Magnum::Math::Deg&lt; Magnum::Double &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; Magnum::Math::Rad&lt; Magnum::Float &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; Magnum::Math::Rad&lt; Magnum::Double &gt; &gt;</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Literals</namespace>
    <member kind="function">
      <type>constexpr Deg&lt; Double &gt;</type>
      <name>operator&quot;&quot;_deg</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ad0f0411d4a58db406d968733715f782d</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Deg&lt; Float &gt;</type>
      <name>operator&quot;&quot;_degf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ac3f64414df5978006e55682877e92736</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Rad&lt; Double &gt;</type>
      <name>operator&quot;&quot;_rad</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>aa2e5542942a14d84870d860ec13056e2</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Rad&lt; Float &gt;</type>
      <name>operator&quot;&quot;_radf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ab0143c89ebaa92da73ed5ba17426129b</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a577c8c280a0b3753ef06a23b5b496a3a</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Unit&lt; Rad, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac757572f15467c51569563ea991a2549</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Unit&lt; Deg, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Bezier.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Bezier_8h</filename>
    <includes id="Math_2Vector_8h" name="Vector.h" local="yes" imported="no">Magnum/Math/Vector.h</includes>
    <class kind="class">Magnum::Math::Bezier</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="typedef">
      <type>Bezier&lt; 2, dimensions, T &gt;</type>
      <name>QuadraticBezier</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a213eaf7e01a257c1eacf8a7184c2e5fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QuadraticBezier&lt; 2, T &gt;</type>
      <name>QuadraticBezier2D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a52bbd5f3028c1607e6663f17f67a5d1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QuadraticBezier&lt; 3, T &gt;</type>
      <name>QuadraticBezier3D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9493d9a9d8df8d9723dcb4d844718726</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Bezier&lt; 3, dimensions, T &gt;</type>
      <name>CubicBezier</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>acfbcdbd3e79169d81307b31e575601aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CubicBezier&lt; 2, T &gt;</type>
      <name>CubicBezier2D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac11e0f5820b7c4dc9649e35106bdc49a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CubicBezier&lt; 3, T &gt;</type>
      <name>CubicBezier3D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>addfd48e7102847b301863dedcc75a2e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab1001276d3083c0d6d035c9e343c1c3c</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Bezier&lt; order, dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BoolVector.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>BoolVector_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <includes id="Math_8h" name="Math.h" local="yes" imported="no">Magnum/Math/Math.h</includes>
    <includes id="Math_2Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Math/Tags.h</includes>
    <class kind="class">Magnum::Math::BoolVector</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a05ecfedf1ed791f07d32b7d45d978432</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const BoolVector&lt; size &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Color.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Color_8h</filename>
    <includes id="Matrix_8h" name="Matrix.h" local="yes" imported="no">Magnum/Math/Matrix.h</includes>
    <includes id="Packing_8h" name="Packing.h" local="yes" imported="no">Magnum/Math/Packing.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" imported="no">Magnum/Math/Vector4.h</includes>
    <class kind="class">Magnum::Math::Color3</class>
    <class kind="class">Magnum::Math::Color4</class>
    <class kind="struct">Magnum::Math::ColorHsv</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; Magnum::Math::Color3&lt; Magnum::UnsignedByte &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; Magnum::Math::Color4&lt; Magnum::UnsignedByte &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; Magnum::Math::Color3&lt; Magnum::Float &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; Magnum::Math::Color4&lt; Magnum::Float &gt; &gt;</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Literals</namespace>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>xyYToXyz</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a4fc7e7145d373b085fe34b3492b12b88</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;xyY)</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>xyzToXyY</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a95bff66ce9604939340d44686f857aa6</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;xyz)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a89bc10efa4914f4bd586cf6f493ee898</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const ColorHsv&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Color3&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_rgb</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a4f0eadc3e56cafb0555955462d517a34</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_srgb</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a9052c59f7064fa0cfbebc072fc2b9ea0</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Color4&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_rgba</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>af1fd45fb22c7abab7789420803854ce8</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_srgba</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a06c6b73f0ff0dc013473d471c291a004</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color3&lt; Float &gt;</type>
      <name>operator&quot;&quot;_rgbf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ad7f076b5e49b4994187962381ec8ab25</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color3&lt; Float &gt;</type>
      <name>operator&quot;&quot;_srgbf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a32d61d07f3015fa8e918913ff59b1d6a</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color4&lt; Float &gt;</type>
      <name>operator&quot;&quot;_rgbaf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a2d8cc91f17b65523b10d3cb3b3f959e7</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color4&lt; Float &gt;</type>
      <name>operator&quot;&quot;_srgbaf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ae2004bd1cd605e290e19b8566da65934</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>afae5b383b9623a3b56c4fae43a16b9ca</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Color3&lt; UnsignedByte &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a338890901a6aa2d1e80e689f9b2532a4</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Color4&lt; UnsignedByte &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Complex.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Complex_8h</filename>
    <includes id="Matrix_8h" name="Matrix.h" local="yes" imported="no">Magnum/Math/Matrix.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <class kind="class">Magnum::Math::Complex</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae3d695a1794978f2aded487bc9e6e312</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;a, const Complex&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab0d977c1e3f6a66dcdedcd261b758210</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;normalizedA, const Complex&lt; T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator *</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac2f12a2b45f2b85dd1c8e9797b03fa13</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector, const Complex&lt; T &gt; &amp;complex)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a61610c4747e550c9076fa7e783494498</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;normalizedA, const Complex&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>slerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aa3c5f948767edd96cd712952485a1275</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;normalizedA, const Complex&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a673cbf89633bedbae0a30457b9bfaceb</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Complex&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ConfigurationValue.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>ConfigurationValue_8h</filename>
    <includes id="Angle_8h" name="Angle.h" local="yes" imported="no">Magnum/Math/Angle.h</includes>
    <includes id="Bezier_8h" name="Bezier.h" local="yes" imported="no">Magnum/Math/Bezier.h</includes>
    <includes id="Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">Magnum/Math/Complex.h</includes>
    <includes id="DualComplex_8h" name="DualComplex.h" local="yes" imported="no">Magnum/Math/DualComplex.h</includes>
    <includes id="DualQuaternion_8h" name="DualQuaternion.h" local="yes" imported="no">Magnum/Math/DualQuaternion.h</includes>
    <includes id="Matrix_8h" name="Matrix.h" local="yes" imported="no">Magnum/Math/Matrix.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="Range_8h" name="Range.h" local="yes" imported="no">Magnum/Math/Range.h</includes>
    <includes id="RectangularMatrix_8h" name="RectangularMatrix.h" local="yes" imported="no">Magnum/Math/RectangularMatrix.h</includes>
    <includes id="Quaternion_8h" name="Quaternion.h" local="yes" imported="no">Magnum/Math/Quaternion.h</includes>
    <includes id="Math_2Vector_8h" name="Vector.h" local="yes" imported="no">Magnum/Math/Vector.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" imported="no">Magnum/Math/Vector4.h</includes>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Deg&lt; T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Rad&lt; T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Vector&lt; size, T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Vector2&lt; T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Vector3&lt; T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Vector4&lt; T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Color3&lt; T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Color4&lt; T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::RectangularMatrix&lt; cols, rows, T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Matrix&lt; size, T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Matrix3&lt; T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Matrix4&lt; T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Range&lt; dimensions, T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Range2D&lt; T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Range3D&lt; T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Complex&lt; T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::DualComplex&lt; T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Quaternion&lt; T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::DualQuaternion&lt; T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Bezier&lt; order, dimensions, T &gt; &gt;</class>
  </compound>
  <compound kind="file">
    <name>Constants.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Constants_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <class kind="struct">Magnum::Math::Constants</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
  </compound>
  <compound kind="file">
    <name>CubicHermite.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>CubicHermite_8h</filename>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">Magnum/Math/Complex.h</includes>
    <includes id="Quaternion_8h" name="Quaternion.h" local="yes" imported="no">Magnum/Math/Quaternion.h</includes>
    <class kind="class">Magnum::Math::CubicHermite</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="typedef">
      <type>CubicHermite&lt; T &gt;</type>
      <name>CubicHermite1D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aae4f0bf9764d711db7766c4a1d989add</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CubicHermite&lt; Vector2&lt; T &gt; &gt;</type>
      <name>CubicHermite2D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a80495de6a1efa4d9a0e05c20b9352a8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CubicHermite&lt; Vector3&lt; T &gt; &gt;</type>
      <name>CubicHermite3D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9ca862ecaad7ee99694cd49185174768</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CubicHermite&lt; Complex&lt; T &gt; &gt;</type>
      <name>CubicHermiteComplex</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a4d37e5bef0a581038a66091a3b53dbe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CubicHermite&lt; Quaternion&lt; T &gt; &gt;</type>
      <name>CubicHermiteQuaternion</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aa6efb48382e3d76787c632fafca910f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a744c87e95b64c6546f5b7b8298ac9aa7</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const CubicHermite&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>select</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>abc745d7090d44bb511d569a7216c978d</anchor>
      <arglist>(const CubicHermite&lt; T &gt; &amp;a, const CubicHermite&lt; T &gt; &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a576071442da326909b9b303ad0b53372</anchor>
      <arglist>(const CubicHermite&lt; T &gt; &amp;a, const CubicHermite&lt; T &gt; &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a7470cab437d00cad96234c6d1a342cae</anchor>
      <arglist>(const CubicHermiteComplex&lt; T &gt; &amp;a, const CubicHermiteComplex&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab913ecf3dca35c39c342943f59e60011</anchor>
      <arglist>(const CubicHermiteQuaternion&lt; T &gt; &amp;a, const CubicHermiteQuaternion&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>lerpShortestPath</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a500433112c7749a99bfb107f193770e8</anchor>
      <arglist>(const CubicHermiteQuaternion&lt; T &gt; &amp;a, const CubicHermiteQuaternion&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>slerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2eeb9131e981855582bf20deff050427</anchor>
      <arglist>(const CubicHermiteComplex&lt; T &gt; &amp;a, const CubicHermiteComplex&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>slerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6e4b17bc7fbbdb663093b1c453edf61c</anchor>
      <arglist>(const CubicHermiteQuaternion&lt; T &gt; &amp;a, const CubicHermiteQuaternion&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>slerpShortestPath</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>afdcbab518271116c57eba6d6046e8bf8</anchor>
      <arglist>(const CubicHermiteQuaternion&lt; T &gt; &amp;a, const CubicHermiteQuaternion&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>splerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aada021cfaf2a04e3a8c1f0c6c4b5addd</anchor>
      <arglist>(const CubicHermite&lt; T &gt; &amp;a, const CubicHermite&lt; T &gt; &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>splerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aa5bbd5f87e7e2a7bae49f6bcd1562b8f</anchor>
      <arglist>(const CubicHermiteComplex&lt; T &gt; &amp;a, const CubicHermiteComplex&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>splerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a8a1e8df44aad8f5bf8861f026737f334</anchor>
      <arglist>(const CubicHermiteQuaternion&lt; T &gt; &amp;a, const CubicHermiteQuaternion&lt; T &gt; &amp;b, T t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Distance.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Distance_8h</filename>
    <includes id="Functions_8h" name="Functions.h" local="yes" imported="no">Magnum/Math/Functions.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" imported="no">Magnum/Math/Vector4.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Distance</namespace>
    <member kind="function">
      <type>T</type>
      <name>linePointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>aa16338c42c14bd93de07f1ec9c99d2a3</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>linePoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>aa8b3c2986bf91b459df63f4908c3d662</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>linePointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>abb2e0c0978a98d27afffeae9acc89c36</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>linePoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>a85a91cb5f3d52d608a9ffead5b517d29</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>abf04120637dae40f8d95c668634de7d7</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>a85509e435f83ea40a9b7cf29573c65eb</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>abc78759599a23072f394123c614b1ca7</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>aafa30732d6d262bfe397a87a2c6ac4cd</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pointPlaneScaled</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>add42ee7180aebb24d51fafb908951a39</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector4&lt; T &gt; &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pointPlane</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>aeb9974e342ac51e43fe25f2f2c8ad456</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector4&lt; T &gt; &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pointPlaneNormalized</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>a804cb4776329e2730d91a06f7de59586</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector4&lt; T &gt; &amp;plane)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Distance.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/Geometry/</path>
    <filename>Geometry_2Distance_8h</filename>
    <includes id="Distance_8h" name="Distance.h" local="yes" imported="no">Magnum/Math/Distance.h</includes>
    <namespace>Magnum::Math::Geometry::Distance</namespace>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Geometry</namespace>
    <member kind="function">
      <type>T</type>
      <name>linePointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>ac33ebb71e4666f173823ebd439d4adfb</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>linePoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a291224fca49a4d15806529e3e50d5eac</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>linePointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a0050edf5b044dab7ffe51dd6faa6e01c</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>linePoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a623565c0848d9889e6fce5e737f630c1</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a96f5691b3830d0e07f8ec5733b2a6abf</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a872fd7983a565eb1cb0b8258e1a12b50</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>adf13632b622b81cf2439e9bad953f832</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a17c3fcb501900e9e035066b7bd4cad76</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pointPlaneScaled</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a68e706f79aa088970a87622b5f028d24</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector4&lt; T &gt; &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pointPlane</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a0d202b2ca5de7f3ecdd784c2cca8f98b</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector4&lt; T &gt; &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pointPlaneNormalized</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a1bb096c90b1f49dc1d997b7a042c0e57</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector4&lt; T &gt; &amp;plane)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Dual.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Dual_8h</filename>
    <includes id="Angle_8h" name="Angle.h" local="yes" imported="no">Magnum/Math/Angle.h</includes>
    <includes id="Math_2Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Math/Tags.h</includes>
    <includes id="TypeTraits_8h" name="TypeTraits.h" local="yes" imported="no">Magnum/Math/TypeTraits.h</includes>
    <class kind="class">Magnum::Math::Dual</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a566f5ca101d2a3793843141980b2545e</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Dual&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt;</type>
      <name>sqrt</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9f399ec60dc87478fcdbe6091e0b6783</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;dual)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Dual&lt; T &gt;, Dual&lt; T &gt; &gt;</type>
      <name>sincos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>adf84b1bff280ad75079c8774ca25cbec</anchor>
      <arglist>(const Dual&lt; Rad&lt; T &gt;&gt; &amp;angle)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DualComplex.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>DualComplex_8h</filename>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">Magnum/Math/Complex.h</includes>
    <includes id="Dual_8h" name="Dual.h" local="yes" imported="no">Magnum/Math/Dual.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <class kind="class">Magnum::Math::DualComplex</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a59b3488a700c0d5fcaed8ce7d7e5b1fc</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const DualComplex&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DualQuaternion.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>DualQuaternion_8h</filename>
    <includes id="Dual_8h" name="Dual.h" local="yes" imported="no">Magnum/Math/Dual.h</includes>
    <includes id="Functions_8h" name="Functions.h" local="yes" imported="no">Magnum/Math/Functions.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="Quaternion_8h" name="Quaternion.h" local="yes" imported="no">Magnum/Math/Quaternion.h</includes>
    <class kind="class">Magnum::Math::DualQuaternion</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>sclerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a16a9790aad4406e49517818bd3fa632b</anchor>
      <arglist>(const DualQuaternion&lt; T &gt; &amp;normalizedA, const DualQuaternion&lt; T &gt; &amp;normalizedB, const T t)</arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>sclerpShortestPath</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a473dd6757639985c2f395396089a02b5</anchor>
      <arglist>(const DualQuaternion&lt; T &gt; &amp;normalizedA, const DualQuaternion&lt; T &gt; &amp;normalizedB, const T t)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a827f6a5c6237137238f27a82aa9d1f4d</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const DualQuaternion&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Frustum.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Frustum_8h</filename>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" imported="no">Magnum/Math/Vector4.h</includes>
    <class kind="class">Magnum::Math::Frustum</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aad6fdc9ca9b5bd751970733503de84ee</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Frustum&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Functions.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Functions_8h</filename>
    <includes id="Math_2Vector_8h" name="Vector.h" local="yes" imported="no">Magnum/Math/Vector.h</includes>
    <includes id="FunctionsBatch_8h" name="FunctionsBatch.h" local="yes" imported="no">Magnum/Math/FunctionsBatch.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>std::pair&lt; Integral, Integral &gt;</type>
      <name>div</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac26736b3814a1affa940a7ebd90d2c0c</anchor>
      <arglist>(Integral x, Integral y)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sin</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6558da1eb5042764fae1640dcf99d0a8</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>cos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a786b7203dac52e7b7a23965cac9ef127</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>sincos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aad0e3cf434e90f80d18860f775efe427</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>tan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5b75699b28dffa85a5d2c59b769c78b9</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>asin</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5a0d14b2cdd605132c3fa408763e615a</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>acos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a3b14d10e75ca21d34df11d7be0f6b616</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>atan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a916c22b19c5c7bf191ec697eecab60b6</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, bool &gt;::type</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad440119d3516d75bd5ff878723670acc</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a53ef8cb0e28d9c59e6d72e4927e36e61</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, bool &gt;::type</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aee19024da337a2264fce2bbbae2ef014</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a740f4050b4d66b0af6a7ec66639cfdaa</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a73d452db5a48a539988bfd80e29dcbcf</anchor>
      <arglist>(T value, T min)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1fe447bd1df20772eee153a58734a08e</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, const Vector&lt; size, T &gt; &amp;min)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a4bee14bf25158b6be1dc4afd70971fb8</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T min)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab20dfdf8194d6b4bc1bf137640cc02e2</anchor>
      <arglist>(T a, T b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6c9c233ff512d3cfb52aba13ab649f4a</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, const Vector&lt; size, T &gt; &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad8719e1853a5c449106e63c776c9d72f</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T max)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, std::pair&lt; T, T &gt; &gt;::type</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6d0a7d68d7aae97ad18ebdd1d9ee66e5</anchor>
      <arglist>(T a, T b)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Vector&lt; size, T &gt;, Vector&lt; size, T &gt; &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1be28fa49728193f3891a80e2e532f3a</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a3eebcca3a0bb22009bffdbe85e09fc69</anchor>
      <arglist>(T value, T min, T max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a77d6c362ed010788be3524d1d7590ecf</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, const Vector&lt; size, T &gt; &amp;min, const Vector&lt; size, T &gt; &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad4a8b2ed74b85d7eead141ebd9b68ce7</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T min, T max)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>sign</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a90bbd057fdad07c10a874587e85ff3f7</anchor>
      <arglist>(const T &amp;scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>sign</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>af6e5fe047dcca5901c77e0a85b78edcc</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>abs</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9be3830c016221eee0c2b74253f1e297</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>abs</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5aded6b09b6926348329b80e3f3ae3de</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>floor</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac1c5e4b910a79bbe7116b1e9c650ee80</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>floor</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a900a33f3287d7aaee9f6dcc062a6dc08</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>round</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a3fc23146b9833fa0c4317256f8b7640e</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>round</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a255ee2e0250afe2c4f3b8609f1f5e1e0</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>ceil</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1a759e2614f12f54f3972a80b01b0773</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>ceil</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aa117c52ac77784673ffe4779ac7b94bd</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a8d0cf4b89dfd92edf6cff3954adf7cf7</anchor>
      <arglist>(const T &amp;a, const T &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a475f41c02fdf7b62b1d6ee14dec70a0c</anchor>
      <arglist>(const T &amp;a, const T &amp;b, bool t)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a442e12f313c209eb67dbfcbef05e2b5c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b, const BoolVector&lt; size &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a757985d96fb36e841322a3317c851304</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;a, const BoolVector&lt; size &gt; &amp;b, const BoolVector&lt; size &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>UnderlyingTypeOf&lt; typename std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type &gt;</type>
      <name>lerpInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a586189ebf6a1c2e3fea58fe6b12147d6</anchor>
      <arglist>(T a, T b, T lerp)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, UnderlyingTypeOf&lt; T &gt; &gt;</type>
      <name>lerpInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae850b993aa7bc714cbc88035ab94f7d9</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b, const Vector&lt; size, T &gt; &amp;lerp)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>select</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0358670cc3c6b662acb473ebab49de5f</anchor>
      <arglist>(const T &amp;a, const T &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>fma</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5521b10067ed8062ac1fa3fcea19402b</anchor>
      <arglist>(T a, T b, T c)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>fma</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a043aba857f8ce67ad0fc54770037c63b</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b, const Vector&lt; size, T &gt; &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>log</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0506f088194eafea3e7a4100f2c4ed2d</anchor>
      <arglist>(UnsignedInt base, UnsignedInt number)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>log2</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0f41b7b73d96020cc88c28b09a229ab5</anchor>
      <arglist>(UnsignedInt number)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>log</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a94c4d12ee57e7129651a9d9cd43c7c66</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>exp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a54553867ca47a3e9ffada201a4c35ca3</anchor>
      <arglist>(T exponent)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab87686781f77f99e15004fde66ac4efe</anchor>
      <arglist>(T base)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a341118d5b76b52847f3e2e1e0ccdbee8</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;base)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aa11bdab7e096bc956c01428d6a9bf092</anchor>
      <arglist>(T base, T exponent)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a68a0728c0d2af141dad9a34f406a1765</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;base, T exponent)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>sqrt</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2b45c65b1c0eb3f2f5398dc97b060fe4</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>sqrt</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a185276ced88e0fd1ca36290a3ed1f197</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>sqrtInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a58be896f47cda8ed62fd39bb03ddb674</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>sqrtInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9f2f814761c468a0ae5a7075ec4e79b3</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sin</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6558da1eb5042764fae1640dcf99d0a8</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>cos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a786b7203dac52e7b7a23965cac9ef127</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>sincos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aad0e3cf434e90f80d18860f775efe427</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>tan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5b75699b28dffa85a5d2c59b769c78b9</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>asin</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5a0d14b2cdd605132c3fa408763e615a</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>acos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a3b14d10e75ca21d34df11d7be0f6b616</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>atan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a916c22b19c5c7bf191ec697eecab60b6</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, bool &gt;::type</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad440119d3516d75bd5ff878723670acc</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a53ef8cb0e28d9c59e6d72e4927e36e61</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, bool &gt;::type</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aee19024da337a2264fce2bbbae2ef014</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a740f4050b4d66b0af6a7ec66639cfdaa</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a73d452db5a48a539988bfd80e29dcbcf</anchor>
      <arglist>(T value, T min)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1fe447bd1df20772eee153a58734a08e</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, const Vector&lt; size, T &gt; &amp;min)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a4bee14bf25158b6be1dc4afd70971fb8</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T min)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab20dfdf8194d6b4bc1bf137640cc02e2</anchor>
      <arglist>(T a, T b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6c9c233ff512d3cfb52aba13ab649f4a</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, const Vector&lt; size, T &gt; &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad8719e1853a5c449106e63c776c9d72f</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T max)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, std::pair&lt; T, T &gt; &gt;::type</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6d0a7d68d7aae97ad18ebdd1d9ee66e5</anchor>
      <arglist>(T a, T b)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Vector&lt; size, T &gt;, Vector&lt; size, T &gt; &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1be28fa49728193f3891a80e2e532f3a</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a3eebcca3a0bb22009bffdbe85e09fc69</anchor>
      <arglist>(T value, T min, T max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a77d6c362ed010788be3524d1d7590ecf</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, const Vector&lt; size, T &gt; &amp;min, const Vector&lt; size, T &gt; &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad4a8b2ed74b85d7eead141ebd9b68ce7</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T min, T max)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>sign</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a90bbd057fdad07c10a874587e85ff3f7</anchor>
      <arglist>(const T &amp;scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>sign</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>af6e5fe047dcca5901c77e0a85b78edcc</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>abs</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9be3830c016221eee0c2b74253f1e297</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>abs</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5aded6b09b6926348329b80e3f3ae3de</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>floor</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac1c5e4b910a79bbe7116b1e9c650ee80</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>floor</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a900a33f3287d7aaee9f6dcc062a6dc08</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>round</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a3fc23146b9833fa0c4317256f8b7640e</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>round</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a255ee2e0250afe2c4f3b8609f1f5e1e0</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>ceil</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1a759e2614f12f54f3972a80b01b0773</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>ceil</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aa117c52ac77784673ffe4779ac7b94bd</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a8d0cf4b89dfd92edf6cff3954adf7cf7</anchor>
      <arglist>(const T &amp;a, const T &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a475f41c02fdf7b62b1d6ee14dec70a0c</anchor>
      <arglist>(const T &amp;a, const T &amp;b, bool t)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a442e12f313c209eb67dbfcbef05e2b5c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b, const BoolVector&lt; size &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a757985d96fb36e841322a3317c851304</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;a, const BoolVector&lt; size &gt; &amp;b, const BoolVector&lt; size &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>UnderlyingTypeOf&lt; typename std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type &gt;</type>
      <name>lerpInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a586189ebf6a1c2e3fea58fe6b12147d6</anchor>
      <arglist>(T a, T b, T lerp)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, UnderlyingTypeOf&lt; T &gt; &gt;</type>
      <name>lerpInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae850b993aa7bc714cbc88035ab94f7d9</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b, const Vector&lt; size, T &gt; &amp;lerp)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>select</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0358670cc3c6b662acb473ebab49de5f</anchor>
      <arglist>(const T &amp;a, const T &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>fma</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5521b10067ed8062ac1fa3fcea19402b</anchor>
      <arglist>(T a, T b, T c)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>fma</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a043aba857f8ce67ad0fc54770037c63b</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b, const Vector&lt; size, T &gt; &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>log</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0506f088194eafea3e7a4100f2c4ed2d</anchor>
      <arglist>(UnsignedInt base, UnsignedInt number)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>log2</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0f41b7b73d96020cc88c28b09a229ab5</anchor>
      <arglist>(UnsignedInt number)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>log</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a94c4d12ee57e7129651a9d9cd43c7c66</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>exp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a54553867ca47a3e9ffada201a4c35ca3</anchor>
      <arglist>(T exponent)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab87686781f77f99e15004fde66ac4efe</anchor>
      <arglist>(T base)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a341118d5b76b52847f3e2e1e0ccdbee8</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;base)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aa11bdab7e096bc956c01428d6a9bf092</anchor>
      <arglist>(T base, T exponent)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a68a0728c0d2af141dad9a34f406a1765</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;base, T exponent)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>sqrt</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2b45c65b1c0eb3f2f5398dc97b060fe4</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>sqrt</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a185276ced88e0fd1ca36290a3ed1f197</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>sqrtInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a58be896f47cda8ed62fd39bb03ddb674</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>sqrtInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9f2f814761c468a0ae5a7075ec4e79b3</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FunctionsBatch.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>FunctionsBatch_8h</filename>
    <includes id="Functions_8h" name="Functions.h" local="yes" imported="no">Magnum/Math/Functions.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>auto</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab3600cc3682bc35bb0a3ecc69326269d</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range) -&gt; decltype(isInf(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a81de3adbfd337fe437803b1525ea6dbd</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list) -&gt; decltype(isInf(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>acb2580c881d83046be32d82e8138ed0f</anchor>
      <arglist>(const T(&amp;array)[size]) -&gt; decltype(isInf(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a7f1b082af7aa29269527490552ed3402</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range) -&gt; decltype(isNan(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a19f896e92fecc7c90527a4f04d3ca827</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list) -&gt; decltype(isInf(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a01b001acc23b44a67e4e9743dc18a429</anchor>
      <arglist>(const T(&amp;array)[size])</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab1e7e382b2dc655a62f6589b31562031</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae9a92854975b2f250004249044e1bfcf</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a96d63ce830679d3516755e875a87a23d</anchor>
      <arglist>(const T(&amp;array)[size])</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2d3efc8614af54ada844e4280f7e8091</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a37e8a2e2b6ce6a039cc6d41c1bc6ded1</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad1f165cde9ca7992987fe78b9f2c180a</anchor>
      <arglist>(const T(&amp;array)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac0524e916ab96970c6b00e99ecc6e912</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a31ca6cb241a516d8b652b0d39cb5909e</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac2bf61d8aec6fa605c73b03d8337df5c</anchor>
      <arglist>(const T(&amp;array)[size])</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab3600cc3682bc35bb0a3ecc69326269d</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range) -&gt; decltype(isInf(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a81de3adbfd337fe437803b1525ea6dbd</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list) -&gt; decltype(isInf(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>acb2580c881d83046be32d82e8138ed0f</anchor>
      <arglist>(const T(&amp;array)[size]) -&gt; decltype(isInf(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a7f1b082af7aa29269527490552ed3402</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range) -&gt; decltype(isNan(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a19f896e92fecc7c90527a4f04d3ca827</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list) -&gt; decltype(isInf(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a01b001acc23b44a67e4e9743dc18a429</anchor>
      <arglist>(const T(&amp;array)[size])</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab1e7e382b2dc655a62f6589b31562031</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae9a92854975b2f250004249044e1bfcf</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a96d63ce830679d3516755e875a87a23d</anchor>
      <arglist>(const T(&amp;array)[size])</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2d3efc8614af54ada844e4280f7e8091</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a37e8a2e2b6ce6a039cc6d41c1bc6ded1</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad1f165cde9ca7992987fe78b9f2c180a</anchor>
      <arglist>(const T(&amp;array)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac0524e916ab96970c6b00e99ecc6e912</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a31ca6cb241a516d8b652b0d39cb5909e</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac2bf61d8aec6fa605c73b03d8337df5c</anchor>
      <arglist>(const T(&amp;array)[size])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Intersection.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/Geometry/</path>
    <filename>Geometry_2Intersection_8h</filename>
    <includes id="Intersection_8h" name="Intersection.h" local="yes" imported="no">Magnum/Math/Intersection.h</includes>
    <namespace>Magnum::Math::Geometry::Intersection</namespace>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Geometry</namespace>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>lineSegmentLineSegment</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>a9a70996eaa59f516e03a96ac9d2819f9</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;p, const Vector2&lt; T &gt; &amp;r, const Vector2&lt; T &gt; &amp;q, const Vector2&lt; T &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentLine</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>ace33bfa9669405ec56c962e326f7f801</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;p, const Vector2&lt; T &gt; &amp;r, const Vector2&lt; T &gt; &amp;q, const Vector2&lt; T &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>planeLine</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>ab066645bcadd013be325d879e12f66e6</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;planePosition, const Vector3&lt; T &gt; &amp;planeNormal, const Vector3&lt; T &gt; &amp;p, const Vector3&lt; T &gt; &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pointFrustum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>a5d15498a45ce78618e6af612c3007abe</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Frustum&lt; T &gt; &amp;frustum)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>boxFrustum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>a6402923659fb366fee8adf726ac4bbb6</anchor>
      <arglist>(const Range3D&lt; T &gt; &amp;box, const Frustum&lt; T &gt; &amp;frustum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Intersection.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Intersection_8h</filename>
    <includes id="Distance_8h" name="Distance.h" local="yes" imported="no">Magnum/Math/Distance.h</includes>
    <includes id="Frustum_8h" name="Frustum.h" local="yes" imported="no">Magnum/Math/Frustum.h</includes>
    <includes id="Range_8h" name="Range.h" local="yes" imported="no">Magnum/Math/Range.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Intersection</namespace>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>lineSegmentLineSegment</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a5172fdb40967061cd5c155bb0e308194</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;p, const Vector2&lt; T &gt; &amp;r, const Vector2&lt; T &gt; &amp;q, const Vector2&lt; T &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentLine</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a7a11b6dfb0cb9a7540c4aa99c685b79b</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;p, const Vector2&lt; T &gt; &amp;r, const Vector2&lt; T &gt; &amp;q, const Vector2&lt; T &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>planeLine</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>acaecb2a4006d6cdaff6adbe8bffb0380</anchor>
      <arglist>(const Vector4&lt; T &gt; &amp;plane, const Vector3&lt; T &gt; &amp;p, const Vector3&lt; T &gt; &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>planeLine</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a3c37ec85f5a57807a2e8d397240e948f</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;planePosition, const Vector3&lt; T &gt; &amp;planeNormal, const Vector3&lt; T &gt; &amp;p, const Vector3&lt; T &gt; &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pointFrustum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a78c1a0e6d93cc7df1ea18be18d7c9fa2</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Frustum&lt; T &gt; &amp;frustum)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rangeFrustum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>adfaf84fb3863302762e983ee3d5e7538</anchor>
      <arglist>(const Range3D&lt; T &gt; &amp;range, const Frustum&lt; T &gt; &amp;frustum)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>aabbFrustum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>aff89dcc76a565d08677f639bf52fc654</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;aabbCenter, const Vector3&lt; T &gt; &amp;aabbExtents, const Frustum&lt; T &gt; &amp;frustum)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sphereFrustum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>aa7c4b8af19c89fa58368e6e1bb04da5a</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;sphereCenter, T sphereRadius, const Frustum&lt; T &gt; &amp;frustum)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pointCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>aa6c215fc1bf442ea796ed51af43038c8</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, Rad&lt; T &gt; coneAngle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pointCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>abae0b6fce75d9a70d6685f9cf873b7ee</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, T tanAngleSqPlusOne)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pointDoubleCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>ae14d9ec38f9458ce09d315dcc607daba</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, Rad&lt; T &gt; coneAngle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pointDoubleCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a40e079e76dde4db35bc27fef90c08f18</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, T tanAngleSqPlusOne)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sphereConeView</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a5fcc79d8f811ad188a27a5a8a7ff1d4b</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;sphereCenter, T sphereRadius, const Matrix4&lt; T &gt; &amp;coneView, Rad&lt; T &gt; coneAngle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sphereConeView</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>ac9a5dc1e5a6330b5df87cc4ae593215f</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;sphereCenter, T sphereRadius, const Matrix4&lt; T &gt; &amp;coneView, T sinAngle, T tanAngle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sphereCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>aec9fe5a65521eb72f8a7d2c93a03fd30</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;sphereCenter, T sphereRadius, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, Rad&lt; T &gt; coneAngle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sphereCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a67b92904636d5ba84f01f49452edfbef</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;sphereCenter, T sphereRadius, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, T sinAngle, T tanAngleSqPlusOne)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>aabbCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a14cbda69d0e0b6024282dffae43f5d07</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;aabbCenter, const Vector3&lt; T &gt; &amp;aabbExtents, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, Rad&lt; T &gt; coneAngle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>aabbCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a796a25abb39fdaecab9933aff6c70836</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;aabbCenter, const Vector3&lt; T &gt; &amp;aabbExtents, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, T tanAngleSqPlusOne)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rangeCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a8f3ea3097d8224a5d990ccf440292973</anchor>
      <arglist>(const Range3D&lt; T &gt; &amp;range, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, const Rad&lt; T &gt; coneAngle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rangeCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a5220428610cd5b7a220f9edb28cde072</anchor>
      <arglist>(const Range3D&lt; T &gt; &amp;range, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, const T tanAngleSqPlusOne)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Half.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Half_8h</filename>
    <includes id="Packing_8h" name="Packing.h" local="yes" imported="no">Magnum/Math/Packing.h</includes>
    <class kind="class">Magnum::Math::Half</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; Magnum::Math::Half &gt;</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Literals</namespace>
    <member kind="function">
      <type>Half</type>
      <name>operator&quot;&quot;_h</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a3f29fbcf0c140ce4248c2ac8fa331767</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a158798027e4c105796ba27c51b857848</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, Half value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Math.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Math_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
  </compound>
  <compound kind="file">
    <name>Matrix.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Matrix_8h</filename>
    <includes id="RectangularMatrix_8h" name="RectangularMatrix.h" local="yes" imported="no">Magnum/Math/RectangularMatrix.h</includes>
    <class kind="class">Magnum::Math::Matrix</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="typedef">
      <type>Matrix&lt; 2, T &gt;</type>
      <name>Matrix2x2</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a652b81c9ddc63931b8965c5a88e8131f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matrix&lt; 3, T &gt;</type>
      <name>Matrix3x3</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac89eeb9dc2fad9807f0795ef9b292190</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matrix&lt; 4, T &gt;</type>
      <name>Matrix4x4</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6cfef6a416e4d1166adfc1f19cb45ed7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Matrix3.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Matrix3_8h</filename>
    <includes id="Matrix_8h" name="Matrix.h" local="yes" imported="no">Magnum/Math/Matrix.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::Math::Matrix3</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
  </compound>
  <compound kind="file">
    <name>Matrix4.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Matrix4_8h</filename>
    <includes id="Matrix_8h" name="Matrix.h" local="yes" imported="no">Magnum/Math/Matrix.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" imported="no">Magnum/Math/Vector4.h</includes>
    <class kind="class">Magnum::Math::Matrix4</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
  </compound>
  <compound kind="file">
    <name>Packing.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Packing_8h</filename>
    <includes id="Functions_8h" name="Functions.h" local="yes" imported="no">Magnum/Math/Functions.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>FloatingPoint</type>
      <name>unpack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab69ab3369a85ccf59c87486b0e5a3dd9</anchor>
      <arglist>(const Integral &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>FloatingPoint</type>
      <name>unpack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a711947054a07023a401b47bda5b0d16b</anchor>
      <arglist>(const Integral &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Integral</type>
      <name>pack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>af491eb512c26e9d8ba0ab9646d5bb436</anchor>
      <arglist>(const FloatingPoint &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Integral</type>
      <name>pack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad41fc73d795a8f589b0502ef9f6a4a46</anchor>
      <arglist>(FloatingPoint value)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedShort</type>
      <name>packHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9655ce490778c81064c358754ea93aad</anchor>
      <arglist>(Float value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, UnsignedShort &gt;</type>
      <name>packHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9d2180063001e747188e2fd83d3a38bb</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>unpackHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a42d97dba419c59474cd88f1770cf95a8</anchor>
      <arglist>(UnsignedShort value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>unpackHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a689b3e216755b7c12ea3ca482cb414f3</anchor>
      <arglist>(const Vector&lt; size, UnsignedShort &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>FloatingPoint</type>
      <name>unpack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab69ab3369a85ccf59c87486b0e5a3dd9</anchor>
      <arglist>(const Integral &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>FloatingPoint</type>
      <name>unpack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a711947054a07023a401b47bda5b0d16b</anchor>
      <arglist>(const Integral &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Integral</type>
      <name>pack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>af491eb512c26e9d8ba0ab9646d5bb436</anchor>
      <arglist>(const FloatingPoint &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Integral</type>
      <name>pack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad41fc73d795a8f589b0502ef9f6a4a46</anchor>
      <arglist>(FloatingPoint value)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedShort</type>
      <name>packHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9655ce490778c81064c358754ea93aad</anchor>
      <arglist>(Float value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, UnsignedShort &gt;</type>
      <name>packHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9d2180063001e747188e2fd83d3a38bb</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>unpackHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a42d97dba419c59474cd88f1770cf95a8</anchor>
      <arglist>(UnsignedShort value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>unpackHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a689b3e216755b7c12ea3ca482cb414f3</anchor>
      <arglist>(const Vector&lt; size, UnsignedShort &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Quaternion.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Quaternion_8h</filename>
    <includes id="Matrix_8h" name="Matrix.h" local="yes" imported="no">Magnum/Math/Matrix.h</includes>
    <includes id="TypeTraits_8h" name="TypeTraits.h" local="yes" imported="no">Magnum/Math/TypeTraits.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::Math::Quaternion</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a24a478c9463275d440061899c3630a32</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;a, const Quaternion&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a77252a59dcbaf44761edc9213f0e5927</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a702539c58371af1c8635c2bc60e3e0a5</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>lerpShortestPath</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a7af2a318a3c70abee764adfa3b5a3a02</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>slerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aa52d32b2fcb66f28a4330fb39fa50589</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>slerpShortestPath</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0d790000a3656bf3b1bad2098ec00ea0</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a03f030af72160303a9934d7a9af40f37</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Quaternion&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Range.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Range_8h</filename>
    <includes id="Functions_8h" name="Functions.h" local="yes" imported="no">Magnum/Math/Functions.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::Math::Range</class>
    <class kind="class">Magnum::Math::Range2D</class>
    <class kind="class">Magnum::Math::Range3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="typedef">
      <type>Range&lt; 1, T &gt;</type>
      <name>Range1D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab8759a26a030f045b5217d93618e5300</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>join</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab1a605df6c5b25fe493c1ee83e2ae6d6</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>intersect</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a4cf6ac31a2f0a80774021f83cd397426</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a21df4e4922ea49e428d71f6fe56e7b63</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1f3385fec96840d6f57368596e7b8fe5</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Range&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RectangularMatrix.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>RectangularMatrix_8h</filename>
    <includes id="Math_2Vector_8h" name="Vector.h" local="yes" imported="no">Magnum/Math/Vector.h</includes>
    <class kind="class">Magnum::Math::RectangularMatrix</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 2, 3, T &gt;</type>
      <name>Matrix2x3</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aeafdba32770167422563607a6d7a7763</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 3, 2, T &gt;</type>
      <name>Matrix3x2</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6784a052ccad6a6f0b66121c6c2f270e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 2, 4, T &gt;</type>
      <name>Matrix2x4</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a72b6951e0e464e5547906e6824f83fc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 4, 2, T &gt;</type>
      <name>Matrix4x2</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a84e3b41c8281378227a9250c2fc2abf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 3, 4, T &gt;</type>
      <name>Matrix3x4</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab25028109475da01892b1e7b3e13a18b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 4, 3, T &gt;</type>
      <name>Matrix4x3</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aebcc2ac26446bd06cc6e7e4bb1d57464</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2b4c9a90c6ef57998d88efe24b223a07</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Magnum::Math::RectangularMatrix&lt; cols, rows, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StrictWeakOrdering.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>StrictWeakOrdering_8h</filename>
    <class kind="struct">Magnum::Math::StrictWeakOrdering</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
  </compound>
  <compound kind="file">
    <name>Swizzle.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Swizzle_8h</filename>
    <includes id="Math_2Vector_8h" name="Vector.h" local="yes" imported="no">Magnum/Math/Vector.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>constexpr Implementation::TypeForSize&lt; sizeof...(components), T &gt;::Type</type>
      <name>swizzle</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0bfabe9a216b20e44f34d6258ae02756</anchor>
      <arglist>(const T &amp;vector)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Tags.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Math_2Tags_8h</filename>
    <class kind="struct">Magnum::Math::ZeroInitT</class>
    <class kind="struct">Magnum::Math::IdentityInitT</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="typedef">
      <type>Corrade::Containers::NoInitT</type>
      <name>NoInitT</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae3fc2129ed8e84f3ed1cea8bd4a902ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr NoInitT</type>
      <name>NoInit</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a09af7a367aa780ca2c682546085cafe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr ZeroInitT</type>
      <name>ZeroInit</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1a3ef1a05ea090ef83dc89eed44ba8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr IdentityInitT</type>
      <name>IdentityInit</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab915b0885bc50909b7cb7838266715c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Tags.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Tags_8h</filename>
    <class kind="struct">Magnum::NoCreateT</class>
    <namespace>Magnum</namespace>
    <member kind="variable">
      <type>constexpr NoCreateT</type>
      <name>NoCreate</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae03d3fce3586ce1ff1e881f795bcd4a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TypeTraits.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>TypeTraits_8h</filename>
    <includes id="Math_8h" name="Math.h" local="yes" imported="no">Magnum/Math/Math.h</includes>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <class kind="struct">Magnum::Math::IsScalar</class>
    <class kind="struct">Magnum::Math::IsVector</class>
    <class kind="struct">Magnum::Math::IsIntegral</class>
    <class kind="struct">Magnum::Math::IsFloatingPoint</class>
    <class kind="struct">Magnum::Math::IsUnitless</class>
    <class kind="struct">Magnum::Math::IsUnitless&lt; Unit&lt; Derived, T &gt; &gt;</class>
    <class kind="struct">Magnum::Math::IsUnitless&lt; Deg&lt; T &gt; &gt;</class>
    <class kind="struct">Magnum::Math::IsUnitless&lt; Rad&lt; T &gt; &gt;</class>
    <class kind="struct">Magnum::Math::TypeTraits</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="define">
      <type>#define</type>
      <name>FLOAT_EQUALITY_PRECISION</name>
      <anchorfile>TypeTraits_8h.html</anchorfile>
      <anchor>a5842b94b81bd00f224bf838ccbd10834</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOUBLE_EQUALITY_PRECISION</name>
      <anchorfile>TypeTraits_8h.html</anchorfile>
      <anchor>a5be99d50f9cfa5d2a32f2a3fe1193975</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LONG_DOUBLE_EQUALITY_PRECISION</name>
      <anchorfile>TypeTraits_8h.html</anchorfile>
      <anchor>ac923f2fad9aaefd0408c3240ad7b634d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Implementation::UnderlyingType&lt; T &gt;::Type</type>
      <name>UnderlyingTypeOf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a20237cea951d37ab824bf61685b26f8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Unit.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Unit_8h</filename>
    <includes id="TypeTraits_8h" name="TypeTraits.h" local="yes" imported="no">Magnum/Math/TypeTraits.h</includes>
    <includes id="Math_2Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Math/Tags.h</includes>
    <class kind="class">Magnum::Math::Unit</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
  </compound>
  <compound kind="file">
    <name>Vector.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Math_2Vector_8h</filename>
    <includes id="Angle_8h" name="Angle.h" local="yes" imported="no">Magnum/Math/Angle.h</includes>
    <includes id="BoolVector_8h" name="BoolVector.h" local="yes" imported="no">Magnum/Math/BoolVector.h</includes>
    <includes id="TypeTraits_8h" name="TypeTraits.h" local="yes" imported="no">Magnum/Math/TypeTraits.h</includes>
    <class kind="class">Magnum::Math::Vector</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; FloatingPoint &gt;</type>
      <name>angle</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aee8c44413ae416ea25a03146bf8a5484</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;normalizedA, const Vector&lt; size, FloatingPoint &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>equal</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5b9f7afdebb621e14931b9199bb57920</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>notEqual</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9c34112dad523fa92071f5cad7f01d3c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Vector.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shaders/</path>
    <filename>Shaders_2Vector_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="AbstractVector_8h" name="AbstractVector.h" local="yes" imported="no">Magnum/Shaders/AbstractVector.h</includes>
    <class kind="class">Magnum::Shaders::Vector</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shaders</namespace>
    <member kind="typedef">
      <type>Vector&lt; 2 &gt;</type>
      <name>Vector2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a9da9270650198bf41711864da95433e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Vector&lt; 3 &gt;</type>
      <name>Vector3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>ad52ea30fd146f95b5b98a8100f945776</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Vector2.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Vector2_8h</filename>
    <includes id="Math_2Vector_8h" name="Vector.h" local="yes" imported="no">Magnum/Math/Vector.h</includes>
    <class kind="class">Magnum::Math::Vector2</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>T</type>
      <name>cross</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2058d3c2541d8b3556c861ef79c592d0</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Vector3.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Vector3_8h</filename>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <includes id="Swizzle_8h" name="Swizzle.h" local="yes" imported="no">Magnum/Math/Swizzle.h</includes>
    <class kind="class">Magnum::Math::Vector3</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>cross</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad90024e1b2ca900d572042ccd0baba64</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Vector4.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Vector4_8h</filename>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::Math::Vector4</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>Vector4&lt; T &gt;</type>
      <name>planeEquation</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0c975a8c8c6bbff31a943561f9adf681</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;p0, const Vector3&lt; T &gt; &amp;p1, const Vector3&lt; T &gt; &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>Vector4&lt; T &gt;</type>
      <name>planeEquation</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>adcb3b9fbc37a6d26d5330b1e5c84d143</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;normal, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CombineIndexedArrays.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>CombineIndexedArrays_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt;</type>
      <name>combineIndexArrays</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ad5474465b12e161040774798fe47e3b6</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; std::vector&lt; UnsignedInt &gt;&gt;&gt; &amp;arrays)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt;</type>
      <name>combineIndexArrays</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>afe462618d8a3fded321b91dfadb77e27</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; std::vector&lt; UnsignedInt &gt;&gt;&gt; arrays)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::vector&lt; UnsignedInt &gt;, std::vector&lt; UnsignedInt &gt; &gt;</type>
      <name>combineIndexArrays</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a17a53a7980104181355a5bc1b5fc89fb</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;interleavedArrays, UnsignedInt stride)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt;</type>
      <name>combineIndexedArrays</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ab86ee6e00df70ca11dc7a93a2c8c34e9</anchor>
      <arglist>(const std::pair&lt; const std::vector&lt; UnsignedInt &gt; &amp;, std::vector&lt; T &gt; &amp; &gt; &amp;... indexedArrays)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Compile.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>Compile_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; CompileFlag &gt;</type>
      <name>CompileFlags</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ad6b7494a9eca53d1d2619d508826489f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CompileFlag</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a960e7fd98f5b0340a155559dcce9d02b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1MeshTools.html" anchor="a960e7fd98f5b0340a155559dcce9d02ba49217a0d8a6229be85ebdae99e3ff1d9">GenerateFlatNormals</enumvalue>
      <enumvalue file="namespaceMagnum_1_1MeshTools.html" anchor="a960e7fd98f5b0340a155559dcce9d02baf406d43587be6c764c3cf683ab79c55e">GenerateSmoothNormals</enumvalue>
    </member>
    <member kind="function">
      <type>GL::Mesh</type>
      <name>compile</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ad81a27660fbec427f3253d99dfc08797</anchor>
      <arglist>(const Trade::MeshData2D &amp;meshData)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; GL::Mesh, std::unique_ptr&lt; GL::Buffer &gt;, std::unique_ptr&lt; GL::Buffer &gt; &gt;</type>
      <name>compile</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a1da9b66eefd634e997d8aabc93a12609</anchor>
      <arglist>(const Trade::MeshData2D &amp;meshData, GL::BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>GL::Mesh</type>
      <name>compile</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a117705a137cfa68945d678a096824648</anchor>
      <arglist>(const Trade::MeshData3D &amp;meshData, CompileFlags flags={})</arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; GL::Mesh, std::unique_ptr&lt; GL::Buffer &gt;, std::unique_ptr&lt; GL::Buffer &gt; &gt;</type>
      <name>compile</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a70a1820d9e4a5ea6be7207cd1ca0f5db</anchor>
      <arglist>(const Trade::MeshData3D &amp;meshData, GL::BufferUsage usage)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CompressIndices.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>CompressIndices_8h</filename>
    <includes id="Mesh_8h" name="Mesh.h" local="yes" imported="no">Magnum/Mesh.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>std::tuple&lt; Containers::Array&lt; char &gt;, MeshIndexType, UnsignedInt, UnsignedInt &gt;</type>
      <name>compressIndices</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a234bd3aeb3eff5b2ec43a4f96a04f140</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>compressIndicesAs</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>abd142dbefa361afda5152d3008d3aaa0</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;indices)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Duplicate.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>Duplicate_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>duplicate</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ad0789f7fc50abc956c1c69b7c6662bdc</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const IndexType &gt; &amp;indices, const Containers::StridedArrayView1D&lt; const T &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>duplicateInto</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>aaea4fe9f4aa2bb33f77e0f752eda387c</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const IndexType &gt; &amp;indices, const Containers::StridedArrayView1D&lt; const T &gt; &amp;data, const Containers::StridedArrayView1D&lt; T &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; T &gt;</type>
      <name>duplicate</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a52e95bc7fa1a8b895d6b7095659086e2</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;indices, const std::vector&lt; T &gt; &amp;data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FlipNormals.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>FlipNormals_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>void</type>
      <name>flipFaceWinding</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a42784996b61886a56da58a0361f7909a</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipNormals</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ab2904cb96723d76bea8a6d7aa36cc81d</anchor>
      <arglist>(std::vector&lt; Vector3 &gt; &amp;normals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipNormals</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>af4417b043b3de224d43edf1748f880fc</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; &amp;indices, std::vector&lt; Vector3 &gt; &amp;normals)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FullScreenTriangle.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>FullScreenTriangle_8h</filename>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>GL::Mesh</type>
      <name>fullScreenTriangle</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>aba8238805e0e572ea2edb8b2bca8c35c</anchor>
      <arglist>(GL::Version version)</arglist>
    </member>
    <member kind="function">
      <type>GL::Mesh</type>
      <name>fullScreenTriangle</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>aac8edd8ee4844ebc192acd7c96e41d95</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GenerateFlatNormals.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>GenerateFlatNormals_8h</filename>
    <includes id="GenerateNormals_8h" name="GenerateNormals.h" local="yes" imported="no">Magnum/MeshTools/GenerateNormals.h</includes>
  </compound>
  <compound kind="file">
    <name>GenerateNormals.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>GenerateNormals_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>Containers::Array&lt; Vector3 &gt;</type>
      <name>generateFlatNormals</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ae4144c56a4eca8797e6701fab9c636cb</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const Vector3 &gt; &amp;positions)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateFlatNormalsInto</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>aae2080c6cc17eb59706b67efe4f7c4ac</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const Vector3 &gt; &amp;positions, const Containers::StridedArrayView1D&lt; Vector3 &gt; &amp;normals)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::vector&lt; UnsignedInt &gt;, std::vector&lt; Vector3 &gt; &gt;</type>
      <name>generateFlatNormals</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>adebe9eb34e2f16d50d041ba77e31c3d2</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;indices, const std::vector&lt; Vector3 &gt; &amp;positions)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; Vector3 &gt;</type>
      <name>generateSmoothNormals</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a1055154900bcbc7d87b72d863f14ce54</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const T &gt; &amp;indices, const Containers::StridedArrayView1D&lt; const Vector3 &gt; &amp;positions)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateSmoothNormalsInto</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>af06748ecca64ef58a0bb4cb43ef86154</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const T &gt; &amp;indices, const Containers::StridedArrayView1D&lt; const Vector3 &gt; &amp;positions, const Containers::StridedArrayView1D&lt; Vector3 &gt; &amp;normals)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Interleave.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>Interleave_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>interleave</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a006bda8a1901669404adcc50b4b68735</anchor>
      <arglist>(const T &amp;first, const U &amp;... next)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interleaveInto</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a4ab7fd3d1e0900d0085f0d4f3cc56fe7</anchor>
      <arglist>(Containers::ArrayView&lt; char &gt; buffer, const T &amp;first, const U &amp;... next)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RemoveDuplicates.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>RemoveDuplicates_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Functions_8h" name="Functions.h" local="yes" imported="no">Magnum/Math/Functions.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt;</type>
      <name>removeDuplicates</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a002865c3510bb6d2c12dca5b5fda7fa9</anchor>
      <arglist>(std::vector&lt; Vector &gt; &amp;data, typename Vector::Type epsilon=Math::TypeTraits&lt; typename Vector::Type &gt;::epsilon())</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Subdivide.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>Subdivide_8h</filename>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>void</type>
      <name>subdivide</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a365f7548fa611240bd2afc613c55c051</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; &amp;indices, std::vector&lt; Vertex &gt; &amp;vertices, Interpolator interpolator)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Tipsify.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>Tipsify_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>void</type>
      <name>tipsify</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>adda6a399901fd1bae7e3cd9d04179d37</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; &amp;indices, UnsignedInt vertexCount, std::size_t cacheSize)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Transform.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>Transform_8h</filename>
    <includes id="DualQuaternion_8h" name="DualQuaternion.h" local="yes" imported="no">Magnum/Math/DualQuaternion.h</includes>
    <includes id="DualComplex_8h" name="DualComplex.h" local="yes" imported="no">Magnum/Math/DualComplex.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>void</type>
      <name>transformVectorsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a2d4bc525e4156de1df689eee44252ad3</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;matrix, U &amp;vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformVectorsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a4d7e07550ea88eb4e4b006a04a6d6670</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;matrix, U &amp;vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformVectorsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a911f36841acac6ce2d13432cf2020286</anchor>
      <arglist>(const Math::Complex&lt; T &gt; &amp;complex, U &amp;vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformVectorsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a608f59c896865a34b280e70b5e47ff04</anchor>
      <arglist>(const Math::Quaternion&lt; T &gt; &amp;normalizedQuaternion, U &amp;vectors)</arglist>
    </member>
    <member kind="function">
      <type>U</type>
      <name>transformVectors</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>add947f248aa8d07112060cc99ec31f42</anchor>
      <arglist>(const T &amp;transformation, U vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformPointsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a740f09c1e6a3e8455541df16bf31556c</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;matrix, U &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformPointsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a5fe0ab4c29ddd744feca85ee3c4e8bf0</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;matrix, U &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformPointsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ab401e4f628c575263ed997d01eb1ea8f</anchor>
      <arglist>(const Math::DualComplex&lt; T &gt; &amp;dualComplex, U &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformPointsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a8d746fd1952ce5402421ec652c8906ef</anchor>
      <arglist>(const Math::DualQuaternion&lt; T &gt; &amp;normalizedDualQuaternion, U &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>U</type>
      <name>transformPoints</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a6a35b6df2232d8cbf17f612b52244851</anchor>
      <arglist>(const T &amp;transformation, U vectors)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PixelStorage.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>PixelStorage_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::PixelStorage</class>
    <class kind="class">Magnum::CompressedPixelStorage</class>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractXApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>AbstractXApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::AbstractXApplication</class>
    <class kind="struct">Magnum::Platform::AbstractXApplication::Arguments</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::GLConfiguration</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::Configuration</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::ViewportEvent</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::InputEvent</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::KeyEvent</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::MouseEvent</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::MouseMoveEvent</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
  </compound>
  <compound kind="file">
    <name>AndroidApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>AndroidApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" imported="no">Magnum/Math/Vector4.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::AndroidApplication</class>
    <class kind="class">Magnum::Platform::AndroidApplication::GLConfiguration</class>
    <class kind="class">Magnum::Platform::AndroidApplication::Configuration</class>
    <class kind="class">Magnum::Platform::AndroidApplication::ViewportEvent</class>
    <class kind="class">Magnum::Platform::AndroidApplication::InputEvent</class>
    <class kind="class">Magnum::Platform::AndroidApplication::MouseEvent</class>
    <class kind="class">Magnum::Platform::AndroidApplication::MouseMoveEvent</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_ANDROIDAPPLICATION_MAIN</name>
      <anchorfile>AndroidApplication_8h.html</anchorfile>
      <anchor>a345b2229304eebd663b3762483d5b0b7</anchor>
      <arglist>(className)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EmscriptenApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>EmscriptenApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" imported="no">Magnum/Math/Vector4.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::EmscriptenApplication</class>
    <class kind="struct">Magnum::Platform::EmscriptenApplication::Arguments</class>
    <class kind="class">Magnum::Platform::EmscriptenApplication::GLConfiguration</class>
    <class kind="class">Magnum::Platform::EmscriptenApplication::Configuration</class>
    <class kind="class">Magnum::Platform::EmscriptenApplication::ViewportEvent</class>
    <class kind="class">Magnum::Platform::EmscriptenApplication::InputEvent</class>
    <class kind="class">Magnum::Platform::EmscriptenApplication::MouseEvent</class>
    <class kind="class">Magnum::Platform::EmscriptenApplication::MouseMoveEvent</class>
    <class kind="class">Magnum::Platform::EmscriptenApplication::MouseScrollEvent</class>
    <class kind="class">Magnum::Platform::EmscriptenApplication::KeyEvent</class>
    <class kind="class">Magnum::Platform::EmscriptenApplication::TextInputEvent</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_EMSCRIPTENAPPLICATION_MAIN</name>
      <anchorfile>EmscriptenApplication_8h.html</anchorfile>
      <anchor>a84dd092261e53d1f2ced281b9efe0481</anchor>
      <arglist>(className)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GLContext.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>GLContext_8h</filename>
    <includes id="src_2Magnum_2GL_2Context_8h" name="Context.h" local="yes" imported="no">Magnum/GL/Context.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/GL/OpenGL.h</includes>
    <class kind="class">Magnum::Platform::GLContext</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
  </compound>
  <compound kind="file">
    <name>GlfwApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>GlfwApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" imported="no">Magnum/Math/Vector4.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <class kind="class">Magnum::Platform::GlfwApplication</class>
    <class kind="struct">Magnum::Platform::GlfwApplication::Arguments</class>
    <class kind="class">Magnum::Platform::GlfwApplication::GLConfiguration</class>
    <class kind="class">Magnum::Platform::GlfwApplication::Configuration</class>
    <class kind="class">Magnum::Platform::GlfwApplication::ExitEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::ViewportEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::InputEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::KeyEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::MouseEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::MouseMoveEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::MouseScrollEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::TextInputEvent</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_GLFWAPPLICATION_MAIN</name>
      <anchorfile>GlfwApplication_8h.html</anchorfile>
      <anchor>a3c0e9825ae849fad7cbad857b781a3f3</anchor>
      <arglist>(className)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GlxApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>GlxApplication_8h</filename>
    <includes id="AbstractXApplication_8h" name="AbstractXApplication.h" local="yes" imported="no">Magnum/Platform/AbstractXApplication.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::GlxApplication</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_GLXAPPLICATION_MAIN</name>
      <anchorfile>GlxApplication_8h.html</anchorfile>
      <anchor>adb177f51774e8e2283a854d701584441</anchor>
      <arglist>(className)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Platform.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>Platform_8h</filename>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
  </compound>
  <compound kind="file">
    <name>Screen.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>Screen_8h</filename>
    <includes id="ScreenedApplication_8h" name="ScreenedApplication.h" local="yes" imported="no">Magnum/Platform/ScreenedApplication.h</includes>
    <class kind="class">Magnum::Platform::BasicScreen</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
  </compound>
  <compound kind="file">
    <name>ScreenedApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>ScreenedApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::BasicScreenedApplication</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
  </compound>
  <compound kind="file">
    <name>ScreenedApplication.hpp</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>ScreenedApplication_8hpp</filename>
    <includes id="Screen_8h" name="Screen.h" local="yes" imported="no">Magnum/Platform/Screen.h</includes>
    <includes id="ScreenedApplication_8h" name="ScreenedApplication.h" local="yes" imported="no">Magnum/Platform/ScreenedApplication.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
  </compound>
  <compound kind="file">
    <name>Sdl2Application.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>Sdl2Application_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" imported="no">Magnum/Math/Vector4.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <class kind="class">Magnum::Platform::Sdl2Application</class>
    <class kind="struct">Magnum::Platform::Sdl2Application::Arguments</class>
    <class kind="class">Magnum::Platform::Sdl2Application::GLConfiguration</class>
    <class kind="class">Magnum::Platform::Sdl2Application::Configuration</class>
    <class kind="class">Magnum::Platform::Sdl2Application::ExitEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::ViewportEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::InputEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::KeyEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::MouseEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::MouseMoveEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::MouseScrollEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::MultiGestureEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::TextInputEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::TextEditingEvent</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_SDL2APPLICATION_MAIN</name>
      <anchorfile>Sdl2Application_8h.html</anchorfile>
      <anchor>a3a4ea599db30490d714936546bade011</anchor>
      <arglist>(className)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WindowlessCglApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>WindowlessCglApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/GL/OpenGL.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::WindowlessCglContext</class>
    <class kind="class">Magnum::Platform::WindowlessCglContext::Configuration</class>
    <class kind="class">Magnum::Platform::WindowlessCglApplication</class>
    <class kind="struct">Magnum::Platform::WindowlessCglApplication::Arguments</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_WINDOWLESSCGLAPPLICATION_MAIN</name>
      <anchorfile>WindowlessCglApplication_8h.html</anchorfile>
      <anchor>a5ba9f046c8531aa171c02b6502a0cb0a</anchor>
      <arglist>(className)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WindowlessEglApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>WindowlessEglApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/GL/OpenGL.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::WindowlessEglContext</class>
    <class kind="class">Magnum::Platform::WindowlessEglContext::Configuration</class>
    <class kind="class">Magnum::Platform::WindowlessEglApplication</class>
    <class kind="struct">Magnum::Platform::WindowlessEglApplication::Arguments</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_WINDOWLESSEGLAPPLICATION_MAIN</name>
      <anchorfile>WindowlessEglApplication_8h.html</anchorfile>
      <anchor>ad1d27a019369a6e699480b69e9cf8388</anchor>
      <arglist>(className)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WindowlessGlxApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>WindowlessGlxApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/GL/OpenGL.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::WindowlessGlxContext</class>
    <class kind="class">Magnum::Platform::WindowlessGlxContext::Configuration</class>
    <class kind="class">Magnum::Platform::WindowlessGlxApplication</class>
    <class kind="struct">Magnum::Platform::WindowlessGlxApplication::Arguments</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_WINDOWLESSGLXAPPLICATION_MAIN</name>
      <anchorfile>WindowlessGlxApplication_8h.html</anchorfile>
      <anchor>ab6ff45e54b46e6a63849777b8d05a238</anchor>
      <arglist>(className)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WindowlessIosApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>WindowlessIosApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/GL/OpenGL.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::WindowlessIosContext</class>
    <class kind="class">Magnum::Platform::WindowlessIosContext::Configuration</class>
    <class kind="class">Magnum::Platform::WindowlessIosApplication</class>
    <class kind="struct">Magnum::Platform::WindowlessIosApplication::Arguments</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_WINDOWLESSIOSAPPLICATION_MAIN</name>
      <anchorfile>WindowlessIosApplication_8h.html</anchorfile>
      <anchor>a698101663c3e96ce455d3b623e465253</anchor>
      <arglist>(className)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WindowlessWglApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>WindowlessWglApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/GL/OpenGL.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::WindowlessWglContext</class>
    <class kind="class">Magnum::Platform::WindowlessWglContext::Configuration</class>
    <class kind="class">Magnum::Platform::WindowlessWglApplication</class>
    <class kind="struct">Magnum::Platform::WindowlessWglApplication::Arguments</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_WINDOWLESSWGLAPPLICATION_MAIN</name>
      <anchorfile>WindowlessWglApplication_8h.html</anchorfile>
      <anchor>a8263c0719f3ec866b79a16902866bd2c</anchor>
      <arglist>(className)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WindowlessWindowsEglApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>WindowlessWindowsEglApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/GL/OpenGL.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::WindowlessWindowsEglContext</class>
    <class kind="class">Magnum::Platform::WindowlessWindowsEglContext::Configuration</class>
    <class kind="class">Magnum::Platform::WindowlessWindowsEglApplication</class>
    <class kind="struct">Magnum::Platform::WindowlessWindowsEglApplication::Arguments</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_WINDOWLESSWINDOWSEGLAPPLICATION_MAIN</name>
      <anchorfile>WindowlessWindowsEglApplication_8h.html</anchorfile>
      <anchor>a1a5236ccaa127dcd8a53275b810c7284</anchor>
      <arglist>(className)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>XEglApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>XEglApplication_8h</filename>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <includes id="AbstractXApplication_8h" name="AbstractXApplication.h" local="yes" imported="no">Magnum/Platform/AbstractXApplication.h</includes>
    <class kind="class">Magnum::Platform::XEglApplication</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_XEGLAPPLICATION_MAIN</name>
      <anchorfile>XEglApplication_8h.html</anchorfile>
      <anchor>a9a3c5625b976670ed15b0ba28f8d2b17</anchor>
      <arglist>(className)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Axis.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Axis_8h</filename>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>axis2D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>ade115b7b48cb6379a7dcb2072d45c77d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>axis3D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>ae6841afe470778bf0b2cf6af400141a2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Capsule.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Capsule_8h</filename>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="struct">Magnum::Primitives::Capsule2D</class>
    <class kind="struct">Magnum::Primitives::Capsule3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
    <member kind="enumeration">
      <type></type>
      <name>CapsuleTextureCoords</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>ac74ade7e583adc4c8befc803e5d91760</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="ac74ade7e583adc4c8befc803e5d91760a1f3b10de72bb2edffce9811a94d44019">DontGenerate</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="ac74ade7e583adc4c8befc803e5d91760a32b919d18cfaca89383f6000dcc9c031">Generate</enumvalue>
    </member>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>capsule2DWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a72fb075f69f8cf5eca3f8f239c3d9d20</anchor>
      <arglist>(UnsignedInt hemisphereRings, UnsignedInt cylinderRings, Float halfLength)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>capsule3DSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a9cd82975f6a7ab193105e31096d03d15</anchor>
      <arglist>(UnsignedInt hemisphereRings, UnsignedInt cylinderRings, UnsignedInt segments, Float halfLength, CapsuleTextureCoords textureCoords=CapsuleTextureCoords::DontGenerate)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>capsule3DWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>aeb898af80f38bad7be7b46f500f882c9</anchor>
      <arglist>(UnsignedInt hemisphereRings, UnsignedInt cylinderRings, UnsignedInt segments, Float halfLength)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Circle.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Circle_8h</filename>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="struct">Magnum::Primitives::Circle</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>circle2DSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a47dd0cdeb9b98933a5820aa9b1f80136</anchor>
      <arglist>(UnsignedInt segments)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>circle2DWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a3645ee174da8b0ab1fbead12525fb087</anchor>
      <arglist>(UnsignedInt segments)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>circle3DSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>aca0de533a4f6136856809f7998b1723d</anchor>
      <arglist>(UnsignedInt segments)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>circle3DWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>af4229e6a8d87f9ddc563a2cfc13e2e06</anchor>
      <arglist>(UnsignedInt segments)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Cone.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Cone_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; ConeFlag &gt;</type>
      <name>ConeFlags</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a29da9bb001ed84463a04c6910e03b749</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ConeFlag</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a11c771d45152f26e235526f240da0f1b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a11c771d45152f26e235526f240da0f1ba1e6b6c618ee6976c127199d69394b8f5">GenerateTextureCoords</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a11c771d45152f26e235526f240da0f1baf671cbdd2a56b97870c5c60a69141dae">CapEnd</enumvalue>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>coneSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a5687268cfce168ff39376d0be228eab7</anchor>
      <arglist>(UnsignedInt rings, UnsignedInt segments, Float halfLength, ConeFlags flags={})</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>coneWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a79f0497fc0e34808687aaedb76a44e3e</anchor>
      <arglist>(UnsignedInt segments, Float halfLength)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Crosshair.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Crosshair_8h</filename>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="struct">Magnum::Primitives::Crosshair2D</class>
    <class kind="struct">Magnum::Primitives::Crosshair3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>crosshair2D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a442959771fa1f63ec5cbf604799da7df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>crosshair3D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>aa7c72991a4a0b558a720c291038a8627</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Cube.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Cube_8h</filename>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="struct">Magnum::Primitives::Cube</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>cubeSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>aaa59c7061d26f9887d6c2c337d90cf2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>cubeSolidStrip</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>addc2298e405e49b5a6c39ed444b20b01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>cubeWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a2fa9beec73c178d24404bacace7ccea3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Cylinder.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Cylinder_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="struct">Magnum::Primitives::Cylinder</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; CylinderFlag &gt;</type>
      <name>CylinderFlags</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a8c8072e2174349e45464def9b33c4819</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CylinderFlag</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>abc4496bd7b89f82fe40b263ffb28e767</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="abc4496bd7b89f82fe40b263ffb28e767a1e6b6c618ee6976c127199d69394b8f5">GenerateTextureCoords</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="abc4496bd7b89f82fe40b263ffb28e767a2160dc2c41ed697f0eec7dc9c241318c">CapEnds</enumvalue>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>cylinderSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a45e283bf247a3af8c91629c9caeb55b0</anchor>
      <arglist>(UnsignedInt rings, UnsignedInt segments, Float halfLength, CylinderFlags flags={})</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>cylinderWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a68fb64ba061321af4b5ed191c037c83f</anchor>
      <arglist>(UnsignedInt rings, UnsignedInt segments, Float halfLength)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Gradient.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Gradient_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>gradient2D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a5201f8db2f6e62bead42d8e1edc000c8</anchor>
      <arglist>(const Vector2 &amp;a, const Color4 &amp;colorA, const Vector2 &amp;b, const Color4 &amp;colorB)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>gradient2DHorizontal</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>afa9587dee7fb8de46308626a06929707</anchor>
      <arglist>(const Color4 &amp;colorLeft, const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>gradient2DVertical</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a4374d98bb8a12f7e7123d45def4fb876</anchor>
      <arglist>(const Color4 &amp;colorBottom, const Color4 &amp;colorTop)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>gradient3D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a536dcbed4cee0adc3f7cb6bb7e608230</anchor>
      <arglist>(const Vector3 &amp;a, const Color4 &amp;colorA, const Vector3 &amp;b, const Color4 &amp;colorB)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>gradient3DHorizontal</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a15ab1c150b25e23e30761f13670a470e</anchor>
      <arglist>(const Color4 &amp;colorLeft, const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>gradient3DVertical</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>ab16ad6bc15e50a892ef18378bb60b968</anchor>
      <arglist>(const Color4 &amp;colorBottom, const Color4 &amp;colorTop)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Grid.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Grid_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Math_8h" name="Math.h" local="yes" imported="no">Magnum/Math/Math.h</includes>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; GridFlag &gt;</type>
      <name>GridFlags</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>aed288bc35ab47010ee646337b7dc4594</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GridFlag</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a8c21adc05e93b76ee73ee705fcccb284</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a8c21adc05e93b76ee73ee705fcccb284a1e6b6c618ee6976c127199d69394b8f5">GenerateTextureCoords</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a8c21adc05e93b76ee73ee705fcccb284a7d8ea0467d442b8095bdcb3482bce959">GenerateNormals</enumvalue>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>grid3DSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a69453b1837a77d466866e4960e8917f6</anchor>
      <arglist>(const Vector2i &amp;subdivisions, GridFlags flags=GridFlag::GenerateNormals)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>grid3DWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a878f9ac70bc18e2af290d779931f1c29</anchor>
      <arglist>(const Vector2i &amp;subdivisions)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Icosphere.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Icosphere_8h</filename>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="struct">Magnum::Primitives::Icosphere</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>icosphereSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a283673f4f9f384078114435fcf3ce0a6</anchor>
      <arglist>(UnsignedInt subdivisions)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Line.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Line_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="struct">Magnum::Primitives::Line2D</class>
    <class kind="struct">Magnum::Primitives::Line3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>line2D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a204999eee5ec456ad13079774eeca7ca</anchor>
      <arglist>(const Vector2 &amp;a, const Vector2 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>line2D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a7e7c1daf3884a9e75018bd94ccf7f533</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>line3D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a5cd3ee59cae68330e815d49170581ee5</anchor>
      <arglist>(const Vector3 &amp;a, const Vector3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>line3D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a64db20fa91bcb06b9e3bfac776566a51</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Plane.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>src_2Magnum_2Primitives_2Plane_8h</filename>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="struct">Magnum::Primitives::Plane</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
    <member kind="enumeration">
      <type></type>
      <name>PlaneTextureCoords</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a2f56608b355c0c09837c7aed657b2ecf</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a2f56608b355c0c09837c7aed657b2ecfa1f3b10de72bb2edffce9811a94d44019">DontGenerate</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a2f56608b355c0c09837c7aed657b2ecfa32b919d18cfaca89383f6000dcc9c031">Generate</enumvalue>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>planeSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a0c23b8391cf237db5ebfffba0c823535</anchor>
      <arglist>(PlaneTextureCoords textureCoords=PlaneTextureCoords::DontGenerate)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>planeWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a3b10f846773a54ce153737c4b0cf537a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Plane.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>extras_2src_2Magnum_2Ui_2Plane_8h</filename>
    <includes id="Text_8h" name="Text.h" local="no" imported="no">Magnum/Text/Text.h</includes>
    <includes id="BasicPlane_8h" name="BasicPlane.h" local="yes" imported="no">Magnum/Ui/BasicPlane.h</includes>
    <includes id="BasicGLLayer_8h" name="BasicGLLayer.h" local="yes" imported="no">Magnum/Ui/BasicGLLayer.h</includes>
    <includes id="BasicInstancedGLLayer_8h" name="BasicInstancedGLLayer.h" local="yes" imported="no">Magnum/Ui/BasicInstancedGLLayer.h</includes>
    <includes id="Style_8h" name="Style.h" local="yes" imported="no">Magnum/Ui/Style.h</includes>
    <class kind="class">Magnum::Ui::Plane</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>Square.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Square_8h</filename>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="struct">Magnum::Primitives::Square</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
    <member kind="enumeration">
      <type></type>
      <name>SquareTextureCoords</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a477200e2f2632ebf0e3ac366ab7b445c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a477200e2f2632ebf0e3ac366ab7b445ca1f3b10de72bb2edffce9811a94d44019">DontGenerate</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a477200e2f2632ebf0e3ac366ab7b445ca32b919d18cfaca89383f6000dcc9c031">Generate</enumvalue>
    </member>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>squareSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a2b9e6b87efe8f6eb09178dbdfdbc00a6</anchor>
      <arglist>(SquareTextureCoords textureCoords=SquareTextureCoords::DontGenerate)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>squareWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a0fc310bb65d95088a40eb29e2e93bdb2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UVSphere.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>UVSphere_8h</filename>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="struct">Magnum::Primitives::UVSphere</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
    <member kind="enumeration">
      <type></type>
      <name>UVSphereTextureCoords</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a2efb1c948cdf0d5d3c87521be5b9a714</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a2efb1c948cdf0d5d3c87521be5b9a714a1f3b10de72bb2edffce9811a94d44019">DontGenerate</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a2efb1c948cdf0d5d3c87521be5b9a714a32b919d18cfaca89383f6000dcc9c031">Generate</enumvalue>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>uvSphereSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a0a2eacf71c0eb4be0d2b930f6afedf4e</anchor>
      <arglist>(UnsignedInt rings, UnsignedInt segments, UVSphereTextureCoords textureCoords=UVSphereTextureCoords::DontGenerate)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>uvSphereWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a8d29fb8efce266799af9356d3b4d9d90</anchor>
      <arglist>(UnsignedInt rings, UnsignedInt segments)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Resource.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Resource_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="ResourceManager_8h" name="ResourceManager.h" local="yes" imported="no">ResourceManager.h</includes>
    <class kind="class">Magnum::ResourceKey</class>
    <class kind="class">Magnum::Resource</class>
    <class kind="struct">std::hash&lt; Magnum::ResourceKey &gt;</class>
    <namespace>Magnum</namespace>
    <namespace>std</namespace>
    <member kind="enumeration">
      <type></type>
      <name>ResourceState</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a63e2340ca72c0086308a26c86b3268df</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa5111e24c1ecc6266ce0de4b4dc42033b">NotLoaded</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa98029ed1c91fd6f14761ede80f916190">NotLoadedFallback</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa16bfbf9c462762cf1cba4134ec53c504">Loading</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa9d6fb043e63f3ff15df0d888f364b433">LoadingFallback</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa38c300f4fc9ce8a77aad4a30de05cad8">NotFound</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa58aa9ef9ce68a0381bf3acacd95b27d9">NotFoundFallback</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfad924522d30d6615e9f71e91504364a9d">Mutable</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfabeae421a14a34f831c113f61323d1ab3">Final</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9758329b50e17519e09b1fad67363cf7</anchor>
      <arglist>(Debug &amp;debug, ResourceState value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af79e3aa47905863e951ac3a2ea29e229</anchor>
      <arglist>(Debug &amp;debug, const ResourceKey &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractFeature.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractFeature_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="SceneGraph_2AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/SceneGraph/AbstractObject.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractFeature</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; CachedTransformation &gt;</type>
      <name>CachedTransformations</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af9e8bdf2e2bab5a58cfc05e274225393</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractFeature&lt; 2, T &gt;</type>
      <name>AbstractBasicFeature2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a6efac1307c51ae050f83653c2bf29e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicFeature2D&lt; Float &gt;</type>
      <name>AbstractFeature2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a80fc83e5625dfc7a52d778b5a20b7062</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractFeature&lt; 3, T &gt;</type>
      <name>AbstractBasicFeature3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a7add6ebdd4b5aecd49d9edd9d49486b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicFeature3D&lt; Float &gt;</type>
      <name>AbstractFeature3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aed6f17d57d2ade33c8f93c725dadd724</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CachedTransformation</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a86cf8735be255da54d15f5c6eff54078</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a86cf8735be255da54d15f5c6eff54078ab51ca26c6c89cfc9bec338f7a0d3e0c8">Absolute</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a86cf8735be255da54d15f5c6eff54078ad0cf2589edf19b963da1550d2a26009b">InvertedAbsolute</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractFeature.hpp</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractFeature_8hpp</filename>
    <includes id="AbstractFeature_8h" name="AbstractFeature.h" local="yes" imported="no">Magnum/SceneGraph/AbstractFeature.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractGroupedFeature.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractGroupedFeature_8h</filename>
    <includes id="AbstractFeature_8h" name="AbstractFeature.h" local="yes" imported="no">Magnum/SceneGraph/AbstractFeature.h</includes>
    <includes id="FeatureGroup_8h" name="FeatureGroup.h" local="yes" imported="no">Magnum/SceneGraph/FeatureGroup.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractGroupedFeature</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>AbstractGroupedFeature&lt; 2, Derived, T &gt;</type>
      <name>AbstractBasicGroupedFeature2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ab7691a7938394382e821286ef7fa9ab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicGroupedFeature2D&lt; Derived, Float &gt;</type>
      <name>AbstractGroupedFeature2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a5ec5d07043e93ec9fe40dbc8f0cbfc74</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractGroupedFeature&lt; 3, Derived, T &gt;</type>
      <name>AbstractBasicGroupedFeature3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1b1dd3ce224e183c55ec13cb8643adb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicGroupedFeature3D&lt; Derived, Float &gt;</type>
      <name>AbstractGroupedFeature3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ac93c4664dee5dc5d5d2661b34cd5533f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractTransformation.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractTransformation_8h</filename>
    <includes id="SceneGraph_8h" name="SceneGraph.h" local="yes" imported="no">Magnum/SceneGraph/SceneGraph.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractTransformation</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>AbstractTransformation&lt; 2, T &gt;</type>
      <name>AbstractBasicTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a65b3d0e7b1a414d7ac410513ef4798ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTransformation2D&lt; Float &gt;</type>
      <name>AbstractTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1800f21d9f91b1e58cbe5308de5b092e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractTransformation&lt; 3, T &gt;</type>
      <name>AbstractBasicTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ad5d334b1e544a9f8f1f5cdb3b7dbcc00</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTransformation3D&lt; Float &gt;</type>
      <name>AbstractTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a0701dfa4ff4ba88521d526036e86a04b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractTranslation.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractTranslation_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <includes id="AbstractTransformation_8h" name="AbstractTransformation.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTransformation.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractTranslation</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>AbstractTranslation&lt; 2, T, TranslationType &gt;</type>
      <name>AbstractBasicTranslation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>afa2b93c31678db7e215fe91a996a9399</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTranslation2D&lt; Float &gt;</type>
      <name>AbstractTranslation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1ecd42490b0d1037158feea72e9377f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractTranslation&lt; 3, T, TranslationType &gt;</type>
      <name>AbstractBasicTranslation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>abf1c3f934c602108fe07d8ee2639ba70</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTranslation3D&lt; Float &gt;</type>
      <name>AbstractTranslation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af6747f94f4a4dc7bd37cc73f28d31a83</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractTranslationRotation2D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractTranslationRotation2D_8h</filename>
    <includes id="AbstractTranslation_8h" name="AbstractTranslation.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslation.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractBasicTranslationRotation2D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>AbstractBasicTranslationRotation2D&lt; Float &gt;</type>
      <name>AbstractTranslationRotation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a6598fdbed8b32af6f4b2381694cc507f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractTranslationRotation3D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractTranslationRotation3D_8h</filename>
    <includes id="AbstractTranslation_8h" name="AbstractTranslation.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslation.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractBasicTranslationRotation3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>AbstractBasicTranslationRotation3D&lt; Float &gt;</type>
      <name>AbstractTranslationRotation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a8b9e42c74f3ebd9a6ce994d5c8c3128c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractTranslationRotationScaling2D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractTranslationRotationScaling2D_8h</filename>
    <includes id="AbstractTranslationRotation2D_8h" name="AbstractTranslationRotation2D.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslationRotation2D.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractBasicTranslationRotationScaling2D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>AbstractBasicTranslationRotationScaling2D&lt; Float &gt;</type>
      <name>AbstractTranslationRotationScaling2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a8f9ce60d44dde9dee80e1a70b6a4e3f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractTranslationRotationScaling3D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractTranslationRotationScaling3D_8h</filename>
    <includes id="AbstractTranslationRotation3D_8h" name="AbstractTranslationRotation3D.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslationRotation3D.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractBasicTranslationRotationScaling3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>AbstractBasicTranslationRotationScaling3D&lt; Float &gt;</type>
      <name>AbstractTranslationRotationScaling3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aa6ba8ecac0bb59927cd34182c0fd8968</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Animable.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Animable_8h</filename>
    <includes id="AbstractGroupedFeature_8h" name="AbstractGroupedFeature.h" local="yes" imported="no">Magnum/SceneGraph/AbstractGroupedFeature.h</includes>
    <class kind="class">Magnum::SceneGraph::Animable</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>Animable&lt; 2, T &gt;</type>
      <name>BasicAnimable2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af507ef77ec969a61d24f416fac00ec41</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicAnimable2D&lt; Float &gt;</type>
      <name>Animable2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aee309216aa9fd6b5e622e17f53db835a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Animable&lt; 3, T &gt;</type>
      <name>BasicAnimable3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a0d2fdb55f25032894b12f19cc48566c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicAnimable3D&lt; Float &gt;</type>
      <name>Animable3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aa0f108ba69b680383c4352a65405453f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AnimationState</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a94815106daa99f9642ee24afd40982e2</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a94815106daa99f9642ee24afd40982e2ac23e2b09ebe6bf4cb5e2a9abe85c0be2">Stopped</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a94815106daa99f9642ee24afd40982e2ae99180abf47a8b3a856e0bcb2656990a">Paused</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a94815106daa99f9642ee24afd40982e2a5bda814c4aedb126839228f1a3d92f09">Running</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ab2553f73b3bea3c12ede8a39943e476b</anchor>
      <arglist>(Debug &amp;debug, AnimationState value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Animable.hpp</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Animable_8hpp</filename>
    <includes id="Timeline_8h" name="Timeline.h" local="yes" imported="no">Magnum/Timeline.h</includes>
    <includes id="Constants_8h" name="Constants.h" local="yes" imported="no">Magnum/Math/Constants.h</includes>
    <includes id="AnimableGroup_8h" name="AnimableGroup.h" local="yes" imported="no">Magnum/SceneGraph/AnimableGroup.h</includes>
    <includes id="Animable_8h" name="Animable.h" local="yes" imported="no">Magnum/SceneGraph/Animable.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
  </compound>
  <compound kind="file">
    <name>AnimableGroup.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AnimableGroup_8h</filename>
    <includes id="Animable_8h" name="Animable.h" local="yes" imported="no">Magnum/SceneGraph/Animable.h</includes>
    <includes id="FeatureGroup_8h" name="FeatureGroup.h" local="yes" imported="no">Magnum/SceneGraph/FeatureGroup.h</includes>
    <class kind="class">Magnum::SceneGraph::AnimableGroup</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>AnimableGroup&lt; 2, T &gt;</type>
      <name>BasicAnimableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aa2109eabf251858d7cb0b4520420ecf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicAnimableGroup2D&lt; Float &gt;</type>
      <name>AnimableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a711874b097520d09e5c281122b03edcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AnimableGroup&lt; 3, T &gt;</type>
      <name>BasicAnimableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>abc62975ccc8fbb63942d506501a43a8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicAnimableGroup3D&lt; Float &gt;</type>
      <name>AnimableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a89361d9c4cb88eb0bfdfbcaad04146b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Camera.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Camera_8h</filename>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="AbstractFeature_8h" name="AbstractFeature.h" local="yes" imported="no">Magnum/SceneGraph/AbstractFeature.h</includes>
    <class kind="class">Magnum::SceneGraph::Camera</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>Camera&lt; 2, T &gt;</type>
      <name>BasicCamera2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a66914ceee1ef23ea459cedc8ab32ab01</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicCamera2D&lt; Float &gt;</type>
      <name>Camera2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ad67b34a37740d83f11e40497efebb550</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Camera&lt; 3, T &gt;</type>
      <name>BasicCamera3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1549f0fb851b0017f5cea510529215ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicCamera3D&lt; Float &gt;</type>
      <name>Camera3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ac55e4b88d38c97efac6adff0d0d619e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AspectRatioPolicy</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ae75dff003c61f0268e0b108ea26db6a9</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="ae75dff003c61f0268e0b108ea26db6a9a98c2e7bea0117de839fdbbcfdedc9060">NotPreserved</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="ae75dff003c61f0268e0b108ea26db6a9a3bc026b815790a05493fa56fc4b8d8bd">Extend</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="ae75dff003c61f0268e0b108ea26db6a9a6adac929b615be2e0d213eb9d1ad15ba">Clip</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>Camera.hpp</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Camera_8hpp</filename>
    <includes id="Functions_8h" name="Functions.h" local="yes" imported="no">Magnum/Math/Functions.h</includes>
    <includes id="Camera_8h" name="Camera.h" local="yes" imported="no">Magnum/SceneGraph/Camera.h</includes>
    <includes id="Drawable_8h" name="Drawable.h" local="yes" imported="no">Magnum/SceneGraph/Drawable.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
  </compound>
  <compound kind="file">
    <name>Drawable.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Drawable_8h</filename>
    <includes id="AbstractGroupedFeature_8h" name="AbstractGroupedFeature.h" local="yes" imported="no">Magnum/SceneGraph/AbstractGroupedFeature.h</includes>
    <class kind="class">Magnum::SceneGraph::Drawable</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>Drawable&lt; 2, T &gt;</type>
      <name>BasicDrawable2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>afd9e085ba01b246e3483e632ce3db6e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDrawable2D&lt; Float &gt;</type>
      <name>Drawable2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ae43f3318da2b84a600394fb0bc5c562e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Drawable&lt; 3, T &gt;</type>
      <name>BasicDrawable3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ae102f6a45fd81072b42ae43a4ddc441d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDrawable3D&lt; Float &gt;</type>
      <name>Drawable3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ab09a7cdf66c68b65728d2781312e6a63</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt;</type>
      <name>DrawableGroup</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aab4b9fe25aa18fcb51f5b4d254784da8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DrawableGroup&lt; 2, T &gt;</type>
      <name>BasicDrawableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a3a864e18201ce23953ab813f8b251e10</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDrawableGroup2D&lt; Float &gt;</type>
      <name>DrawableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1bc520b13eb6055504cb2d8ee805cb2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DrawableGroup&lt; 3, T &gt;</type>
      <name>BasicDrawableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af290740590e7d443cc28552ca6ac1ffa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDrawableGroup3D&lt; Float &gt;</type>
      <name>DrawableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a578886bc73264432278d65147faddee3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Drawable.hpp</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Drawable_8hpp</filename>
    <includes id="Drawable_8h" name="Drawable.h" local="yes" imported="no">Magnum/SceneGraph/Drawable.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
  </compound>
  <compound kind="file">
    <name>DualComplexTransformation.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>DualComplexTransformation_8h</filename>
    <includes id="DualComplex_8h" name="DualComplex.h" local="yes" imported="no">Magnum/Math/DualComplex.h</includes>
    <includes id="AbstractTranslationRotation2D_8h" name="AbstractTranslationRotation2D.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslationRotation2D.h</includes>
    <includes id="src_2Magnum_2SceneGraph_2Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <class kind="class">Magnum::SceneGraph::BasicDualComplexTransformation</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>BasicDualComplexTransformation&lt; Float &gt;</type>
      <name>DualComplexTransformation</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ac9f4aaec12a825842009426a76092659</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DualQuaternionTransformation.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>DualQuaternionTransformation_8h</filename>
    <includes id="DualQuaternion_8h" name="DualQuaternion.h" local="yes" imported="no">Magnum/Math/DualQuaternion.h</includes>
    <includes id="AbstractTranslationRotation3D_8h" name="AbstractTranslationRotation3D.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslationRotation3D.h</includes>
    <includes id="src_2Magnum_2SceneGraph_2Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <class kind="class">Magnum::SceneGraph::BasicDualQuaternionTransformation</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>BasicDualQuaternionTransformation&lt; Float &gt;</type>
      <name>DualQuaternionTransformation</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ace6339f6ce9e8983c8d02c7219419f3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FeatureGroup.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>FeatureGroup_8h</filename>
    <includes id="SceneGraph_8h" name="SceneGraph.h" local="yes" imported="no">Magnum/SceneGraph/SceneGraph.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractFeatureGroup</class>
    <class kind="class">Magnum::SceneGraph::FeatureGroup</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>FeatureGroup&lt; 2, Feature, T &gt;</type>
      <name>BasicFeatureGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>addfbae050115f381b9e80540547c579b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicFeatureGroup2D&lt; Feature, Float &gt;</type>
      <name>FeatureGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aaac5484c4293df2de98534d4cf5d6faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FeatureGroup&lt; 3, Feature, T &gt;</type>
      <name>BasicFeatureGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a0664ea4967264026b00a3a5fe1af06c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicFeatureGroup3D&lt; Feature, Float &gt;</type>
      <name>FeatureGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a799a96fb4d84e3e6bd549a54e7b60816</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FeatureGroup.hpp</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>FeatureGroup_8hpp</filename>
    <includes id="FeatureGroup_8h" name="FeatureGroup.h" local="yes" imported="no">Magnum/SceneGraph/FeatureGroup.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
  </compound>
  <compound kind="file">
    <name>MatrixTransformation2D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>MatrixTransformation2D_8h</filename>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="AbstractTranslationRotationScaling2D_8h" name="AbstractTranslationRotationScaling2D.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslationRotationScaling2D.h</includes>
    <includes id="src_2Magnum_2SceneGraph_2Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <class kind="class">Magnum::SceneGraph::BasicMatrixTransformation2D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>BasicMatrixTransformation2D&lt; Float &gt;</type>
      <name>MatrixTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af0e9bde86c8d6acfa18111bb38eb9bda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MatrixTransformation3D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>MatrixTransformation3D_8h</filename>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="AbstractTranslationRotationScaling3D_8h" name="AbstractTranslationRotationScaling3D.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslationRotationScaling3D.h</includes>
    <includes id="src_2Magnum_2SceneGraph_2Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <class kind="class">Magnum::SceneGraph::BasicMatrixTransformation3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>BasicMatrixTransformation3D&lt; Float &gt;</type>
      <name>MatrixTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ae72540433b3a42ea312c5ec5c70abc6c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Object.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>src_2Magnum_2SceneGraph_2Object_8h</filename>
    <includes id="AbstractFeature_8h" name="AbstractFeature.h" local="yes" imported="no">Magnum/SceneGraph/AbstractFeature.h</includes>
    <includes id="SceneGraph_2AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/SceneGraph/AbstractObject.h</includes>
    <class kind="class">Magnum::SceneGraph::Object</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
  </compound>
  <compound kind="file">
    <name>Object.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/DartIntegration/</path>
    <filename>integration_2src_2Magnum_2DartIntegration_2Object_8h</filename>
    <includes id="GL_8h" name="GL.h" local="no" imported="no">Magnum/GL/GL.h</includes>
    <includes id="AbstractFeature_8h" name="AbstractFeature.h" local="no" imported="no">Magnum/SceneGraph/AbstractFeature.h</includes>
    <includes id="AbstractTranslationRotation3D_8h" name="AbstractTranslationRotation3D.h" local="no" imported="no">Magnum/SceneGraph/AbstractTranslationRotation3D.h</includes>
    <includes id="Trade_8h" name="Trade.h" local="no" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="struct">Magnum::DartIntegration::DrawData</class>
    <class kind="class">Magnum::DartIntegration::Object</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DartIntegration</namespace>
  </compound>
  <compound kind="file">
    <name>Object.hpp</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Object_8hpp</filename>
    <includes id="AbstractTransformation_8h" name="AbstractTransformation.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTransformation.h</includes>
    <includes id="src_2Magnum_2SceneGraph_2Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <includes id="Scene_8h" name="Scene.h" local="yes" imported="no">Magnum/SceneGraph/Scene.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
  </compound>
  <compound kind="file">
    <name>RigidMatrixTransformation2D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>RigidMatrixTransformation2D_8h</filename>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="GramSchmidt_8h" name="GramSchmidt.h" local="yes" imported="no">Magnum/Math/Algorithms/GramSchmidt.h</includes>
    <includes id="AbstractTranslationRotation2D_8h" name="AbstractTranslationRotation2D.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslationRotation2D.h</includes>
    <includes id="src_2Magnum_2SceneGraph_2Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <class kind="class">Magnum::SceneGraph::BasicRigidMatrixTransformation2D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>BasicRigidMatrixTransformation2D&lt; Float &gt;</type>
      <name>RigidMatrixTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>afea6d7bb24ebadabee2446a2ef48cdc3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RigidMatrixTransformation3D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>RigidMatrixTransformation3D_8h</filename>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="GramSchmidt_8h" name="GramSchmidt.h" local="yes" imported="no">Magnum/Math/Algorithms/GramSchmidt.h</includes>
    <includes id="AbstractTranslationRotation3D_8h" name="AbstractTranslationRotation3D.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslationRotation3D.h</includes>
    <includes id="src_2Magnum_2SceneGraph_2Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <class kind="class">Magnum::SceneGraph::BasicRigidMatrixTransformation3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>BasicRigidMatrixTransformation3D&lt; Float &gt;</type>
      <name>RigidMatrixTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a3d123239f654f6cfe87cd3012f1686dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Scene.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Scene_8h</filename>
    <includes id="src_2Magnum_2SceneGraph_2Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <class kind="class">Magnum::SceneGraph::Scene</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
  </compound>
  <compound kind="file">
    <name>SceneGraph.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>SceneGraph_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
  </compound>
  <compound kind="file">
    <name>TranslationRotationScalingTransformation2D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>TranslationRotationScalingTransformation2D_8h</filename>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">Magnum/Math/Complex.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="AbstractTranslationRotationScaling2D_8h" name="AbstractTranslationRotationScaling2D.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslationRotationScaling2D.h</includes>
    <includes id="src_2Magnum_2SceneGraph_2Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <class kind="class">Magnum::SceneGraph::BasicTranslationRotationScalingTransformation2D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>BasicTranslationRotationScalingTransformation2D&lt; Float &gt;</type>
      <name>TranslationRotationScalingTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a67e51ad00b1ad8f19d6e67a14cb9951d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TranslationRotationScalingTransformation3D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>TranslationRotationScalingTransformation3D_8h</filename>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="Quaternion_8h" name="Quaternion.h" local="yes" imported="no">Magnum/Math/Quaternion.h</includes>
    <includes id="AbstractTranslationRotationScaling3D_8h" name="AbstractTranslationRotationScaling3D.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslationRotationScaling3D.h</includes>
    <includes id="src_2Magnum_2SceneGraph_2Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <class kind="class">Magnum::SceneGraph::BasicTranslationRotationScalingTransformation3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>BasicTranslationRotationScalingTransformation3D&lt; Float &gt;</type>
      <name>TranslationRotationScalingTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a5af7f3fa56af8a3e906490e63562c8a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TranslationTransformation.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>TranslationTransformation_8h</filename>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="AbstractTranslation_8h" name="AbstractTranslation.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslation.h</includes>
    <includes id="src_2Magnum_2SceneGraph_2Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <class kind="class">Magnum::SceneGraph::TranslationTransformation</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>TranslationTransformation&lt; 2, T, TranslationType &gt;</type>
      <name>BasicTranslationTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a768dfc3a71f8ce15d89126b17dbbcd4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicTranslationTransformation2D&lt; Float &gt;</type>
      <name>TranslationTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a36feaa72147fd92f3d53923d95c2d69c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TranslationTransformation&lt; 3, T, TranslationType &gt;</type>
      <name>BasicTranslationTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1f4a55c7b170b3f3245dbbbc1b136bee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicTranslationTransformation3D&lt; Float &gt;</type>
      <name>TranslationTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a8f23c88e7ff2cb5a2dd3d19f3e6790a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractVector.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shaders/</path>
    <filename>AbstractVector_8h</filename>
    <includes id="AbstractShaderProgram_8h" name="AbstractShaderProgram.h" local="yes" imported="no">Magnum/GL/AbstractShaderProgram.h</includes>
    <includes id="Generic_8h" name="Generic.h" local="yes" imported="no">Magnum/Shaders/Generic.h</includes>
    <class kind="class">Magnum::Shaders::AbstractVector</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shaders</namespace>
    <member kind="typedef">
      <type>AbstractVector&lt; 2 &gt;</type>
      <name>AbstractVector2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a055a4b60fca99365039c226e3e7de622</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractVector&lt; 3 &gt;</type>
      <name>AbstractVector3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>aa9e326f4cddc22d9724249d2c8634cfd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DistanceFieldVector.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shaders/</path>
    <filename>DistanceFieldVector_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="AbstractVector_8h" name="AbstractVector.h" local="yes" imported="no">Magnum/Shaders/AbstractVector.h</includes>
    <class kind="class">Magnum::Shaders::DistanceFieldVector</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shaders</namespace>
    <member kind="typedef">
      <type>DistanceFieldVector&lt; 2 &gt;</type>
      <name>DistanceFieldVector2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a82d25087393b5cc2cdb0af02b930ffb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DistanceFieldVector&lt; 3 &gt;</type>
      <name>DistanceFieldVector3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a516b8c2f61f5e9e610aedf7328e95cb7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Flat.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shaders/</path>
    <filename>Flat_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="AbstractShaderProgram_8h" name="AbstractShaderProgram.h" local="yes" imported="no">Magnum/GL/AbstractShaderProgram.h</includes>
    <includes id="Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="Generic_8h" name="Generic.h" local="yes" imported="no">Magnum/Shaders/Generic.h</includes>
    <class kind="class">Magnum::Shaders::Flat</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shaders</namespace>
    <member kind="typedef">
      <type>Flat&lt; 2 &gt;</type>
      <name>Flat2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>ac2923bd6a72e0b094f2bf07131932169</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Flat&lt; 3 &gt;</type>
      <name>Flat3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>aa6668d0744cbc4ef218d1df107aca861</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a3f7f31121097f8e2bfdb3c9e71c850d0</anchor>
      <arglist>(Debug &amp;debug, Flat&lt; dimensions &gt;::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a82744a2393047180b216c586a9a57ad6</anchor>
      <arglist>(Debug &amp;debug, Flat&lt; dimensions &gt;::Flags value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Generic.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shaders/</path>
    <filename>Generic_8h</filename>
    <includes id="Attribute_8h" name="Attribute.h" local="yes" imported="no">Magnum/GL/Attribute.h</includes>
    <class kind="struct">Magnum::Shaders::Generic</class>
    <class kind="struct">Magnum::Shaders::Generic::Color</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shaders</namespace>
    <member kind="typedef">
      <type>Generic&lt; 2 &gt;</type>
      <name>Generic2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a11fcc97e4ebd48ee9038fefecccdf45c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Generic&lt; 3 &gt;</type>
      <name>Generic3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>adb3c39d719d87a10a28481df319797a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MeshVisualizer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shaders/</path>
    <filename>MeshVisualizer_8h</filename>
    <includes id="AbstractShaderProgram_8h" name="AbstractShaderProgram.h" local="yes" imported="no">Magnum/GL/AbstractShaderProgram.h</includes>
    <includes id="Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <class kind="class">Magnum::Shaders::MeshVisualizer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shaders</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>aae5f6840e7f2ec959aa81681626a4b72</anchor>
      <arglist>(Debug &amp;debug, MeshVisualizer::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a0b86ff630e94bcf1d54d14c0f67df69a</anchor>
      <arglist>(Debug &amp;debug, MeshVisualizer::Flags value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Phong.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shaders/</path>
    <filename>Phong_8h</filename>
    <includes id="AbstractShaderProgram_8h" name="AbstractShaderProgram.h" local="yes" imported="no">Magnum/GL/AbstractShaderProgram.h</includes>
    <includes id="Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="Generic_8h" name="Generic.h" local="yes" imported="no">Magnum/Shaders/Generic.h</includes>
    <class kind="class">Magnum::Shaders::Phong</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shaders</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>aaeb06f4f4fc08f67f907deae8ac32fe7</anchor>
      <arglist>(Debug &amp;debug, Phong::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a0b86ff630e94bcf1d54d14c0f67df69a</anchor>
      <arglist>(Debug &amp;debug, MeshVisualizer::Flags value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Shaders.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shaders/</path>
    <filename>Shaders_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shaders</namespace>
  </compound>
  <compound kind="file">
    <name>VertexColor.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shaders/</path>
    <filename>VertexColor_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="AbstractShaderProgram_8h" name="AbstractShaderProgram.h" local="yes" imported="no">Magnum/GL/AbstractShaderProgram.h</includes>
    <includes id="Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="Generic_8h" name="Generic.h" local="yes" imported="no">Magnum/Shaders/Generic.h</includes>
    <class kind="class">Magnum::Shaders::VertexColor</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shaders</namespace>
    <member kind="typedef">
      <type>VertexColor&lt; 2 &gt;</type>
      <name>VertexColor2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a2433f1de6a4cba48f5c7f2b8a6586b96</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VertexColor&lt; 3 &gt;</type>
      <name>VertexColor3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a476d46cfe6e4a6287f3006f81922a858</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractFont.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Text/</path>
    <filename>AbstractFont_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Text_8h" name="Text.h" local="yes" imported="no">Magnum/Text/Text.h</includes>
    <class kind="class">Magnum::Text::AbstractFont</class>
    <class kind="struct">Magnum::Text::AbstractFont::Metrics</class>
    <class kind="class">Magnum::Text::AbstractLayouter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>a7fa35f3ab0a4527b5e719d0dd5cf84ca</anchor>
      <arglist>(Debug &amp;debug, AbstractFont::Feature value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>a93a05e290c110f57d63c674953393f44</anchor>
      <arglist>(Debug &amp;debug, AbstractFont::Features value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractFontConverter.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Text/</path>
    <filename>AbstractFontConverter_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Text_8h" name="Text.h" local="yes" imported="no">Magnum/Text/Text.h</includes>
    <class kind="class">Magnum::Text::AbstractFontConverter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractGlyphCache.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Text/</path>
    <filename>AbstractGlyphCache_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Range_8h" name="Range.h" local="yes" imported="no">Magnum/Math/Range.h</includes>
    <class kind="class">Magnum::Text::AbstractGlyphCache</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; GlyphCacheFeature &gt;</type>
      <name>GlyphCacheFeatures</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>a94ddecd6c5bc8f53ce09021c01cdd128</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GlyphCacheFeature</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>a7f26cc446d372d930e996c37fb356455</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="a7f26cc446d372d930e996c37fb356455ac65e06981d6f8f3d1e13791a39d346df">ImageDownload</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>Alignment.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Text/</path>
    <filename>Alignment_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
    <member kind="enumeration">
      <type></type>
      <name>Alignment</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>afe5ab4c9617fdc70eefe5b871e5ee81b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba648fc4cad5ac4a6e2741b3983bbf942c">LineLeft</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81bae184e1933ff72b6ac41649f71eb9fcac">LineCenter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba71d87665cdb4e7a2ac51d1a80f591939">LineRight</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba1d536cb49605c6a39292c33cfc5e872a">MiddleLeft</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba2096d77a6ee8ef295acbdc276773dd81">MiddleCenter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba3b9c2b3657981eb77a10390aa0e8c156">MiddleRight</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81bab32beb056fbfe36afbabc6c88c81ab36">TopLeft</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba91b8ede24b7f93a98ae4dcaade15d468">TopCenter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba1d85a557894c340c318493f33bfa8efb">TopRight</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba77e7c1e9341efec9ff6b0fc8e5c8deda">LineCenterIntegral</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81baef3f989c5b8b37ec01e0d588d00db0f3">MiddleLeftIntegral</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81bafc989b7f4c3942a8d586054d11e9bf29">MiddleCenterIntegral</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81baf4e3acd109cd0c34ceed8ed3e6b73846">MiddleRightIntegral</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>DistanceFieldGlyphCache.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Text/</path>
    <filename>DistanceFieldGlyphCache_8h</filename>
    <includes id="GlyphCache_8h" name="GlyphCache.h" local="yes" imported="no">Magnum/Text/GlyphCache.h</includes>
    <includes id="DistanceField_8h" name="DistanceField.h" local="yes" imported="no">Magnum/TextureTools/DistanceField.h</includes>
    <class kind="class">Magnum::Text::DistanceFieldGlyphCache</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
  </compound>
  <compound kind="file">
    <name>GlyphCache.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Text/</path>
    <filename>GlyphCache_8h</filename>
    <includes id="Texture_8h" name="Texture.h" local="yes" imported="no">Magnum/GL/Texture.h</includes>
    <includes id="AbstractGlyphCache_8h" name="AbstractGlyphCache.h" local="yes" imported="no">Magnum/Text/AbstractGlyphCache.h</includes>
    <class kind="class">Magnum::Text::GlyphCache</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
  </compound>
  <compound kind="file">
    <name>Text.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Text/</path>
    <filename>Text_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
  </compound>
  <compound kind="file">
    <name>Atlas.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/TextureTools/</path>
    <filename>Atlas_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::TextureTools</namespace>
    <member kind="function">
      <type>std::vector&lt; Range2Di &gt;</type>
      <name>atlas</name>
      <anchorfile>namespaceMagnum_1_1TextureTools.html</anchorfile>
      <anchor>af76cb9fcfc002d17f8ef57825015ba0e</anchor>
      <arglist>(const Vector2i &amp;atlasSize, const std::vector&lt; Vector2i &gt; &amp;sizes, const Vector2i &amp;padding=Vector2i())</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DistanceField.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/TextureTools/</path>
    <filename>DistanceField_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="GL_8h" name="GL.h" local="yes" imported="no">Magnum/GL/GL.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <class kind="class">Magnum::TextureTools::DistanceField</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::TextureTools</namespace>
    <member kind="function">
      <type>void</type>
      <name>distanceField</name>
      <anchorfile>namespaceMagnum_1_1TextureTools.html</anchorfile>
      <anchor>adfb47ef9f973e8e24d567cc03dfc5a2b</anchor>
      <arglist>(GL::Texture2D &amp;input, GL::Texture2D &amp;output, const Range2Di &amp;rectangle, Int radius, const Vector2i &amp;imageSize=Vector2i{})</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Timeline.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Timeline_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <class kind="class">Magnum::Timeline</class>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractImageConverter.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>AbstractImageConverter_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="class">Magnum::Trade::AbstractImageConverter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aa6323c59871ddc542da225e4566d99d7</anchor>
      <arglist>(Debug &amp;debug, AbstractImageConverter::Feature value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>af013d6d5cd121a77359f53e7d3ccbdf4</anchor>
      <arglist>(Debug &amp;debug, AbstractImageConverter::Features value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractMaterialData.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>AbstractMaterialData_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <class kind="class">Magnum::Trade::AbstractMaterialData</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
    <member kind="enumeration">
      <type></type>
      <name>MaterialType</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a9e426ccb00311a951abde7d18ace1b7e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a9e426ccb00311a951abde7d18ace1b7ea568fb6d547b4449c90057f8d4f76a838">Phong</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MaterialAlphaMode</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>af78ad2cf1f77b0f47bc6cf3fd69d4658</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="af78ad2cf1f77b0f47bc6cf3fd69d4658afaa90538de35640e4b1e31ccf35b6eb5">Opaque</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="af78ad2cf1f77b0f47bc6cf3fd69d4658a4a18312b5b75f549d5551e5912ad6ebf">Mask</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="af78ad2cf1f77b0f47bc6cf3fd69d4658a09ac609fcdb514c9adca34e7f97b4ac4">Blend</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aa496c4bdc948dbfd58efa04b130f0f52</anchor>
      <arglist>(Debug &amp;debug, MaterialType value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>acc1bab7109f029fa4e8da4df0bd9f57b</anchor>
      <arglist>(Debug &amp;debug, MaterialAlphaMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>ad2a689e2ac87d05c71f37e313618dcea</anchor>
      <arglist>(Debug &amp;debug, AbstractMaterialData::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a8e0480c58f2147b8bf9ea24e0f782563</anchor>
      <arglist>(Debug &amp;debug, AbstractMaterialData::Flags value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AnimationData.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>AnimationData_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Math_8h" name="Math.h" local="yes" imported="no">Magnum/Math/Math.h</includes>
    <includes id="Track_8h" name="Track.h" local="yes" imported="no">Magnum/Animation/Track.h</includes>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="class">Magnum::Trade::AnimationTrackData</class>
    <class kind="class">Magnum::Trade::AnimationData</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
    <member kind="enumeration">
      <type></type>
      <name>AnimationTrackType</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a0cd8da38bf86e61333dabdc1bbabfa64</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64ac26f15e86e3de4c398a8273272aba034">Bool</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64ac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a1686a6c336b71b36d77354cea19a8b52">Int</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a4507efc6e8fb2851efc3ef9de5dd0089">BoolVector2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a1c6cdecaad6e5668edd6c91cefa128b2">BoolVector3</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a209ecfa861cb7a2202062341c4a36e93">BoolVector4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a1bebc5ae2822f8e361fb0ce57b5e09e2">Vector2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a0287c156bcb3ac44384e9d6e52a288c5">Vector2ui</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a97bfce059f906d51864f78c4118f4c13">Vector2i</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a02b4dab58bbc49e0851fb3fd8df520cc">Vector3</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64ad87911e92d9da1f085d03c2d996a5ec9">Vector3ui</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64ad58be153a15c904c858bdda07c8ebd9d">Vector3i</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64acf637ffa2663b40ae52857aa0bdb1ec3">Vector4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a5a3fff878f721064d11e6d2643a6a291">Vector4ui</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a723467a7a855058c8f83561eccff59d6">Vector4i</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a10b4eb76294b70d7fd6df997ff06edb1">Complex</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a3743af167c53361d795405561faac2b2">Quaternion</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a544fbef226fae9ec4a963f93d973497a">DualQuaternion</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64afecf022c6a47089b44c9072d6d5f500e">CubicHermite1D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64aa916f1544566aaf4293595588d913d3a">CubicHermite2D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64ac4374022002cfa3c8507a1b4bb2750a4">CubicHermite3D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a6d1a492fe08c661b75d4dbf10cf74239">CubicHermiteComplex</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a528572b911fd064984974f0452e0a6c3">CubicHermiteQuaternion</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AnimationTrackTargetType</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a1d4b2b8621accda829e6ab9c6241df06</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a1d4b2b8621accda829e6ab9c6241df06a9341b4e6364e09fb979455cccdd00cc9">Translation2D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a1d4b2b8621accda829e6ab9c6241df06af7d4586c58fdfa7bbf7cbc7602617917">Translation3D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a1d4b2b8621accda829e6ab9c6241df06a684e449d26f835f7a1d3c872a13a36d2">Rotation2D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a1d4b2b8621accda829e6ab9c6241df06a4ff4b7b9f998f2ff5086f0c6b3feeee2">Rotation3D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a1d4b2b8621accda829e6ab9c6241df06ae4121ee39329e9dffb8dea49f4fca007">Scaling2D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a1d4b2b8621accda829e6ab9c6241df06a70162e017eef53199c4927f12094c34c">Scaling3D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a1d4b2b8621accda829e6ab9c6241df06a90589c47f06eb971d548591f23c285af">Custom</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>ac925d7742cb241b753cc70dd32772091</anchor>
      <arglist>(Debug &amp;debug, AnimationTrackType value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a965bd348bbbd3df5c430c63517b5d4b9</anchor>
      <arglist>(Debug &amp;debug, AnimationTrackTargetType value)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>animationInterpolatorFor</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aefc286373c2effb2be34c0b1bbad4db0</anchor>
      <arglist>(Animation::Interpolation interpolation) -&gt; R(*)(const V &amp;, const V &amp;, Float)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CameraData.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>CameraData_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <class kind="class">Magnum::Trade::CameraData</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
    <member kind="enumeration">
      <type></type>
      <name>CameraType</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aade3490fdf16f331c10bf3eccbc64759</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aade3490fdf16f331c10bf3eccbc64759a7ad31566817d74d74f6d59a253b74d8a">Orthographic2D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aade3490fdf16f331c10bf3eccbc64759a8ea380b8d60382bf2de4913fc109ca60">Orthographic3D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aade3490fdf16f331c10bf3eccbc64759acb30a81bf51da4076dce78d043a7da11">Perspective3D</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a1015a5600e1d67e9c8a86ef361cbaa0b</anchor>
      <arglist>(Debug &amp;debug, CameraType value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ImageData.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>ImageData_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="PixelStorage_8h" name="PixelStorage.h" local="yes" imported="no">Magnum/PixelStorage.h</includes>
    <class kind="class">Magnum::Trade::ImageData</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
    <member kind="typedef">
      <type>ImageData&lt; 1 &gt;</type>
      <name>ImageData1D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a000f4964aae4b1a8f17a0f22709c6b12</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageData&lt; 2 &gt;</type>
      <name>ImageData2D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a45555303e00cf9d64cf942326bc6cbf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageData&lt; 3 &gt;</type>
      <name>ImageData3D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a1b42de4e1c79ca544279bc36da5739d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LightData.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>LightData_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <class kind="class">Magnum::Trade::LightData</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>ab343d2a8322481146569fda9452d6992</anchor>
      <arglist>(Debug &amp;debug, LightData::Type value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MeshData2D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>MeshData2D_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <class kind="class">Magnum::Trade::MeshData2D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>MeshData3D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>MeshData3D_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <class kind="class">Magnum::Trade::MeshData3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>MeshObjectData2D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>MeshObjectData2D_8h</filename>
    <includes id="ObjectData2D_8h" name="ObjectData2D.h" local="yes" imported="no">Magnum/Trade/ObjectData2D.h</includes>
    <class kind="class">Magnum::Trade::MeshObjectData2D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>MeshObjectData3D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>MeshObjectData3D_8h</filename>
    <includes id="ObjectData3D_8h" name="ObjectData3D.h" local="yes" imported="no">Magnum/Trade/ObjectData3D.h</includes>
    <class kind="class">Magnum::Trade::MeshObjectData3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>ObjectData2D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>ObjectData2D_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">Magnum/Math/Complex.h</includes>
    <class kind="class">Magnum::Trade::ObjectData2D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; ObjectFlag2D &gt;</type>
      <name>ObjectFlags2D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>af1fd848e1e6de839e707189f7e3cd93c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ObjectInstanceType2D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aa708f15a256073a2edc089736614fb55</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aa708f15a256073a2edc089736614fb55a967d35e40f3f95b1f538bd248640bf3b">Camera</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aa708f15a256073a2edc089736614fb55a710fdb6adb881b408116ef95335e1961">Mesh</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aa708f15a256073a2edc089736614fb55ace2c8aed9c2fa0cfbed56cbda4d8bf07">Empty</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ObjectFlag2D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aaca19d91702e6fce12e444e9c211511e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aaca19d91702e6fce12e444e9c211511ea899156f90505ab604f4d5df579480577">HasTranslationRotationScaling</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>ae19c01b4e1bd6788833d78b25099ac94</anchor>
      <arglist>(Debug &amp;debug, ObjectInstanceType2D value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a9e03342e07c7f3acca4f7aae60fef99a</anchor>
      <arglist>(Debug &amp;debug, ObjectFlag2D value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aca82a6e413fe146b7c847ec4112a98de</anchor>
      <arglist>(Debug &amp;debug, ObjectFlags2D value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ObjectData3D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>ObjectData3D_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="Quaternion_8h" name="Quaternion.h" local="yes" imported="no">Magnum/Math/Quaternion.h</includes>
    <class kind="class">Magnum::Trade::ObjectData3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; ObjectFlag3D &gt;</type>
      <name>ObjectFlags3D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a2fbbdc803324132091fd20b1e363cb65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ObjectInstanceType3D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a69823207d6668a086926bcdc5d1f4085</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a69823207d6668a086926bcdc5d1f4085a967d35e40f3f95b1f538bd248640bf3b">Camera</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a69823207d6668a086926bcdc5d1f4085a9914a0ce04a7b7b6a8e39bec55064b82">Light</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a69823207d6668a086926bcdc5d1f4085a710fdb6adb881b408116ef95335e1961">Mesh</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a69823207d6668a086926bcdc5d1f4085ace2c8aed9c2fa0cfbed56cbda4d8bf07">Empty</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ObjectFlag3D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>afd5ad5df868891dd8b329efa03b93de1</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="afd5ad5df868891dd8b329efa03b93de1a899156f90505ab604f4d5df579480577">HasTranslationRotationScaling</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>ab281f59369e4880eeea1a482fd5eefa6</anchor>
      <arglist>(Debug &amp;debug, ObjectInstanceType3D value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a2fb296716a438a935ea2f48f4fc3c380</anchor>
      <arglist>(Debug &amp;debug, ObjectFlag3D value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a515b4140beb619d966dae96ff536bbe1</anchor>
      <arglist>(Debug &amp;debug, ObjectFlags3D value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PhongMaterialData.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>PhongMaterialData_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <includes id="AbstractMaterialData_8h" name="AbstractMaterialData.h" local="yes" imported="no">Magnum/Trade/AbstractMaterialData.h</includes>
    <class kind="class">Magnum::Trade::PhongMaterialData</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a2f0d64be467035ef498ce966facceffa</anchor>
      <arglist>(Debug &amp;debug, PhongMaterialData::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a8e0480c58f2147b8bf9ea24e0f782563</anchor>
      <arglist>(Debug &amp;debug, AbstractMaterialData::Flags value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SceneData.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>SceneData_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <class kind="class">Magnum::Trade::SceneData</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>TextureData.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>TextureData_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">Magnum/Array.h</includes>
    <includes id="Sampler_8h" name="Sampler.h" local="yes" imported="no">Magnum/Sampler.h</includes>
    <class kind="class">Magnum::Trade::TextureData</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a5fb39c5f1a765358446a9ef3caa31682</anchor>
      <arglist>(Debug &amp;debug, TextureData::Type value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Trade.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>Trade_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>Types.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Types_8h</filename>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>Enums.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Vk/</path>
    <filename>src_2Magnum_2Vk_2Enums_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">Magnum/Array.h</includes>
    <includes id="Vulkan_8h" name="Vulkan.h" local="yes" imported="no">Magnum/Vk/Vulkan.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Vk</namespace>
    <member kind="function">
      <type>bool</type>
      <name>hasVkPrimitiveTopology</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a3868a55bd1daeee366e479b2a0fd1438</anchor>
      <arglist>(Magnum::MeshPrimitive primitive)</arglist>
    </member>
    <member kind="function">
      <type>VkPrimitiveTopology</type>
      <name>vkPrimitiveTopology</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a169ab6b4d8a914bbb301cfd75b626c66</anchor>
      <arglist>(Magnum::MeshPrimitive primitive)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasVkIndexType</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a3ba452fb290467d930fe153027942990</anchor>
      <arglist>(Magnum::MeshIndexType type)</arglist>
    </member>
    <member kind="function">
      <type>VkIndexType</type>
      <name>vkIndexType</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a78c671a53fc75529aaeb2618b077700d</anchor>
      <arglist>(Magnum::MeshIndexType type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasVkFormat</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>ac82a207c9b17d10b87c6bd27440e485e</anchor>
      <arglist>(Magnum::PixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasVkFormat</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>abf0edbce00dc9210fe89a56335a619cc</anchor>
      <arglist>(Magnum::CompressedPixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>VkFormat</type>
      <name>vkFormat</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a9039b79313fc2ad91f427a8ef3382f63</anchor>
      <arglist>(Magnum::PixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>VkFormat</type>
      <name>vkFormat</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a2479652926689c38bb03bd3243b60e71</anchor>
      <arglist>(Magnum::CompressedPixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>VkFilter</type>
      <name>vkFilter</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a88d6d498708916f4dc6e2839f5d2d91f</anchor>
      <arglist>(Magnum::SamplerFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>VkSamplerMipmapMode</type>
      <name>vkSamplerMipmapMode</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>aad05615076c109d791a654adab94fa86</anchor>
      <arglist>(Magnum::SamplerMipmap mipmap)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasVkSamplerAddressMode</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a7200c63b45fa88c7c77a7dc309219562</anchor>
      <arglist>(Magnum::SamplerWrapping wrapping)</arglist>
    </member>
    <member kind="function">
      <type>VkSamplerAddressMode</type>
      <name>vkSamplerAddressMode</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a2593b7a6403ed2203afba493dbfe40f4</anchor>
      <arglist>(Magnum::SamplerWrapping wrapping)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; dimensions, VkSamplerAddressMode &gt;</type>
      <name>vkSamplerAddressMode</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a479364ca861fe421e7bff6a532a8c6dc</anchor>
      <arglist>(const Array&lt; dimensions, Magnum::SamplerWrapping &gt; &amp;wrapping)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Enums.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/OvrIntegration/</path>
    <filename>integration_2src_2Magnum_2OvrIntegration_2Enums_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <class kind="struct">Magnum::OvrIntegration::Buttons</class>
    <class kind="struct">Magnum::OvrIntegration::Touches</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OvrIntegration</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; TrackerFlag &gt;</type>
      <name>TrackerFlags</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a96d457b1afd55fc8dbf7c4c5c8914108</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; StatusFlag &gt;</type>
      <name>StatusFlags</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a3ecc95a048c433bfe45edab8ac88d15b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; SessionStatusFlag &gt;</type>
      <name>SessionStatusFlags</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a98bef84792091fda50bf4128a950af69</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; MirrorOption &gt;</type>
      <name>MirrorOptions</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a3298045f21c3398a39dd6acfcbf5a1da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>HmdType</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>ab8c9a8c7cce6ad0ef7ce2e1befecc41c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca47f84b7951ed9537b0a70c4e0047de81">DK1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca66994daf724ae63030fbcc30d3655bef">DKHD</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca284bad9c648d4b9dbdf4baa703acb02d">DK2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca834cb54b61bbed9d4296c995e4c5d8b2">CB</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca6311ae17c1ee52b36e68aaf4ad066387">Other</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca3bedec542f1401c2da728a90cc6fa1b2">E3_2015</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca28dd683b878e138a2c30a2cb3094306a">ES06</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41cab67df66fbe1fbfdd5becd15bbc4a8585">ES09</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41caf58b754169ac9c2928472f57f73e1610">ES11</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca5cd3d32886412288e18a345898146b8d">CV1</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TrackingOrigin</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a6d5277b84d2b8c94d19de5cbeaa45fc7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a6d5277b84d2b8c94d19de5cbeaa45fc7a16d89336a4617fb6b87763d4b56139b7">EyeLevel</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a6d5277b84d2b8c94d19de5cbeaa45fc7acbd6ea814849130b29ce44bc70114c4b">FloorLevel</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TrackerFlag</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a0abd84c8f718932b3c2268e0e02310e7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a0abd84c8f718932b3c2268e0e02310e7a2ec0d16e4ca169baedb9b2d50ec5c6d7">Connected</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a0abd84c8f718932b3c2268e0e02310e7a03b7e73d85589978f9c3a063b8246508">PoseTracked</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a077525510ed427920eff7ae75ec5123f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa7fc56270e7a70fa81a5935b72eacbe29">A</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa9d5ed678fe57bcca610140957afab571">B</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa787cce7d516ae441abe97ffff79b08c8">RThumb</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa41a810fe24d1ea211a55337eaaa1e3d2">RShoulder</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123faa459ba7fb2f974adf6eba980f35f8d14">LThumb</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fafe788e67252c3049b894226c0c6ca5aa">LShoulder</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa258f49887ef8d14ac268c92b02503aaa">Up</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa08a38277b0309070706f6652eeae9a53">Down</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123faf1851d5600eae616ee802a31ac74701b">Enter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa0557fa923dcee4d0f86b1409f5c2167f">Back</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa685dec8174e7e1bbc0e7566fc30c72f0">VolUp</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa573c1456126efb9d131daea39f0c30ff">VolDown</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa8cf04a9734132302f96da8e113e80ce5">Home</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Touch</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a5a7392511ba112942f2528ff415ffeac</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca7fc56270e7a70fa81a5935b72eacbe29">A</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca9d5ed678fe57bcca610140957afab571">B</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca787cce7d516ae441abe97ffff79b08c8">RThumb</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeacaa459ba7fb2f974adf6eba980f35f8d14">LThumb</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca0501589371e70c45f36658f9bb4b7843">RIndexTrigger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca539fc444c6c42c09fec1c86daa96b8a2">LIndexTrigger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeacacfe67b27ee94b2453d80c20089a65d9e">RIndexPointing</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeacad68850271da7c45858aa8df755601922">RThumbUp</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca522257548de440cb48251ce74a036633">LIndexPointing</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca3bbcb71d84685fa1383e07d91a3cf011">LThumbUp</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ControllerType</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>aad674320383d77fc5e7a9f028ea56843</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843a253c104ad721758c8c0654a6878f47ff">LTouch</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843a02f85d6ee062327d58a289335f56fca1">RTouch</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843af0f31c9700c6b10d8a20dc487b2ae6a8">Touch</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843af8508f576cd3f742dfc268258dcdf0dd">Remote</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843ad7a5c7a13c0838c399a34112f46676b6">XBox</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843a4d3d769b812b6faa6b76e1a8abaece2d">Active</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StatusFlag</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a018508181e5fd5575105208b3c9f5a65</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a018508181e5fd5575105208b3c9f5a65a6a8886de54f4886e42898ef3b017442b">OrientationTracked</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a018508181e5fd5575105208b3c9f5a65ab7ddf1ada4f53b9481038b4bf8c6cc56">PositionTracked</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SessionStatusFlag</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a05fe9e5cf2c3f76cad37febcfda1569f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa149c5e61355c8de0943d094e18471195">IsVisible</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa173e3971d0e0a2e4de01a20ce02864a2">HmdPresent</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa7007260d2109c1b8a5614f339d6de495">HmdMounted</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa89dad51f4ce3c9e37a4581346d338a8a">DisplayLost</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fae991b8c66aad662cea8ca5bdeb073dee">ShouldQuit</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa706fe46f20c4f4f109d18310acd81c72">ShouldRecenter</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MirrorOption</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a9dff944a2e05defc83e91e2ce98ca7a4</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a9dff944a2e05defc83e91e2ce98ca7a4a7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a9dff944a2e05defc83e91e2ce98ca7a4a1c07db0406abec4adeb373993bbaf223">PostDistortion</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a9dff944a2e05defc83e91e2ce98ca7a4ac35d9d190345702a11cc451c6d42f275">LeftEyeOnly</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a9dff944a2e05defc83e91e2ce98ca7a4a9d6d844ca936c88d43ad042269f64969">RightEyeOnly</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a9dff944a2e05defc83e91e2ce98ca7a4a017ed27d843c069b6f807d0670965ca3">IncludeGuardian</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a9dff944a2e05defc83e91e2ce98ca7a4a163cd5f4593cd178a7eef7aa98ce5b92">IncludeNotifications</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a9dff944a2e05defc83e91e2ce98ca7a4a664f7011f202aa7a4bd25b1a08dc3c52">IncludeSystemGui</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PerformanceHudMode</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a13dbe6c3cff28c02def2998200ae32ba</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baad15305d7a4e34e02489c74a5ef542f36">Off</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baaa753651df182d2d54712d863b9af4f0d">PerfSummary</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baa03eb527e4457d835779020ea5b946e4e">LatencyTiming</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baafa4e966fc32d9ddcd5084b98cbb26f4f">AppRenderTiming</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baa376814a1f428866975b538385cc67810">CompRenderTiming</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baa9db78fd43c596601aa891c5c656a078d">VersionInfo</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DebugHudStereoMode</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a981bf665fe55ea30d79c251cb8dd3dae</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a981bf665fe55ea30d79c251cb8dd3daead15305d7a4e34e02489c74a5ef542f36">Off</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a981bf665fe55ea30d79c251cb8dd3daeae9017664588010860a92ceb5f8fcb824">Quad</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a981bf665fe55ea30d79c251cb8dd3daeace19873f7b7fd296a0c3b514c6562d37">QuadWithCrosshair</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a981bf665fe55ea30d79c251cb8dd3daeaab6e7a65e73a0fc5d343d78c616d7e6d">CrosshairAtInfinity</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LayerHudMode</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a7457b8480db6553349312d38e10ee2d3</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a7457b8480db6553349312d38e10ee2d3ad15305d7a4e34e02489c74a5ef542f36">Off</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a7457b8480db6553349312d38e10ee2d3a4059b0251f66a18cb56f544728796875">Info</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ErrorType</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>adabeb393adcab6691d7250753ef6582c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cadfa6c4e376d67452db5b14bb40d4d9a0">MemoryAllocationFailure</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca082b94968d127d17abb24a69da6cda56">InvalidSession</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cac85a251cc457840f1e032f1b733e9398">Timeout</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca9646ad3a1c3e708b4fa8b4b4270fbab6">NotInitialized</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca627251310d3384b591e4138be21145d5">InvalidParameter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca112197d9297e3f816e50aa133dc6dd5e">ServiceError</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caff59267aa541879a068a88355d62f058">NoHmd</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cab4080bdf74febf04d578ff105cce9d3f">Unsupported</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca758b1a8856a2f8715b9c898ae0a57c14">DeviceUnavailable</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca49c2d0b56e40fadbdc0c2a9fd4315524">InvalidHeadsetOrientation</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca7eb9535c8784e5d2aa3a652471c1a7b4">ClientSkippedDestroy</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cae813f5801e9ff3e49091c0aafe8965a9">ClientSkippedShutdown</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cad509009f13c4de2c1177bc2d363b73e8">AudioDeviceNotFound</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cafc426c134912a0008fc9c7a48263c5df">AudioComError</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca223e06f5cb15fc701ea1e686f7934f4f">Initialize</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca7133af63cf13b9725dff98d146b3ccff">LibLoad</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca4491810b1469ebfe9ed1c40221d2c4d8">LibVersion</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caece78a70b624b88f562799ec52ddb02d">ServiceConnection</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca43ea2ee41bedd266ad7da264884ca5c5">ServiceVersion</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca4a9681314bd727c21cb6ed804911e6d7">IncompatibleOs</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca7ae7a1fe2dc931469a6534b9262d6fc4">DisplayInit</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca79ba98cd5eb4e6dae3995d81fd0e6ad4">ServerStart</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caf10363860dd5bc034f3078e1c30541b7">Reinitialization</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca9cc6505cca9015da503dfdd9bb62b7d0">MismatchedAdapters</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caad61a17a5106a6821235602778309b84">LeakingResources</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca5fa6776d2b97bf9fc75a006d96516129">ClientVersion</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca2680972d5946d0faa51f71d1a7ec8646">OutOfDateOs</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caf21d6d4d86c3d104e5ee7b120b1f90af">OutOfDateGfxDriver</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cac022b6a8e903db3815747953baa21b19">IncompatibleGpu</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca03ebe1b3b069f637eb93f06c30916350">NoValidVrDisplaySystem</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caec30c235d0eb792797af1aa1d11759a7">Obsolete</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caf9717c4a65ac4604bbf0a6e2288b3d87">DisabledOrDefaultAdapter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cad516cecd05c0c1d9f6196a02d925617a">HybridGraphicsNotSupported</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca486fac754172c31f16df1fbadf62e4e8">DisplayManagerInit</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cac5a395ab4d788f57bd18171ccc9f78fa">TrackerDriverInit</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca89dad51f4ce3c9e37a4581346d338a8a">DisplayLost</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca01ac2fb3024f7f373266fa56ecb33ded">TextureSwapChainFull</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca21927b16639259e410f2054322ad64b8">TextureSwapChainInvalid</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca15452a9b0f2356c3dabe720a67728b3d">RuntimeException</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a650d4953f7d4d211f4d022d50d616538</anchor>
      <arglist>(Debug &amp;debug, HmdType value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a73ce87139dacba79763659aaeebc170c</anchor>
      <arglist>(Debug &amp;debug, TrackingOrigin value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a75fcd47c56139a2a51ac70f958ff8615</anchor>
      <arglist>(Debug &amp;debug, TrackerFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>ab05854774e0c74850a6258734e56e1f6</anchor>
      <arglist>(Debug &amp;debug, Button value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>af1ee6d0c448e1a216f8414fc842687af</anchor>
      <arglist>(Debug &amp;debug, Touch value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>aa8726fd40080c94c7dd03067313b095f</anchor>
      <arglist>(Debug &amp;debug, ControllerType value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a79df2b6b9a2e08ae0a76732f970c7920</anchor>
      <arglist>(Debug &amp;debug, StatusFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>ae84582e8ef8bdf12136fbd05d443c4ca</anchor>
      <arglist>(Debug &amp;debug, SessionStatusFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a1790323104ce92acab9a4ad5fc784bfc</anchor>
      <arglist>(Debug &amp;debug, MirrorOption value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a4d12129038f2a71b3f7ae7a4852b5755</anchor>
      <arglist>(Debug &amp;debug, PerformanceHudMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a3bbf933e98ed3cf875a09525f71171f3</anchor>
      <arglist>(Debug &amp;debug, DebugHudStereoMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>aa1582c7807ce82ce4c3dfcf394049404</anchor>
      <arglist>(Debug &amp;debug, LayerHudMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a340c9be88a1f969d3a34dc53af11f808</anchor>
      <arglist>(Debug &amp;debug, ErrorType value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Integration.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Vk/</path>
    <filename>src_2Magnum_2Vk_2Integration_8h</filename>
    <includes id="Vulkan_8h" name="Vulkan.h" local="yes" imported="no">Magnum/Vk/Vulkan.h</includes>
    <includes id="Range_8h" name="Range.h" local="yes" imported="no">Magnum/Math/Range.h</includes>
  </compound>
  <compound kind="file">
    <name>Integration.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/BulletIntegration/</path>
    <filename>integration_2src_2Magnum_2BulletIntegration_2Integration_8h</filename>
    <includes id="RectangularMatrix_8h" name="RectangularMatrix.h" local="no" imported="no">Magnum/Math/RectangularMatrix.h</includes>
    <includes id="Quaternion_8h" name="Quaternion.h" local="no" imported="no">Magnum/Math/Quaternion.h</includes>
  </compound>
  <compound kind="file">
    <name>Integration.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/EigenIntegration/</path>
    <filename>integration_2src_2Magnum_2EigenIntegration_2Integration_8h</filename>
    <includes id="RectangularMatrix_8h" name="RectangularMatrix.h" local="no" imported="no">Magnum/Math/RectangularMatrix.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::EigenIntegration</namespace>
    <member kind="function">
      <type>To</type>
      <name>cast</name>
      <anchorfile>namespaceMagnum_1_1EigenIntegration.html</anchorfile>
      <anchor>a40db605de7a5d9c8b15f196bc0845bff</anchor>
      <arglist>(const Math::RectangularMatrix&lt; cols, rows, T &gt; &amp;from)</arglist>
    </member>
    <member kind="function">
      <type>To</type>
      <name>cast</name>
      <anchorfile>namespaceMagnum_1_1EigenIntegration.html</anchorfile>
      <anchor>a89a0a154797fefb7981c775b360d55f7</anchor>
      <arglist>(const Math::BoolVector&lt; size &gt; &amp;from)</arglist>
    </member>
    <member kind="function">
      <type>To</type>
      <name>cast</name>
      <anchorfile>namespaceMagnum_1_1EigenIntegration.html</anchorfile>
      <anchor>a4308a5265e28841c0cdf03efec45b339</anchor>
      <arglist>(const Math::Vector&lt; size, T &gt; &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Integration.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/GlmIntegration/</path>
    <filename>integration_2src_2Magnum_2GlmIntegration_2Integration_8h</filename>
    <includes id="RectangularMatrix_8h" name="RectangularMatrix.h" local="yes" imported="no">Magnum/Math/RectangularMatrix.h</includes>
    <namespace>glm</namespace>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a30cf76751007173e49ff7cef42b136d9</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tvec2&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>ac533b80b1781dd4253f50af3ed78ef97</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tvec3&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a8e3d489cd56144ef2af7f9a5014c0ba4</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tvec4&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a2dc0b50009622e8e6f20dcfb0a596ca9</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tmat2x2&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a394b9a3f3df5771911903561dc800552</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tmat2x3&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a56b110ab8d7db8c7614b78403b636da7</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tmat2x4&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a62df7705d08190731d4b201369932477</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tmat3x2&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a0763b838f503260ebdd45cec6a7ebde9</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tmat3x3&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a66fe19ca0dbba500bb364631ff5875eb</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tmat3x4&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a63467965b6a89cd527945ed0f2f6b66c</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tmat4x2&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a4e9ba698fa6151dc9455d013c2bcbb2c</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tmat4x3&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>ac095fd8f379413589eb48db128b4de06</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tmat4x4&lt; T, q &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Integration.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/ImGuiIntegration/</path>
    <filename>integration_2src_2Magnum_2ImGuiIntegration_2Integration_8h</filename>
    <includes id="Types_8h" name="Types.h" local="no" imported="no">Magnum/Types.h</includes>
    <includes id="Math_2Vector_8h" name="Vector.h" local="no" imported="no">Magnum/Math/Vector.h</includes>
  </compound>
  <compound kind="file">
    <name>Integration.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/OvrIntegration/</path>
    <filename>integration_2src_2Magnum_2OvrIntegration_2Integration_8h</filename>
    <includes id="Range_8h" name="Range.h" local="no" imported="no">Magnum/Math/Range.h</includes>
    <includes id="Math_2Vector_8h" name="Vector.h" local="no" imported="no">Magnum/Math/Vector.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="no" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="Quaternion_8h" name="Quaternion.h" local="no" imported="no">Magnum/Math/Quaternion.h</includes>
    <includes id="DualQuaternion_8h" name="DualQuaternion.h" local="no" imported="no">Magnum/Math/DualQuaternion.h</includes>
  </compound>
  <compound kind="file">
    <name>Vk.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Vk/</path>
    <filename>Vk_8h</filename>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Vk</namespace>
  </compound>
  <compound kind="file">
    <name>Vulkan.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Vk/</path>
    <filename>Vulkan_8h</filename>
  </compound>
  <compound kind="file">
    <name>AnyImporter.h</name>
    <path>/home/mosra/Code/magnum/src/MagnumPlugins/AnyAudioImporter/</path>
    <filename>AnyImporter_8h</filename>
    <includes id="Audio_2AbstractImporter_8h" name="AbstractImporter.h" local="yes" imported="no">Magnum/Audio/AbstractImporter.h</includes>
    <class kind="class">Magnum::Audio::AnyImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
  </compound>
  <compound kind="file">
    <name>AnyImageConverter.h</name>
    <path>/home/mosra/Code/magnum/src/MagnumPlugins/AnyImageConverter/</path>
    <filename>AnyImageConverter_8h</filename>
    <includes id="AbstractImageConverter_8h" name="AbstractImageConverter.h" local="yes" imported="no">Magnum/Trade/AbstractImageConverter.h</includes>
    <class kind="class">Magnum::Trade::AnyImageConverter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>AnyImageImporter.h</name>
    <path>/home/mosra/Code/magnum/src/MagnumPlugins/AnyImageImporter/</path>
    <filename>AnyImageImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="yes" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::AnyImageImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>AnySceneImporter.h</name>
    <path>/home/mosra/Code/magnum/src/MagnumPlugins/AnySceneImporter/</path>
    <filename>AnySceneImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="yes" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::AnySceneImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>MagnumFont.h</name>
    <path>/home/mosra/Code/magnum/src/MagnumPlugins/MagnumFont/</path>
    <filename>MagnumFont_8h</filename>
    <includes id="AbstractFont_8h" name="AbstractFont.h" local="yes" imported="no">Magnum/Text/AbstractFont.h</includes>
    <class kind="class">Magnum::Text::MagnumFont</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
  </compound>
  <compound kind="file">
    <name>MagnumFontConverter.h</name>
    <path>/home/mosra/Code/magnum/src/MagnumPlugins/MagnumFontConverter/</path>
    <filename>MagnumFontConverter_8h</filename>
    <includes id="AbstractFontConverter_8h" name="AbstractFontConverter.h" local="yes" imported="no">Magnum/Text/AbstractFontConverter.h</includes>
    <class kind="class">Magnum::Text::MagnumFontConverter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
  </compound>
  <compound kind="file">
    <name>ObjImporter.h</name>
    <path>/home/mosra/Code/magnum/src/MagnumPlugins/ObjImporter/</path>
    <filename>ObjImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="yes" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::ObjImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>TgaImageConverter.h</name>
    <path>/home/mosra/Code/magnum/src/MagnumPlugins/TgaImageConverter/</path>
    <filename>TgaImageConverter_8h</filename>
    <includes id="AbstractImageConverter_8h" name="AbstractImageConverter.h" local="yes" imported="no">Magnum/Trade/AbstractImageConverter.h</includes>
    <class kind="class">Magnum::Trade::TgaImageConverter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>TgaImporter.h</name>
    <path>/home/mosra/Code/magnum/src/MagnumPlugins/TgaImporter/</path>
    <filename>TgaImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="yes" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::TgaImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>WavImporter.h</name>
    <path>/home/mosra/Code/magnum/src/MagnumPlugins/WavAudioImporter/</path>
    <filename>WavImporter_8h</filename>
    <includes id="Audio_2AbstractImporter_8h" name="AbstractImporter.h" local="yes" imported="no">Magnum/Audio/AbstractImporter.h</includes>
    <class kind="class">Magnum::Audio::WavImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
  </compound>
  <compound kind="class">
    <name>AbstractBasicTranslationRotation3D&lt; btScalar &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</filename>
    <base>Magnum::SceneGraph::AbstractTranslation</base>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a0bd51880d3a81804056476390a0a6107</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle, const Math::Vector3&lt; btScalar &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a82e9eb5eef081b6c8456185c0f3a2cf9</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle, const Math::Vector3&lt; btScalar &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotateX</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a64f7281a7cf5a346bdd17c361462149a</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotateXLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>aa474a071ab087ea66f66e05534467af2</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotateY</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a173e0633663b8b735042b2937e12b0c3</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotateYLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad80f968e497178612267004c0873235b</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotateZ</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a3d8f9942fcba8fb49ea2ea7d928d6422</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotateZLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a82fe5b472338a31166abdbcd47e2bd5e</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doRotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad0a53ace7dace831a04645b506e38b3b</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle, const Math::Vector3&lt; btScalar &gt; &amp;normalizedAxis)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doRotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad1fd68194dd06f6eca323ccc01356914</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle, const Math::Vector3&lt; btScalar &gt; &amp;normalizedAxis)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateX</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad1c6934dbd6184e051cdf68ecc7bff9d</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateXLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ae178eb9da782ad4dd49dfae458919c65</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateY</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a5029eaa35ec05d318f49af5aa7226494</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateYLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a731255196c113375304ac8f668da2efe</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateZ</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a87ca173ab4afe918be59544ca749d41d</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateZLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>aa72727d90a1e236694992d65c6f88012</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractBasicTranslationRotation3D&lt; Float &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</filename>
    <base>Magnum::SceneGraph::AbstractTranslation</base>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; Float &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a0bd51880d3a81804056476390a0a6107</anchor>
      <arglist>(Math::Rad&lt; Float &gt; angle, const Math::Vector3&lt; Float &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; Float &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a82e9eb5eef081b6c8456185c0f3a2cf9</anchor>
      <arglist>(Math::Rad&lt; Float &gt; angle, const Math::Vector3&lt; Float &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; Float &gt; &amp;</type>
      <name>rotateX</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a64f7281a7cf5a346bdd17c361462149a</anchor>
      <arglist>(Math::Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; Float &gt; &amp;</type>
      <name>rotateXLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>aa474a071ab087ea66f66e05534467af2</anchor>
      <arglist>(Math::Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; Float &gt; &amp;</type>
      <name>rotateY</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a173e0633663b8b735042b2937e12b0c3</anchor>
      <arglist>(Math::Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; Float &gt; &amp;</type>
      <name>rotateYLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad80f968e497178612267004c0873235b</anchor>
      <arglist>(Math::Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; Float &gt; &amp;</type>
      <name>rotateZ</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a3d8f9942fcba8fb49ea2ea7d928d6422</anchor>
      <arglist>(Math::Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; Float &gt; &amp;</type>
      <name>rotateZLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a82fe5b472338a31166abdbcd47e2bd5e</anchor>
      <arglist>(Math::Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doRotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad0a53ace7dace831a04645b506e38b3b</anchor>
      <arglist>(Math::Rad&lt; Float &gt; angle, const Math::Vector3&lt; Float &gt; &amp;normalizedAxis)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doRotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad1fd68194dd06f6eca323ccc01356914</anchor>
      <arglist>(Math::Rad&lt; Float &gt; angle, const Math::Vector3&lt; Float &gt; &amp;normalizedAxis)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateX</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad1c6934dbd6184e051cdf68ecc7bff9d</anchor>
      <arglist>(Math::Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateXLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ae178eb9da782ad4dd49dfae458919c65</anchor>
      <arglist>(Math::Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateY</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a5029eaa35ec05d318f49af5aa7226494</anchor>
      <arglist>(Math::Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateYLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a731255196c113375304ac8f668da2efe</anchor>
      <arglist>(Math::Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateZ</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a87ca173ab4afe918be59544ca749d41d</anchor>
      <arglist>(Math::Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateZLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>aa72727d90a1e236694992d65c6f88012</anchor>
      <arglist>(Math::Rad&lt; Float &gt; angle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractFeature&lt; dimensions, Float &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</filename>
    <member kind="typedef">
      <type>Float</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>ae46f7c4e7782887a6f0adc7b595f9a62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a1f34f30eee991b385368a2e2141362aaa45b8f069dab211723b626669099a0efe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a78a530462af23b21680c6aa75685c252</anchor>
      <arglist>(AbstractObject&lt; dimensions, Float &gt; &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>AbstractObject&lt; dimensions, Float &gt; &amp;</type>
      <name>object</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>adc44a031112415d9cd010380fc670b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractObject&lt; dimensions, Float &gt; &amp;</type>
      <name>object</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a237c9abc1cb4010dda511825b2d15125</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AbstractFeature&lt; dimensions, Float &gt; *</type>
      <name>previousFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>abe61d4c55eda93fdb415a3734b9a45d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractFeature&lt; dimensions, Float &gt; *</type>
      <name>previousFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a9d7fc26a0ac2e62103c0232f0c2c0071</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AbstractFeature&lt; dimensions, Float &gt; *</type>
      <name>nextFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a1647868b435f6b609f26bccecf38194a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractFeature&lt; dimensions, Float &gt; *</type>
      <name>nextFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a1180a9c4b4706e47abaaf4f52362e6dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CachedTransformations</type>
      <name>cachedTransformations</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a74f67c6af5da8d3c6100884780bb534b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setCachedTransformations</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a4b357ec06a582d0eef270eca88134a33</anchor>
      <arglist>(CachedTransformations transformations)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>markDirty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>af0c9721f8f2614db3364575d58695263</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>clean</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>ac7f9f08cd976bc728589cc5eb607b814</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;absoluteTransformationMatrix)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>cleanInverted</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a38a4e3c18ff8a2636a533af17f6f79db</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;invertedAbsoluteTransformationMatrix)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractFeatureGroup&lt; dimensions, Float &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractFeatureGroup.html</filename>
    <member kind="typedef">
      <type>Float</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeatureGroup.html</anchorfile>
      <anchor>a767069973ed10529cccc040f4c6d3a59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeatureGroup.html</anchorfile>
      <anchor>a79bdcf1f63a1fa95bc27fb226f954833aa7627efe2cc08f214ba59acf0c1a23d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractGroupedFeature&lt; dimensions, Animable&lt; dimensions, T &gt;, T &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</filename>
    <base>Magnum::SceneGraph::AbstractFeature</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a2c0d4b144aea6e54c7a12fb0a8965827</anchor>
      <arglist>(AbstractObject&lt; dimensions, T &gt; &amp;object, FeatureGroup&lt; dimensions, Animable&lt; dimensions, T &gt;, T &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>ad05374ec9886805cd53d6f32f0a2dedd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Animable&lt; dimensions, T &gt;, T &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a670e9a5ed8e81ed9ea5b819e3af01ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FeatureGroup&lt; dimensions, Animable&lt; dimensions, T &gt;, T &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a3382ca1d30c0cc075a37c7c44908c9d0</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractGroupedFeature&lt; dimensions, Drawable&lt; dimensions, Float &gt;, Float &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</filename>
    <base>AbstractFeature&lt; dimensions, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a2c0d4b144aea6e54c7a12fb0a8965827</anchor>
      <arglist>(AbstractObject&lt; dimensions, Float &gt; &amp;object, FeatureGroup&lt; dimensions, Drawable&lt; dimensions, Float &gt;, Float &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>ad05374ec9886805cd53d6f32f0a2dedd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, Float &gt;, Float &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a670e9a5ed8e81ed9ea5b819e3af01ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FeatureGroup&lt; dimensions, Drawable&lt; dimensions, Float &gt;, Float &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a3382ca1d30c0cc075a37c7c44908c9d0</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractGroupedFeature&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</filename>
    <base>Magnum::SceneGraph::AbstractFeature</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a2c0d4b144aea6e54c7a12fb0a8965827</anchor>
      <arglist>(AbstractObject&lt; dimensions, T &gt; &amp;object, FeatureGroup&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>ad05374ec9886805cd53d6f32f0a2dedd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a670e9a5ed8e81ed9ea5b819e3af01ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FeatureGroup&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a3382ca1d30c0cc075a37c7c44908c9d0</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractGroupedFeature&lt; dimensions, Playable&lt; dimensions &gt;, Float &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</filename>
    <base>AbstractFeature&lt; dimensions, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a2c0d4b144aea6e54c7a12fb0a8965827</anchor>
      <arglist>(AbstractObject&lt; dimensions, Float &gt; &amp;object, FeatureGroup&lt; dimensions, Playable&lt; dimensions &gt;, Float &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>ad05374ec9886805cd53d6f32f0a2dedd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Playable&lt; dimensions &gt;, Float &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a670e9a5ed8e81ed9ea5b819e3af01ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FeatureGroup&lt; dimensions, Playable&lt; dimensions &gt;, Float &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a3382ca1d30c0cc075a37c7c44908c9d0</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractObject&lt; Float &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractObject.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a3d90e3f9773b7715597c5f60a99110e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MatrixTypeFor&lt; dimensions, T &gt;</type>
      <name>MatrixType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aea88321960cf363a0b35952364d1ab3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractFeature&lt; dimensions, T &gt;</type>
      <name>FeatureType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ae8eb1f97426f2316226d1977ac762664</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ae011a6873ee3cb00dd0aa05b37130ba4a8882e03487645308e46eb0a564f50f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Containers::LinkedList&lt; AbstractFeature&lt; dimensions, T &gt; &gt; &amp;</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aa663eab19821dcb91e48d2f09eb4661f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Containers::LinkedList&lt; AbstractFeature&lt; dimensions, T &gt; &gt; &amp;</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ada1cac962d725dfe594d7acd26ef78e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>U &amp;</type>
      <name>addFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a1b700addb5404a8f121add73dbde0240</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>AbstractObject&lt; dimensions, T &gt; *</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aa456e847f56bd37b21307b7867e7498e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractObject&lt; dimensions, T &gt; *</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>afdfded55dadaa68a0c466393e1b265db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AbstractObject&lt; dimensions, T &gt; *</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ac52e5679ebdb34c4639dddeaad14be8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractObject&lt; dimensions, T &gt; *</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a71f3bf3cb4ebcbd5b7e84939d34b6209</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>transformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a0705e248f30dc70ebc1426d81e127771</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>absoluteTransformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ada530933bba90f902ed207ff12081b1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MatrixType &gt;</type>
      <name>transformationMatrices</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ac3c4223178480aac5c602c9f1fc459db</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; AbstractObject&lt; dimensions, T &gt;&gt;&gt; &amp;objects, const MatrixType &amp;initialTransformationMatrix=MatrixType()) const</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>transformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a0705e248f30dc70ebc1426d81e127771</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>absoluteTransformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ada530933bba90f902ed207ff12081b1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MatrixType &gt;</type>
      <name>transformationMatrices</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ac3c4223178480aac5c602c9f1fc459db</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; AbstractObject&lt; dimensions, T &gt;&gt;&gt; &amp;objects, const MatrixType &amp;initialTransformationMatrix=MatrixType()) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClean</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aed9299e2b1248ad3fdd9e06c0b9297af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a399c159cbc2371cbefd806850874e1c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a5c3d16b95cb6955188cd710cd01faca5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setClean</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a355409a5a8fb73443fbced50092462dd</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; AbstractObject&lt; dimensions, T &gt;&gt;&gt; &amp;objects)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractObject&lt; Transformation::Dimensions, Transformation::Type &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractObject.html</filename>
    <member kind="typedef">
      <type>Transformation::Type</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a3d90e3f9773b7715597c5f60a99110e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MatrixTypeFor&lt; dimensions, Transformation::Type &gt;</type>
      <name>MatrixType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aea88321960cf363a0b35952364d1ab3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractFeature&lt; dimensions, Transformation::Type &gt;</type>
      <name>FeatureType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ae8eb1f97426f2316226d1977ac762664</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ae011a6873ee3cb00dd0aa05b37130ba4a8882e03487645308e46eb0a564f50f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Containers::LinkedList&lt; AbstractFeature&lt; dimensions, Transformation::Type &gt; &gt; &amp;</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aa663eab19821dcb91e48d2f09eb4661f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Containers::LinkedList&lt; AbstractFeature&lt; dimensions, Transformation::Type &gt; &gt; &amp;</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ada1cac962d725dfe594d7acd26ef78e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>U &amp;</type>
      <name>addFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a1b700addb5404a8f121add73dbde0240</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>AbstractObject&lt; dimensions, Transformation::Type &gt; *</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aa456e847f56bd37b21307b7867e7498e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractObject&lt; dimensions, Transformation::Type &gt; *</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>afdfded55dadaa68a0c466393e1b265db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AbstractObject&lt; dimensions, Transformation::Type &gt; *</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ac52e5679ebdb34c4639dddeaad14be8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractObject&lt; dimensions, Transformation::Type &gt; *</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a71f3bf3cb4ebcbd5b7e84939d34b6209</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>transformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a0705e248f30dc70ebc1426d81e127771</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>absoluteTransformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ada530933bba90f902ed207ff12081b1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MatrixType &gt;</type>
      <name>transformationMatrices</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ac3c4223178480aac5c602c9f1fc459db</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; AbstractObject&lt; dimensions, Transformation::Type &gt;&gt;&gt; &amp;objects, const MatrixType &amp;initialTransformationMatrix=MatrixType()) const</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>transformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a0705e248f30dc70ebc1426d81e127771</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>absoluteTransformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ada530933bba90f902ed207ff12081b1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MatrixType &gt;</type>
      <name>transformationMatrices</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ac3c4223178480aac5c602c9f1fc459db</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; AbstractObject&lt; dimensions, Transformation::Type &gt;&gt;&gt; &amp;objects, const MatrixType &amp;initialTransformationMatrix=MatrixType()) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClean</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aed9299e2b1248ad3fdd9e06c0b9297af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a399c159cbc2371cbefd806850874e1c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a5c3d16b95cb6955188cd710cd01faca5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setClean</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a355409a5a8fb73443fbced50092462dd</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; AbstractObject&lt; dimensions, Transformation::Type &gt;&gt;&gt; &amp;objects)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array3D&lt; SamplerWrapping &gt;</name>
    <filename>classMagnum_1_1Array3D.html</filename>
    <base>Array&lt; 3, SamplerWrapping &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Array3D</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a0ad730b1a5c83d6ed76733ff6f88efd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array3D</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>abcde5d5b0866569d72e1d8c32b55a0e6</anchor>
      <arglist>(SamplerWrapping x, SamplerWrapping y, SamplerWrapping z)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array3D</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a2939e8a313c4525eb29978a1fc00e82b</anchor>
      <arglist>(SamplerWrapping value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array3D</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a5ecdf537fdbff58b291c4e579250d3a5</anchor>
      <arglist>(const Array&lt; 3, SamplerWrapping &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SamplerWrapping &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>aefb47d61179ebec5bb4c00f47269fd76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr SamplerWrapping</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>add6619dde92e521a47242f7f9f9b42c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SamplerWrapping &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>af1853b7cdbcc3004d995972e26a49265</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr SamplerWrapping</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>abc14adaca0e16f87f471112687c44987</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SamplerWrapping &amp;</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a250a0dd7eabb1ddb78124b745c7b316a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr SamplerWrapping</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a94044628df1ff122118165df37b76fa5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array2D&lt; SamplerWrapping &gt; &amp;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>acb8a90e0c35f28e8ed6e01dc6657216b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Array2D&lt; SamplerWrapping &gt;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>abd60714a0e73c29fcdb166a53b870856</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>ac95c370506ed1052ae50af8d3ab81fd1</anchor>
      <arglist>(Debug &amp;debug, const Array3D&lt; SamplerWrapping &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; 1, T &gt;</name>
    <filename>classMagnum_1_1Array.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a5d842ed4765a588e0682657c4d679c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a21c71dec8770e0c727c4a286a2f049e5a02e765ef0586f2a00aa3e8d8b6b6f54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a013f4528a641a0f8027c2bc1e3f55c43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>abb597490d683336be56aad8c26c5194c</anchor>
      <arglist>(T first, U... next)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>ad49a96a54105662266219595c8aee9d6</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a268b915602679e424d5b5eb1076456bd</anchor>
      <arglist>(const Array&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a4154b7806db85af26fd97a579e2e999a</anchor>
      <arglist>(const Array&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a041cec7d0a7725649be58bf9bb6d4ecf</anchor>
      <arglist>(UnsignedInt pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aae3143046857a45eaf5b6fc319159fdc</anchor>
      <arglist>(UnsignedInt pos) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aeb8e629eca2e0c1e43562ba7479070c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a47a38ca25ed4d36dc3f5c225fabcf0b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a2c022de6a506d510afb76bef6f382f10</anchor>
      <arglist>(Debug &amp;debug, const Array&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; 2, T &gt;</name>
    <filename>classMagnum_1_1Array.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a5d842ed4765a588e0682657c4d679c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a21c71dec8770e0c727c4a286a2f049e5a02e765ef0586f2a00aa3e8d8b6b6f54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a013f4528a641a0f8027c2bc1e3f55c43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>abb597490d683336be56aad8c26c5194c</anchor>
      <arglist>(T first, U... next)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>ad49a96a54105662266219595c8aee9d6</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a268b915602679e424d5b5eb1076456bd</anchor>
      <arglist>(const Array&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a4154b7806db85af26fd97a579e2e999a</anchor>
      <arglist>(const Array&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a041cec7d0a7725649be58bf9bb6d4ecf</anchor>
      <arglist>(UnsignedInt pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aae3143046857a45eaf5b6fc319159fdc</anchor>
      <arglist>(UnsignedInt pos) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aeb8e629eca2e0c1e43562ba7479070c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a47a38ca25ed4d36dc3f5c225fabcf0b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a2c022de6a506d510afb76bef6f382f10</anchor>
      <arglist>(Debug &amp;debug, const Array&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; 3, SamplerWrapping &gt;</name>
    <filename>classMagnum_1_1Array.html</filename>
    <member kind="typedef">
      <type>SamplerWrapping</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a5d842ed4765a588e0682657c4d679c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a21c71dec8770e0c727c4a286a2f049e5a02e765ef0586f2a00aa3e8d8b6b6f54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a013f4528a641a0f8027c2bc1e3f55c43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>abb597490d683336be56aad8c26c5194c</anchor>
      <arglist>(SamplerWrapping first, U... next)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>ad49a96a54105662266219595c8aee9d6</anchor>
      <arglist>(SamplerWrapping value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a268b915602679e424d5b5eb1076456bd</anchor>
      <arglist>(const Array&lt; dimensions, SamplerWrapping &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a4154b7806db85af26fd97a579e2e999a</anchor>
      <arglist>(const Array&lt; dimensions, SamplerWrapping &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>SamplerWrapping &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a041cec7d0a7725649be58bf9bb6d4ecf</anchor>
      <arglist>(UnsignedInt pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr SamplerWrapping</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aae3143046857a45eaf5b6fc319159fdc</anchor>
      <arglist>(UnsignedInt pos) const</arglist>
    </member>
    <member kind="function">
      <type>SamplerWrapping *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aeb8e629eca2e0c1e43562ba7479070c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const SamplerWrapping *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a47a38ca25ed4d36dc3f5c225fabcf0b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a2c022de6a506d510afb76bef6f382f10</anchor>
      <arglist>(Debug &amp;debug, const Array&lt; dimensions, SamplerWrapping &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; 3, T &gt;</name>
    <filename>classMagnum_1_1Array.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a5d842ed4765a588e0682657c4d679c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a21c71dec8770e0c727c4a286a2f049e5a02e765ef0586f2a00aa3e8d8b6b6f54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a013f4528a641a0f8027c2bc1e3f55c43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>abb597490d683336be56aad8c26c5194c</anchor>
      <arglist>(T first, U... next)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>ad49a96a54105662266219595c8aee9d6</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a268b915602679e424d5b5eb1076456bd</anchor>
      <arglist>(const Array&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a4154b7806db85af26fd97a579e2e999a</anchor>
      <arglist>(const Array&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a041cec7d0a7725649be58bf9bb6d4ecf</anchor>
      <arglist>(UnsignedInt pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aae3143046857a45eaf5b6fc319159fdc</anchor>
      <arglist>(UnsignedInt pos) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aeb8e629eca2e0c1e43562ba7479070c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a47a38ca25ed4d36dc3f5c225fabcf0b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a2c022de6a506d510afb76bef6f382f10</anchor>
      <arglist>(Debug &amp;debug, const Array&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Attribute&lt; 3, Magnum::Color4 &gt;</name>
    <filename>classMagnum_1_1GL_1_1Attribute.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Components</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>ab3371da2ec2ba3f4c81a33afaa0f3661</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>a6c8c42c4e9b11dcac471cec52f6d237a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DataOption</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>aa7373912d758bbb4e93789a43bc79b1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Magnum::Color4</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>a9982ae5e955a8c6f1319ae4125e6717b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Implementation::Attribute&lt; Magnum::Color4 &gt;::ScalarType</type>
      <name>ScalarType</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>a8d2f7092aaf4ec5a03510121cc55dae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; DataOption &gt;</type>
      <name>DataOptions</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>a3130d72c2c0d7ec9687d3bc9a0e593d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Location</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>ae12e97eb74e5777c97b9d75f3214bd00a645b5bab89078ca7f24d7284e0adf33b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VectorCount</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>ae12e97eb74e5777c97b9d75f3214bd00a40a1e7fed67ffb0db76b65bb5d33cf1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Attribute</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>a6c782cac6c6718b810b89de1fefad665</anchor>
      <arglist>(Components components, DataType dataType=Implementation::Attribute&lt; Magnum::Color4 &gt;::DefaultDataType, DataOptions dataOptions=DataOptions())</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Attribute</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>a45e31cbb916df4caf284ec3b7708045d</anchor>
      <arglist>(DataType dataType=Implementation::Attribute&lt; Magnum::Color4 &gt;::DefaultDataType, DataOptions dataOptions=DataOptions())</arglist>
    </member>
    <member kind="function">
      <type>constexpr Components</type>
      <name>components</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>a40e4a11fcf5cc9ed4ee8ba60a38c104f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr DataType</type>
      <name>dataType</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>aa6881d4d1126d7652acee2ee3aaae61a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>vectorSize</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>ad1e4823c81ac0d22bd0f024461955570</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr DataOptions</type>
      <name>dataOptions</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>ac2da4d4381a40cfa9f6ba55ca762466d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>a0eb7a0597aa54dac06f74058f7591913</anchor>
      <arglist>(Debug &amp;debug, Attribute&lt; Magnum::Color4 &gt;::Components)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>a74a95cad0d549a952ac6a097e5c92b0b</anchor>
      <arglist>(Debug &amp;debug, Attribute&lt; Magnum::Color4 &gt;::DataType)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BasicGLLayer&lt; TextVertex &gt;</name>
    <filename>classMagnum_1_1Ui_1_1BasicGLLayer.html</filename>
    <base>Magnum::Ui::BasicLayer</base>
    <member kind="function">
      <type>GL::Buffer &amp;</type>
      <name>buffer</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>a8909cc4283c1464cd68e3a202350d474</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GL::Mesh &amp;</type>
      <name>mesh</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>aa5a9084051e3df1791d8d935b57b7590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>aa9844639f981d566b44e7fd9a560ad8f</anchor>
      <arglist>(std::size_t elementCapacity, std::size_t dataCapacity, GL::BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>ae0cb956dbed82c1fc7cabcd67d31a35e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>a4a3a47a9d5f8fd9e235b646066fd11e7</anchor>
      <arglist>(AbstractUiShader &amp;shader)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BasicInstancedGLLayer&lt; QuadInstance &gt;</name>
    <filename>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</filename>
    <base>Magnum::Ui::BasicInstancedLayer</base>
    <member kind="function">
      <type>GL::Buffer &amp;</type>
      <name>buffer</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>a72d87e65a5c18662cbf4d11fd0af7078</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GL::Mesh &amp;</type>
      <name>mesh</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>a15e7f29b757f9b6f07f75b2afaa6b8cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>a225ebf8b6c117d77a82a9ac6407b852a</anchor>
      <arglist>(std::size_t capacity, GL::BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>ab44ea3d731a8fef5d8b23a968263ff4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>a32c8efb389dbe7b2113590a76ae5f143</anchor>
      <arglist>(AbstractUiShader &amp;shader)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BasicPlane&lt; Implementation::QuadLayer, Implementation::QuadLayer, Implementation::TextLayer &gt;</name>
    <filename>classMagnum_1_1Ui_1_1BasicPlane.html</filename>
    <base>Magnum::Ui::AbstractPlane</base>
    <member kind="function">
      <type></type>
      <name>BasicPlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>a6aef36d42b333694ed945998019e6a72</anchor>
      <arglist>(BasicUserInterface&lt; Layers... &gt; &amp;ui, const Anchor &amp;anchor, const Range2D &amp;padding, const Vector2 &amp;margin, Layers &amp;... layers)</arglist>
    </member>
    <member kind="function">
      <type>BasicUserInterface&lt; Layers... &gt; &amp;</type>
      <name>ui</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>ac37549266429d56219fe2d06b86d4402</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BasicUserInterface&lt; Layers... &gt; &amp;</type>
      <name>ui</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>ac272fa0a8b3b56009ed08c03a989821c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BasicPlane&lt; Layers... &gt; *</type>
      <name>previousActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>aae0d2e027c159d7fa0aa86f716a97bc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BasicPlane&lt; Layers... &gt; *</type>
      <name>previousActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>ae95870677da416b9f390b30e61178c7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BasicPlane&lt; Layers... &gt; *</type>
      <name>nextActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>a95bc95e91201688786836544dd21bee0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BasicPlane&lt; Layers... &gt; *</type>
      <name>nextActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>a301c36b5d2b7b1b5db3fde69f5bb4820</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>a7ba55309488e42143106e09c6ec3655a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BasicUserInterface&lt; Implementation::QuadLayer, Implementation::QuadLayer, Implementation::TextLayer &gt;</name>
    <filename>classMagnum_1_1Ui_1_1BasicUserInterface.html</filename>
    <base>Magnum::Ui::AbstractUserInterface</base>
    <member kind="function">
      <type></type>
      <name>BasicUserInterface</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicUserInterface.html</anchorfile>
      <anchor>a43c705722531f419107bda4147fe3906</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;windowSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicUserInterface.html</anchorfile>
      <anchor>a96b8eb29dd07c4a1b04c771513f852ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicUserInterface.html</anchorfile>
      <anchor>a9f6ce47411b19f87a3706cf08301d51c</anchor>
      <arglist>(const Containers::StaticArray&lt; sizeof...(Layers), Containers::Reference&lt; AbstractUiShader &gt;&gt; &amp;shaders)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BoolVector&lt; Implementation::ExtensionCount &gt;</name>
    <filename>classMagnum_1_1Math_1_1BoolVector.html</filename>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ad43cfac37b674bed68ea964c859c91c1a1687d1927ae165da75b463cbb593afaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DataSize</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ad43cfac37b674bed68ea964c859c91c1a1a7ca87098d157b8f6e5f874301ccad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BoolVector</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a5aedb24f182c55947dd77b5a71412570</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BoolVector</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>af6fb45b087c7175e6f7d8c282af9e8ce</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoolVector</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>aafc0cf95b7259bba289f7823ddab53ae</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BoolVector</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a25ea1a7ad197a44d95723680a7ab2384</anchor>
      <arglist>(UnsignedByte first, T... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoolVector</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a1ee5b3eb0414b0d5e41e8d9319a21fa6</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BoolVector</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a6136560a767709ac53cc836c63328a59</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BoolVector</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a32e0d0dd79dd34de89cd30ed5b0d9407</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a9a8566df74e806c251f8fa620c93e1f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedByte *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ad941981e7c128f15ca06c4dd2fbd7332</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const UnsignedByte *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a3b04b1691259ce1fe001f970582c8b48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a6ef644e93df29a37d3da4eebf1139a08</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt; &amp;</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ac0607188a716c624baa30ed44a5c735f</anchor>
      <arglist>(std::size_t i, bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a4826c2edde3a42d743038ae253fcd783</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a8292a7da3f1ab74667c4ee655292dbc0</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ad2e2f271fe2148b01fb3f82cd12cc58c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>all</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a85d0ab7ff56d7594e9d3ec7d400202dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>none</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a49d407193c1abce5f005939d7a5fc513</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>any</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a6c5d7b57ea3ac2a0b03d902836e144e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ad4e84e4ba2c021f6eac0e882425ca741</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator!</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>afcb151424bc10947f5a1c10d5f9e74ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ab4fabb0a2db04517c4f22fc9f358b4fc</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator &amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a353ec9869645a293dad68ca6f7969da1</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator &amp;&amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a59fc1338b42c90c64fc0de2b0233bde8</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>aadd51582e168a144e95fa9784a43e134</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>aaa584e4819e8aa52a8332997a79f84af</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator||</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a01f549325b2a2f11e7538ac53d806e35</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a712c1369f006c5c6939b1c1986a7556e</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>aa81df850f66d455d6b2c5546aacb56c7</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a05ecfedf1ed791f07d32b7d45d978432</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const BoolVector&lt; size &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Color4&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Color4.html</filename>
    <base>Vector4&lt; Float &gt;</base>
    <member kind="typedef">
      <type>Color3&lt; Float &gt;::FloatingPointType</type>
      <name>FloatingPointType</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a5b3e32cd0f193133504ccef2dfb5dc61</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::tuple&lt; Deg&lt; FloatingPointType &gt;, FloatingPointType, FloatingPointType &gt;</type>
      <name>Hsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>abeef62268e3583126a95e558a79e1233</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a3e73d9d3abc4b033bbb38ee1ea642bab</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a9c5f1880e7062cf7e0027470aa1761f6</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a796009a7631e5d687e40ab9ef26b7b3d</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a99c1f739fab793c9e4c0f65255e28b3b</anchor>
      <arglist>(Float rgb, Float alpha=Implementation::fullChannel&lt; Float &gt;()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a9317e9cebea34f140b4cb3662447d0c8</anchor>
      <arglist>(Float r, Float g, Float b, Float a=Implementation::fullChannel&lt; Float &gt;()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a640e8d95a9faa7564c40597ada282ab4</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;rgb, Float a=Implementation::fullChannel&lt; Float &gt;()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a5803e017a8019fe2d7755166b99de4ae</anchor>
      <arglist>(const Vector&lt; 4, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>ae1417108d82b436e60166f28bd51a4dc</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a40b0075a9217c25fd7bfa32340a5a211</anchor>
      <arglist>(const Vector&lt; 4, Float &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ColorHsv&lt; FloatingPointType &gt;</type>
      <name>toHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>aa4ece001536738f1acb2160d165ff2b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Deg&lt; FloatingPointType &gt;</type>
      <name>hue</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a04e818f657bcab9d064b2c5138edd438</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatingPointType</type>
      <name>saturation</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a5a4d833f266bb4a1ab6d8ff6e4c8ee27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatingPointType</type>
      <name>value</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a370619eb5a0910cb5eaed06fd4fce98b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4&lt; FloatingPointType &gt;</type>
      <name>toSrgbAlpha</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a01009d803817acaadcf5b045d417de3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4&lt; Integral &gt;</type>
      <name>toSrgbAlpha</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>aebc238e239975ebce4ac26f6a05950d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>toSrgbAlphaInt</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a19a310fd5718c1edd15c1110a1fa91eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; FloatingPointType &gt;</type>
      <name>toXyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a7339f6d4af8c0ce2d531cf78c572d890</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; Float &gt;</type>
      <name>red</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a784b2314a5f960bb91e11baadccd8ca7</anchor>
      <arglist>(Float red=Implementation::fullChannel&lt; Float &gt;(), Float alpha=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; Float &gt;</type>
      <name>green</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a8a5429704f834f4375371e620109b4f8</anchor>
      <arglist>(Float green=Implementation::fullChannel&lt; Float &gt;(), Float alpha=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; Float &gt;</type>
      <name>blue</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>ae0ce831e82daa97a2a694c16ecb20d07</anchor>
      <arglist>(Float blue=Implementation::fullChannel&lt; Float &gt;(), Float alpha=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; Float &gt;</type>
      <name>cyan</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a489b6778ff29a17b4d8f60c0b9b4c97c</anchor>
      <arglist>(Float red=Float(0), Float alpha=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; Float &gt;</type>
      <name>magenta</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a14f58e1fcfdee9fc6a045e5a58570f3e</anchor>
      <arglist>(Float green=Float(0), Float alpha=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; Float &gt;</type>
      <name>yellow</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>af88b6d80684a9f068eed07133a48f0dc</anchor>
      <arglist>(Float blue=Float(0), Float alpha=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; Float &gt;</type>
      <name>fromHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a3ee58ac0c7e6dc617af4ebc00b4417b4</anchor>
      <arglist>(const ColorHsv&lt; FloatingPointType &gt; &amp;hsv, Float a=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; Float &gt;</type>
      <name>fromHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a83a5c010d34fe1f490406d757441c57d</anchor>
      <arglist>(Deg&lt; FloatingPointType &gt; hue, FloatingPointType saturation, FloatingPointType value, Float alpha=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; Float &gt;</type>
      <name>fromSrgbAlpha</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a84c259d66eac3166fa9134f8f15eb785</anchor>
      <arglist>(const Vector4&lt; FloatingPointType &gt; &amp;srgbAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; Float &gt;</type>
      <name>fromSrgbAlpha</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a66c193208074fe92e65243ee4e162f8b</anchor>
      <arglist>(const Vector4&lt; Integral &gt; &amp;srgbAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; Float &gt;</type>
      <name>fromSrgbAlpha</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a4e07381f06de1efa26a4ea141a4f1c83</anchor>
      <arglist>(UnsignedInt srgbAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; Float &gt;</type>
      <name>fromSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a97b5b2df8675f86d199c56ada8be27b2</anchor>
      <arglist>(const Vector3&lt; FloatingPointType &gt; &amp;srgb, Float a=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; Float &gt;</type>
      <name>fromSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a75a9d660a17cf6f974b8b29085d798ad</anchor>
      <arglist>(const Vector3&lt; Integral &gt; &amp;srgb, Float a=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; Float &gt;</type>
      <name>fromSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>ac1e493faae13315ac8bfdd8907e161dd</anchor>
      <arglist>(UnsignedInt srgb, Float a=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; Float &gt;</type>
      <name>fromXyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a6a23a77cf0f2d9fee7c53b79163c9646</anchor>
      <arglist>(const Vector3&lt; FloatingPointType &gt; xyz, Float a=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function">
      <type>constexpr Color4&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_rgba</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a33bb6e4470bbebf78e05c434ceabec43</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_srgba</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a88197216abf20bf0d1bd7c5699ec519c</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color4&lt; Float &gt;</type>
      <name>operator&quot;&quot;_rgbaf</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a827104fe7653f4bde5966f8ae5b0913a</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color4&lt; Float &gt;</type>
      <name>operator&quot;&quot;_srgbaf</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a7cc23ef04fa621c95f3ec3a28638edcc</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a338890901a6aa2d1e80e689f9b2532a4</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Color4&lt; UnsignedByte &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Complex&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Complex.html</filename>
    <member kind="typedef">
      <type>Float</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a436e9f8f692179a12a1ef4b8c735306d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a84ca1871d9a1ebd42206e55c6a98e7dd</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a37087d820ab87abce18a3437963bdf6e</anchor>
      <arglist>(IdentityInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a28270cfda770405f5182e74e5a1ec535</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>add7e74a502d3f01f447e2baebc96dea9</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>afbd653cbcaed2d9816fe4c96d8881b3c</anchor>
      <arglist>(Float real, Float imaginary) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>aa594b40572861c6f1036cdb56ffe9288</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;vector) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a0206ee3f6107c2263f83e735e93ce8dd</anchor>
      <arglist>(const Complex&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ab9deb3750ce9e1c7144d8608e0dd5440</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ab185e2196f0710d63ae7ad7a6d117bb9</anchor>
      <arglist>(const Complex&lt; Float &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>acbaf5134609e865f9d7f3b71328803e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a05566d7f195eb5b693745fe6a8de63e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a324aea67b630c86b9d893bfd55f59520</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a23a50123c81cb454dd712f18b7209ea2</anchor>
      <arglist>(const Complex&lt; Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>aad7ca8f011cbb14f01f94fbb03319eb2</anchor>
      <arglist>(const Complex&lt; Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a02598f7d85b546729d451e4c32ce8d95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>real</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a283ca72904733a6efc964e21e9f0434f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>real</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ae26350052e50de8ad19f5e620220be0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>imaginary</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>afca760adeadd93baf120c9e13b26e4b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>imaginary</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>af765e3d1dbfbde4b40bc58f946d474c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator Vector2&lt; Float &gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a6cd841213ac5a08ede036fd4a0c73c58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; Float &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>aaa1ba9de3112a1211158350c2257eea3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix2x2&lt; Float &gt;</type>
      <name>toMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a552a5392fc3cd97351e3b880c29434a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a87bf0b8aec5e81069b7260f92c38a2a4</anchor>
      <arglist>(const Complex&lt; Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a455d42f87b9ae401d8e507ebc8c57248</anchor>
      <arglist>(const Complex&lt; Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ab65a28c04c72509feef803db9be2c582</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a4a42b783c0d585e5e4b373124c4e8564</anchor>
      <arglist>(const Complex&lt; Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>aca7a18b5610abade761a17433acc3faa</anchor>
      <arglist>(const Complex&lt; Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ad6bb867effa311356aea5a142cdf23b5</anchor>
      <arglist>(Float scalar)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a0a2a9e2fe9d985ee2536baa47d4710eb</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a7f7e129f3502a118f03a02d6fff59cf1</anchor>
      <arglist>(Float scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a68564f1355697544e5ee8dc78d22d34c</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>aa9fb4fab0507d47fed697e5814774e7c</anchor>
      <arglist>(const Complex&lt; Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a2a9ab4d442d0356ba9bc7fa37d11d730</anchor>
      <arglist>(Float scalar)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a992d2f7992ae121dcf8d95d4a6c1a0f6</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ab5122d8679a48957fa9c45e7f445694f</anchor>
      <arglist>(Float scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>aec7c9e1147a081f62ff2d5ff6d8f3a9e</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a6541e39208d89e8ce102a0697fb8232a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a940aea79dfa2078eb8472a4223c7adef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a15e4e9663ac38b24bffd56e752ea5ac9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt;</type>
      <name>conjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ae15f5a6d99696b65dda24502e7c004d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt;</type>
      <name>inverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a6da5587ed161facbc9d89c296ecd9e14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt;</type>
      <name>invertedNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>af3547e1b18b4ac638379c26d52698c72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt;</type>
      <name>transformVector</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>af6e39cc056cbe97cbbcb81805beb246d</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Complex&lt; Float &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ac6209d9d93a6c213750cd087e59b35f5</anchor>
      <arglist>(Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Complex&lt; Float &gt;</type>
      <name>fromMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a1c3928355fdf5a4cf1f5b59e20a7ccb4</anchor>
      <arglist>(const Matrix2x2&lt; Float &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; Float &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ab0d977c1e3f6a66dcdedcd261b758210</anchor>
      <arglist>(const Complex&lt; Float &gt; &amp;normalizedA, const Complex&lt; Float &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a34f27bc82f532ab76366f368d2d7fdc3</anchor>
      <arglist>(Float scalar, const Complex&lt; Float &gt; &amp;complex)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ac2f12a2b45f2b85dd1c8e9797b03fa13</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;vector, const Complex&lt; Float &gt; &amp;complex)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a7c6460d09ef7244ad15a0f438a6e2248</anchor>
      <arglist>(Float scalar, const Complex&lt; Float &gt; &amp;complex)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ab3b997e9fa0336754c9dc188df84b2db</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;vector, const Complex&lt; Float &gt; &amp;complex)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ae3d695a1794978f2aded487bc9e6e312</anchor>
      <arglist>(const Complex&lt; Float &gt; &amp;a, const Complex&lt; Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt;</type>
      <name>lerp</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a61610c4747e550c9076fa7e783494498</anchor>
      <arglist>(const Complex&lt; Float &gt; &amp;normalizedA, const Complex&lt; Float &gt; &amp;normalizedB, Float t)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; Float &gt;</type>
      <name>slerp</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>aa3c5f948767edd96cd712952485a1275</anchor>
      <arglist>(const Complex&lt; Float &gt; &amp;normalizedA, const Complex&lt; Float &gt; &amp;normalizedB, Float t)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a673cbf89633bedbae0a30457b9bfaceb</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Complex&lt; Float &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Bezier&lt; order, dimensions, T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Bezier_3_01order_00_01dimensions_00_01T_01_4_01_4.html</filename>
    <templarg>order</templarg>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Bezier_3_01order_00_01dimensions_00_01T_01_4_01_4.html</anchorfile>
      <anchor>ae04c253f9a3ff725a8e7b9c3c9b2c223</anchor>
      <arglist>(const Magnum::Math::Bezier&lt; order, dimensions, T &gt; &amp;value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::Math::Bezier&lt; order, dimensions, T &gt;</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Bezier_3_01order_00_01dimensions_00_01T_01_4_01_4.html</anchorfile>
      <anchor>a5375dafcb15d6797d3b1e04c38d269ec</anchor>
      <arglist>(const std::string &amp;stringValue, ConfigurationValueFlags flags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Color3&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Color3_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::Vector&lt; 3, T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Color4&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Color4_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::Vector&lt; 4, T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Complex&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Complex_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Complex_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a67ae779873bac589194580794646fd9e</anchor>
      <arglist>(const Magnum::Math::Complex&lt; T &gt; &amp;value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::Math::Complex&lt; T &gt;</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Complex_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a8f44e9b38327127d9bc8eb4cae86dd8b</anchor>
      <arglist>(const std::string &amp;stringValue, ConfigurationValueFlags flags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Deg&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Deg_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Deg_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a0295bd650c95a2282b9fa9ee09d23990</anchor>
      <arglist>(const Magnum::Math::Deg&lt; T &gt; &amp;value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::Math::Deg&lt; T &gt;</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Deg_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a9b51d9cc994a033d8610d92599a0f638</anchor>
      <arglist>(const std::string &amp;stringValue, ConfigurationValueFlags flags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::DualComplex&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1DualComplex_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1DualComplex_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a4f5f5492005413070184b2f4f228d866</anchor>
      <arglist>(const Magnum::Math::DualComplex&lt; T &gt; &amp;value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::Math::DualComplex&lt; T &gt;</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1DualComplex_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a048e41ec54db712f5b9e853688371a0d</anchor>
      <arglist>(const std::string &amp;stringValue, ConfigurationValueFlags flags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::DualQuaternion&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1DualQuaternion_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1DualQuaternion_3_01T_01_4_01_4.html</anchorfile>
      <anchor>abe52a2bb5e556d3beb4d5654d494daae</anchor>
      <arglist>(const Magnum::Math::DualQuaternion&lt; T &gt; &amp;value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::Math::DualQuaternion&lt; T &gt;</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1DualQuaternion_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a46f89259c86d5d6a2675e2566a68e331</anchor>
      <arglist>(const std::string &amp;stringValue, ConfigurationValueFlags flags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Matrix3&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Matrix3_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::Matrix3x3&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Matrix4&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Matrix4_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::Matrix4x4&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Matrix&lt; size, T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Matrix_3_01size_00_01T_01_4_01_4.html</filename>
    <templarg>size</templarg>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::RectangularMatrix&lt; size, size, T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Quaternion&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Quaternion_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Quaternion_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a2765e373c65bf5df7811d87bcb467277</anchor>
      <arglist>(const Magnum::Math::Quaternion&lt; T &gt; &amp;value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::Math::Quaternion&lt; T &gt;</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Quaternion_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a2bbca16e3fdb65b7afa7ad05e704aa94</anchor>
      <arglist>(const std::string &amp;stringValue, ConfigurationValueFlags flags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Rad&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Rad_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Rad_3_01T_01_4_01_4.html</anchorfile>
      <anchor>ac6dcfbef0ddeb93c3f42f3a7b9e024b1</anchor>
      <arglist>(const Magnum::Math::Rad&lt; T &gt; &amp;value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::Math::Rad&lt; T &gt;</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Rad_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a70b14c105472c4fd74dabe31adca603a</anchor>
      <arglist>(const std::string &amp;stringValue, ConfigurationValueFlags flags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Range2D&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Range2D_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::Range&lt; 2, T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Range3D&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Range3D_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::Range&lt; 3, T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Range&lt; dimensions, T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Range_3_01dimensions_00_01T_01_4_01_4.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Range_3_01dimensions_00_01T_01_4_01_4.html</anchorfile>
      <anchor>a2a340656bc624d3ad0fd2c7cd65d90ba</anchor>
      <arglist>(const Magnum::Math::Range&lt; dimensions, T &gt; &amp;value, const ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::Math::Range&lt; dimensions, T &gt;</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Range_3_01dimensions_00_01T_01_4_01_4.html</anchorfile>
      <anchor>acb84439a7af9fa9779b205785e765dcd</anchor>
      <arglist>(const std::string &amp;stringValue, const ConfigurationValueFlags flags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::RectangularMatrix&lt; cols, rows, T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1RectangularMatrix_3_01cols_00_01rows_00_01T_01_4_01_4.html</filename>
    <templarg>cols</templarg>
    <templarg>rows</templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1RectangularMatrix_3_01cols_00_01rows_00_01T_01_4_01_4.html</anchorfile>
      <anchor>a10f2dfad912a398a9577b0feafff210f</anchor>
      <arglist>(const Magnum::Math::RectangularMatrix&lt; cols, rows, T &gt; &amp;value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::Math::RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1RectangularMatrix_3_01cols_00_01rows_00_01T_01_4_01_4.html</anchorfile>
      <anchor>aa70987478d58d60cf5344cd5d9d48396</anchor>
      <arglist>(const std::string &amp;stringValue, ConfigurationValueFlags flags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Vector2&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Vector2_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::Vector&lt; 2, T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Vector3&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Vector3_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::Vector&lt; 3, T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Vector4&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Vector4_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::Vector&lt; 4, T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Vector&lt; size, T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Vector_3_01size_00_01T_01_4_01_4.html</filename>
    <templarg>size</templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Vector_3_01size_00_01T_01_4_01_4.html</anchorfile>
      <anchor>a602cf7cb4cdc42d201a3a11ab7bb736b</anchor>
      <arglist>(const Magnum::Math::Vector&lt; size, T &gt; &amp;value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::Math::Vector&lt; size, T &gt;</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Vector_3_01size_00_01T_01_4_01_4.html</anchorfile>
      <anchor>ad58c642263c9f2a81f874e1581785330</anchor>
      <arglist>(const std::string &amp;stringValue, ConfigurationValueFlags flags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::MeshIndexType &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1MeshIndexType_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1MeshIndexType_01_4.html</anchorfile>
      <anchor>a3ee27aa095f746a9fc006b8282d5a87a</anchor>
      <arglist>(Magnum::MeshIndexType value, ConfigurationValueFlags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::MeshIndexType</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1MeshIndexType_01_4.html</anchorfile>
      <anchor>ac797b9cf8fbf1bd0f5ecb504be3cfd96</anchor>
      <arglist>(const std::string &amp;stringValue, ConfigurationValueFlags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::MeshPrimitive &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1MeshPrimitive_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1MeshPrimitive_01_4.html</anchorfile>
      <anchor>a101a3cab40405c250b1043ed3f8fe878</anchor>
      <arglist>(Magnum::MeshPrimitive value, ConfigurationValueFlags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::MeshPrimitive</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1MeshPrimitive_01_4.html</anchorfile>
      <anchor>a28646e175c248e12acabacf6c6e33972</anchor>
      <arglist>(const std::string &amp;stringValue, ConfigurationValueFlags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; Magnum::Math::Color3&lt; Magnum::Float &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01Magnum_1_1Math_1_1Color3_3_01Magnum_1_1Float_01_4_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, Magnum::Math::Color3&lt; Magnum::Float &gt; &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01Magnum_1_1Math_1_1Color3_3_01Magnum_1_1Float_01_4_01_4.html</anchorfile>
      <anchor>a173cb19fc45f832639829317124216fa</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; Magnum::Math::Color3&lt; Magnum::UnsignedByte &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01Magnum_1_1Math_1_1Color3_3_01Magnum_1_1UnsignedByte_01_4_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, Magnum::Math::Color3&lt; Magnum::UnsignedByte &gt; &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01Magnum_1_1Math_1_1Color3_3_01Magnum_1_1UnsignedByte_01_4_01_4.html</anchorfile>
      <anchor>ae3fc6b21bc7d5ad175008fb917c56ad7</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; Magnum::Math::Color4&lt; Magnum::Float &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01Magnum_1_1Math_1_1Color4_3_01Magnum_1_1Float_01_4_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, Magnum::Math::Color4&lt; Magnum::Float &gt; &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01Magnum_1_1Math_1_1Color4_3_01Magnum_1_1Float_01_4_01_4.html</anchorfile>
      <anchor>a8b2f51fef05e42a99000eff594f05a57</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; Magnum::Math::Color4&lt; Magnum::UnsignedByte &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01Magnum_1_1Math_1_1Color4_3_01Magnum_1_1UnsignedByte_01_4_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, Magnum::Math::Color4&lt; Magnum::UnsignedByte &gt; &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01Magnum_1_1Math_1_1Color4_3_01Magnum_1_1UnsignedByte_01_4_01_4.html</anchorfile>
      <anchor>a59d98b534da68babfd93ff602e812be2</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; Magnum::Math::Deg&lt; Magnum::Double &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01Magnum_1_1Math_1_1Deg_3_01Magnum_1_1Double_01_4_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, Magnum::Math::Deg&lt; Magnum::Double &gt; &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01Magnum_1_1Math_1_1Deg_3_01Magnum_1_1Double_01_4_01_4.html</anchorfile>
      <anchor>afec1be931f3bdb77411e7cdf870f111f</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; Magnum::Math::Deg&lt; Magnum::Float &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01Magnum_1_1Math_1_1Deg_3_01Magnum_1_1Float_01_4_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, Magnum::Math::Deg&lt; Magnum::Float &gt; &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01Magnum_1_1Math_1_1Deg_3_01Magnum_1_1Float_01_4_01_4.html</anchorfile>
      <anchor>a099c8ba7cddd28dedf7e26de8cb7181c</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; Magnum::Math::Half &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01Magnum_1_1Math_1_1Half_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, Magnum::Math::Half &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01Magnum_1_1Math_1_1Half_01_4.html</anchorfile>
      <anchor>a54c5a6129a9962cda499b6edef6721db</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; Magnum::Math::Rad&lt; Magnum::Double &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01Magnum_1_1Math_1_1Rad_3_01Magnum_1_1Double_01_4_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, Magnum::Math::Rad&lt; Magnum::Double &gt; &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01Magnum_1_1Math_1_1Rad_3_01Magnum_1_1Double_01_4_01_4.html</anchorfile>
      <anchor>a09452939fe161dc8a4675c1b9174be36</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; Magnum::Math::Rad&lt; Magnum::Float &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01Magnum_1_1Math_1_1Rad_3_01Magnum_1_1Float_01_4_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, Magnum::Math::Rad&lt; Magnum::Float &gt; &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01Magnum_1_1Math_1_1Rad_3_01Magnum_1_1Float_01_4_01_4.html</anchorfile>
      <anchor>acab1bece90720d818682a691791bab80</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Drawable&lt; dimensions, Float &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1Drawable.html</filename>
    <base>AbstractGroupedFeature&lt; dimensions, Drawable&lt; dimensions, Float &gt;, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>Drawable</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Drawable.html</anchorfile>
      <anchor>adaca26dbdfd13c56651a7287936bfea5</anchor>
      <arglist>(AbstractObject&lt; dimensions, Float &gt; &amp;object, DrawableGroup&lt; dimensions, Float &gt; *drawables=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>DrawableGroup&lt; dimensions, Float &gt; *</type>
      <name>drawables</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Drawable.html</anchorfile>
      <anchor>a032ddbc32002122cc6af40eaa30136cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const DrawableGroup&lt; dimensions, Float &gt; *</type>
      <name>drawables</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Drawable.html</anchorfile>
      <anchor>afa4ba6fd88b86f1131f28085c2db2b36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Drawable.html</anchorfile>
      <anchor>aca0d0a219aa4d7712316de55d67f2134</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;transformationMatrix, Camera&lt; dimensions, Float &gt; &amp;camera)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dual&lt; Complex&lt; T &gt; &gt;</name>
    <filename>classMagnum_1_1Math_1_1Dual.html</filename>
    <member kind="typedef">
      <type>Complex&lt; T &gt;</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a3be18c964dc9a31a5adef067790a37d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a1510f9f641c2dfd00ca7b01834cde0fd</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>ae1030ae3f17f87e504c1bca6bb4512f4</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa778161aca036a8f91f1416484c0f3e4</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a145bf8a971711d63b11cce2cdbf60401</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;real, const Complex&lt; T &gt; &amp;dual=Complex&lt; T &gt;()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa69830829a6d39af13c7c0a36ce8d4e9</anchor>
      <arglist>(const Dual&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a3547ae5040344880683a611501a4eb3a</anchor>
      <arglist>(const Dual&lt; Complex&lt; T &gt; &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt; *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a5c25339de4ad7ae20ddd098c4ec2f410</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Complex&lt; T &gt; *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>abda197b01ac12ab20cab5ae02da9c633</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a00074698ec219582ba9dedfa2d2dcd7a</anchor>
      <arglist>(const Dual&lt; Complex&lt; T &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a7a06e7de324d2168c187a3369ac7f40b</anchor>
      <arglist>(const Dual&lt; Complex&lt; T &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt; &amp;</type>
      <name>real</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a8f653e88c741b4a2adad75bca3bddf6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Complex&lt; T &gt;</type>
      <name>real</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a6070b7bf86682f74983f69262439aaf9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt; &amp;</type>
      <name>dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af66cf3b6fb28b6c2979191ac95b3b492</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Complex&lt; T &gt;</type>
      <name>dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>ad428092734ca57b8792e7df3acba5f73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Complex&lt; T &gt; &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa696c4eb5da36892502a712ee0031f3c</anchor>
      <arglist>(const Dual&lt; Complex&lt; T &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Complex&lt; T &gt; &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a61c3f0b21f1c2c3a2e38e184491660f3</anchor>
      <arglist>(const Dual&lt; Complex&lt; T &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Complex&lt; T &gt; &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aff2f040c1cae6d3235f1274f389a7728</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Complex&lt; T &gt; &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a529cf18a6dd33234326801ffefb0387a</anchor>
      <arglist>(const Dual&lt; Complex&lt; T &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Complex&lt; T &gt; &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a27a849b0e8599549e6f1bc1372411109</anchor>
      <arglist>(const Dual&lt; Complex&lt; T &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a02bc5e1be386bb0526610dcac28ee047</anchor>
      <arglist>(const Dual&lt; U &gt; &amp;other) const -&gt; Dual&lt; decltype(std::declval&lt; Complex&lt; T &gt; &gt;() *std::declval&lt; U &gt;())&gt;</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; decltype(std::declval&lt; Complex&lt; T &gt; &gt;) *std::declval&lt; U &gt;))&gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af0cf6edd8baf2fa47cf89ddd77762ede</anchor>
      <arglist>(const U &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a37b6755ad6f0abc8bab3d6bf3ee1df6c</anchor>
      <arglist>(const Dual&lt; U &gt; &amp;other) const -&gt; Dual&lt; decltype(std::declval&lt; Complex&lt; T &gt; &gt;()/std::declval&lt; U &gt;())&gt;</arglist>
    </member>
    <member kind="function">
      <type>V</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a0f947718fd1df17fd663ff4032f2f623</anchor>
      <arglist>(const U &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Complex&lt; T &gt; &gt;</type>
      <name>conjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>ab83f86f45e4b526ef3b646effa1ce4d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>V</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a108824148a16f579b12bee454ea47638</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;a, const Dual&lt; U &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a566f5ca101d2a3793843141980b2545e</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Dual&lt; Complex&lt; T &gt; &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Complex&lt; T &gt; &gt;</type>
      <name>sqrt</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a9f399ec60dc87478fcdbe6091e0b6783</anchor>
      <arglist>(const Dual&lt; Complex&lt; T &gt; &gt; &amp;dual)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Dual&lt; Complex&lt; T &gt; &gt;, Dual&lt; Complex&lt; T &gt; &gt; &gt;</type>
      <name>sincos</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>adf84b1bff280ad75079c8774ca25cbec</anchor>
      <arglist>(const Dual&lt; Rad&lt; Complex&lt; T &gt; &gt;&gt; &amp;angle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dual&lt; Quaternion&lt; T &gt; &gt;</name>
    <filename>classMagnum_1_1Math_1_1Dual.html</filename>
    <member kind="typedef">
      <type>Quaternion&lt; T &gt;</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a3be18c964dc9a31a5adef067790a37d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a1510f9f641c2dfd00ca7b01834cde0fd</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>ae1030ae3f17f87e504c1bca6bb4512f4</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa778161aca036a8f91f1416484c0f3e4</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a145bf8a971711d63b11cce2cdbf60401</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;real, const Quaternion&lt; T &gt; &amp;dual=Quaternion&lt; T &gt;()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa69830829a6d39af13c7c0a36ce8d4e9</anchor>
      <arglist>(const Dual&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a3547ae5040344880683a611501a4eb3a</anchor>
      <arglist>(const Dual&lt; Quaternion&lt; T &gt; &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt; *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a5c25339de4ad7ae20ddd098c4ec2f410</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Quaternion&lt; T &gt; *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>abda197b01ac12ab20cab5ae02da9c633</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a00074698ec219582ba9dedfa2d2dcd7a</anchor>
      <arglist>(const Dual&lt; Quaternion&lt; T &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a7a06e7de324d2168c187a3369ac7f40b</anchor>
      <arglist>(const Dual&lt; Quaternion&lt; T &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt; &amp;</type>
      <name>real</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a8f653e88c741b4a2adad75bca3bddf6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Quaternion&lt; T &gt;</type>
      <name>real</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a6070b7bf86682f74983f69262439aaf9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt; &amp;</type>
      <name>dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af66cf3b6fb28b6c2979191ac95b3b492</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Quaternion&lt; T &gt;</type>
      <name>dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>ad428092734ca57b8792e7df3acba5f73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Quaternion&lt; T &gt; &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa696c4eb5da36892502a712ee0031f3c</anchor>
      <arglist>(const Dual&lt; Quaternion&lt; T &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Quaternion&lt; T &gt; &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a61c3f0b21f1c2c3a2e38e184491660f3</anchor>
      <arglist>(const Dual&lt; Quaternion&lt; T &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Quaternion&lt; T &gt; &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aff2f040c1cae6d3235f1274f389a7728</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Quaternion&lt; T &gt; &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a529cf18a6dd33234326801ffefb0387a</anchor>
      <arglist>(const Dual&lt; Quaternion&lt; T &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Quaternion&lt; T &gt; &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a27a849b0e8599549e6f1bc1372411109</anchor>
      <arglist>(const Dual&lt; Quaternion&lt; T &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a02bc5e1be386bb0526610dcac28ee047</anchor>
      <arglist>(const Dual&lt; U &gt; &amp;other) const -&gt; Dual&lt; decltype(std::declval&lt; Quaternion&lt; T &gt; &gt;() *std::declval&lt; U &gt;())&gt;</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; decltype(std::declval&lt; Quaternion&lt; T &gt; &gt;) *std::declval&lt; U &gt;))&gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af0cf6edd8baf2fa47cf89ddd77762ede</anchor>
      <arglist>(const U &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a37b6755ad6f0abc8bab3d6bf3ee1df6c</anchor>
      <arglist>(const Dual&lt; U &gt; &amp;other) const -&gt; Dual&lt; decltype(std::declval&lt; Quaternion&lt; T &gt; &gt;()/std::declval&lt; U &gt;())&gt;</arglist>
    </member>
    <member kind="function">
      <type>V</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a0f947718fd1df17fd663ff4032f2f623</anchor>
      <arglist>(const U &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Quaternion&lt; T &gt; &gt;</type>
      <name>conjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>ab83f86f45e4b526ef3b646effa1ce4d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>V</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a108824148a16f579b12bee454ea47638</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;a, const Dual&lt; U &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a566f5ca101d2a3793843141980b2545e</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Dual&lt; Quaternion&lt; T &gt; &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Quaternion&lt; T &gt; &gt;</type>
      <name>sqrt</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a9f399ec60dc87478fcdbe6091e0b6783</anchor>
      <arglist>(const Dual&lt; Quaternion&lt; T &gt; &gt; &amp;dual)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Dual&lt; Quaternion&lt; T &gt; &gt;, Dual&lt; Quaternion&lt; T &gt; &gt; &gt;</type>
      <name>sincos</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>adf84b1bff280ad75079c8774ca25cbec</anchor>
      <arglist>(const Dual&lt; Rad&lt; Quaternion&lt; T &gt; &gt;&gt; &amp;angle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FeatureGroup&lt; dimensions, Animable&lt; dimensions, T &gt;, T &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</filename>
    <base>Magnum::SceneGraph::AbstractFeatureGroup</base>
    <member kind="function">
      <type></type>
      <name>~FeatureGroup</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a352fd0f8f6d4a53a5780773a16e00b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>aa55204b99b7ea4cf78170d8fa654ae51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>af34f1faeabbdf16a30bfddd3d4627076</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Animable&lt; dimensions, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2da5b140149a69381b8e252f606ed232</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const Animable&lt; dimensions, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>ab08e5838efde6a98aa9ca0e172765f87</anchor>
      <arglist>(std::size_t index) const</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Animable&lt; dimensions, T &gt;, T &gt; &amp;</type>
      <name>add</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2091e5d70dde6675b31a52527ce9513b</anchor>
      <arglist>(Animable&lt; dimensions, T &gt; &amp;feature)</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Animable&lt; dimensions, T &gt;, T &gt; &amp;</type>
      <name>remove</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a527ccb9c991144fc37fada509aaf4901</anchor>
      <arglist>(Animable&lt; dimensions, T &gt; &amp;feature)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FeatureGroup&lt; dimensions, Derived, T &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</filename>
    <base>Magnum::SceneGraph::AbstractFeatureGroup</base>
    <member kind="function">
      <type></type>
      <name>~FeatureGroup</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a352fd0f8f6d4a53a5780773a16e00b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>aa55204b99b7ea4cf78170d8fa654ae51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>af34f1faeabbdf16a30bfddd3d4627076</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Derived &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2da5b140149a69381b8e252f606ed232</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const Derived &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>ab08e5838efde6a98aa9ca0e172765f87</anchor>
      <arglist>(std::size_t index) const</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Derived, T &gt; &amp;</type>
      <name>add</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2091e5d70dde6675b31a52527ce9513b</anchor>
      <arglist>(Derived &amp;feature)</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Derived, T &gt; &amp;</type>
      <name>remove</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a527ccb9c991144fc37fada509aaf4901</anchor>
      <arglist>(Derived &amp;feature)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, Float &gt;, Float &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</filename>
    <base>AbstractFeatureGroup&lt; dimensions, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>~FeatureGroup</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a352fd0f8f6d4a53a5780773a16e00b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>aa55204b99b7ea4cf78170d8fa654ae51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>af34f1faeabbdf16a30bfddd3d4627076</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Drawable&lt; dimensions, Float &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2da5b140149a69381b8e252f606ed232</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const Drawable&lt; dimensions, Float &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>ab08e5838efde6a98aa9ca0e172765f87</anchor>
      <arglist>(std::size_t index) const</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, Float &gt;, Float &gt; &amp;</type>
      <name>add</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2091e5d70dde6675b31a52527ce9513b</anchor>
      <arglist>(Drawable&lt; dimensions, Float &gt; &amp;feature)</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, Float &gt;, Float &gt; &amp;</type>
      <name>remove</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a527ccb9c991144fc37fada509aaf4901</anchor>
      <arglist>(Drawable&lt; dimensions, Float &gt; &amp;feature)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</filename>
    <base>Magnum::SceneGraph::AbstractFeatureGroup</base>
    <member kind="function">
      <type></type>
      <name>~FeatureGroup</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a352fd0f8f6d4a53a5780773a16e00b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>aa55204b99b7ea4cf78170d8fa654ae51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>af34f1faeabbdf16a30bfddd3d4627076</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Drawable&lt; dimensions, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2da5b140149a69381b8e252f606ed232</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const Drawable&lt; dimensions, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>ab08e5838efde6a98aa9ca0e172765f87</anchor>
      <arglist>(std::size_t index) const</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt; &amp;</type>
      <name>add</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2091e5d70dde6675b31a52527ce9513b</anchor>
      <arglist>(Drawable&lt; dimensions, T &gt; &amp;feature)</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt; &amp;</type>
      <name>remove</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a527ccb9c991144fc37fada509aaf4901</anchor>
      <arglist>(Drawable&lt; dimensions, T &gt; &amp;feature)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FeatureGroup&lt; dimensions, Playable&lt; dimensions &gt;, Float &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</filename>
    <base>AbstractFeatureGroup&lt; dimensions, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>~FeatureGroup</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a352fd0f8f6d4a53a5780773a16e00b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>aa55204b99b7ea4cf78170d8fa654ae51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>af34f1faeabbdf16a30bfddd3d4627076</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Playable&lt; dimensions &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2da5b140149a69381b8e252f606ed232</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const Playable&lt; dimensions &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>ab08e5838efde6a98aa9ca0e172765f87</anchor>
      <arglist>(std::size_t index) const</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Playable&lt; dimensions &gt;, Float &gt; &amp;</type>
      <name>add</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2091e5d70dde6675b31a52527ce9513b</anchor>
      <arglist>(Playable&lt; dimensions &gt; &amp;feature)</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Playable&lt; dimensions &gt;, Float &gt; &amp;</type>
      <name>remove</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a527ccb9c991144fc37fada509aaf4901</anchor>
      <arglist>(Playable&lt; dimensions &gt; &amp;feature)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::AbstractResourceLoader</name>
    <filename>classMagnum_1_1AbstractResourceLoader.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>std::size_t</type>
      <name>requestedCount</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>a3c9c58da2c208b164100a3ad92fc5c7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>notFoundCount</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>a7d2860b042fa20cf0df99a5a1ffa987f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>loadedCount</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>a6c44e079e9e5d5b48790486cb67ceb37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>add7970bc08849237674a19c8ac5083c6</anchor>
      <arglist>(ResourceKey key) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>a171e133926d7d37dc2a04d2c1191c0ab</anchor>
      <arglist>(ResourceKey key)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>af04681d7bee895e3e286aec7aa327782</anchor>
      <arglist>(ResourceKey key, T *data, ResourceDataState state, ResourcePolicy policy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>ae29ad7f2a2f463549677e16d78e8d60c</anchor>
      <arglist>(ResourceKey key, Containers::Pointer&lt; T &gt; data, ResourceDataState state, ResourcePolicy policy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>a4564756a83d5389a756cd8d4da66ee7f</anchor>
      <arglist>(ResourceKey key, U &amp;&amp;data, ResourceDataState state, ResourcePolicy policy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>ae08d87863dbbb8eea76f236fce9cabf7</anchor>
      <arglist>(ResourceKey key, T *data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>ab087ee9964275ab4c191f256163f7c15</anchor>
      <arglist>(ResourceKey key, Containers::Pointer&lt; T &gt; data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>a79a83fab4d7b2e365d90cb90c1afc20d</anchor>
      <arglist>(ResourceKey key, U &amp;&amp;data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setNotFound</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>a89b2091658562243626d37d176e8652f</anchor>
      <arglist>(ResourceKey key)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doName</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>ab445acfeb1aca088a3a12ddbbbe969de</anchor>
      <arglist>(ResourceKey key) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doLoad</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>ac6b5179e81b999aeb50af61bcebf7b7b</anchor>
      <arglist>(ResourceKey key)=0</arglist>
    </member>
    <docanchor file="classMagnum_1_1AbstractResourceLoader" title="Usage and subclassing">AbstractResourceLoader-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Animation::Player</name>
    <filename>classMagnum_1_1Animation_1_1Player.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>TimeType</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a24bd1706215d976ca7780a09ae274c90</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>K</type>
      <name>KeyType</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>ac9bb3ac6841d2ad1820df7867893866c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; UnsignedInt, K &gt;(*</type>
      <name>Scaler</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a0cb44d10adf1ad1b26acbf67a3eea271</anchor>
      <arglist>)(T, K)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Player</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a41dab77b2e2ad57c82b4080903376efb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Player</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a907b784daf49d4848f79e4afe9cad353</anchor>
      <arglist>(Scaler scaler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Player</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>ac1d5755df385b359701788059177d0a4</anchor>
      <arglist>(const Player&lt; T, K &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Player</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a6cb2c7370be7a5a912b3a4bb40a9ee6a</anchor>
      <arglist>(Player&lt; T, K &gt; &amp;&amp;)</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>ae63bf3cac9569d160a124279d1cb7f49</anchor>
      <arglist>(const Player&lt; T, K &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a862fc22e2b70c4619321779cd72c6077</anchor>
      <arglist>(Player&lt; T, K &gt; &amp;&amp;)</arglist>
    </member>
    <member kind="function">
      <type>Scaler</type>
      <name>scaler</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a8213953068dca2acdbb96f8c9df00e17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Math::Range1D&lt; K &gt;</type>
      <name>duration</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a30060e63a37d640db3af9768cecb2629</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>setDuration</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>aacc830907e6e62355508eb533b5970d9</anchor>
      <arglist>(const Math::Range1D&lt; K &gt; &amp;duration)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>playCount</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a3e4aa24226684d9cc8c44d12e8507647</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>setPlayCount</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a51edb577df0b36f9a9c389c434e6116f</anchor>
      <arglist>(UnsignedInt count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>af2fb0ee76c486b30fce572192f21f2d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a7167887c398974794babfec133cf4100</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const TrackViewStorage&lt; K &gt; &amp;</type>
      <name>track</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>ad7984f17489ef6680a55068828ea3486</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>add</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>aef1e23ea95bc70abcaead929a2e47718</anchor>
      <arglist>(const TrackView&lt; K, V, R &gt; &amp;track, R &amp;destination)</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>add</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a2c8486935a147305023048f40174601c</anchor>
      <arglist>(const Track&lt; K, V, R &gt; &amp;track, R &amp;destination)</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>addWithCallback</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a97fe84e1dd8ad2f37a8539b2fbb36a02</anchor>
      <arglist>(const TrackView&lt; K, V, R &gt; &amp;track, void(*callback)(K, const R &amp;, void *), void *userData=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>addWithCallback</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>ac599093754f67b0e0f1c578fbae300e5</anchor>
      <arglist>(const Track&lt; K, V, R &gt; &amp;track, void(*callback)(K, const R &amp;, void *), void *userData=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>addWithCallback</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a64cd5fbaaf7865e5f72aed49c9ed7cd9</anchor>
      <arglist>(const TrackView&lt; K, V, R &gt; &amp;track, void(*callback)(K, const R &amp;, U &amp;), U &amp;userData)</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>addWithCallback</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a03368ab02004c0b3ebb04c40c564baec</anchor>
      <arglist>(const Track&lt; K, V, R &gt; &amp;track, void(*callback)(K, const R &amp;, U &amp;), U &amp;userData)</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>addWithCallbackOnChange</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>adfe6847099f678fd0a9d8f430f945875</anchor>
      <arglist>(const TrackView&lt; K, V, R &gt; &amp;track, void(*callback)(K, const R &amp;, void *), R &amp;destination, void *userData=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>addWithCallbackOnChange</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a9461663d953b177d253cd95f4d11236a</anchor>
      <arglist>(const Track&lt; K, V, R &gt; &amp;track, void(*callback)(K, const R &amp;, void *), R &amp;destination, void *userData=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>addWithCallbackOnChange</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a37cb2634a52d26eb87aafecdb0e77a12</anchor>
      <arglist>(const TrackView&lt; K, V, R &gt; &amp;track, void(*callback)(K, const R &amp;, void *), R &amp;destination, U &amp;userData)</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>addWithCallbackOnChange</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>afeb74deadaa1a12f85ec0f94bb6e22bb</anchor>
      <arglist>(const Track&lt; K, V, R &gt; &amp;track, void(*callback)(K, const R &amp;, void *), R &amp;destination, U &amp;userData)</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>addRawCallback</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a2928942e0b698e281b84bf585f534403</anchor>
      <arglist>(const TrackView&lt; K, V, R &gt; &amp;track, void(*callback)(const TrackViewStorage&lt; K &gt; &amp;, K, std::size_t &amp;, void *, void(*)(), void *), void *destination, void(*userCallback)(), void *userData)</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>addRawCallback</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>ad531713175ce7c79de8bc4e5f7e395ea</anchor>
      <arglist>(const Track&lt; K, V, R &gt; &amp;track, void(*callback)(const TrackViewStorage&lt; K &gt; &amp;, K, std::size_t &amp;, void *, void(*)(), void *), void *destination, void(*userCallback)(), void *userData)</arglist>
    </member>
    <member kind="function">
      <type>State</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a25b7017b357047dc6c0950538a0057fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; UnsignedInt, K &gt;</type>
      <name>elapsed</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a1505d7325219c2b6fb5c0a695c653441</anchor>
      <arglist>(T time) const</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>play</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>ad4034b37b878d5d416f18f36a94d4b85</anchor>
      <arglist>(T startTime)</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>resume</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a4daba029d41bc3c5635240e408804b66</anchor>
      <arglist>(T startTime)</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>pause</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>a4c3199d868deceb738430648c04aa533</anchor>
      <arglist>(T pauseTime)</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>seekBy</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>ad7a5cefbef21de2a94c84fb32a6c2d47</anchor>
      <arglist>(T timeDelta)</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>seekTo</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>ac112a079197527accffff3fab5235847</anchor>
      <arglist>(T seekTime, T animationTime)</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>stop</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>aac89f90525800d7e7f4367c82c1f9755</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>setState</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>ae3364a5085cf1310d7c81a584af8c52f</anchor>
      <arglist>(State state, T time)</arglist>
    </member>
    <member kind="function">
      <type>Player&lt; T, K &gt; &amp;</type>
      <name>advance</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>ae2bdf8dae302c8407f3631020f069df9</anchor>
      <arglist>(T time)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>advance</name>
      <anchorfile>classMagnum_1_1Animation_1_1Player.html</anchorfile>
      <anchor>ada4fff2513ac8de1731ae803779913bd</anchor>
      <arglist>(T time, std::initializer_list&lt; Containers::Reference&lt; Player&lt; T, K &gt;&gt;&gt; players)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Animation_1_1Player" title="Setting up">Animation-Player-setup</docanchor>
    <docanchor file="classMagnum_1_1Animation_1_1Player" title="Animation playback">Animation-Player-playback</docanchor>
    <docanchor file="classMagnum_1_1Animation_1_1Player" title="Using custom time/key types">Animation-Player-time-type</docanchor>
    <docanchor file="classMagnum_1_1Animation_1_1Player" title="Higher-order players, animating time">Animation-Player-higher-order</docanchor>
    <docanchor file="classMagnum_1_1Animation_1_1Player" title="Explicit template specializations">Animation-Player-explicit-specializations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Animation::Track</name>
    <filename>classMagnum_1_1Animation_1_1Track.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>K</type>
      <name>KeyType</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a092e431ddf1ad318627febe058a8278a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>V</type>
      <name>ValueType</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>af6c9b2e2dc141882a7807ae292ca8216</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>R</type>
      <name>ResultType</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a8bc425d39280108a8c6c0d26827c7524</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ResultType(*</type>
      <name>Interpolator</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>adfd67d07f2edf60af27f96396edf5544</anchor>
      <arglist>)(const ValueType &amp;, const ValueType &amp;, Float)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Track</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>ab541cde7d8d761d631ee74eafbbad11e</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Track</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a608411dd3f02fc0c8ffb1e0c17751cdb</anchor>
      <arglist>(Containers::Array&lt; std::pair&lt; K, V &gt;&gt; &amp;&amp;data, Interpolator interpolator, Extrapolation before, Extrapolation after) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Track</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>af026192e3a794bffd9dd851984a79af9</anchor>
      <arglist>(std::initializer_list&lt; std::pair&lt; K, V &gt;&gt; data, Interpolator interpolator, Extrapolation before, Extrapolation after)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Track</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a482a64e4fe7a82c07adb880875509b27</anchor>
      <arglist>(Containers::Array&lt; std::pair&lt; K, V &gt;&gt; &amp;&amp;data, Interpolator interpolator, Extrapolation extrapolation=Extrapolation::Constant) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Track</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a65a4670fce10f8c29ba87298cdde1038</anchor>
      <arglist>(std::initializer_list&lt; std::pair&lt; K, V &gt;&gt; data, Interpolator interpolator, Extrapolation extrapolation=Extrapolation::Constant)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Track</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a2a0132831205c793c07c0cdfdd011a35</anchor>
      <arglist>(Containers::Array&lt; std::pair&lt; K, V &gt;&gt; &amp;&amp;data, Interpolation interpolation, Interpolator interpolator, Extrapolation before, Extrapolation after) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Track</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>aca747730e34b42f6ac98660dc8a0ebed</anchor>
      <arglist>(std::initializer_list&lt; std::pair&lt; K, V &gt;&gt; data, Interpolation interpolation, Interpolator interpolator, Extrapolation before, Extrapolation after)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Track</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a8a571bddf8698f9113c3d8ffa39ea411</anchor>
      <arglist>(Containers::Array&lt; std::pair&lt; K, V &gt;&gt; &amp;&amp;data, Interpolation interpolation, Interpolator interpolator, Extrapolation extrapolation=Extrapolation::Constant) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Track</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>acbbaa41f4b19e153aacea63d2110ba4f</anchor>
      <arglist>(std::initializer_list&lt; std::pair&lt; K, V &gt;&gt; data, Interpolation interpolation, Interpolator interpolator, Extrapolation extrapolation=Extrapolation::Constant)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Track</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a73648f308d57c817848c588af03f2333</anchor>
      <arglist>(Containers::Array&lt; std::pair&lt; K, V &gt;&gt; &amp;&amp;data, Interpolation interpolation, Extrapolation before, Extrapolation after) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Track</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>ad5b590ea31e5992e0a59eed16044c540</anchor>
      <arglist>(std::initializer_list&lt; std::pair&lt; K, V &gt;&gt; data, Interpolation interpolation, Extrapolation before, Extrapolation after)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Track</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a6cd11d58c453ad716c92a00461854454</anchor>
      <arglist>(Containers::Array&lt; std::pair&lt; K, V &gt;&gt; &amp;&amp;data, Interpolation interpolation, Extrapolation extrapolation=Extrapolation::Constant) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Track</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a8453c1eb66023d6831e09b61ad1eb96f</anchor>
      <arglist>(std::initializer_list&lt; std::pair&lt; K, V &gt;&gt; data, Interpolation interpolation, Extrapolation extrapolation=Extrapolation::Constant)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Track</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a54a9cb1f1594722a70fabd81d7f007cb</anchor>
      <arglist>(const Track&lt; K, V, R &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Track</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a620d95864423b9ba4d00caa9eb4d2ab9</anchor>
      <arglist>(Track&lt; K, V, R &gt; &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>Track&lt; K, V, R &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a49aa093469fa7c7fe8e20cd91dd9f2da</anchor>
      <arglist>(const Track&lt; K, V, R &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Track&lt; K, V, R &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>aecf9647a48bbc89f8fcd10f4b1940e3a</anchor>
      <arglist>(Track&lt; K, V, R &gt; &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator TrackView&lt; K, V, R &gt;</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a8e4d127e4e9b6e9d8dea686662774e52</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Interpolation</type>
      <name>interpolation</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a77e4854917991f0a563f879fd15fdd8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Interpolator</type>
      <name>interpolator</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a0d3bcdc8eef99e58e8b93da3ea02a5be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Extrapolation</type>
      <name>before</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>ae6b7d7b0eae5ad9bc7fe201f856bac90</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Extrapolation</type>
      <name>after</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a01b97364cad04c11dc898f50f4367500</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Math::Range1D&lt; K &gt;</type>
      <name>duration</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>ad6ebf74a952140602d77c59a794d6ad4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>aca231c8badbbf22ce2d34456a48bfe6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const std::pair&lt; K, V &gt; &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>acf21ffde7a7087459c1405898ad28613</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView1D&lt; const K &gt;</type>
      <name>keys</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a56cc368d0107529acb63459d315d32af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView1D&lt; const V &gt;</type>
      <name>values</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a9764c6468532a5c55d3cc0b13e8e95ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::pair&lt; K, V &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a8dd8bfc134419031f8886e12e163ab69</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>at</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>aaa9f1693007db826701a5cac37673877</anchor>
      <arglist>(K frame) const</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>at</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a799b1acc28319ce3590d8e419f5e1fc7</anchor>
      <arglist>(K frame, std::size_t &amp;hint) const</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>at</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>a54fc97d01bec32f23bbe76a44ad6fa97</anchor>
      <arglist>(Interpolator interpolator, K frame) const</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>at</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>ac21ed84a4cff78c3e54d1092cfee54a5</anchor>
      <arglist>(Interpolator interpolator, K frame, std::size_t &amp;hint) const</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>atStrict</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>ad2d401fface68a1560917a3195e794a9</anchor>
      <arglist>(K frame, std::size_t &amp;hint) const</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>atStrict</name>
      <anchorfile>classMagnum_1_1Animation_1_1Track.html</anchorfile>
      <anchor>aee3894e47a62d7afd5d562bc3f8c3d3d</anchor>
      <arglist>(Interpolator interpolator, K frame, std::size_t &amp;hint) const</arglist>
    </member>
    <docanchor file="classMagnum_1_1Animation_1_1Track" title="Basic usage">Animation-Track-usage</docanchor>
    <docanchor file="classMagnum_1_1Animation_1_1Track" title="Types and interpolators">Animation-Track-interpolators</docanchor>
    <docanchor file="classMagnum_1_1Animation_1_1Track" title="Performance tuning">Animation-Track-performance</docanchor>
    <docanchor file="classMagnum_1_1Animation_1_1Track" title="Keyframe hinting">Animation-Track-performance-hint</docanchor>
    <docanchor file="classMagnum_1_1Animation_1_1Track" title="Strict interpolation">Animation-Track-performance-strict</docanchor>
    <docanchor file="classMagnum_1_1Animation_1_1Track" title="Cache-efficient data layout">Animation-Track-performance-cache</docanchor>
    <docanchor file="classMagnum_1_1Animation_1_1Track" title="Interpolator function choice">Animation-Track-performance-interpolator</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Animation::TrackView</name>
    <filename>classMagnum_1_1Animation_1_1TrackView.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Magnum::Animation::TrackViewStorage</base>
    <member kind="typedef">
      <type>V</type>
      <name>ValueType</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>a15392c7d49f155caf85aca9da7c81d65</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>R</type>
      <name>ResultType</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>aa29241cb2e721494dbedd99fccb03789</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ResultType(*</type>
      <name>Interpolator</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>a2624eea7f1f71e07818c902ebf46ed78</anchor>
      <arglist>)(const ValueType &amp;, const ValueType &amp;, Float)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackView</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>aeb108e0cf44fff982a62f233dc11a249</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackView</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>a718b312aef8cc80fa433839522e6d8b4</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const K &gt; &amp;keys, const Containers::StridedArrayView1D&lt; const V &gt; &amp;values, Interpolator interpolator, Extrapolation before, Extrapolation after) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackView</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>a09934448fb44aecdf2310df88f2f47f9</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const K &gt; &amp;keys, const Containers::StridedArrayView1D&lt; const V &gt; &amp;values, Interpolator interpolator, Extrapolation extrapolation=Extrapolation::Constant) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackView</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>a8a5d5031837d2e52a3b0f2af8166518c</anchor>
      <arglist>(Containers::ArrayView&lt; const std::pair&lt; K, V &gt;&gt; data, Interpolator interpolator, Extrapolation before, Extrapolation after) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackView</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>acdf7afcc295e9edbc8c0e035f7fb7cd1</anchor>
      <arglist>(Containers::ArrayView&lt; const std::pair&lt; K, V &gt;&gt; data, Interpolator interpolator, Extrapolation extrapolation=Extrapolation::Constant) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackView</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>ac542d7567c972fff06e5de11f7f454a2</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const K &gt; &amp;keys, const Containers::StridedArrayView1D&lt; const V &gt; &amp;values, Interpolation interpolation, Interpolator interpolator, Extrapolation before, Extrapolation after) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackView</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>ab8538066d5c95761dd6907bc609f57eb</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const K &gt; &amp;keys, const Containers::StridedArrayView1D&lt; const V &gt; &amp;values, Interpolation interpolation, Interpolator interpolator, Extrapolation extrapolation=Extrapolation::Constant) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackView</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>a4563939722b115806eaf7af04a3bf33a</anchor>
      <arglist>(Containers::ArrayView&lt; const std::pair&lt; K, V &gt;&gt; data, Interpolation interpolation, Interpolator interpolator, Extrapolation before, Extrapolation after) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackView</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>ae945636d286b4a59c85d7ce4c185d243</anchor>
      <arglist>(Containers::ArrayView&lt; const std::pair&lt; K, V &gt;&gt; data, Interpolation interpolation, Interpolator interpolator, Extrapolation extrapolation=Extrapolation::Constant) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackView</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>a9f6fbf1c9cf16b940ec07a557cf1c1a8</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const K &gt; &amp;keys, const Containers::StridedArrayView1D&lt; const V &gt; &amp;values, Interpolation interpolation, Extrapolation before, Extrapolation after) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackView</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>a56e70705896a82ea587dcd6423166395</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const K &gt; &amp;keys, const Containers::StridedArrayView1D&lt; const V &gt; &amp;values, Interpolation interpolation, Extrapolation extrapolation=Extrapolation::Constant) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackView</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>a7d388245bb1058861810f563b82f505d</anchor>
      <arglist>(Containers::ArrayView&lt; const std::pair&lt; K, V &gt;&gt; data, Interpolation interpolation, Extrapolation before, Extrapolation after) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackView</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>a3e1addb96b3507349b0c75ac153fb0c2</anchor>
      <arglist>(Containers::ArrayView&lt; const std::pair&lt; K, V &gt;&gt; data, Interpolation interpolation, Extrapolation extrapolation=Extrapolation::Constant) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Interpolator</type>
      <name>interpolator</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>a2b9da29a58beee88f5062464f3d80752</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView1D&lt; const V &gt;</type>
      <name>values</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>a6236bf55eda3a0cb05a3832bb2b32827</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; K, V &gt;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>a469c9f3ec2a3764006bdb57c29218c0c</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>at</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>a3e41b6bc13e1dcf069d54bb66825e81d</anchor>
      <arglist>(K frame) const</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>at</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>a78fa220f3a90319cd32ce0300a309f60</anchor>
      <arglist>(K frame, std::size_t &amp;hint) const</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>at</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>a9e83feafcabe81f3a98dfc51384ab9da</anchor>
      <arglist>(Interpolator interpolator, K frame) const</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>at</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>a4a6c030629a2b214efda0c99633d3316</anchor>
      <arglist>(Interpolator interpolator, K frame, std::size_t &amp;hint) const</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>atStrict</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>ad53c849fa4e833251a6cd7ea46eadab8</anchor>
      <arglist>(K frame, std::size_t &amp;hint) const</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>atStrict</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackView.html</anchorfile>
      <anchor>a6f578447fa2d52a158ab724e64ac9249</anchor>
      <arglist>(Interpolator interpolator, K frame, std::size_t &amp;hint) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Animation::TrackViewStorage</name>
    <filename>classMagnum_1_1Animation_1_1TrackViewStorage.html</filename>
    <templarg>K</templarg>
    <member kind="typedef">
      <type>K</type>
      <name>KeyType</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackViewStorage.html</anchorfile>
      <anchor>a7c68777368b76eda068933cc6c91428f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Interpolation</type>
      <name>interpolation</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackViewStorage.html</anchorfile>
      <anchor>acd998f4426d31750f4a6c384113d4e04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Extrapolation</type>
      <name>before</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackViewStorage.html</anchorfile>
      <anchor>a54e624ea4ed50af52fe6a15c97ac593e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Extrapolation</type>
      <name>after</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackViewStorage.html</anchorfile>
      <anchor>a9077f3fcbf9fa011b66f09ece66866e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Math::Range1D&lt; K &gt;</type>
      <name>duration</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackViewStorage.html</anchorfile>
      <anchor>a046c780edffd3d47dc3c098d47e5967a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackViewStorage.html</anchorfile>
      <anchor>aca871b9428242d0c3230c4ad3cac6d6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView1D&lt; const K &gt;</type>
      <name>keys</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackViewStorage.html</anchorfile>
      <anchor>a4bebdbeccc416c77fd91af564dd4f57f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Array</name>
    <filename>classMagnum_1_1Array.html</filename>
    <templarg>dimensions</templarg>
    <templarg>T</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a21c71dec8770e0c727c4a286a2f049e5a02e765ef0586f2a00aa3e8d8b6b6f54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a5d842ed4765a588e0682657c4d679c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a21c71dec8770e0c727c4a286a2f049e5a02e765ef0586f2a00aa3e8d8b6b6f54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a013f4528a641a0f8027c2bc1e3f55c43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>abb597490d683336be56aad8c26c5194c</anchor>
      <arglist>(T first, U... next)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>ad49a96a54105662266219595c8aee9d6</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a268b915602679e424d5b5eb1076456bd</anchor>
      <arglist>(const Array&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a4154b7806db85af26fd97a579e2e999a</anchor>
      <arglist>(const Array&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a041cec7d0a7725649be58bf9bb6d4ecf</anchor>
      <arglist>(UnsignedInt pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aae3143046857a45eaf5b6fc319159fdc</anchor>
      <arglist>(UnsignedInt pos) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aeb8e629eca2e0c1e43562ba7479070c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a47a38ca25ed4d36dc3f5c225fabcf0b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a2c022de6a506d510afb76bef6f382f10</anchor>
      <arglist>(Debug &amp;debug, const Array&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Array1D</name>
    <filename>classMagnum_1_1Array1D.html</filename>
    <templarg></templarg>
    <base>Array&lt; 1, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Array1D</name>
      <anchorfile>classMagnum_1_1Array1D.html</anchorfile>
      <anchor>a78a26c63d92cfd5ace9166b010514ee8</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array1D</name>
      <anchorfile>classMagnum_1_1Array1D.html</anchorfile>
      <anchor>ad9582ccdd6b2668a3bca5386db7c51fe</anchor>
      <arglist>(T x)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array1D</name>
      <anchorfile>classMagnum_1_1Array1D.html</anchorfile>
      <anchor>ac2b5b75522c4146e097a7c38cafcb7ea</anchor>
      <arglist>(const Array&lt; 1, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Array1D.html</anchorfile>
      <anchor>af288b22cfffdc1a6bb25e165d5329d73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Array1D.html</anchorfile>
      <anchor>ae459490dd8a33aff87820414ca51c6cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Array1D.html</anchorfile>
      <anchor>a0006f1ddb183ade30e6696eae4d9e41e</anchor>
      <arglist>(Debug &amp;debug, const Array1D&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Array2D</name>
    <filename>classMagnum_1_1Array2D.html</filename>
    <templarg></templarg>
    <base>Array&lt; 2, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Array2D</name>
      <anchorfile>classMagnum_1_1Array2D.html</anchorfile>
      <anchor>a3b564d65a19c1d932fe43dbb1651a20d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array2D</name>
      <anchorfile>classMagnum_1_1Array2D.html</anchorfile>
      <anchor>ab12dd4fe3bf1b55c66303cdf0840e0f5</anchor>
      <arglist>(T x, T y)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array2D</name>
      <anchorfile>classMagnum_1_1Array2D.html</anchorfile>
      <anchor>a68e9b1baa30b768b01ae547c91764f2c</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array2D</name>
      <anchorfile>classMagnum_1_1Array2D.html</anchorfile>
      <anchor>aeddd5fe019e4954faa5f4c2223724367</anchor>
      <arglist>(const Array&lt; 2, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Array2D.html</anchorfile>
      <anchor>a08a34ba7f543dd9f1caf2533c2cf3584</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Array2D.html</anchorfile>
      <anchor>acbf7d0c20ed6707d0885460010851856</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Array2D.html</anchorfile>
      <anchor>aa73c06c88874ffcd521637d7a3a7b3a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Array2D.html</anchorfile>
      <anchor>aa8a5591cb595089c11edd47108f05d53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Array2D.html</anchorfile>
      <anchor>a0fd13dadee773ce45ed6ab0a7cfe1630</anchor>
      <arglist>(Debug &amp;debug, const Array2D&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Array3D</name>
    <filename>classMagnum_1_1Array3D.html</filename>
    <templarg>T</templarg>
    <base>Array&lt; 3, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Array3D</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a0ad730b1a5c83d6ed76733ff6f88efd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array3D</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>abcde5d5b0866569d72e1d8c32b55a0e6</anchor>
      <arglist>(T x, T y, T z)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array3D</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a2939e8a313c4525eb29978a1fc00e82b</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array3D</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a5ecdf537fdbff58b291c4e579250d3a5</anchor>
      <arglist>(const Array&lt; 3, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>aefb47d61179ebec5bb4c00f47269fd76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>add6619dde92e521a47242f7f9f9b42c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>af1853b7cdbcc3004d995972e26a49265</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>abc14adaca0e16f87f471112687c44987</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a250a0dd7eabb1ddb78124b745c7b316a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a94044628df1ff122118165df37b76fa5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array2D&lt; T &gt; &amp;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>acb8a90e0c35f28e8ed6e01dc6657216b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Array2D&lt; T &gt;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>abd60714a0e73c29fcdb166a53b870856</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>ac95c370506ed1052ae50af8d3ab81fd1</anchor>
      <arglist>(Debug &amp;debug, const Array3D&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::AbstractImporter</name>
    <filename>classMagnum_1_1Audio_1_1AbstractImporter.html</filename>
    <base>AbstractManagingPlugin&lt; AbstractImporter &gt;</base>
    <member kind="enumeration">
      <type></type>
      <name>Feature</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a0466de1b6fa70f1350b90ad6f804ec8d</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Audio_1_1AbstractImporter.html" anchor="a0466de1b6fa70f1350b90ad6f804ec8dad81dcb96c7ab3ee3608397d0b0a9071c">OpenData</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Feature &gt;</type>
      <name>Features</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a4ad0e13e8e952858ba44c1a45eec8e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>abd0133c8ae118656d998502e451613ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>ace8c40f686c7d2b7bac54cd184a55606</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImporter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a1b882f5b3e423924043a2731acce422c</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <member kind="function">
      <type>Features</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>af1802c7163b15177ba386e246df707be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOpened</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a7d82807026e89dc6f1d2c4bbeb85b35b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openData</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a89eed7be2bad0257ada88433f3ea052e</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openFile</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>af9511f075311591f67246141e6aab6ac</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a801a5227314ad16e45858d05f5ee3eb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BufferFormat</type>
      <name>format</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>ace54002e9dab21e96f128be8023dada6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>frequency</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>aad90530efa054ded5090610af6825ad2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>abc6f098f83ff56b1790ba42a2a43a91c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>pluginInterface</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a1088c6b71da689ee25623148949f1694</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::string &gt;</type>
      <name>pluginSearchPaths</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a5da0e6ca1c2c1fec11c50c1ca1f96255</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual Features</type>
      <name>doFeatures</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a37a8980360e4344f1dbde5b6414d137b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual bool</type>
      <name>doIsOpened</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>ad6a879730e4a406ea484d16660b64eb2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>doOpenData</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>af36fa7a6d20e3bd40b940fdf9fab55f2</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>doOpenFile</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a196201c290ff075f789f8b389249f1cd</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>doClose</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>adef8340d3688fa581f4e2eda471058c2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual BufferFormat</type>
      <name>doFormat</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a749519bee873afc15e7dfe3e3ca2670e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual UnsignedInt</type>
      <name>doFrequency</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a51c2e419694da7c2ab2b7f3b696854b4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual Containers::Array&lt; char &gt;</type>
      <name>doData</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a620fc593b91d8f2f3dad6c7c199ce146</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>BufferFormat</type>
      <name>format</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>ace54002e9dab21e96f128be8023dada6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>frequency</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>aad90530efa054ded5090610af6825ad2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>abc6f098f83ff56b1790ba42a2a43a91c</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classMagnum_1_1Audio_1_1AbstractImporter" title="Subclassing">Audio-AbstractImporter-subclassing</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::AnyImporter</name>
    <filename>classMagnum_1_1Audio_1_1AnyImporter.html</filename>
    <base>Magnum::Audio::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>AnyImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1AnyImporter.html</anchorfile>
      <anchor>ad12c4d0ec0743670873ed9c284ec0b8a</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImporter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1AnyImporter.html</anchorfile>
      <anchor>a9cee170243e2e14af3e16f03a509eab7</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::Buffer</name>
    <filename>classMagnum_1_1Audio_1_1Buffer.html</filename>
    <member kind="typedef">
      <type>BufferFormat</type>
      <name>Format</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>ace3c3bbaafa21e3abbcf63f66bc5db86</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Buffer</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>aa908f0b649e321afaa2e4a513f3546de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Buffer</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>a3a6090001e32158c8d0c4b2c9490add2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Buffer</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>ad509396c7de7d95aabcd5036a701eb96</anchor>
      <arglist>(const Buffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Buffer</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>ac46de9e5c6a2e304ac9fd455c3050306</anchor>
      <arglist>(Buffer &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>acd3094f69e4152a27e024db04be555b8</anchor>
      <arglist>(const Buffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>a47525a2a884594e70f57507cf3c8fd26</anchor>
      <arglist>(Buffer &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ALuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>a0fae7e29d7fdc4936787b9e937a38715</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>a635f5799f50de3c06da29f42465fd7c5</anchor>
      <arglist>(BufferFormat format, Containers::ArrayView&lt; const void &gt; data, ALsizei frequency)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>adf9e3a8d821b433fa1de17d7f32ff106</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>channels</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>af81d771a07ec9a16dbbf3793d76b8788</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>bitDepth</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>a949035e07feb00ca5992355a8f26d841</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sampleCount</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>ac62d466558abab12eae5e59c5f0df752</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Int, Int &gt;</type>
      <name>loopPoints</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>a805247675c4b55fa7dfb0d1a2ff05b6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setLoopPoints</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>afbbbc5a097cf168936eb0b453cb1e78b</anchor>
      <arglist>(Int loopStart, Int loopEnd)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setLoopUntil</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>a4113d3ee8f0e0062f9ac04e5260a848f</anchor>
      <arglist>(Int loopEnd)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setLoopSince</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>a52560bcba94bf2e33b2d86b7c3ec1add</anchor>
      <arglist>(Int loopStart)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>resetLoopPoints</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>a54a2a3871b18893c95fade1412768a8d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::Context</name>
    <filename>classMagnum_1_1Audio_1_1Context.html</filename>
    <class kind="class">Magnum::Audio::Context::Configuration</class>
    <member kind="enumeration">
      <type></type>
      <name>HrtfStatus</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a22a5135a805786b1bdc460395342a41e</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Audio_1_1Context.html" anchor="a22a5135a805786b1bdc460395342a41eab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Context.html" anchor="a22a5135a805786b1bdc460395342a41ea00d23a76e43b46dae9ec7aa9dcbebb32">Enabled</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Context.html" anchor="a22a5135a805786b1bdc460395342a41ea58d036b9b7f0e7eb38cfb90f1cc70a73">Denied</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Context.html" anchor="a22a5135a805786b1bdc460395342a41eab651efdb98a5d6bd2b3935d0c3f4a5e2">Required</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Context.html" anchor="a22a5135a805786b1bdc460395342a41ea495ede3d060199c507c8708600b51784">Detected</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Context.html" anchor="a22a5135a805786b1bdc460395342a41eac82adc7582667b6bbc1e066757aad182">UnsupportedFormat</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a021854c62c77c9dca2e8ccef00c7e6ed</anchor>
      <arglist>(const Configuration &amp;configuration, Int argc, const char **argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a44a3d87978f593e50eef413a5ccaea24</anchor>
      <arglist>(const Configuration &amp;configuration, Int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a787d042e06e8cae33e3ba4f777222a24</anchor>
      <arglist>(const Configuration &amp;configuration, Int argc, std::nullptr_t argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a2f559f8fe5c98f27f188f121c73606c6</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a368c6470219279a3bb327189f90e5612</anchor>
      <arglist>(Int argc, const char **argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>aaab094bdb14350dc846fd8eba51695f8</anchor>
      <arglist>(Int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>aa3b39fe5992ce4a3a28d66c14583184c</anchor>
      <arglist>(Int argc, std::nullptr_t argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a82d680e18ea0b8c9844fa0581730408c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a680be1dd00b306b9e940dc8c85736c17</anchor>
      <arglist>(NoCreateT, Int argc, const char **argv) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a2d0fa337fd0a639bfdd07754a5549fd9</anchor>
      <arglist>(NoCreateT, Int argc, char **argv) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>ad97925885aa03f1efac91cc8b88c1f77</anchor>
      <arglist>(NoCreateT, Int argc, std::nullptr_t argv) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a0b0ca6202ab0a4e294e91a7d5b9fa926</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a512200a639df28c487d85d7256987d11</anchor>
      <arglist>(const Context &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a7d5bcd55f13494df5edcdaa73274d199</anchor>
      <arglist>(Context &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Context</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a0cc1b25f3166a2b073d380037c7c4b66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Context &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a4ee6c4897bb50bc850e2dde618fb697a</anchor>
      <arglist>(const Context &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Context &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>ad8c77744a35dfe512c4bb72c0bbf29ee</anchor>
      <arglist>(Context &amp;&amp;other)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>create</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>aa4f86d9f5e2a4dc3b60b79ed995b15d4</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tryCreate</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a61627cf230e9b24dd509025852f6665a</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHrtfEnabled</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>ac8934e0f32a12cb219f6af9b94dac688</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>HrtfStatus</type>
      <name>hrtfStatus</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a1e37e106f82fd45a6b0cedd310386cf8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>hrtfSpecifierString</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a0d64354023df15dca5a8c5b36f2bf9e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>deviceSpecifierString</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a445e6cd7bf3deb51200cbd243e6acee5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>vendorString</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a003fb8bf74fb0346e56146a6629b9a4e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>rendererString</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a999ead85d2dd636af65abaec592fd721</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>versionString</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>acdb0a2669e21fadb6d7efb0c2cfacfc6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>extensionStrings</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>afd4ead54f7bbaae928c36e1029d55a6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Extension &gt; &amp;</type>
      <name>supportedExtensions</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a2c2bfd9319e322de6fac53946bab4fc0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionSupported</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a73382de552834d5c8132c5f1f6856fc7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionSupported</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a547ae4e6b0754978c179e93a8c45da7a</anchor>
      <arglist>(const Extension &amp;extension) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionDisabled</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>ae88a59c8502f5913bd1015e50819bcac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionDisabled</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>ace0441ccd191e787e4d22d9761152243</anchor>
      <arglist>(const Extension &amp;extension) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::string &gt;</type>
      <name>deviceSpecifierStrings</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a6f1fdc2c7ae09fe9993be994eba638ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasCurrent</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>ad3a658ce6433a735292dfc23a94da854</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Context &amp;</type>
      <name>current</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a927dad853681662ac7ef4c04d8b22cd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>aaaa4894d3c9ef0fd261da648c8850155</anchor>
      <arglist>(Debug &amp;debug, Context::HrtfStatus value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Audio_1_1Context" title="Command-line options">AL-Context-command-line</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::Context::Configuration</name>
    <filename>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Hrtf</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>ab6ac8eefadc69039e87e6d055a892f84</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Audio_1_1Context_1_1Configuration.html" anchor="ab6ac8eefadc69039e87e6d055a892f84a7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Context_1_1Configuration.html" anchor="ab6ac8eefadc69039e87e6d055a892f84a00d23a76e43b46dae9ec7aa9dcbebb32">Enabled</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Context_1_1Configuration.html" anchor="ab6ac8eefadc69039e87e6d055a892f84ab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>deviceSpecifier</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>a69fc8cba74c8dfea0b3dd037e233d04c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setDeviceSpecifier</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>a5889b285c15714dc15ff9600efb72fa6</anchor>
      <arglist>(const std::string &amp;specifier)</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setDeviceSpecifier</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>afb83e18078524016a95aef2925892e78</anchor>
      <arglist>(std::string &amp;&amp;specifier)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>frequency</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>a711ba464af439b5e0a4054114a97007e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setFrequency</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>a8d4bc54b80e5fbdb84f978e0c0189b91</anchor>
      <arglist>(Int hz)</arglist>
    </member>
    <member kind="function">
      <type>Hrtf</type>
      <name>hrtf</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>a8ba2cd3d244afcaa8b89f8807cbdb649</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setHrtf</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>ade495e3aa4933f75f91a32ea2c4cf6cd</anchor>
      <arglist>(Hrtf hrtf)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>monoSourceCount</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>abda49a749da91b64b07d2534ec4fcd1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setMonoSourceCount</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>ac1153bcd9e067db2ddb830a3fc2eeb2f</anchor>
      <arglist>(Int count)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>stereoSourceCount</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>ae6b0e3245fc5f0efd2c5bd7176fbc445</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setStereoSourceCount</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>a39fc78a6375c233bc6c7994c4a7f1660</anchor>
      <arglist>(Int count)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>refreshRate</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>aac11d4a1ee098ba5ed37caad1438e763</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setRefreshRate</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>aacf97593ec667e64b202208e13518a65</anchor>
      <arglist>(Int hz)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::DrFlacImporter</name>
    <filename>classMagnum_1_1Audio_1_1DrFlacImporter.html</filename>
    <base>Magnum::Audio::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>DrFlacImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1DrFlacImporter.html</anchorfile>
      <anchor>ac329bb9b30436be1ba6abfd52bdf4c28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DrFlacImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1DrFlacImporter.html</anchorfile>
      <anchor>a2118660b4022fe691f41edc9f996615d</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::DrMp3Importer</name>
    <filename>classMagnum_1_1Audio_1_1DrMp3Importer.html</filename>
    <base>Magnum::Audio::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>DrMp3Importer</name>
      <anchorfile>classMagnum_1_1Audio_1_1DrMp3Importer.html</anchorfile>
      <anchor>ab517284a4377ca8b42014eb408d61a9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DrMp3Importer</name>
      <anchorfile>classMagnum_1_1Audio_1_1DrMp3Importer.html</anchorfile>
      <anchor>aafe047b0c89da750f165485f4e343632</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::DrWavImporter</name>
    <filename>classMagnum_1_1Audio_1_1DrWavImporter.html</filename>
    <base>Magnum::Audio::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>DrWavImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1DrWavImporter.html</anchorfile>
      <anchor>acbffa5500b84839473f84eb456d6154e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DrWavImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1DrWavImporter.html</anchorfile>
      <anchor>a4785c3603bbcad6b76d234372505c627</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::Extension</name>
    <filename>classMagnum_1_1Audio_1_1Extension.html</filename>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>index</name>
      <anchorfile>classMagnum_1_1Audio_1_1Extension.html</anchorfile>
      <anchor>a5476224befcf5c00171f43190c387322</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const char *</type>
      <name>string</name>
      <anchorfile>classMagnum_1_1Audio_1_1Extension.html</anchorfile>
      <anchor>a8022197e2a3de5fd3e897f2ea73c652b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Containers::ArrayView&lt; const Extension &gt;</type>
      <name>extensions</name>
      <anchorfile>classMagnum_1_1Audio_1_1Extension.html</anchorfile>
      <anchor>a1fcd513de7e8dc63f0abe1f98a4f76ad</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::Faad2Importer</name>
    <filename>classMagnum_1_1Audio_1_1Faad2Importer.html</filename>
    <base>Magnum::Audio::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>Faad2Importer</name>
      <anchorfile>classMagnum_1_1Audio_1_1Faad2Importer.html</anchorfile>
      <anchor>a91a920facbff455b37b9f94cd075940c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Faad2Importer</name>
      <anchorfile>classMagnum_1_1Audio_1_1Faad2Importer.html</anchorfile>
      <anchor>a4dea2daec07b621bb1650f0414951763</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::Listener</name>
    <filename>classMagnum_1_1Audio_1_1Listener.html</filename>
    <templarg>dimensions</templarg>
    <base>AbstractFeature&lt; dimensions, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>Listener</name>
      <anchorfile>classMagnum_1_1Audio_1_1Listener.html</anchorfile>
      <anchor>a197b91107fe5eb1d25f83292b571b4af</anchor>
      <arglist>(SceneGraph::AbstractObject&lt; dimensions, Float &gt; &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>const Matrix4 &amp;</type>
      <name>soundTransformation</name>
      <anchorfile>classMagnum_1_1Audio_1_1Listener.html</anchorfile>
      <anchor>aab38032ceb6baf37265df664a95203dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Listener&lt; dimensions &gt; &amp;</type>
      <name>setSoundTransformation</name>
      <anchorfile>classMagnum_1_1Audio_1_1Listener.html</anchorfile>
      <anchor>af3524dd986270e7bd2f98c8bf82f4a70</anchor>
      <arglist>(const Matrix4 &amp;soundTransformation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Audio_1_1Listener.html</anchorfile>
      <anchor>a4f9695c678504ce93253378f501dc7ea</anchor>
      <arglist>(std::initializer_list&lt; Containers::Reference&lt; PlayableGroup&lt; dimensions &gt;&gt;&gt; groups)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>gain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Listener.html</anchorfile>
      <anchor>a9f2c14ec46265f09b22e42a328e3ff03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Listener&lt; dimensions &gt; &amp;</type>
      <name>setGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Listener.html</anchorfile>
      <anchor>a756ab0338e8908d3e698b39f26312000</anchor>
      <arglist>(Float gain)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classMagnum_1_1Audio_1_1Listener.html</anchorfile>
      <anchor>a2b59133a12b150f5213722d63ba8b74f</anchor>
      <arglist>() const</arglist>
    </member>
    <docanchor file="classMagnum_1_1Audio_1_1Listener" title="Usage">Audio-Listener-usage</docanchor>
    <docanchor file="classMagnum_1_1Audio_1_1Listener" title="Active listener">Audio-Listener-active-listener</docanchor>
    <docanchor file="classMagnum_1_1Audio_1_1Listener" title="Sound transformation">Audio-Listener-sound-transformation</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::Playable</name>
    <filename>classMagnum_1_1Audio_1_1Playable.html</filename>
    <templarg>dimensions</templarg>
    <base>AbstractGroupedFeature&lt; dimensions, Playable&lt; dimensions &gt;, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>Playable</name>
      <anchorfile>classMagnum_1_1Audio_1_1Playable.html</anchorfile>
      <anchor>af85a80753977c5842ae1a61d764641c0</anchor>
      <arglist>(SceneGraph::AbstractObject&lt; dimensions, Float &gt; &amp;object, PlayableGroup&lt; dimensions &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Playable</name>
      <anchorfile>classMagnum_1_1Audio_1_1Playable.html</anchorfile>
      <anchor>a6ed9551fb0a066b832cdd4b3cf85e092</anchor>
      <arglist>(SceneGraph::AbstractObject&lt; dimensions, Float &gt; &amp;object, const VectorTypeFor&lt; dimensions, Float &gt; &amp;direction, PlayableGroup&lt; dimensions &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>source</name>
      <anchorfile>classMagnum_1_1Audio_1_1Playable.html</anchorfile>
      <anchor>aa6f5345343d22e079da030ce093be9bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>gain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Playable.html</anchorfile>
      <anchor>a92fec52634f25616d73af9607f01b958</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Playable &amp;</type>
      <name>setGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Playable.html</anchorfile>
      <anchor>acbafc2b040e75fa1342084d5875b1f44</anchor>
      <arglist>(const Float gain)</arglist>
    </member>
    <member kind="function">
      <type>PlayableGroup&lt; dimensions &gt; *</type>
      <name>playables</name>
      <anchorfile>classMagnum_1_1Audio_1_1Playable.html</anchorfile>
      <anchor>a16be060c45416c9d0447a174077230a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PlayableGroup&lt; dimensions &gt; *</type>
      <name>playables</name>
      <anchorfile>classMagnum_1_1Audio_1_1Playable.html</anchorfile>
      <anchor>ad8c47fb7006393f62e731766797b3bbe</anchor>
      <arglist>() const</arglist>
    </member>
    <docanchor file="classMagnum_1_1Audio_1_1Playable" title="Usage">Audio-Playable-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::PlayableGroup</name>
    <filename>classMagnum_1_1Audio_1_1PlayableGroup.html</filename>
    <templarg>dimensions</templarg>
    <base>FeatureGroup&lt; dimensions, Playable&lt; dimensions &gt;, Float &gt;</base>
    <member kind="function">
      <type>PlayableGroup&lt; dimensions &gt; &amp;</type>
      <name>play</name>
      <anchorfile>classMagnum_1_1Audio_1_1PlayableGroup.html</anchorfile>
      <anchor>ad8915a4df9804b5300633302953b67ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PlayableGroup&lt; dimensions &gt; &amp;</type>
      <name>pause</name>
      <anchorfile>classMagnum_1_1Audio_1_1PlayableGroup.html</anchorfile>
      <anchor>ad7c86c677496293778dde7cf19c99bbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PlayableGroup&lt; dimensions &gt; &amp;</type>
      <name>stop</name>
      <anchorfile>classMagnum_1_1Audio_1_1PlayableGroup.html</anchorfile>
      <anchor>a132a8c4cd8611b9323efbdac09dbc331</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>gain</name>
      <anchorfile>classMagnum_1_1Audio_1_1PlayableGroup.html</anchorfile>
      <anchor>a70275072530dd2baaf8aa234f00a23e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PlayableGroup&lt; dimensions &gt; &amp;</type>
      <name>setGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1PlayableGroup.html</anchorfile>
      <anchor>abd21d664a708e7bd17d9d4758f26715b</anchor>
      <arglist>(const Float gain)</arglist>
    </member>
    <member kind="function">
      <type>const Matrix4 &amp;</type>
      <name>soundTransformation</name>
      <anchorfile>classMagnum_1_1Audio_1_1PlayableGroup.html</anchorfile>
      <anchor>a586fc435b09039da12efd7a7ecec19bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PlayableGroup &amp;</type>
      <name>setSoundTransformation</name>
      <anchorfile>classMagnum_1_1Audio_1_1PlayableGroup.html</anchorfile>
      <anchor>a6bf32cba7b15a9e6bd354fa8d6feccbe</anchor>
      <arglist>(const Matrix4 &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClean</name>
      <anchorfile>classMagnum_1_1Audio_1_1PlayableGroup.html</anchorfile>
      <anchor>ac902ff9516f00c99f29d1e0f10b0c14d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::Renderer</name>
    <filename>classMagnum_1_1Audio_1_1Renderer.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Error</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a850adfc54ad2b0caffc6477f7588279c</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="a850adfc54ad2b0caffc6477f7588279ca70a47cae4eb221930f2663fd244369ea">NoError</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="a850adfc54ad2b0caffc6477f7588279caa798c6c805d93fedf99d9bdf443e7ffc">InvalidName</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="a850adfc54ad2b0caffc6477f7588279cabaf0777e3144a52d6fd69816f4ac22c8">InvalidEnum</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="a850adfc54ad2b0caffc6477f7588279ca223e81e8afa42c41346a6696560ecc7b">InvalidValue</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="a850adfc54ad2b0caffc6477f7588279ca1cd5ecce6fe138df5c3f7e8854a1a66d">InvalidOperation</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="a850adfc54ad2b0caffc6477f7588279cab498327feeb51430af73e07deac268fd">OutOfMemory</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static Error</type>
      <name>error</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a0cdb3e0f83fdcd97b67bad15b2d663b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>listenerPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>abb4edbd4752a62a521e6b35d7cc5bd87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>af6f800d5a477669b6ed35bb884c8f109</anchor>
      <arglist>(const Vector3 &amp;position)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>acc83a03c65738ec2ded77c64891b098d</anchor>
      <arglist>(const Vector3i &amp;position)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::array&lt; Vector3, 2 &gt;</type>
      <name>listenerOrientation</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a113d202a8ae12cb2c2904e485af6deb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerOrientation</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>acd08d7679053000aaeab3f1e864d240f</anchor>
      <arglist>(const Vector3 &amp;forward, const Vector3 &amp;up)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerOrientation</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>ad4a8fd49f57aa9a0898632639873d550</anchor>
      <arglist>(const Vector3i &amp;forward, const Vector3i &amp;up)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>listenerVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>aaeb2449326769bc45f8de7c8c7830686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>ad5384461bbed53ea8633edcdea9c0537</anchor>
      <arglist>(const Vector3 &amp;velocity)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a991df6a40f165ed18839efde37631f56</anchor>
      <arglist>(const Vector3i &amp;velocity)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>af5ed7655c31326a82464a3856ce8adaa</anchor>
      <arglist>(Debug &amp;debug, Renderer::Error value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>ad9b6a4047aa891ba272662f35fd78414</anchor>
      <arglist>(Debug &amp;debug, Renderer::DistanceModel value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>listenerPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>abb4edbd4752a62a521e6b35d7cc5bd87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>af6f800d5a477669b6ed35bb884c8f109</anchor>
      <arglist>(const Vector3 &amp;position)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>acc83a03c65738ec2ded77c64891b098d</anchor>
      <arglist>(const Vector3i &amp;position)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::array&lt; Vector3, 2 &gt;</type>
      <name>listenerOrientation</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a113d202a8ae12cb2c2904e485af6deb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerOrientation</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>acd08d7679053000aaeab3f1e864d240f</anchor>
      <arglist>(const Vector3 &amp;forward, const Vector3 &amp;up)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerOrientation</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>ad4a8fd49f57aa9a0898632639873d550</anchor>
      <arglist>(const Vector3i &amp;forward, const Vector3i &amp;up)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>listenerVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>aaeb2449326769bc45f8de7c8c7830686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>ad5384461bbed53ea8633edcdea9c0537</anchor>
      <arglist>(const Vector3 &amp;velocity)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a991df6a40f165ed18839efde37631f56</anchor>
      <arglist>(const Vector3i &amp;velocity)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DistanceModel</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>af9e29a81cd917d238a6d2ee584d116e6</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="af9e29a81cd917d238a6d2ee584d116e6a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="af9e29a81cd917d238a6d2ee584d116e6a9f87f02f2da8f99c571b2a1c2a96132b">Inverse</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="af9e29a81cd917d238a6d2ee584d116e6ab4753a992d19a2f74ffade7715fb72b7">InverseClamped</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="af9e29a81cd917d238a6d2ee584d116e6a32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="af9e29a81cd917d238a6d2ee584d116e6ad7ccd76fbff7eff9dfc4f329fbc3e1c2">LinearClamped</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="af9e29a81cd917d238a6d2ee584d116e6af5ccb8d51ca38e2f3329955fc0149cd4">Exponent</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="af9e29a81cd917d238a6d2ee584d116e6a1d71bce82674516f39e041c2988c495e">ExponentClamped</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static Float</type>
      <name>listenerGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a0f53338e6e2380920ac79095ee347057</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a0ebed2fb6510a907299a51f28c501812</anchor>
      <arglist>(Float gain)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Float</type>
      <name>dopplerFactor</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a8f08b52c127d3d406b35a5d7af4f09a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDopplerFactor</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a8185258661496a563e47ecb036799948</anchor>
      <arglist>(Float factor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Float</type>
      <name>speedOfSound</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>aa616c70605807d030cc600c00d87320e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setSpeedOfSound</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a9dff88436ea20fbb1257f70ce9f7d72c</anchor>
      <arglist>(Float speed)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DistanceModel</type>
      <name>distanceModel</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>ae3308be5feee90d7b9b45804b0ec7a9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDistanceModel</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a9e3d54fd54e8fa83f1c32657938e0f6b</anchor>
      <arglist>(DistanceModel model)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::Source</name>
    <filename>classMagnum_1_1Audio_1_1Source.html</filename>
    <member kind="function">
      <type></type>
      <name>Source</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a2554d8f30fd0c382d8a2beb4c56c10a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Source</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ae0200989c3cd1434a77ee92c49cc0466</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Source</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a0f8ad1bdabc03f314c5092715e6622a8</anchor>
      <arglist>(const Source &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Source</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a25bd3c26084a1988a92fa733e9e479eb</anchor>
      <arglist>(Source &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a381be7a308e033bebd15887bb8936574</anchor>
      <arglist>(const Source &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ac5634640939c433483de9fd135a97389</anchor>
      <arglist>(Source &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ALuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>af151ee76d596b56f817ef8e8bbe8f1be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a2c0f5d58dac365274d63af6fa8bfd6c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a0dc6e1d62e7df9428f49f69d3d9a9e28</anchor>
      <arglist>(const Vector3 &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a2ec5834ecf72ba2cab65cf58b076a286</anchor>
      <arglist>(const Vector3i &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>velocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>aaf94b047d3ecc3c795c2c43ad85db431</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a7227ce986c0dfa3276c790a2912bbc08</anchor>
      <arglist>(const Vector3 &amp;velocity)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>aad19824f7d008a50fd59b236d4898c2f</anchor>
      <arglist>(const Vector3i &amp;velocity)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRelative</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a4f98b7b77b3d5a78de9c9e82b470e6db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setRelative</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a8f2ed0e0db92adfff07549b86df49e0b</anchor>
      <arglist>(bool relative)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>gain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ac286d001bb65daef1614de01e3000e59</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a7fdd2508a8119fbef30a2faf80116bce</anchor>
      <arglist>(Float gain)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>minGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a219c2b02049095134d1ad3d0de643289</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setMinGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a47e8595b9fbed9b27861fce0f4b028e6</anchor>
      <arglist>(Float gain)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>maxGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>abe84cfb54cf85e117aa9276a290df2c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setMaxGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a5c98fa02993c910e261423d9345c0c1c</anchor>
      <arglist>(Float gain)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>referenceDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>adcbe7f173c7ba666650c4e75b7595819</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setReferenceDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a7e97ba7c1c64cfeea1d3adb78c3d2c3e</anchor>
      <arglist>(Float distance)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setReferenceDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ac3547125b9eeabdc551f9e3f0251211a</anchor>
      <arglist>(Int distance)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>rolloffFactor</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a1b95463dc37a17164578fd271687fdd9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setRolloffFactor</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a651c39ddbfde2ada8f9f5ad096e4de30</anchor>
      <arglist>(Float factor)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setRolloffFactor</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>aeca87352b2bb3f1fbf91b1cf54c767e9</anchor>
      <arglist>(Int factor)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>maxDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ae80729bcf5ab733ac3a1f1879223e42a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setMaxDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a0beefa334f5e44c87c05e2e2b6f01f40</anchor>
      <arglist>(Float distance)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setMaxDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a124aceab2e60c2dd74b02e15f5f5c3c8</anchor>
      <arglist>(Int distance)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>direction</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ad4043437c72d04cf21f9efabb647788c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setDirection</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a6530addf107c1ad8468aae4db6d3011a</anchor>
      <arglist>(const Vector3 &amp;direction)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setDirection</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a9e0f18374ab894a0291d70e0fe5a2253</anchor>
      <arglist>(const Vector3i &amp;direction)</arglist>
    </member>
    <member kind="function">
      <type>Deg</type>
      <name>innerConeAngle</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a4aba45c0a74ae5b59ab5c21eae94a33f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setInnerConeAngle</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a14b82976d8e038bf2a040aed70037ec1</anchor>
      <arglist>(Deg angle)</arglist>
    </member>
    <member kind="function">
      <type>Deg</type>
      <name>outerConeAngle</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a4bb03d1183ee0aa885bc5e0c20a05e48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setOuterConeAngle</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a0fddfff1a639bc9c7a4ed75776c364ea</anchor>
      <arglist>(Deg angle)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>outerConeGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a25580ccdee6081223697d41c2a165fba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setOuterConeGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a45e7c5e7cd19dffa9adf2e3733e65036</anchor>
      <arglist>(Float multiplier)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>pitch</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a4f6b7d6c58606f4178cc1a4bcba609ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setPitch</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>afc7dd6c58f3893b0d29004dd1aa98b2b</anchor>
      <arglist>(Float pitch)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a0a8de3ea9665f8333aabda2b530b9d7d</anchor>
      <arglist>(Debug &amp;debug, Source::State value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a65cb864cce21416949dca720e3f488f4</anchor>
      <arglist>(Debug &amp;debug, Source::Type value)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a2c0f5d58dac365274d63af6fa8bfd6c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a0dc6e1d62e7df9428f49f69d3d9a9e28</anchor>
      <arglist>(const Vector3 &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a2ec5834ecf72ba2cab65cf58b076a286</anchor>
      <arglist>(const Vector3i &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>velocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>aaf94b047d3ecc3c795c2c43ad85db431</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a7227ce986c0dfa3276c790a2912bbc08</anchor>
      <arglist>(const Vector3 &amp;velocity)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>aad19824f7d008a50fd59b236d4898c2f</anchor>
      <arglist>(const Vector3i &amp;velocity)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRelative</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a4f98b7b77b3d5a78de9c9e82b470e6db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setRelative</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a8f2ed0e0db92adfff07549b86df49e0b</anchor>
      <arglist>(bool relative)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>gain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ac286d001bb65daef1614de01e3000e59</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a7fdd2508a8119fbef30a2faf80116bce</anchor>
      <arglist>(Float gain)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>minGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a219c2b02049095134d1ad3d0de643289</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setMinGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a47e8595b9fbed9b27861fce0f4b028e6</anchor>
      <arglist>(Float gain)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>maxGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>abe84cfb54cf85e117aa9276a290df2c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setMaxGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a5c98fa02993c910e261423d9345c0c1c</anchor>
      <arglist>(Float gain)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>referenceDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>adcbe7f173c7ba666650c4e75b7595819</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setReferenceDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a7e97ba7c1c64cfeea1d3adb78c3d2c3e</anchor>
      <arglist>(Float distance)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setReferenceDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ac3547125b9eeabdc551f9e3f0251211a</anchor>
      <arglist>(Int distance)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>rolloffFactor</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a1b95463dc37a17164578fd271687fdd9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setRolloffFactor</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a651c39ddbfde2ada8f9f5ad096e4de30</anchor>
      <arglist>(Float factor)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setRolloffFactor</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>aeca87352b2bb3f1fbf91b1cf54c767e9</anchor>
      <arglist>(Int factor)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>maxDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ae80729bcf5ab733ac3a1f1879223e42a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setMaxDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a0beefa334f5e44c87c05e2e2b6f01f40</anchor>
      <arglist>(Float distance)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setMaxDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a124aceab2e60c2dd74b02e15f5f5c3c8</anchor>
      <arglist>(Int distance)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>direction</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ad4043437c72d04cf21f9efabb647788c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setDirection</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a6530addf107c1ad8468aae4db6d3011a</anchor>
      <arglist>(const Vector3 &amp;direction)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setDirection</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a9e0f18374ab894a0291d70e0fe5a2253</anchor>
      <arglist>(const Vector3i &amp;direction)</arglist>
    </member>
    <member kind="function">
      <type>Deg</type>
      <name>innerConeAngle</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a4aba45c0a74ae5b59ab5c21eae94a33f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setInnerConeAngle</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a14b82976d8e038bf2a040aed70037ec1</anchor>
      <arglist>(Deg angle)</arglist>
    </member>
    <member kind="function">
      <type>Deg</type>
      <name>outerConeAngle</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a4bb03d1183ee0aa885bc5e0c20a05e48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setOuterConeAngle</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a0fddfff1a639bc9c7a4ed75776c364ea</anchor>
      <arglist>(Deg angle)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>outerConeGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a25580ccdee6081223697d41c2a165fba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setOuterConeGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a45e7c5e7cd19dffa9adf2e3733e65036</anchor>
      <arglist>(Float multiplier)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>pitch</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a4f6b7d6c58606f4178cc1a4bcba609ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setPitch</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>afc7dd6c58f3893b0d29004dd1aa98b2b</anchor>
      <arglist>(Float pitch)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a503e55e760663a8fd3febb5af8e793a9</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Audio_1_1Source.html" anchor="a503e55e760663a8fd3febb5af8e793a9ad1a4512ffdb35c86a4830a91764190d9">Undetermined</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Source.html" anchor="a503e55e760663a8fd3febb5af8e793a9a84a8921b25f505d0d2077aeb5db4bc16">Static</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Source.html" anchor="a503e55e760663a8fd3febb5af8e793a9aac21d502848247aa2f578d0f718f5d1d">Streaming</enumvalue>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>afdbf8c64e392837ac7d8c237cf251955</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setBuffer</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a2d77c2c4f4a61ca66caf2b0d686212cf</anchor>
      <arglist>(Buffer *buffer)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>queueBuffers</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a15ffbb61793268f6caa8d3c7d122de88</anchor>
      <arglist>(Containers::ArrayView&lt; Containers::Reference&lt; Buffer &gt;&gt; buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>unqueueBuffers</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a840fccd2412d7ea0e956625b9090ed60</anchor>
      <arglist>(Containers::ArrayView&lt; Containers::Reference&lt; Buffer &gt;&gt; buffers)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a08c6e2605331bbee7feb91ad3a3149f4</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Audio_1_1Source.html" anchor="a08c6e2605331bbee7feb91ad3a3149f4a4f2a91e15af2631ff9424564b8a45fb2">Initial</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Source.html" anchor="a08c6e2605331bbee7feb91ad3a3149f4ac9dbb2b7c84159b632d71e512eba8428">Playing</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Source.html" anchor="a08c6e2605331bbee7feb91ad3a3149f4ae99180abf47a8b3a856e0bcb2656990a">Paused</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Source.html" anchor="a08c6e2605331bbee7feb91ad3a3149f4ac23e2b09ebe6bf4cb5e2a9abe85c0be2">Stopped</enumvalue>
    </member>
    <member kind="function">
      <type>State</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a18e6ecbddc9c004c47f8734675830fe6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>play</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a6ab49c3cfc5841d46d56c7883a5079c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>pause</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>abab96cf7ad594630cc4f369c4f8e66f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>stop</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a80b09f6c941d533e8196453a828634e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>rewind</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ab2249b10270a630bc6851be535568712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLooping</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a3167e93015ed43131a9213aa2627522a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setLooping</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>acd158f0bbd25f921cc61f2fdef003c13</anchor>
      <arglist>(bool loop)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>offsetInSeconds</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ab4913a8ba94ec384a27bf0df44e1f3eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setOffsetInSeconds</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>af1aa6d82f3646f3992c213b75f0ce785</anchor>
      <arglist>(Float offset)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>offsetInBytes</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a9a7c6c5a10f99ecdd0d5f60a59f1755e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setOffsetInBytes</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a35d34d31abee83c1cd5458ef6db8d03f</anchor>
      <arglist>(Int offset)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>offsetInSamples</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ade6b4e55b30c2883518a0718296fef95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setOffsetInSamples</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a267c58d8ef95bd50408efa2d5dcdccab</anchor>
      <arglist>(Int offset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>play</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ace53ea6c28c35326c3265e029d906d90</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; Source &gt;&gt; sources)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>play</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ad9937360d1f8924bd18a8b612189b43b</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; Source &gt;&gt; &amp;sources)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>pause</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ad1ed98356604e888ca9b8da315385130</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; Source &gt;&gt; sources)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>pause</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ab0500c83b2e56ef93842bc4dca6d7965</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; Source &gt;&gt; &amp;sources)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>stop</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a09b564b7ca9df56dc5c9268a85f1d540</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; Source &gt;&gt; sources)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>stop</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ad77f1f6609f372a96e41f741f6e86cb3</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; Source &gt;&gt; &amp;sources)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>rewind</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a3227c1aa5c507f5d32148daa806e6385</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; Source &gt;&gt; sources)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>rewind</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a5be6e7ba4d723a6861e565672b03c538</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; Source &gt;&gt; &amp;sources)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::StbVorbisImporter</name>
    <filename>classMagnum_1_1Audio_1_1StbVorbisImporter.html</filename>
    <base>Magnum::Audio::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>StbVorbisImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1StbVorbisImporter.html</anchorfile>
      <anchor>a62edada15ecec1cd4cbb897934e8d989</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StbVorbisImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1StbVorbisImporter.html</anchorfile>
      <anchor>acbf4ca952fa23a39455e2a4d5dfd962d</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::WavImporter</name>
    <filename>classMagnum_1_1Audio_1_1WavImporter.html</filename>
    <base>Magnum::Audio::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>WavImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1WavImporter.html</anchorfile>
      <anchor>a44ea0db18f9c8e3c27fc6792de0f4c18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WavImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1WavImporter.html</anchorfile>
      <anchor>ac6c088e008f0576d51f1252b1c017b59</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Audio_1_1WavImporter" title="Behavior and limitations">Audio-WavImporter-limitations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::BulletIntegration::DebugDraw</name>
    <filename>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Mode</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>a775bf0df8bae919d52dfc85c20133aca</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="a775bf0df8bae919d52dfc85c20133acaa198d167ebb04c8c4ef9d7a51a3275b2d">NoDebug</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="a775bf0df8bae919d52dfc85c20133acaa15f729ee31e789f519c28d02dde88379">DrawWireframe</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="a775bf0df8bae919d52dfc85c20133acaa9c29fc518a00d3a9e2397d312c95e242">DrawAabb</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="a775bf0df8bae919d52dfc85c20133acaabae6eba82ef524feebf9133cbe787c20">DrawFeaturesText</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="a775bf0df8bae919d52dfc85c20133acaa379687d2f357da4c3cdc6844dfa9ee72">DrawContactPoints</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="a775bf0df8bae919d52dfc85c20133acaa4eef246f3ffaacc2d1f5dc8b83bf5c65">NoDeactivation</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="a775bf0df8bae919d52dfc85c20133acaad33b01709e6483c069e64cacc1d3d2d4">NoHelpText</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="a775bf0df8bae919d52dfc85c20133acaacc0e6acc657ab511326581bdf1677e0a">DrawText</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="a775bf0df8bae919d52dfc85c20133acaa64248c594f73fdcde04e20bbe49a5f9b">ProfileTimings</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="a775bf0df8bae919d52dfc85c20133acaa1dc06d493f3b74dce80f095c1e24e892">EnableSatComparison</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="a775bf0df8bae919d52dfc85c20133acaa936cf7a05713c426487531abaa396a9f">DisableBulletLCP</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="a775bf0df8bae919d52dfc85c20133acaa9287763ccab62e70740da69d1ebc7778">EnableCCD</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="a775bf0df8bae919d52dfc85c20133acaaabc345eadb7d52439cb503bf8bc4c07e">DrawConstraints</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="a775bf0df8bae919d52dfc85c20133acaaa40e88e3c18d4f7415e47c9fd505032a">DrawConstraintLimits</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="a775bf0df8bae919d52dfc85c20133acaa3cce527fdc55d93cda6d742967b56376">FastWireframe</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="a775bf0df8bae919d52dfc85c20133acaa33f24995aa71d3635e469db76b56845e">FastWirefram</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="a775bf0df8bae919d52dfc85c20133acaae7ce13f79a6035f1907298650002ffbc">DrawNormals</enumvalue>
    </member>
    <member kind="typedef">
      <type>Mode</type>
      <name>DebugMode</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>a118c91d2ad1c8ed755a141805a9cc84e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Mode &gt;</type>
      <name>Modes</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>a0ad7a9555657f206dd1f17a202ec820b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Modes</type>
      <name>DebugModes</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>a7b8e963e38324b6b234db7cd2033f4b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DebugDraw</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>aa5ab86d611791fe78371ebdd6c8d0a14</anchor>
      <arglist>(std::size_t initialBufferCapacity=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DebugDraw</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>a57871eeb8a82945b2bbd7f6b49dd8a42</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DebugDraw</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>ac829ed9f70b4bf3fbf06c12147e7b155</anchor>
      <arglist>(DebugDraw &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DebugDraw</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>a459cf9b2ee19699594432b51042b1cda</anchor>
      <arglist>(const DebugDraw &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>DebugDraw &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>a35f38b5f169dc75a20fecab96412abca</anchor>
      <arglist>(DebugDraw &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DebugDraw &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>a4a0a152bea8e76187103d3e4daa696b6</anchor>
      <arglist>(const DebugDraw &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Modes</type>
      <name>mode</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>aad01972238278f7e5ae5d6b4e421fe1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Modes</type>
      <name>debugMode</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>a1eadafad9ba311f8d5d162a041d56067</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DebugDraw &amp;</type>
      <name>setMode</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>aae13405254987226bf4710ee06689be5</anchor>
      <arglist>(Modes mode)</arglist>
    </member>
    <member kind="function">
      <type>DebugDraw &amp;</type>
      <name>setDebugMode</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>aab6b13029b4a2a7e5fe4edf598e60960</anchor>
      <arglist>(Modes mode)</arglist>
    </member>
    <member kind="function">
      <type>DebugDraw &amp;</type>
      <name>setTransformationProjectionMatrix</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>a51c3b95ebf3085f779c27a6d4b367742</anchor>
      <arglist>(const Matrix4 &amp;matrix)</arglist>
    </member>
    <docanchor file="classMagnum_1_1BulletIntegration_1_1DebugDraw" title="Usage">BulletIntegration-DebugDraw-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::BulletIntegration::MotionState</name>
    <filename>classMagnum_1_1BulletIntegration_1_1MotionState.html</filename>
    <base>Magnum::SceneGraph::AbstractFeature</base>
    <member kind="function">
      <type></type>
      <name>MotionState</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1MotionState.html</anchorfile>
      <anchor>ab778c6d89cb6e07254eb4abb74d2a678</anchor>
      <arglist>(T &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>btMotionState &amp;</type>
      <name>btMotionState</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1MotionState.html</anchorfile>
      <anchor>a2779520943f0b6c6cf613f48e0031260</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classMagnum_1_1BulletIntegration_1_1MotionState" title="Usage">BulletIntegration-MotionState-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::CompressedImage</name>
    <filename>classMagnum_1_1CompressedImage.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>af337f9fb4bede2a2127d51430b55e314a60c263ded93b2db65dcfdfd599e660bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>af337f9fb4bede2a2127d51430b55e314a60c263ded93b2db65dcfdfd599e660bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImage</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>adc82bde0e0246b307e9e2e6253f9b518</anchor>
      <arglist>(CompressedPixelStorage storage, CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImage</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>ae6d1ba9465ec92322307cf1d364a13db</anchor>
      <arglist>(CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImage</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a6e10dbaa13abcab6890c8c06cf7de5ef</anchor>
      <arglist>(CompressedPixelStorage storage, T format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImage</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>ad14de9b1351fd877fdf943ea2e240dfb</anchor>
      <arglist>(T format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImage</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>ae0a15c56042e91a9a8cab9dbfaa80f92</anchor>
      <arglist>(CompressedPixelStorage storage) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImage</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a7f97e6e2e12f7b63911b88d4400ca214</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImage</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>aefe217584452eb685666f83a8d414aa7</anchor>
      <arglist>(const CompressedImage&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImage</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>acd3f50e9f08ae15826fe6e0b4ed0306a</anchor>
      <arglist>(CompressedImage&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>adcc5a6d658319ac7bca12ff24c6819fa</anchor>
      <arglist>(const CompressedImage&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>af2d5c70d3ef360774c5a9c5c6f6faa83</anchor>
      <arglist>(CompressedImage&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BasicMutableCompressedImageView&lt; dimensions &gt;</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a5a5953c005767793bb3b702d743ac8c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BasicCompressedImageView&lt; dimensions &gt;</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a3f7d046b16d25d263e99fd2f17c5967b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelStorage</type>
      <name>storage</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a36725112db6834a1ac55d30608005aa5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelFormat</type>
      <name>format</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a939351f2cd477433a054ca391ee3302e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a6d1eda731d41a49ed785274e918c8b4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; VectorTypeFor&lt; dimensions, std::size_t &gt;, VectorTypeFor&lt; dimensions, std::size_t &gt; &gt;</type>
      <name>dataProperties</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a5dbe37addb2b4686496143fa78e04002</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a5c929fadec5e990c32673306e8dfafe9</anchor>
      <arglist>() &amp;</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a0d59eb7be9d42e7ad19545dd89f4f1ac</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a81a876085c45ebc5b367b54253d47e04</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>ab43f781092df6255c9b40c2d2e72a02e</anchor>
      <arglist>() const &amp;&amp;=delete</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>ad7950d9d6e6ebc55858c37a4ddab13aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a7aad1436175b320734a4edd8deac4b95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a9f66670dd2595b6d37875ff3a679884c</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classMagnum_1_1CompressedImage" title="Basic usage">CompressedImage-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::CompressedImageView</name>
    <filename>classMagnum_1_1CompressedImageView.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>ab0502eb0a873e0f2926ad37f22276e68a905a69f12e2ef3b2196c80ed08d07c3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>a7357104dbfcc00f9915e4772e91a7282</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::conditional&lt; std::is_const&lt; T &gt;::value, const void, void &gt;::type</type>
      <name>ErasedType</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>aed7e1a893999858ebc0faa3e305d75af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>ab0502eb0a873e0f2926ad37f22276e68a905a69f12e2ef3b2196c80ed08d07c3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImageView</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>a858a0744ac20057593532720138170ad</anchor>
      <arglist>(CompressedPixelStorage storage, CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; ErasedType &gt; data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImageView</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>a83091a7be68130b1397cda6f06bb1f13</anchor>
      <arglist>(CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; ErasedType &gt; data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImageView</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>a985034203471b62b378589e9c582471b</anchor>
      <arglist>(CompressedPixelStorage storage, CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImageView</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>ab07ceb51c9262e46750e2e58116e3d5d</anchor>
      <arglist>(CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImageView</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>ae8c210957703d6d5007853b3b813e127</anchor>
      <arglist>(CompressedPixelStorage storage, U format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; ErasedType &gt; data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImageView</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>acea13059c6a857229070318f53d994ca</anchor>
      <arglist>(U format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; ErasedType &gt; data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImageView</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>a91edb27c381d3db6d4978df6f4fc0c28</anchor>
      <arglist>(CompressedPixelStorage storage, U format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImageView</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>afb261cd5f47e76ef6f567ac98e192bef</anchor>
      <arglist>(U format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImageView</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>acea0b2a47cb93edebc2da413afcecaf1</anchor>
      <arglist>(const CompressedImageView&lt; dimensions, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelStorage</type>
      <name>storage</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>ad07ccd62ee757bc9deaa546105b6d051</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelFormat</type>
      <name>format</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>a4c907677d8a71b4a580e2b177f542b77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>a4cbdc72e624d4bc6171bb4a4a7e6882d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; VectorTypeFor&lt; dimensions, std::size_t &gt;, VectorTypeFor&lt; dimensions, std::size_t &gt; &gt;</type>
      <name>dataProperties</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>aee8833157d7377f91fb5bf56e23c0422</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; Type &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>a10e5f690e258ef09db001681aa547056</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const U *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>ad68ac06f5a778ca6fd4bd4d5a44bfd74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>abfab0efbc9445eb3a051ac381c4ae23e</anchor>
      <arglist>(Containers::ArrayView&lt; ErasedType &gt; data)</arglist>
    </member>
    <docanchor file="classMagnum_1_1CompressedImageView" title="Basic usage">CompressedImageView-usage</docanchor>
    <docanchor file="classMagnum_1_1CompressedImageView" title="Data mutability">CompressedImageView-mutable</docanchor>
    <docanchor file="classMagnum_1_1CompressedImageView" title="Implementation-specific formats">CompressedImageView-usage-implementation-specific</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::CompressedPixelStorage</name>
    <filename>classMagnum_1_1CompressedPixelStorage.html</filename>
    <base>Magnum::PixelStorage</base>
    <member kind="function">
      <type>constexpr</type>
      <name>CompressedPixelStorage</name>
      <anchorfile>classMagnum_1_1CompressedPixelStorage.html</anchorfile>
      <anchor>ab3beda591846047cb80f79202536c38c</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1CompressedPixelStorage.html</anchorfile>
      <anchor>ae2182e591ee17c430002ea9577f2e761</anchor>
      <arglist>(const CompressedPixelStorage &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1CompressedPixelStorage.html</anchorfile>
      <anchor>a473960fbb030a141e3a0c0d46b272d2e</anchor>
      <arglist>(const CompressedPixelStorage &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3i</type>
      <name>compressedBlockSize</name>
      <anchorfile>classMagnum_1_1CompressedPixelStorage.html</anchorfile>
      <anchor>ad6a49aab49761c4150d4569a9dac5e39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelStorage &amp;</type>
      <name>setCompressedBlockSize</name>
      <anchorfile>classMagnum_1_1CompressedPixelStorage.html</anchorfile>
      <anchor>ab54d1d80a1a10dfd3133df9c0724a6b0</anchor>
      <arglist>(const Vector3i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>compressedBlockDataSize</name>
      <anchorfile>classMagnum_1_1CompressedPixelStorage.html</anchorfile>
      <anchor>a9ec4f57117d42de10a160d0c5e2d2db0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelStorage &amp;</type>
      <name>setCompressedBlockDataSize</name>
      <anchorfile>classMagnum_1_1CompressedPixelStorage.html</anchorfile>
      <anchor>abc8d6a374f5bd03de2b8b404404586eb</anchor>
      <arglist>(Int size)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Math::Vector3&lt; std::size_t &gt;, Math::Vector3&lt; std::size_t &gt; &gt;</type>
      <name>dataProperties</name>
      <anchorfile>classMagnum_1_1CompressedPixelStorage.html</anchorfile>
      <anchor>a949c8a4a03525101b74552fd05a6d6b8</anchor>
      <arglist>(const Vector3i &amp;size) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::DartIntegration::DrawData</name>
    <filename>structMagnum_1_1DartIntegration_1_1DrawData.html</filename>
    <member kind="function">
      <type></type>
      <name>DrawData</name>
      <anchorfile>structMagnum_1_1DartIntegration_1_1DrawData.html</anchorfile>
      <anchor>a7169fcead7cc1f6ee9a364c154528cfa</anchor>
      <arglist>(Containers::Array&lt; GL::Mesh &gt; meshes, Containers::Array&lt; Trade::PhongMaterialData &gt; materials, Containers::Array&lt; Containers::Optional&lt; GL::Texture2D &gt;&gt; textures, const Vector3 &amp;scaling)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DrawData</name>
      <anchorfile>structMagnum_1_1DartIntegration_1_1DrawData.html</anchorfile>
      <anchor>a32ff00093f9765c12c40bb261e667b79</anchor>
      <arglist>(const DrawData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DrawData</name>
      <anchorfile>structMagnum_1_1DartIntegration_1_1DrawData.html</anchorfile>
      <anchor>adba86e25bf8da45e743c8a04f67145ee</anchor>
      <arglist>(DrawData &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>DrawData &amp;</type>
      <name>operator=</name>
      <anchorfile>structMagnum_1_1DartIntegration_1_1DrawData.html</anchorfile>
      <anchor>a486c632e1a8eef195c1690a2ef8cd8bc</anchor>
      <arglist>(const DrawData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>DrawData &amp;</type>
      <name>operator=</name>
      <anchorfile>structMagnum_1_1DartIntegration_1_1DrawData.html</anchorfile>
      <anchor>a09bb671c005b1e99c5e89309f72ed903</anchor>
      <arglist>(DrawData &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="variable">
      <type>Containers::Array&lt; GL::Mesh &gt;</type>
      <name>meshes</name>
      <anchorfile>structMagnum_1_1DartIntegration_1_1DrawData.html</anchorfile>
      <anchor>a9857dd850f0ddd6c18625e27a20114af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Containers::Array&lt; Trade::PhongMaterialData &gt;</type>
      <name>materials</name>
      <anchorfile>structMagnum_1_1DartIntegration_1_1DrawData.html</anchorfile>
      <anchor>a2b652d9cbe479bc3a27f2ab8bc5efb7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Containers::Array&lt; Containers::Optional&lt; GL::Texture2D &gt; &gt;</type>
      <name>textures</name>
      <anchorfile>structMagnum_1_1DartIntegration_1_1DrawData.html</anchorfile>
      <anchor>a4d286106bace088b93da2f112f6b299e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector3</type>
      <name>scaling</name>
      <anchorfile>structMagnum_1_1DartIntegration_1_1DrawData.html</anchorfile>
      <anchor>a50119d149225550c228719109f2b2f46</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::DartIntegration::Object</name>
    <filename>classMagnum_1_1DartIntegration_1_1Object.html</filename>
    <base>Magnum::SceneGraph::AbstractFeature</base>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1Object.html</anchorfile>
      <anchor>accc7ecb17df1e30d480ec8b4942f1e6b</anchor>
      <arglist>(T &amp;object, dart::dynamics::ShapeNode *node=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1Object.html</anchorfile>
      <anchor>a85da4710b04e7ac42bbf5dd748d1f649</anchor>
      <arglist>(T &amp;object, dart::dynamics::BodyNode *body=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Object &amp;</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1Object.html</anchorfile>
      <anchor>a6672d22896fc8c9f857da8a37e73c7c8</anchor>
      <arglist>(Trade::AbstractImporter *importer=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUpdated</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1Object.html</anchorfile>
      <anchor>a6a0c519d84f3c28d8b31d29b2789c9dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object &amp;</type>
      <name>clearUpdateFlag</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1Object.html</anchorfile>
      <anchor>afb7094eebd0e79addbab00493e4cead3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasUpdatedMesh</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1Object.html</anchorfile>
      <anchor>ac81e9a3c13a291184a360f6f29f6c28a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DrawData &amp;</type>
      <name>drawData</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1Object.html</anchorfile>
      <anchor>a550fff1f0df3b95be2d8b5c023c09e5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dart::dynamics::ShapeNode *</type>
      <name>shapeNode</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1Object.html</anchorfile>
      <anchor>ad21c689f19c9719e4f137f8c10e6edbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dart::dynamics::BodyNode *</type>
      <name>bodyNode</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1Object.html</anchorfile>
      <anchor>ab96b12bf6318a4f01dab10b6ba49baa1</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classMagnum_1_1DartIntegration_1_1Object" title="Usage">DartIntegration-Object-usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>Magnum::DartIntegration::ShapeData</name>
    <filename>structMagnum_1_1DartIntegration_1_1ShapeData.html</filename>
    <member kind="function">
      <type></type>
      <name>ShapeData</name>
      <anchorfile>structMagnum_1_1DartIntegration_1_1ShapeData.html</anchorfile>
      <anchor>a58cdf8514428f92570cbe7f8f1be25d4</anchor>
      <arglist>(Containers::Array&lt; Trade::MeshData3D &gt; meshes, Containers::Array&lt; Trade::PhongMaterialData &gt; materials, Containers::Array&lt; Containers::Optional&lt; Trade::ImageData2D &gt;&gt; images, Containers::Array&lt; Containers::Optional&lt; Trade::TextureData &gt;&gt; textures, const Vector3 &amp;scaling)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShapeData</name>
      <anchorfile>structMagnum_1_1DartIntegration_1_1ShapeData.html</anchorfile>
      <anchor>a8cf1ff31f6591aeebd00aa0ee4bab4e3</anchor>
      <arglist>(const ShapeData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShapeData</name>
      <anchorfile>structMagnum_1_1DartIntegration_1_1ShapeData.html</anchorfile>
      <anchor>ab768e21b8d7640a5131f53ba2ffd27a5</anchor>
      <arglist>(ShapeData &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>ShapeData &amp;</type>
      <name>operator=</name>
      <anchorfile>structMagnum_1_1DartIntegration_1_1ShapeData.html</anchorfile>
      <anchor>a614f76c3cb45c9b2b91227bcafe6e2fd</anchor>
      <arglist>(const ShapeData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ShapeData &amp;</type>
      <name>operator=</name>
      <anchorfile>structMagnum_1_1DartIntegration_1_1ShapeData.html</anchorfile>
      <anchor>a1c498b70670cb0aee71822aa2a3ae5dd</anchor>
      <arglist>(ShapeData &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="variable">
      <type>Containers::Array&lt; Trade::MeshData3D &gt;</type>
      <name>meshes</name>
      <anchorfile>structMagnum_1_1DartIntegration_1_1ShapeData.html</anchorfile>
      <anchor>a6e2e6db82c8b5090ee6b661b5ae31017</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Containers::Array&lt; Trade::PhongMaterialData &gt;</type>
      <name>materials</name>
      <anchorfile>structMagnum_1_1DartIntegration_1_1ShapeData.html</anchorfile>
      <anchor>a56aef67d21804e2632b4ea09e4adcbd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Containers::Array&lt; Containers::Optional&lt; Trade::ImageData2D &gt; &gt;</type>
      <name>images</name>
      <anchorfile>structMagnum_1_1DartIntegration_1_1ShapeData.html</anchorfile>
      <anchor>af3f15f30bf4b4d86ecc7bc37abf6ea57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Containers::Array&lt; Containers::Optional&lt; Trade::TextureData &gt; &gt;</type>
      <name>textures</name>
      <anchorfile>structMagnum_1_1DartIntegration_1_1ShapeData.html</anchorfile>
      <anchor>a82df88a04ad2481e6620ff5c0c633fe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector3</type>
      <name>scaling</name>
      <anchorfile>structMagnum_1_1DartIntegration_1_1ShapeData.html</anchorfile>
      <anchor>a3990fccafeba5da50592ae0267d643e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::DartIntegration::World</name>
    <filename>classMagnum_1_1DartIntegration_1_1World.html</filename>
    <member kind="function">
      <type></type>
      <name>World</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1World.html</anchorfile>
      <anchor>a93206d2df1c5e682a7beb12c0752191f</anchor>
      <arglist>(T &amp;object, dart::simulation::World &amp;world)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>World</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1World.html</anchorfile>
      <anchor>af2a8014b5eb7192aa62fd68f8568c8fe</anchor>
      <arglist>(PluginManager::Manager&lt; Trade::AbstractImporter &gt; &amp;importerManager, T &amp;object, dart::simulation::World &amp;world)</arglist>
    </member>
    <member kind="function">
      <type>World &amp;</type>
      <name>refresh</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1World.html</anchorfile>
      <anchor>afbdd4cd309d1f7cf20983d26029234fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>World &amp;</type>
      <name>step</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1World.html</anchorfile>
      <anchor>afc84911336686d0690af5f386be15cd8</anchor>
      <arglist>(bool resetCommand=true)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::unique_ptr&lt; Object &gt; &gt; &amp;</type>
      <name>unusedObjects</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1World.html</anchorfile>
      <anchor>a9939bb879e32d567b6b87f2d76807b68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::reference_wrapper&lt; Object &gt; &gt;</type>
      <name>objects</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1World.html</anchorfile>
      <anchor>a2445782ba95eb8f8b8d68ced4b3f8c8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::reference_wrapper&lt; Object &gt; &gt;</type>
      <name>shapeObjects</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1World.html</anchorfile>
      <anchor>ac2d4944c0c5fa8ef1df0db5cddc8a1c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::reference_wrapper&lt; Object &gt; &gt;</type>
      <name>bodyObjects</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1World.html</anchorfile>
      <anchor>a2f48d70f80d650757a4e5306aec8487b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::reference_wrapper&lt; Object &gt; &gt;</type>
      <name>updatedShapeObjects</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1World.html</anchorfile>
      <anchor>a78869975380adbf96b0fd14bb8afde14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>World &amp;</type>
      <name>clearUpdatedShapeObjects</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1World.html</anchorfile>
      <anchor>a8321da40301e222162eba390ad3f2c2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object &amp;</type>
      <name>objectFromDartFrame</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1World.html</anchorfile>
      <anchor>a4fc92ea40f11922565a7caec9760f91a</anchor>
      <arglist>(dart::dynamics::Frame *frame)</arglist>
    </member>
    <member kind="function">
      <type>dart::simulation::World &amp;</type>
      <name>world</name>
      <anchorfile>classMagnum_1_1DartIntegration_1_1World.html</anchorfile>
      <anchor>a41bd7a09d84f51dd849175c8ea3a0476</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classMagnum_1_1DartIntegration_1_1World" title="Usage">DartIntegration-World-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugTools::CompareFileToImage</name>
    <filename>classMagnum_1_1DebugTools_1_1CompareFileToImage.html</filename>
    <member kind="function">
      <type></type>
      <name>CompareFileToImage</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1CompareFileToImage.html</anchorfile>
      <anchor>a6ed96365a03203584c564ebb6d0b4f25</anchor>
      <arglist>(Float maxThreshold, Float meanThreshold)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompareFileToImage</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1CompareFileToImage.html</anchorfile>
      <anchor>a2ef9a1b1bb694d19e104218f9297aeef</anchor>
      <arglist>(PluginManager::Manager&lt; Trade::AbstractImporter &gt; &amp;manager, Float maxThreshold, Float meanThreshold)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompareFileToImage</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1CompareFileToImage.html</anchorfile>
      <anchor>a6389abea12a934738264d0ad90145b7e</anchor>
      <arglist>(PluginManager::Manager&lt; Trade::AbstractImporter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompareFileToImage</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1CompareFileToImage.html</anchorfile>
      <anchor>a47abb767831f6cf230781b9202f477ff</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugTools::CompareImage</name>
    <filename>classMagnum_1_1DebugTools_1_1CompareImage.html</filename>
    <member kind="function">
      <type></type>
      <name>CompareImage</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1CompareImage.html</anchorfile>
      <anchor>acf19db0affc7fe7a54e4b3427115772a</anchor>
      <arglist>(Float maxThreshold, Float meanThreshold)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompareImage</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1CompareImage.html</anchorfile>
      <anchor>ae4c1f7dd0271eb90f4aac489d9f872e9</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classMagnum_1_1DebugTools_1_1CompareImage" title="Special floating-point values">DebugTools-CompareImage-specials</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugTools::CompareImageFile</name>
    <filename>classMagnum_1_1DebugTools_1_1CompareImageFile.html</filename>
    <member kind="function">
      <type></type>
      <name>CompareImageFile</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1CompareImageFile.html</anchorfile>
      <anchor>a30f631d0def7fce371fef2d7c95c2905</anchor>
      <arglist>(Float maxThreshold, Float meanThreshold)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompareImageFile</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1CompareImageFile.html</anchorfile>
      <anchor>ad9e0b96192ade8421a7664b882243127</anchor>
      <arglist>(PluginManager::Manager&lt; Trade::AbstractImporter &gt; &amp;importerManager, Float maxThreshold, Float meanThreshold)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompareImageFile</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1CompareImageFile.html</anchorfile>
      <anchor>af52fe4d9c880ba46109c4da7871f0817</anchor>
      <arglist>(PluginManager::Manager&lt; Trade::AbstractImporter &gt; &amp;importerManager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompareImageFile</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1CompareImageFile.html</anchorfile>
      <anchor>a4a286bb2de251fb4aa629a15d6fc3716</anchor>
      <arglist>(PluginManager::Manager&lt; Trade::AbstractImporter &gt; &amp;importerManager, PluginManager::Manager&lt; Trade::AbstractImageConverter &gt; &amp;converterManager, Float maxThreshold, Float meanThreshold)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompareImageFile</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1CompareImageFile.html</anchorfile>
      <anchor>ae71d724e08d1a83354d0ac266086eb01</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classMagnum_1_1DebugTools_1_1CompareImageFile" title="Saving files for failed comparisons">DebugTools-CompareImageFile-save-diagnostic</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugTools::CompareImageToFile</name>
    <filename>classMagnum_1_1DebugTools_1_1CompareImageToFile.html</filename>
    <member kind="function">
      <type></type>
      <name>CompareImageToFile</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1CompareImageToFile.html</anchorfile>
      <anchor>aa185d069559e9cf919494f3cd8b8f72a</anchor>
      <arglist>(Float maxThreshold, Float meanThreshold)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompareImageToFile</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1CompareImageToFile.html</anchorfile>
      <anchor>aa1060a8e1ebe789f6483b6171957cd95</anchor>
      <arglist>(PluginManager::Manager&lt; Trade::AbstractImporter &gt; &amp;importerManager, Float maxThreshold, Float meanThreshold)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompareImageToFile</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1CompareImageToFile.html</anchorfile>
      <anchor>a7b4ca9526cc82919edba263cb2d83494</anchor>
      <arglist>(PluginManager::Manager&lt; Trade::AbstractImporter &gt; &amp;importerManager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompareImageToFile</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1CompareImageToFile.html</anchorfile>
      <anchor>ac57fedd09a7f654af67b02fafeaef431</anchor>
      <arglist>(PluginManager::Manager&lt; Trade::AbstractImporter &gt; &amp;importerManager, PluginManager::Manager&lt; Trade::AbstractImageConverter &gt; &amp;imageConverterManager, Float maxThreshold, Float meanThreshold)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompareImageToFile</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1CompareImageToFile.html</anchorfile>
      <anchor>abb9c3ba7f1046b27b0e6364607c39ea3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugTools::ForceRenderer</name>
    <filename>classMagnum_1_1DebugTools_1_1ForceRenderer.html</filename>
    <templarg>dimensions</templarg>
    <base>Drawable&lt; dimensions, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>ForceRenderer</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ForceRenderer.html</anchorfile>
      <anchor>aa215eb21905d5bb0535602152eb1d8c1</anchor>
      <arglist>(SceneGraph::AbstractObject&lt; dimensions, Float &gt; &amp;object, const VectorTypeFor&lt; dimensions, Float &gt; &amp;forcePosition, const VectorTypeFor&lt; dimensions, Float &gt; &amp;force, ResourceKey options=ResourceKey(), SceneGraph::DrawableGroup&lt; dimensions, Float &gt; *drawables=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ForceRenderer</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ForceRenderer.html</anchorfile>
      <anchor>a4a47078956031ff2961eb316dc05582a</anchor>
      <arglist>(SceneGraph::AbstractObject&lt; dimensions, Float &gt; &amp;, const VectorTypeFor&lt; dimensions, Float &gt; &amp;, VectorTypeFor&lt; dimensions, Float &gt; &amp;&amp;, ResourceKey=ResourceKey(), SceneGraph::DrawableGroup&lt; dimensions, Float &gt; *=nullptr)=delete</arglist>
    </member>
    <docanchor file="classMagnum_1_1DebugTools_1_1ForceRenderer" title="Basic usage">DebugTools-ForceRenderer-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugTools::ForceRendererOptions</name>
    <filename>classMagnum_1_1DebugTools_1_1ForceRendererOptions.html</filename>
    <member kind="function">
      <type>constexpr Color4</type>
      <name>color</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ForceRendererOptions.html</anchorfile>
      <anchor>ab9e8fcf6a42f7307d689ce80bae86929</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ForceRendererOptions &amp;</type>
      <name>setColor</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ForceRendererOptions.html</anchorfile>
      <anchor>a1f16f8322957fba7854408a7be79ca64</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ForceRendererOptions.html</anchorfile>
      <anchor>a70236c5296f5ad7be7fae62eee6a9bac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>scale</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ForceRendererOptions.html</anchorfile>
      <anchor>ac1d4f5ed5cc46a9fbd56d72f4db10b29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ForceRendererOptions &amp;</type>
      <name>setSize</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ForceRendererOptions.html</anchorfile>
      <anchor>a0817d06d0bb054d61508e0b92c5853e6</anchor>
      <arglist>(Float size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugTools::ObjectRenderer</name>
    <filename>classMagnum_1_1DebugTools_1_1ObjectRenderer.html</filename>
    <templarg>dimensions</templarg>
    <base>Drawable&lt; dimensions, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>ObjectRenderer</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ObjectRenderer.html</anchorfile>
      <anchor>a39c29ddf3220a6d6d4a810a7724b1960</anchor>
      <arglist>(SceneGraph::AbstractObject&lt; dimensions, Float &gt; &amp;object, ResourceKey options=ResourceKey(), SceneGraph::DrawableGroup&lt; dimensions, Float &gt; *drawables=nullptr)</arglist>
    </member>
    <docanchor file="classMagnum_1_1DebugTools_1_1ObjectRenderer" title="Basic usage">DebugTools-ObjectRenderer-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugTools::ObjectRendererOptions</name>
    <filename>classMagnum_1_1DebugTools_1_1ObjectRendererOptions.html</filename>
    <member kind="function">
      <type>constexpr Float</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ObjectRendererOptions.html</anchorfile>
      <anchor>ac3438305b5d32190e6e3c83da13842e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectRendererOptions &amp;</type>
      <name>setSize</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ObjectRendererOptions.html</anchorfile>
      <anchor>a50af6fcdad1352ea0d8a0d8121db876b</anchor>
      <arglist>(Float size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugTools::Profiler</name>
    <filename>classMagnum_1_1DebugTools_1_1Profiler.html</filename>
    <member kind="typedef">
      <type>UnsignedInt</type>
      <name>Section</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>af5a98d7446df36116797c34cd467feb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMeasureDuration</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>aefbcba0490727d47e502905f66e2ba96</anchor>
      <arglist>(std::size_t frames)</arglist>
    </member>
    <member kind="function">
      <type>Section</type>
      <name>addSection</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>ab6da3d649b2352a37f08fb5cd7279519</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>a3e084bffdc62fd51e31a078b2bbdab32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>a6fb5bb0cc4e52de61c23be21ddcdf30d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>a38db40c7ec8aab26cb8df156a9ba4c60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>a4c1974a7704f581f53d57ec8f4472267</anchor>
      <arglist>(Section section)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>ad7b131e9507245001765a21c57ebda5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>ae9ad5cc6c51fb4cbc92f8fce37941212</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nextFrame</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>abc200a768f4543ddf2fb48ec83e314d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printStatistics</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>ac285f4a9b26fa50d7904263951574191</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Section</type>
      <name>otherSection</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>a589b9249bb24d91e2280b4a59d539ad3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugTools::ResourceManager</name>
    <filename>classMagnum_1_1DebugTools_1_1ResourceManager.html</filename>
    <base>ResourceManager&lt; Magnum::Implementation::ResourceManagerLocalInstance, GL::AbstractShaderProgram, GL::Buffer, GL::Mesh, GL::MeshView, DebugTools::ForceRendererOptions, DebugTools::ObjectRendererOptions &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Magnum::DimensionTraits</name>
    <filename>structMagnum_1_1DimensionTraits.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>U</type>
      <name>VectorType</name>
      <anchorfile>structMagnum_1_1DimensionTraits.html</anchorfile>
      <anchor>a23a2cdde6de036e7e5d584b21217cff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>U</type>
      <name>RangeType</name>
      <anchorfile>structMagnum_1_1DimensionTraits.html</anchorfile>
      <anchor>aa99219979a1ce96aefd76d149315db00</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>U</type>
      <name>MatrixType</name>
      <anchorfile>structMagnum_1_1DimensionTraits.html</anchorfile>
      <anchor>a0edd812ed308228bbff51ef5d0f47140</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::AbstractFramebuffer</name>
    <filename>classMagnum_1_1GL_1_1AbstractFramebuffer.html</filename>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>ad705297bb8a994dad74f98fd2f9f679a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Range2Di</type>
      <name>viewport</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>ab43f16d6e2cbfc6e92529657ffa4711d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AbstractFramebuffer &amp;</type>
      <name>setViewport</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>ab12aa9757072e394ab95ab16ac19258b</anchor>
      <arglist>(const Range2Di &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>PixelFormat</type>
      <name>implementationColorReadFormat</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a61c6330d5c1f8026d1295757569d441e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PixelType</type>
      <name>implementationColorReadType</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a2464cc666198aca8b77e0f6ccc86f6c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AbstractFramebuffer &amp;</type>
      <name>clear</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>af7951d3844db1ea4abbcb1ed9baa94d2</anchor>
      <arglist>(FramebufferClearMask mask)</arglist>
    </member>
    <member kind="function">
      <type>AbstractFramebuffer &amp;</type>
      <name>clearDepth</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>afd9b82bbd2c909c0f413f90ce40f9d6d</anchor>
      <arglist>(Float depth)</arglist>
    </member>
    <member kind="function">
      <type>AbstractFramebuffer &amp;</type>
      <name>clearStencil</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a4d95777723cc884d80b60075a3c4bbc8</anchor>
      <arglist>(Int stencil)</arglist>
    </member>
    <member kind="function">
      <type>AbstractFramebuffer &amp;</type>
      <name>clearDepthStencil</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a3e3c860774f2246c71f54d12c03fd0cc</anchor>
      <arglist>(Float depth, Int stencil)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>ade61646dc62ea71d6af643fbd2637784</anchor>
      <arglist>(const Range2Di &amp;rectangle, Image2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image2D</type>
      <name>read</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>ae11d0b7f2763900ce16314a9d5e3f23b</anchor>
      <arglist>(const Range2Di &amp;rectangle, Image2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a1a90cab306869b3c021bce2f290e5412</anchor>
      <arglist>(const Range2Di &amp;rectangle, const MutableImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>afd2fae1652d6a2032c41fc9d5a72fabf</anchor>
      <arglist>(const Range2Di &amp;rectangle, BufferImage2D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage2D</type>
      <name>read</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a28a3cbf18d3f28fca98a67bafea007d4</anchor>
      <arglist>(const Range2Di &amp;rectangle, BufferImage2D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyImage</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>ac7941e1ab103b2ed97a2eb4dacee797c</anchor>
      <arglist>(const Range2Di &amp;rectangle, Texture1D &amp;texture, Int level, TextureFormat internalFormat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyImage</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a10e646f8e9b54299bd2913bbc1194276</anchor>
      <arglist>(const Range2Di &amp;rectangle, Texture2D &amp;texture, Int level, TextureFormat internalFormat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyImage</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>acda9590b6abfd59242274aa370aaac37</anchor>
      <arglist>(const Range2Di &amp;rectangle, RectangleTexture &amp;texture, TextureFormat internalFormat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyImage</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a2b07caa89739035107bb84227e5a005f</anchor>
      <arglist>(const Range2Di &amp;rectangle, CubeMapTexture &amp;texture, CubeMapCoordinate coordinate, Int level, TextureFormat internalFormat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyImage</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a7e32457f35038bcdc160901ad81523d2</anchor>
      <arglist>(const Range2Di &amp;rectangle, Texture1DArray &amp;texture, Int level, TextureFormat internalFormat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copySubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>aaebc453db1f05e9f3000294a7965c319</anchor>
      <arglist>(const Range2Di &amp;rectangle, Texture1D &amp;texture, Int level, Int offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copySubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a7669d9c7749e58c0462644194433d566</anchor>
      <arglist>(const Range2Di &amp;rectangle, Texture2D &amp;texture, Int level, const Vector2i &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copySubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a2e9c1ae3ffdc24fb1df4cf5676051271</anchor>
      <arglist>(const Range2Di &amp;rectangle, RectangleTexture &amp;texture, const Vector2i &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copySubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>aa1cc35b9ac9ba0d89d8c80879fd0f71e</anchor>
      <arglist>(const Range2Di &amp;rectangle, CubeMapTexture &amp;texture, Int level, const Vector3i &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copySubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a84164409264540c78276aa2183ae5c6a</anchor>
      <arglist>(const Range2Di &amp;rectangle, Texture3D &amp;texture, Int level, const Vector3i &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copySubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a6f6f0c78aeca27f066964cb5865adec3</anchor>
      <arglist>(const Range2Di &amp;rectangle, Texture1DArray &amp;texture, Int level, const Vector2i &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copySubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>ab018a282a8c74992c6272a07b8d5e255</anchor>
      <arglist>(const Range2Di &amp;rectangle, Texture2DArray &amp;texture, Int level, const Vector3i &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copySubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a784a743e13913136800fb4e344cc3a85</anchor>
      <arglist>(const Range2Di &amp;rectangle, CubeMapTextureArray &amp;texture, Int level, const Vector3i &amp;offset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector2i</type>
      <name>maxViewportSize</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a7d7058fed51c7714027c63bf7f8e00cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxDrawBuffers</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a9d7e1ef9601aa0046175556b535e6bc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxDualSourceDrawBuffers</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>ab5436e4988df701504cce0f6e9cd7441</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>blit</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>af6b1f88a25c48906b8ce8d7fd52cc56c</anchor>
      <arglist>(AbstractFramebuffer &amp;source, AbstractFramebuffer &amp;destination, const Range2Di &amp;sourceRectangle, const Range2Di &amp;destinationRectangle, FramebufferBlitMask mask, FramebufferBlitFilter filter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>blit</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>aa4b3a826d1c95beb8921b7bbb6ccb607</anchor>
      <arglist>(AbstractFramebuffer &amp;source, AbstractFramebuffer &amp;destination, const Range2Di &amp;rectangle, FramebufferBlitMask mask)</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1AbstractFramebuffer" title="Performance optimizations and security">GL-AbstractFramebuffer-performance-optimization</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::AbstractObject</name>
    <filename>classMagnum_1_1GL_1_1AbstractObject.html</filename>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxLabelLength</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractObject.html</anchorfile>
      <anchor>a106353c4e90a69fcdb76fdda5f23ae17</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::AbstractQuery</name>
    <filename>classMagnum_1_1GL_1_1AbstractQuery.html</filename>
    <base>Magnum::GL::AbstractObject</base>
    <member kind="function">
      <type></type>
      <name>AbstractQuery</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractQuery.html</anchorfile>
      <anchor>a66af24d292fb8d83fd873e9170c9af41</anchor>
      <arglist>(const AbstractQuery &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractQuery</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractQuery.html</anchorfile>
      <anchor>a34ccf6394f44ad2f9fc7ed8e64ce4629</anchor>
      <arglist>(AbstractQuery &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AbstractQuery &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractQuery.html</anchorfile>
      <anchor>aec10fc849ed136dea707a430c20be1b7</anchor>
      <arglist>(const AbstractQuery &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractQuery &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractQuery.html</anchorfile>
      <anchor>a6136179bb95363afd87ddf4713941db3</anchor>
      <arglist>(AbstractQuery &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractQuery.html</anchorfile>
      <anchor>a6ca76e9f1c96f4a4be92e9ae3b88926f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractQuery.html</anchorfile>
      <anchor>a778f856dbe19589f89cbdbe64734709f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractQuery.html</anchorfile>
      <anchor>a2da42d61084f1aed79938e55307e3dad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AbstractQuery &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractQuery.html</anchorfile>
      <anchor>a7762632c74848ee666ee179490fd6f2b</anchor>
      <arglist>(const std::string &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>AbstractQuery &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractQuery.html</anchorfile>
      <anchor>a94466969cc5a25178da6f0566e7102a6</anchor>
      <arglist>(const char(&amp;label)[size])</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resultAvailable</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractQuery.html</anchorfile>
      <anchor>aa1f4c9e16d405c624da130898928a1c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>result</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractQuery.html</anchorfile>
      <anchor>a31a99e2683e690371f83afcbdc04563c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractQuery.html</anchorfile>
      <anchor>a15cff790050ba2ffc809b51c5172d740</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractQuery.html</anchorfile>
      <anchor>aa878d7b9b63281be4d0f6c81a4f5ae54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~AbstractQuery</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractQuery.html</anchorfile>
      <anchor>abb7ad3fa074906b147a28567321df574</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::AbstractShaderProgram</name>
    <filename>classMagnum_1_1GL_1_1AbstractShaderProgram.html</filename>
    <base>Magnum::GL::AbstractObject</base>
    <member kind="enumeration">
      <type></type>
      <name>TransformFeedbackBufferMode</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>aac629adc6ae81354ef14a5e4d89e2660</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1AbstractShaderProgram.html" anchor="aac629adc6ae81354ef14a5e4d89e2660af1750acc2f9fb07356b4c742e986451b">InterleavedAttributes</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1AbstractShaderProgram.html" anchor="aac629adc6ae81354ef14a5e4d89e2660a0106c653b3fa703956bbbe1584518863">SeparateAttributes</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractShaderProgram</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a18396f572f0559f918b09e8023856b13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractShaderProgram</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>af5f587440a91420272dab3225b705c70</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractShaderProgram</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a7ebc67ca88669d93fe589c2a28daa7a2</anchor>
      <arglist>(const AbstractShaderProgram &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractShaderProgram</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ac619e30136509460dee65c84f312e60e</anchor>
      <arglist>(AbstractShaderProgram &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>~AbstractShaderProgram</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>aa0b738ba2f28130cf1f15d59bf2641e3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>AbstractShaderProgram &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a719798a1ae4caed647d8213d2e26414e</anchor>
      <arglist>(const AbstractShaderProgram &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractShaderProgram &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ab87c37b78606b69fa851b84bfe1cf85e</anchor>
      <arglist>(AbstractShaderProgram &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ae1a117604b3ba0f380fd8581b57a2661</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>abf6db35072c2261e4e682c6a4b47dd53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AbstractShaderProgram &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>acac6667142a9a86146dc90feb1a022a3</anchor>
      <arglist>(const std::string &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>AbstractShaderProgram &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a970bcd605ebf2e7863d0715e8d3c7289</anchor>
      <arglist>(const char(&amp;label)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; bool, std::string &gt;</type>
      <name>validate</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a428373a9fd646db377485d65208038f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dispatchCompute</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a2e517c42604eeb117009f978c8c3918b</anchor>
      <arglist>(const Vector3ui &amp;workgroupCount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxVertexAttributes</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a6362b506f30fdfb05bf638a3eef08c66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxAtomicCounterBufferSize</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a7a4f031fe26f2308292a7ca1f7661929</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxComputeSharedMemorySize</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a26742c7df2bf196d662f52f5b3e88697</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxComputeWorkGroupInvocations</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ab1b6b55138bf0f89e0ea8dc03e76b9f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3i</type>
      <name>maxComputeWorkGroupCount</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a2aa15a3ba19ad1dd1c25435817fed641</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3i</type>
      <name>maxComputeWorkGroupSize</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a638bebc989c95d52dc25e1ee06be49cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxImageUnits</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a42313564dc85238221f234b0a0a5933b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxImageSamples</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a93f46c4159f65a93598afbf5a7e256fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxCombinedShaderOutputResources</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>acaba405b7fe3b2a8a309ed86c990ab3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Long</type>
      <name>maxShaderStorageBlockSize</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a02c645b9c23cf59d6b2e2799d5800bc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxUniformBlockSize</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ae21ee7b3dbbffb8ff4f23b0c7dba2e3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxUniformLocations</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a6dfec3bb72c800f8f9ab1e72d1923f4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>minTexelOffset</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a8358e4ade12c1c7ff1202290a527adc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxTexelOffset</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a03ffb67f2336f68056b91ab0a176bb55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setRetrievableBinary</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a76e8e92d18284f28bb68e19ac60c3d17</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setSeparable</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a7a86976185d6e8a4cb7d31a1ecbb2059</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>attachShader</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ae334913bd4604324cb25d825c5068744</anchor>
      <arglist>(Shader &amp;shader)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>attachShaders</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ae28c0eca833a03bb7eb687780d3548d9</anchor>
      <arglist>(std::initializer_list&lt; Containers::Reference&lt; Shader &gt;&gt; shaders)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>bindAttributeLocation</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a986fa63e24af21121d2c11f3a40899f2</anchor>
      <arglist>(UnsignedInt location, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>bindAttributeLocation</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>aa7882cbd35ea00eadb26e1a22f3ce105</anchor>
      <arglist>(UnsignedInt location, const char(&amp;name)[size])</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>bindFragmentDataLocationIndexed</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>aa1bac8ccfbaf918c92f88fd470265580</anchor>
      <arglist>(UnsignedInt location, UnsignedInt index, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>bindFragmentDataLocationIndexed</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ada8985d3ae49e56c5e94cd43495d2e90</anchor>
      <arglist>(UnsignedInt location, UnsignedInt index, const char(&amp;name)[size])</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>bindFragmentDataLocation</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>aa5fa33aaad233fbe73369592aea3b17c</anchor>
      <arglist>(UnsignedInt location, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>bindFragmentDataLocation</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a379cdcc8681d35249a825c53853e8d0f</anchor>
      <arglist>(UnsignedInt location, const char(&amp;name)[size])</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setTransformFeedbackOutputs</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>aace8bfba7325470b0de5c6edec7466e7</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; outputs, TransformFeedbackBufferMode bufferMode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>link</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a5cbcb84d2581b46f203d79f87df94af6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Int</type>
      <name>uniformLocation</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>aca0f82dc917e5f3fd0d82982899190f3</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Int</type>
      <name>uniformLocation</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a723839a7222bcd51e56015dca95b889b</anchor>
      <arglist>(const char(&amp;name)[size])</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>UnsignedInt</type>
      <name>uniformBlockIndex</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a5656a8e7eba2ecaabbb30bd8472fdb40</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>UnsignedInt</type>
      <name>uniformBlockIndex</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a20928f0c52b5d706f0d9bddd2874150d</anchor>
      <arglist>(const char(&amp;name)[size])</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>acf10411b1a6d340001fc25660ff9c745</anchor>
      <arglist>(Int location, const T &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ad2ecdbe3bacb85bcb9ae1e50170226fe</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Float &gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a1351c35ec21fc011354c92253f28c3ed</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 2, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ae12e292af77e7c3d319d6b72797c32c4</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 3, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a140dff81bd4fe1a343f7e1e7bd1662c6</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 4, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a7e14afc299663d0678a30762264d2530</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Int &gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a9e3fe6071e17e2f2f7ba37f7e9954005</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 2, Int &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a916b07b9295d8abf931b899e5be788d0</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 3, Int &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>af9b5f8e603c74e0b3c886973f45b6434</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 4, Int &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a67cac5ad6bb0e23baf6bce5ed7a0132f</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const UnsignedInt &gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a26f81b794f7a2be68e01e5da9fe84c33</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 2, UnsignedInt &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a63dbf370df4bb9fd807982b9bf804abb</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 3, UnsignedInt &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a6321345f46ef70e1d9ac149af1118ad3</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 4, UnsignedInt &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ae49ee52e838ae41d1012dd4cd639ed5d</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Double &gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a351a982559425e20143f3d93959393a7</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 2, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ae97553d2db0fec7b4079f21c41bbe5a8</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 3, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ab813f2acb43312fdca8b348a9ad4c5d5</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 4, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ad411ab7d8460e6218c51b4285025ee2e</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 2, 2, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a8586fdb3f53aba5ab107ec9a12ecfd42</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 3, 3, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a8b4590e29fc4919d3cff9ed421af2ec5</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 4, 4, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a0823e58ab56769a8b4a524f54bd7665d</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 2, 3, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>af576aa300ab062a60027d98ed6287060</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 3, 2, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a6bb129146f0424c2b9c49b6c22f39251</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 2, 4, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a283b1dae854daeccab199f6a6598a946</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 4, 2, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a8d844c3d10bd6852cbb25b02c84e0866</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 3, 4, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a1adf8791a68445d8fb537f909b947441</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 4, 3, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a3e8c135c842ef81f10112e9b520624ff</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 2, 2, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a0c5cb0ec967230c772ead707bc436231</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 3, 3, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ac83d7dcc9d83033215bdbbdcf414bf61</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 4, 4, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a106d7bdc7bfc938545dde3ecb674c352</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 2, 3, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a04b1f07247a71f2235d39dfbb9ca121b</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 3, 2, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a124dd1aa041a8e1df36915ac063c8b0e</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 2, 4, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>af25551959b48158e3a3b4e24a2f9787c</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 4, 2, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a70bccf946334300d3a2407e2b1d66401</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 3, 4, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a45389c8f418d8d045cd7ed0d9f6ae153</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 4, 3, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniformBlockBinding</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a311a42ac10816f7494a4e0fae9e46ef6</anchor>
      <arglist>(UnsignedInt index, UnsignedInt binding)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static bool</type>
      <name>link</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a9f4fd548985b7b85771ec9c74e282668</anchor>
      <arglist>(std::initializer_list&lt; Containers::Reference&lt; AbstractShaderProgram &gt;&gt; shaders)</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1AbstractShaderProgram" title="Subclassing workflow">GL-AbstractShaderProgram-subclassing</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1AbstractShaderProgram" title="Binding attribute location">GL-AbstractShaderProgram-attribute-location</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1AbstractShaderProgram" title="Uniform locations">GL-AbstractShaderProgram-uniform-location</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1AbstractShaderProgram" title="Uniform block bindings">GL-AbstractShaderProgram-uniform-block-binding</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1AbstractShaderProgram" title="Shader storage block bindings">GL-AbstractShaderProgram-shader-storage-block-binding</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1AbstractShaderProgram" title="Specifying texture and image binding units">GL-AbstractShaderProgram-texture-units</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1AbstractShaderProgram" title="Specifying transform feedback binding points">GL-AbstractShaderProgram-transform-feedback</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1AbstractShaderProgram" title="Rendering workflow">GL-AbstractShaderProgram-rendering-workflow</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1AbstractShaderProgram" title="Compute workflow">GL-AbstractShaderProgram-compute-workflow</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1AbstractShaderProgram" title="Mapping between GLSL and Magnum types">GL-AbstractShaderProgram-types</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1AbstractShaderProgram" title="Performance optimizations">GL-AbstractShaderProgram-performance-optimization</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::AbstractTexture</name>
    <filename>classMagnum_1_1GL_1_1AbstractTexture.html</filename>
    <base>Magnum::GL::AbstractObject</base>
    <member kind="function">
      <type></type>
      <name>AbstractTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>a72d23d76f0dd35d7ba67f2b51ce28c10</anchor>
      <arglist>(const AbstractTexture &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>aa9019acb2c2c6c0877dbbcc48365943f</anchor>
      <arglist>(AbstractTexture &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AbstractTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>af40a1797b2158aaee5c5b0f0a2548de8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AbstractTexture &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>ac8cba8a42c7d62cc82d4ed255d474b5a</anchor>
      <arglist>(const AbstractTexture &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractTexture &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>a9dd63798b5c45c26e770c451536363ba</anchor>
      <arglist>(AbstractTexture &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>a0c64e53119ea90a7b4dc885cf029260f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>ad49fb23f9ffa4c84472c5be4f8db9055</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>ad75115d12ba10310cb69d5fd2753d53f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AbstractTexture &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>a9a4064bdfa196a9844320f367e76a046</anchor>
      <arglist>(const std::string &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>AbstractTexture &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>a34923a67919431fe76abe3efb17d6c4c</anchor>
      <arglist>(const char(&amp;label)[size])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>af8d22b77396cdb89f23d44dfa7010702</anchor>
      <arglist>(Int textureUnit)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Float</type>
      <name>maxLodBias</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>a0a1e0fa7b5910fc23293c58915871bf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxColorSamples</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>ae847ca6e1cbe988db107b67beee89d08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxDepthSamples</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>a42e4f6e3552c29fcd1c3eb774aff298d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxIntegerSamples</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>a6026f31fb049d15afce367fccc1baf83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unbind</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>ace1d3c120c9cac9586914f808de8f0bb</anchor>
      <arglist>(Int textureUnit)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unbind</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>a674edae54ed970a2f61b663dfe51ca14</anchor>
      <arglist>(Int firstTextureUnit, std::size_t count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>bind</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>a00ea7341065501ea79b02e14a205f5d7</anchor>
      <arglist>(Int firstTextureUnit, std::initializer_list&lt; AbstractTexture * &gt; textures)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unbindImage</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>aac975869d1fc796e463b94515080d8f5</anchor>
      <arglist>(Int imageUnit)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unbindImages</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>ad95c6cea4f88605af23058bc8ffa2fee</anchor>
      <arglist>(Int firstImageUnit, std::size_t count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>bindImages</name>
      <anchorfile>classMagnum_1_1GL_1_1AbstractTexture.html</anchorfile>
      <anchor>a3ee7c3a914102a1ca41d0cfbfc1822fb</anchor>
      <arglist>(Int firstImageUnit, std::initializer_list&lt; AbstractTexture * &gt; textures)</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1AbstractTexture" title="WebGL restrictions">GL-AbstractTexture-webgl-restrictions</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1AbstractTexture" title="Performance optimizations and security">GL-AbstractTexture-performance-optimization</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::Attribute</name>
    <filename>classMagnum_1_1GL_1_1Attribute.html</filename>
    <templarg>location</templarg>
    <templarg>T</templarg>
    <member kind="enumvalue">
      <name>Location</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>ae12e97eb74e5777c97b9d75f3214bd00a645b5bab89078ca7f24d7284e0adf33b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VectorCount</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>ae12e97eb74e5777c97b9d75f3214bd00a40a1e7fed67ffb0db76b65bb5d33cf1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Components</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>ab3371da2ec2ba3f4c81a33afaa0f3661</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Attribute.html" anchor="ab3371da2ec2ba3f4c81a33afaa0f3661a06c2cea18679d64399783748fa367bdd">One</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Attribute.html" anchor="ab3371da2ec2ba3f4c81a33afaa0f3661aaada29daee1d64ed0fe907043855cb7e">Two</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Attribute.html" anchor="ab3371da2ec2ba3f4c81a33afaa0f3661aca8a2087e5557e317599344687a57391">Three</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Attribute.html" anchor="ab3371da2ec2ba3f4c81a33afaa0f3661a981b8fcee42e1e726a67a2b9a98ea6e9">Four</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Attribute.html" anchor="ab3371da2ec2ba3f4c81a33afaa0f3661a5a1fe3c61c9e2fd6dbbc823589f6e697">BGRA</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>a6c8c42c4e9b11dcac471cec52f6d237a</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Attribute.html" anchor="a6c8c42c4e9b11dcac471cec52f6d237aa8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Attribute.html" anchor="a6c8c42c4e9b11dcac471cec52f6d237aaa245c3230debe5c956484ecc6fa93877">Byte</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Attribute.html" anchor="a6c8c42c4e9b11dcac471cec52f6d237aaeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Attribute.html" anchor="a6c8c42c4e9b11dcac471cec52f6d237aa30bb747c98bccdd11b3f89e644c4d0ad">Short</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Attribute.html" anchor="a6c8c42c4e9b11dcac471cec52f6d237aac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Attribute.html" anchor="a6c8c42c4e9b11dcac471cec52f6d237aa1686a6c336b71b36d77354cea19a8b52">Int</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Attribute.html" anchor="a6c8c42c4e9b11dcac471cec52f6d237aad35523d81610cee8b87cdac1853ad51f">HalfFloat</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Attribute.html" anchor="a6c8c42c4e9b11dcac471cec52f6d237aa22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Attribute.html" anchor="a6c8c42c4e9b11dcac471cec52f6d237aad909d38d705ce75386dd86e611a82f5b">Double</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Attribute.html" anchor="a6c8c42c4e9b11dcac471cec52f6d237aa561473e5c75c919542b013eaaaff948d">UnsignedInt10f11f11fRev</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Attribute.html" anchor="a6c8c42c4e9b11dcac471cec52f6d237aaf181e9b017ba4f6226f947aef3d86755">UnsignedInt2101010Rev</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Attribute.html" anchor="a6c8c42c4e9b11dcac471cec52f6d237aaf9d37615ff3e365189e48ed5b88dbd46">Int2101010Rev</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DataOption</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>aa7373912d758bbb4e93789a43bc79b1f</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Attribute.html" anchor="aa7373912d758bbb4e93789a43bc79b1fa66b28fcf83c9f24cd5b4d7bdc8f8ba0e">Normalized</enumvalue>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>a9982ae5e955a8c6f1319ae4125e6717b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Implementation::Attribute&lt; T &gt;::ScalarType</type>
      <name>ScalarType</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>a8d2f7092aaf4ec5a03510121cc55dae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; DataOption &gt;</type>
      <name>DataOptions</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>a3130d72c2c0d7ec9687d3bc9a0e593d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Location</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>ae12e97eb74e5777c97b9d75f3214bd00a645b5bab89078ca7f24d7284e0adf33b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VectorCount</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>ae12e97eb74e5777c97b9d75f3214bd00a40a1e7fed67ffb0db76b65bb5d33cf1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Attribute</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>a6c782cac6c6718b810b89de1fefad665</anchor>
      <arglist>(Components components, DataType dataType=Implementation::Attribute&lt; T &gt;::DefaultDataType, DataOptions dataOptions=DataOptions())</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Attribute</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>a45e31cbb916df4caf284ec3b7708045d</anchor>
      <arglist>(DataType dataType=Implementation::Attribute&lt; T &gt;::DefaultDataType, DataOptions dataOptions=DataOptions())</arglist>
    </member>
    <member kind="function">
      <type>constexpr Components</type>
      <name>components</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>a40e4a11fcf5cc9ed4ee8ba60a38c104f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr DataType</type>
      <name>dataType</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>aa6881d4d1126d7652acee2ee3aaae61a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>vectorSize</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>ad1e4823c81ac0d22bd0f024461955570</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr DataOptions</type>
      <name>dataOptions</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>ac2da4d4381a40cfa9f6ba55ca762466d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>a0eb7a0597aa54dac06f74058f7591913</anchor>
      <arglist>(Debug &amp;debug, Attribute&lt; T &gt;::Components)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1Attribute.html</anchorfile>
      <anchor>a74a95cad0d549a952ac6a097e5c92b0b</anchor>
      <arglist>(Debug &amp;debug, Attribute&lt; T &gt;::DataType)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::Buffer</name>
    <filename>classMagnum_1_1GL_1_1Buffer.html</filename>
    <base>Magnum::GL::AbstractObject</base>
    <member kind="enumeration">
      <type></type>
      <name>TargetHint</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>ae9d9170f17007a0759fff694bfab6784</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="ae9d9170f17007a0759fff694bfab6784a4410ec34d9e6c1a68100ca0ce033fb17">Array</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="ae9d9170f17007a0759fff694bfab6784a718568e47d2de4af4d51fc1114cb3583">AtomicCounter</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="ae9d9170f17007a0759fff694bfab6784a3a23dd1e2979213e268b02eca78f1093">CopyRead</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="ae9d9170f17007a0759fff694bfab6784aac0d23bb3afb6d4ffb725d00de2b3ffb">CopyWrite</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="ae9d9170f17007a0759fff694bfab6784a8b76d6291a8094d1fc459a056780dd54">DispatchIndirect</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="ae9d9170f17007a0759fff694bfab6784a95b0e6b8c7aa6af632295afda7a926bc">DrawIndirect</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="ae9d9170f17007a0759fff694bfab6784a3726aa2adc65a493586528ddbd070204">ElementArray</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="ae9d9170f17007a0759fff694bfab6784a22702a714692d1c3a1ba2f02cf200c7a">PixelPack</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="ae9d9170f17007a0759fff694bfab6784a454e29d3537454f75dba31fc3ab1fc0d">PixelUnpack</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="ae9d9170f17007a0759fff694bfab6784a63d204f04170f5bbf958083589f6572f">ShaderStorage</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="ae9d9170f17007a0759fff694bfab6784aa3e8ae43188ae76d38f414b2bdb0077b">Texture</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="ae9d9170f17007a0759fff694bfab6784af42c5721f003b0657f081141043576f6">TransformFeedback</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="ae9d9170f17007a0759fff694bfab6784af19516d11f2946f894070e92fcb56b6d">Uniform</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Target</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a02c1b042ffa59906a9d47dd380eae70f</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="a02c1b042ffa59906a9d47dd380eae70fa718568e47d2de4af4d51fc1114cb3583">AtomicCounter</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="a02c1b042ffa59906a9d47dd380eae70fa63d204f04170f5bbf958083589f6572f">ShaderStorage</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="a02c1b042ffa59906a9d47dd380eae70faf19516d11f2946f894070e92fcb56b6d">Uniform</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MapAccess</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a3b4292900c33ba123cd8c34a337172d6</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="a3b4292900c33ba123cd8c34a337172d6a131fb182a881796e7606ed6da27f1197">ReadOnly</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="a3b4292900c33ba123cd8c34a337172d6a53dfe5089ae9e65887cb0215cb0098f5">WriteOnly</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="a3b4292900c33ba123cd8c34a337172d6a70a2a84088d405a2e3f1e3accaa16723">ReadWrite</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MapFlag</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>aefa610abb5893d25e7acdb378379ad78</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="aefa610abb5893d25e7acdb378379ad78a7a1a5f3e79fdc91edf2f5ead9d66abb4">Read</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="aefa610abb5893d25e7acdb378379ad78a1129c0e4d43f2d121652a7302712cff6">Write</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="aefa610abb5893d25e7acdb378379ad78acc6d7b432c2856582ca2627a8437bbe0">InvalidateBuffer</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="aefa610abb5893d25e7acdb378379ad78a1dccc9feae5c38be3c116bdad6e3974a">InvalidateRange</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="aefa610abb5893d25e7acdb378379ad78ab9698f5447ac81e5c28a7c3c53a196e3">FlushExplicit</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Buffer.html" anchor="aefa610abb5893d25e7acdb378379ad78a7854699f8079e4a586a6c943703ac972">Unsynchronized</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; MapFlag &gt;</type>
      <name>MapFlags</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>aba0e0219ae5a6331b7b70cdd37623c35</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Buffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>aebdb11b68c3cf3bf1c01037c61c92a78</anchor>
      <arglist>(TargetHint targetHint=TargetHint::Array)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Buffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>aa08720cd5f7a4e23198784a018cbd8e9</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Buffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a37ca34681f59bb12e731ea8697a88780</anchor>
      <arglist>(const Buffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Buffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a5cd370747e93cfd88d517aa92103903a</anchor>
      <arglist>(Buffer &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Buffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a25dc0049f9cf8be2fdc399e68e3aca98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>ab48017e316ca982c276d96df446d6b87</anchor>
      <arglist>(const Buffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a39eedecf9a86064f5f61e065f4394006</anchor>
      <arglist>(Buffer &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a03fbb107424326894ce7058919aacb32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a18cdf2e80cadc9f3e8e07e1150a87a10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>af019e6d4843a0809d726b90d5ee75ad1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>ae6238f4527996e88c665fc1366327980</anchor>
      <arglist>(const std::string &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>ac6643fde6f130024e8a1d72c6046cca9</anchor>
      <arglist>(const char(&amp;label)[size])</arglist>
    </member>
    <member kind="function">
      <type>TargetHint</type>
      <name>targetHint</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a29919a9f0ae6f7dc38d638b324bd68cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setTargetHint</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>aa72ec6484852faaa2e82655c317319c5</anchor>
      <arglist>(TargetHint hint)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>bind</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a20e757af272c912de45439b22b95f18a</anchor>
      <arglist>(Target target, UnsignedInt index, GLintptr offset, GLsizeiptr size)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>bind</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>aaad3e6e809d309310eb2ef2cc21d149a</anchor>
      <arglist>(Target target, UnsignedInt index)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a5e9a38c6e0d1e3e818d8648c0ac141b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a4747e1e5e1c3e874332429d05342008c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>subData</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a10375e2ba8610bae58ac2eaa3f6bf5c5</anchor>
      <arglist>(GLintptr offset, GLsizeiptr size)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a22861f842ef2139c5f0015de39cfa329</anchor>
      <arglist>(Containers::ArrayView&lt; const void &gt; data, BufferUsage usage=BufferUsage::StaticDraw)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a5f096f14dc4a9434332da0669d481b6c</anchor>
      <arglist>(std::initializer_list&lt; T &gt; data, BufferUsage usage=BufferUsage::StaticDraw)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setSubData</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>ae14f996bdd9f437cec8388fb36257f56</anchor>
      <arglist>(GLintptr offset, Containers::ArrayView&lt; const void &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setSubData</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>ac1fb0604bd3f3b8b059106acecbab96b</anchor>
      <arglist>(GLintptr offset, std::initializer_list&lt; T &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>invalidateData</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a938d2a299e652a8bf1d0130ec9ac4615</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>invalidateSubData</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a607336193f7dd6ebcb20e0680f49adeb</anchor>
      <arglist>(GLintptr offset, GLsizeiptr length)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>map</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a5d51a5e9a8530790865f4f2370170109</anchor>
      <arglist>(MapAccess access)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>mapRead</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a5862d71ff8a57c0fc337e8590136718d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; char &gt;</type>
      <name>map</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a69a4f124ccdf5a807afc18e570067db6</anchor>
      <arglist>(GLintptr offset, GLsizeiptr length, MapFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const char &gt;</type>
      <name>mapRead</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a00d5d05cae9aa05d4870023415cde10b</anchor>
      <arglist>(GLintptr offset, GLsizeiptr length, MapFlags flags={})</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>flushMappedRange</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a903640616b5fb40c5b794d78e86d54dc</anchor>
      <arglist>(GLintptr offset, GLsizeiptr length)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unmap</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a4a47c7e29ad5682c4a8fc357bab8a720</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>minMapAlignment</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>aaf5d0716a0d64b282a7fbf82d2b68108</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxAtomicCounterBindings</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a12fc95a143248c1d150ef8bb681a13e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxShaderStorageBindings</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a9a269a689fb0341003992f88fd11d047</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>uniformOffsetAlignment</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a7be56de022873b4d3c835888acb70547</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>shaderStorageOffsetAlignment</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>ae2318ac402d93b854db1648b08256901</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxUniformBindings</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a840d1d8949da8027e23dab4a934e5e57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unbind</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a602ca7329d87b36693bee1e53cb76ae3</anchor>
      <arglist>(Target target, UnsignedInt index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unbind</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a47eb59e49090f57381ff860bf1b08a3f</anchor>
      <arglist>(Target target, UnsignedInt firstIndex, std::size_t count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>bind</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a503349148c1b6b19cfb2657d2dc19c60</anchor>
      <arglist>(Target target, UnsignedInt firstIndex, std::initializer_list&lt; std::tuple&lt; Buffer *, GLintptr, GLsizeiptr &gt;&gt; buffers)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>bind</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a7f9db8e9bb476e755650a3dab0b7198d</anchor>
      <arglist>(Target target, UnsignedInt firstIndex, std::initializer_list&lt; Buffer * &gt; buffers)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>copy</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>aeff0d32aa52e62a57f2bcbab5bea04ab</anchor>
      <arglist>(Buffer &amp;read, Buffer &amp;write, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Buffer</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>ad89e9924d9e3a96c9270713890a4a40b</anchor>
      <arglist>(GLuint id, TargetHint targetHint=TargetHint::Array, ObjectFlags flags={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Buffer</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>aba409cc90e0c36dbe7407e29dbc3bfd6</anchor>
      <arglist>(GLuint id, ObjectFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a9024465ba0e0014d55008545bee2493d</anchor>
      <arglist>(Debug &amp;debug, Buffer::TargetHint value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1Buffer.html</anchorfile>
      <anchor>a41d8e7d6b7a2d9d12dcca72630d3a23a</anchor>
      <arglist>(Debug &amp;debug, Buffer::Target value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1Buffer" title="Data updating">GL-Buffer-data-updating</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1Buffer" title="Memory mapping">GL-Buffer-data-mapping</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1Buffer" title="WebGL restrictions">GL-Buffer-webgl-restrictions</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1Buffer" title="Performance optimizations">GL-Buffer-performance-optimizations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::BufferImage</name>
    <filename>classMagnum_1_1GL_1_1BufferImage.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>ac83a019aa5abb31a282cc66ce85d7af0aa09f6ab0a84c52dfa367a382b454ebe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>ac83a019aa5abb31a282cc66ce85d7af0aa09f6ab0a84c52dfa367a382b454ebe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a28bbd6dbf28fe01a812f2357ac18ba27</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a45773de8be52ffffb771124ac9976377</anchor>
      <arglist>(PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>ae100bd593da7c95c916fc10c70f1e33a</anchor>
      <arglist>(PixelStorage storage, Magnum::PixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>ab481a895fb4313755cfa608f959b7167</anchor>
      <arglist>(Magnum::PixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a782b07060ceb272067e2df2cdcfff10c</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Buffer &amp;&amp;buffer, std::size_t dataSize) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a846fa68633769c96ba9a2b6691ea0997</anchor>
      <arglist>(PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Buffer &amp;&amp;buffer, std::size_t dataSize) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>aedf334b1b3fa3c87d84c267829726421</anchor>
      <arglist>(PixelStorage storage, Magnum::PixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Buffer &amp;&amp;buffer, std::size_t dataSize) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a3ab1f001d393e21567a425a55c3558d1</anchor>
      <arglist>(Magnum::PixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Buffer &amp;&amp;buffer, std::size_t dataSize) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a6df3090f195a1564ebf13c92b118ea1c</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, PixelType type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a1650c5abf0907fc909fe842bf5af81b3</anchor>
      <arglist>(PixelFormat format, PixelType type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a7e6cabf9f2570eaa299e9d8af254bf35</anchor>
      <arglist>(PixelStorage storage, Magnum::PixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>aae85fe61e5321bf2f2fac15f2a6d2e6c</anchor>
      <arglist>(Magnum::PixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>abf3af7ec1c0f84ae9e5d02a6e34489ff</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>aeeec95e3ed40daea952e97f26c2a1a29</anchor>
      <arglist>(const BufferImage&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a578309095bbd6f51a4ad4808667a8df5</anchor>
      <arglist>(BufferImage&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>BufferImage&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a7e369f991a39180b789cdbfcbcb95562</anchor>
      <arglist>(const BufferImage&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>BufferImage&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a2ed0a41aedf12e6a212de071649c8b06</anchor>
      <arglist>(BufferImage&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PixelStorage</type>
      <name>storage</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>ae81725fc1fb855e692cbf5c48a801b68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PixelFormat</type>
      <name>format</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a38302d6542cd807504397b652006ac6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PixelType</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a54048ca626d0eaae2c3e583fc20b6b83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>pixelSize</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a555ab0eef6f2499de32b8b39845e6322</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; Dimensions, Int &gt;</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a4995641b33f9f6ce603967111a52a348</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; VectorTypeFor&lt; dimensions, std::size_t &gt;, VectorTypeFor&lt; dimensions, std::size_t &gt; &gt;</type>
      <name>dataProperties</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a942ed7399347dc1d2829a5336d349377</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>dataSize</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a6a288bba5a9a6ccbfc2fbb0fa5d9bd1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>buffer</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a98e51a5688751ca2a9b5548ee4df43e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>aedafe7ccbbc1f359af27a840f78d52f5</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>ad07a01e2ad9da7e3e2c9a704f0210ed3</anchor>
      <arglist>(PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a651e65193a9c86cbb56fde76e043ffee</anchor>
      <arglist>(PixelStorage storage, Magnum::PixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a8ee4214aed410e7eb47717cdadc07ff5</anchor>
      <arglist>(Magnum::PixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>Buffer</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferImage.html</anchorfile>
      <anchor>a91a2d59735666fbb13583cbb2973e997</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1BufferImage" title="Basic usage">GL-BufferImage-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::BufferTexture</name>
    <filename>classMagnum_1_1GL_1_1BufferTexture.html</filename>
    <base>Magnum::GL::AbstractTexture</base>
    <member kind="function">
      <type></type>
      <name>BufferTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferTexture.html</anchorfile>
      <anchor>a6e9240f7779a9387c6618e10b08c44d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferTexture.html</anchorfile>
      <anchor>a46b69b208c8b0160822fcd1f51dbea4f</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferTexture.html</anchorfile>
      <anchor>a924b6f762f05bc9489cfcadb5ed969c6</anchor>
      <arglist>(const BufferTexture &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferTexture.html</anchorfile>
      <anchor>a9e1d3ab233793055cf76d2d48c25c6a1</anchor>
      <arglist>(BufferTexture &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>BufferTexture &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferTexture.html</anchorfile>
      <anchor>a57b186dc846324d142c5eb1c414a7553</anchor>
      <arglist>(const BufferTexture &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>BufferTexture &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferTexture.html</anchorfile>
      <anchor>a4841f3fdc95d03fd6f21d950fbd572b9</anchor>
      <arglist>(BufferTexture &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferTexture.html</anchorfile>
      <anchor>ae2e2e17197cfc0c6267bb12f2cbe80b0</anchor>
      <arglist>(Int imageUnit, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>BufferTexture &amp;</type>
      <name>setBuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferTexture.html</anchorfile>
      <anchor>a332d371e8b004c2f76ed983d1f661999</anchor>
      <arglist>(BufferTextureFormat internalFormat, Buffer &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>BufferTexture &amp;</type>
      <name>setBuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferTexture.html</anchorfile>
      <anchor>ac44f4e573cd010b45648792b512171ae</anchor>
      <arglist>(BufferTextureFormat internalFormat, Buffer &amp;buffer, GLintptr offset, GLsizeiptr size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxSize</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferTexture.html</anchorfile>
      <anchor>adaf2d49c62faa9c462c0ea1a8e6b506c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>offsetAlignment</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferTexture.html</anchorfile>
      <anchor>a6ae88d4be8087f877667dd633c5fd1d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static BufferTexture</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1GL_1_1BufferTexture.html</anchorfile>
      <anchor>a4cc08e4044f75f8272d5ab44ebf52de5</anchor>
      <arglist>(GLuint id, ObjectFlags flags={})</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1BufferTexture" title="Usage">GL-BufferTexture-usage</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1BufferTexture" title="Performance optimizations">GL-BufferTexture-performance-optimizations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::CompressedBufferImage</name>
    <filename>classMagnum_1_1GL_1_1CompressedBufferImage.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>acbed32a39b79fe62f9b6f648b2db60c5a2708a7cfa40372e96a9ac038c7a1d3c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>acbed32a39b79fe62f9b6f648b2db60c5a2708a7cfa40372e96a9ac038c7a1d3c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a2ee198c834a8f0e266cde8cf74847f05</anchor>
      <arglist>(CompressedPixelStorage storage, CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>aa88ff0bc3e6887e221bdfcd8bcb856e7</anchor>
      <arglist>(CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>abc75e572ba74e610487ba22e85f3c85d</anchor>
      <arglist>(CompressedPixelStorage storage, Magnum::CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>addb786aee88cd5ce217b1794ac9b81a2</anchor>
      <arglist>(Magnum::CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a6bc9b416ba9941d81fa3fd837cbd3ed2</anchor>
      <arglist>(CompressedPixelStorage storage, CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Buffer &amp;&amp;buffer, std::size_t dataSize) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>ad7a9cb57f85e57c474fd82b0e25d36f2</anchor>
      <arglist>(CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Buffer &amp;&amp;buffer, std::size_t dataSize) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>aee933b6a4a65d7c446b4d9d670eb56c8</anchor>
      <arglist>(CompressedPixelStorage storage, Magnum::CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Buffer &amp;&amp;buffer, std::size_t dataSize) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a878a3fb93b541616bcc88aa158657515</anchor>
      <arglist>(Magnum::CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Buffer &amp;&amp;buffer, std::size_t dataSize) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a6e9735d18f5e40c9912c585736027eb0</anchor>
      <arglist>(CompressedPixelStorage storage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a05e4b53ab1308ad0fe18ab5dc8f342d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a18d7da1d6c30314c4df8aa5b0bb699c6</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a576e561367bef668d931526f4d1bdca5</anchor>
      <arglist>(const CompressedBufferImage&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a685469353839f54cc357c572c53c2ed9</anchor>
      <arglist>(CompressedBufferImage&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a01b359d4259ad90279a5b2d1a9fc6331</anchor>
      <arglist>(const CompressedBufferImage&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>ac28deda1f2a220c9c9da1ff796eb115c</anchor>
      <arglist>(CompressedBufferImage&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelStorage</type>
      <name>storage</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>ac15f5b59248fd6a26096be4a4657ced3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelFormat</type>
      <name>format</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a30fa325dd3a9b81e382b0d1289593403</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; Dimensions, Int &gt;</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>aa8a45221e6bcf6daa1329f0ea119a881</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; VectorTypeFor&lt; dimensions, std::size_t &gt;, VectorTypeFor&lt; dimensions, std::size_t &gt; &gt;</type>
      <name>dataProperties</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>abc30b84b21df0e36b4c3b53ad277aec4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>buffer</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>aba67ac0ea84749add1f6ab6ecd1d2b14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>dataSize</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>aa3a24c624e593240ad3fe7eb509a2d33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>ad844429abacfe63bb53d16d1a71c2700</anchor>
      <arglist>(CompressedPixelStorage storage, CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a8473ba184824127de4d1b65154ecca22</anchor>
      <arglist>(CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a1cf391bb1102e6d5202a31712be3ddc1</anchor>
      <arglist>(CompressedPixelStorage storage, Magnum::CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>abd869bc0893ee854389d7bfca38a5c67</anchor>
      <arglist>(Magnum::CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>Buffer</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1GL_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a94a0531d6ee2745d8a9357bd746c294b</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1CompressedBufferImage" title="Basic usage">GL-CompressedBufferImage-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::Context</name>
    <filename>classMagnum_1_1GL_1_1Context.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a8f20a9bfbf3a261f2b038fed09cbf208</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="a8f20a9bfbf3a261f2b038fed09cbf208aa603905470e2a5b8c13e96b579ef0dba">Debug</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="a8f20a9bfbf3a261f2b038fed09cbf208a90b21fdee9b0f1e07fec562556052bab">ForwardCompatible</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="a8f20a9bfbf3a261f2b038fed09cbf208a70a47cae4eb221930f2663fd244369ea">NoError</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="a8f20a9bfbf3a261f2b038fed09cbf208aef797a197a966bf786c3075d041793ab">RobustAccess</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a48935899ecd7bc3897f5bf37777180ee</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="a48935899ecd7bc3897f5bf37777180eea4c19ddb10d5a902842dda06a62c3d601">Buffers</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="a48935899ecd7bc3897f5bf37777180eeac81a0bdfe577125a16bb2a53d37df5cf">Framebuffers</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="a48935899ecd7bc3897f5bf37777180eea6f977d7c0201677985cc21e9e24d8b35">Meshes</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="a48935899ecd7bc3897f5bf37777180eea0b6f6aca19cb4c22774dcf1910081685">MeshVao</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="a48935899ecd7bc3897f5bf37777180eeae72901523973c1509cac36e9e99ca126">BindScratchVao</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="a48935899ecd7bc3897f5bf37777180eeafa61958e6a37a6f8f906a692fbab4c53">PixelStorage</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="a48935899ecd7bc3897f5bf37777180eea07b20ae970048fc2002d756f27acc863">Renderer</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="a48935899ecd7bc3897f5bf37777180eeaecee0a84af1bbe31d8aec4ce303fad9d">Shaders</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="a48935899ecd7bc3897f5bf37777180eea536300d63028e7f16ba150566ecd3a5f">Textures</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="a48935899ecd7bc3897f5bf37777180eeaf42c5721f003b0657f081141043576f6">TransformFeedback</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="a48935899ecd7bc3897f5bf37777180eea3181a9f4f540be3dc56f8b5369adead5">EnterExternal</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="a48935899ecd7bc3897f5bf37777180eeaaf72841d0fc1b8826d99b7854f898411">ExitExternal</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DetectedDriver</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>ae2ac949e357c9c61ea6afc05ec0d824a</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="ae2ac949e357c9c61ea6afc05ec0d824aabfd16f84e6b719aba6717bf2f3eb3580">Amd</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="ae2ac949e357c9c61ea6afc05ec0d824aa45f4ce6c3306644b1efe333f4f8d6929">Angle</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="ae2ac949e357c9c61ea6afc05ec0d824aaaa0278f8d48aeb5309eec13da03ad8eb">IntelWindows</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="ae2ac949e357c9c61ea6afc05ec0d824aa2260b669d1c515bc489704f350fe023f">Mesa</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="ae2ac949e357c9c61ea6afc05ec0d824aa1e529e65e1dff87960b1e50a924321a1">NVidia</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="ae2ac949e357c9c61ea6afc05ec0d824aa0b1a0acb1197a3d749100f0f947cf41b">Svga3D</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="ae2ac949e357c9c61ea6afc05ec0d824aaabe2e9b531ea10ba959ceebe5b259116">SwiftShader</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Context.html" anchor="ae2ac949e357c9c61ea6afc05ec0d824aa8f54f73ecbfc23b69ce01f69f5b1b23e">ArmMali</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>aac2d957d035b54e3d9106464858a0306</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; State &gt;</type>
      <name>States</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a7489a3f48dbe391c010ca1287fed2bd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; DetectedDriver &gt;</type>
      <name>DetectedDrivers</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>ad57d28ade68ff33df4ba2474e8c3ecbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a1d8c5f6cea10ffaf30e645d6842af6c3</anchor>
      <arglist>(const Context &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a7b90716888eac4f989389ae5b1a67b55</anchor>
      <arglist>(Context &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Context &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>aa08d57487245f86e12d426120e259f9d</anchor>
      <arglist>(const Context &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Context &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a1891bd1eb2a56f4b73c4f4fa1c82e9ca</anchor>
      <arglist>(Context &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Version</type>
      <name>version</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a18b827997add9c7632244ba103fc00d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>vendorString</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a17ec0f4c0746cbe6176ab94492eac3c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>rendererString</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a215fca0ec15c32d0b673bcaac57c1273</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>versionString</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a938091b3fa9bf17f5a7daf1e0119c5dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>shadingLanguageVersionString</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a78560cc05649bbbf0df2c2f7dc6858f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>shadingLanguageVersionStrings</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>ab9b7fbd9cc6a95a68a248c5d593894f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>extensionStrings</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>ad91c86150d43b7c13e04fe8e1302aabe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>ad84877b24b04cb227259402e71c4b04e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Extension &gt; &amp;</type>
      <name>supportedExtensions</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>aafd648dff35bf3ef57b8d7487117599f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCoreProfile</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a17bb72919ebd54c84ea03e2718e7861b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isVersionSupported</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>aa945b5d1ac70393afbb870e906465a3d</anchor>
      <arglist>(Version version) const</arglist>
    </member>
    <member kind="function">
      <type>Version</type>
      <name>supportedVersion</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a8f978ea99ddebb2766b8a01def9759eb</anchor>
      <arglist>(std::initializer_list&lt; Version &gt; versions) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionSupported</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a8d42d0e5bcddee27df2373af95a4e764</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionSupported</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a14b8ab74e662d44b2722a19e1aa3d148</anchor>
      <arglist>(Version version) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionSupported</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a58673f2d71de16446f799e8daa01c4cd</anchor>
      <arglist>(const Extension &amp;extension) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionDisabled</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>aff74352babff6c0a3edc406395944605</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionDisabled</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>ad1cf0b4b6fb7fbc56195f18624e04851</anchor>
      <arglist>(Version version) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionDisabled</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a29fcfbac4aa3373871e69b1c372877f2</anchor>
      <arglist>(const Extension &amp;extension) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetState</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a444afa9064370a20edded1e2abf33f53</anchor>
      <arglist>(States states=~States{})</arglist>
    </member>
    <member kind="function">
      <type>DetectedDrivers</type>
      <name>detectedDriver</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a82e40f4141e006b84ab839e29ef375a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasCurrent</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a7ceef33037a4f55b94716129ecac308e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Context &amp;</type>
      <name>current</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>aa7f34247f1113f57149a300e62c72510</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>makeCurrent</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a31317e4c31e6956163646c6b528b00eb</anchor>
      <arglist>(Context *context)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a0d4db4d0216dee7835c81b44f0e0a4e0</anchor>
      <arglist>(Debug &amp;debug, Context::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>ad2a1b71ac5740761d3d5f922c0578ddf</anchor>
      <arglist>(Debug &amp;debug, Context::Flags value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>a9333b5940a6dfc9e3432f8231ded74bc</anchor>
      <arglist>(Debug &amp;debug, Context::DetectedDriver value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1Context.html</anchorfile>
      <anchor>ad75f14aae1be07e6094458ae5eab06a7</anchor>
      <arglist>(Debug &amp;debug, Context::DetectedDrivers value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1Context" title="Command-line options">GL-Context-command-line</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1Context" title="Thread safety">GL-Context-multithreading</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1Context" title="Using multiple OpenGL contexts">GL-Context-multiple</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::CubeMapTexture</name>
    <filename>classMagnum_1_1GL_1_1CubeMapTexture.html</filename>
    <base>Magnum::GL::AbstractTexture</base>
    <member kind="function">
      <type></type>
      <name>CubeMapTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a8a3f4f452063a3f6671315a3643a9fce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CubeMapTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a722b441acd3f3cc5d38d64dbc346fd6d</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CubeMapTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a17e319e7bd2e610f84511d475c037597</anchor>
      <arglist>(const CubeMapTexture &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CubeMapTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a2ba949a4c6389eb4b0a02799b3a9cd0c</anchor>
      <arglist>(CubeMapTexture &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>aeb5a858af4ad3a9549e305031e1d81dc</anchor>
      <arglist>(const CubeMapTexture &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a898249c708a33713caaa3e31e3e68ef0</anchor>
      <arglist>(CubeMapTexture &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>abf9f1465c8e6204c2849d6e82bc808d6</anchor>
      <arglist>(Int imageUnit, Int level, CubeMapCoordinate coordinate, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImageLayered</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>aa16df8ad4d9ee8724c741ec370f79f73</anchor>
      <arglist>(Int imageUnit, Int level, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setBaseLevel</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>ab134e772b4c4809096cb6524c098ac47</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setMaxLevel</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a955355748e95e370d0033e31b080839c</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setMinificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a8a836199dbcd646098bdb136c91f5454</anchor>
      <arglist>(SamplerFilter filter, SamplerMipmap mipmap=SamplerMipmap::Base)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setMinificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a544b1e862d16c1f2109d621cd239f022</anchor>
      <arglist>(Magnum::SamplerFilter filter, Magnum::SamplerMipmap mipmap=Magnum::SamplerMipmap::Base)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setMagnificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a0d56d2bff7b995de93fedd1eee93c64a</anchor>
      <arglist>(SamplerFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setMagnificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a690176b1a00e7f9a893074c1e73f60b7</anchor>
      <arglist>(Magnum::SamplerFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setMinLod</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a562fc241d7cccbf7d8a710a02791fe7e</anchor>
      <arglist>(Float lod)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setMaxLod</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>ae257b326269e1a26b1e9b1798562212c</anchor>
      <arglist>(Float lod)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setLodBias</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a25836e11944261869db5c13ede301387</anchor>
      <arglist>(Float bias)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setWrapping</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a5e535472bc4f853bd1f18ec91e129912</anchor>
      <arglist>(const Array2D&lt; SamplerWrapping &gt; &amp;wrapping)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setWrapping</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>ae6ea155fc20c73e13c3a98c62e7acfa8</anchor>
      <arglist>(const Array2D&lt; Magnum::SamplerWrapping &gt; &amp;wrapping)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a353260c84e5f4306dc265f9812ba5294</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a98f6ac1f88b948d8401ba3621eb04139</anchor>
      <arglist>(const Vector4ui &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a31cf46e3e2cdaf91a5360acdd020346f</anchor>
      <arglist>(const Vector4i &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setMaxAnisotropy</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a3ea7aa8fe6e43554b06f9b47b9d27e35</anchor>
      <arglist>(Float anisotropy)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setSrgbDecode</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>aedab682152f9b46ed2517ad7dd29b00a</anchor>
      <arglist>(bool decode)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setSRGBDecode</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a1d754efc73e18f8553983a48f23c56a3</anchor>
      <arglist>(bool decode)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setSwizzle</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a64b097e39cd7f5b00be601b4dc460ec8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompareMode</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>af585f98f8739a71d95ca05170b931b6a</anchor>
      <arglist>(SamplerCompareMode mode)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompareFunction</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>ab862560b77bbb73ca769a10f7b7ee866</anchor>
      <arglist>(SamplerCompareFunction function)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setDepthStencilMode</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>acd11599bb537c27799ce3874c1f399e7</anchor>
      <arglist>(SamplerDepthStencilMode mode)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setStorage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a341471ba051fa4b8aef91bd23df9be83</anchor>
      <arglist>(Int levels, TextureFormat internalFormat, const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>imageSize</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>aa91934e3a3fe6921600000774c54c9c8</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>ab7001b01b3c2be108047941abc0e6f51</anchor>
      <arglist>(Int level, Image3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image3D</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a37325eb58935dcfecfd9755528418e3f</anchor>
      <arglist>(Int level, Image3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a36080fb123bd49ba6dd7ab506a6ffa1b</anchor>
      <arglist>(Int level, const MutableImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a266e2ca07059591ddc419006814d0b86</anchor>
      <arglist>(Int level, BufferImage3D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage3D</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a5bbfae1c15291cc04510a298166aad16</anchor>
      <arglist>(Int level, BufferImage3D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>aee2e8254cea0e3eb4238a44b385c8d0d</anchor>
      <arglist>(Int level, CompressedImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage3D</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a8e462b2e076ae2af5b600a2ae5be9c3f</anchor>
      <arglist>(Int level, CompressedImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a5b2216f2d06657c5d531c711ac44b050</anchor>
      <arglist>(Int level, const MutableCompressedImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a7e8e3e8e04f5453069fad1575b7c057d</anchor>
      <arglist>(Int level, CompressedBufferImage3D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage3D</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a17a246ac7916a2ce800021ba9944ba1c</anchor>
      <arglist>(Int level, CompressedBufferImage3D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>aec9ec2ce5f3c68fc049bd2432cc48772</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, Image2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image2D</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>aa3cfda3c32eecf1fd6f5ada07d2236d2</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, Image2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>aa064a0e0b9eec111fd592519eb1993ac</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, const MutableImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a2069e71c39e53fdf4fd8cb22ea80bd11</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, BufferImage2D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage2D</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>ae89445fca2999df7f298b84b0af9004e</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, BufferImage2D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>ab6bef25c696e900f642b0bad1dbdbc13</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, CompressedImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage2D</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a25b763c41ddc2dcf5d57ace8c822a279</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, CompressedImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a1d7622539eb0b699c27a2acc60c182d1</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, const MutableCompressedImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>adf8cf60e99f127b374c64f6b913329c3</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, CompressedBufferImage2D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage2D</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>ab112ca9eb641fff593c6dea096ac3933</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, CompressedBufferImage2D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a836a774cfc419ae53d328a02c5d00f27</anchor>
      <arglist>(Int level, const Range3Di &amp;range, Image3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image3D</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a60f465e284939fb2459d2811f499373c</anchor>
      <arglist>(Int level, const Range3Di &amp;range, Image3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a2e0d0e12f95b64b51c3366c2abdbe678</anchor>
      <arglist>(Int level, const Range3Di &amp;range, const MutableImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>ac172d91b294dbf3d5b28d847c603e37c</anchor>
      <arglist>(Int level, const Range3Di &amp;range, BufferImage3D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage3D</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>ad0749dccb9e4977e0b34ee86f951db02</anchor>
      <arglist>(Int level, const Range3Di &amp;range, BufferImage3D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a9dd655898fc69e71f275feeabf69bf95</anchor>
      <arglist>(Int level, const Range3Di &amp;range, CompressedImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage3D</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>afcbda19a4528331bf3a7b535b0d60694</anchor>
      <arglist>(Int level, const Range3Di &amp;range, CompressedImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a7265a30740b9e5aaeacc14d0e535f83b</anchor>
      <arglist>(Int level, const Range3Di &amp;range, const MutableCompressedImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>ac7e0602c2ce494bddeef00aab6745d87</anchor>
      <arglist>(Int level, const Range3Di &amp;range, CompressedBufferImage3D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage3D</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a3624056951e4dc908cb21538e52ad045</anchor>
      <arglist>(Int level, const Range3Di &amp;range, CompressedBufferImage3D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>aad3b61139660dac8fa0b68d66776c2bc</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, TextureFormat internalFormat, const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a581295727fb85de3bd530da37a3862e5</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, TextureFormat internalFormat, BufferImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a1dbfc10fe76200a0cbcfa83582821af5</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, TextureFormat internalFormat, BufferImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a9c5085f1caa545c70176fe91e4b692fb</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, const CompressedImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a4f66c69ae10a8c97df44d1f6d9cf2746</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, CompressedBufferImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>ae05ccb2b0b691f323706a033eb41fbfb</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, CompressedBufferImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>adfa0deb4a3dd1620a7aa03be25f15e06</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, const ImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a8a1a2228c03d449d490439d3c6a3d5d4</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, BufferImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a801416a1e10835c713624e3cd44131ea</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, BufferImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a8e98f69dd3cc2a2bd45b6f39f532c549</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, const CompressedImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a2c981146829b5fe68177c1e286ee4c29</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, CompressedBufferImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>ad69cade70aae9e09b353b8be047e2efb</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, CompressedBufferImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>aea131e5dcdc7096f1602e1541503201b</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, const Vector2i &amp;offset, const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>ac3c9a6b33ade828999a701e436b77ac7</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, const Vector2i &amp;offset, BufferImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>ac6c57afe33e973991ac731cbcca38b22</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, const Vector2i &amp;offset, BufferImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>aa949463ab6fcda58c8897c09b5f801c0</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, const Vector2i &amp;offset, const CompressedImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>ac44f7c9d3fc9e416d999e6314c20e45d</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, const Vector2i &amp;offset, CompressedBufferImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>ac5a8630e815829be0535c40b194501bf</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, const Vector2i &amp;offset, CompressedBufferImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>generateMipmap</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a1184a5160a8160422058daa70278eb60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>acd93c5e09d4213bd22851c39165e01b4</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a14ce2b781b191ddcbb9caf2a3db063cd</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, const Vector3i &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector2i</type>
      <name>maxSize</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a14940fb08cc6f727dcdb80d7064acc66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector2i</type>
      <name>compressedBlockSize</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a5f500f893a1b8e1feedceae2b494e9da</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>compressedBlockDataSize</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a86618d0ca3e1f7b8a224d0cdb27db7ee</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CubeMapTexture</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTexture.html</anchorfile>
      <anchor>a2fa9939893e66f2c85dcb9fe497f9388</anchor>
      <arglist>(GLuint id, ObjectFlags flags={})</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1CubeMapTexture" title="Basic usage">GL-CubeMapTexture-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::CubeMapTextureArray</name>
    <filename>classMagnum_1_1GL_1_1CubeMapTextureArray.html</filename>
    <base>Magnum::GL::AbstractTexture</base>
    <member kind="function">
      <type></type>
      <name>CubeMapTextureArray</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>af75561effc2e865dc639994ce4107ded</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CubeMapTextureArray</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a9493c7aa1afb88c4a3ff9a8abadf1909</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CubeMapTextureArray</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a797735704f82bb982faf9074bd954983</anchor>
      <arglist>(const CubeMapTextureArray &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CubeMapTextureArray</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a94fc244bc6ba63f4948e020acf067af7</anchor>
      <arglist>(CubeMapTextureArray &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a76ffc6614e82bdd37391545320c4b384</anchor>
      <arglist>(const CubeMapTextureArray &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>ac3923f841bcaaaf1fccabef6fdff4832</anchor>
      <arglist>(CubeMapTextureArray &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>abdb051c64147738133e28a46ff612555</anchor>
      <arglist>(Int imageUnit, Int level, Int layer, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImageLayered</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a735073ce8ab0f0f68beefed990745364</anchor>
      <arglist>(Int imageUnit, Int level, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setBaseLevel</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>ae067956209aa2458041215b73ce62128</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setMaxLevel</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a40b3a50edd4717b7b701499d4f309a41</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setMinificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>aea31a32c09cd3ff8fc41fb0622fa04f2</anchor>
      <arglist>(SamplerFilter filter, SamplerMipmap mipmap=SamplerMipmap::Base)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setMinificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>acaf1aa9107b024bb7079a9ab92c0dea4</anchor>
      <arglist>(Magnum::SamplerFilter filter, Magnum::SamplerMipmap mipmap=Magnum::SamplerMipmap::Base)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setMagnificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a63e2de992c6b1dbac727ad67db641c9a</anchor>
      <arglist>(SamplerFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setMagnificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a1d9d660d8265bbd501311e7fe1488ce3</anchor>
      <arglist>(Magnum::SamplerFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setMinLod</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a39f52ef97516b9e8d364e45a18ca729f</anchor>
      <arglist>(Float lod)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setMaxLod</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a72dd1af2a901df220c7c98f5dc9a1f97</anchor>
      <arglist>(Float lod)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setLodBias</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>ad75bb7d502257d27b82838842901fe6e</anchor>
      <arglist>(Float bias)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setWrapping</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a88270b4e8abed9accff45139eda66052</anchor>
      <arglist>(const Array2D&lt; SamplerWrapping &gt; &amp;wrapping)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setWrapping</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>afd125fca563c8aa3df7a6ad19a17708f</anchor>
      <arglist>(const Array2D&lt; Magnum::SamplerWrapping &gt; &amp;wrapping)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a3e2da1ea21bd73bff4a9ec6398304fe5</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>ac82abcebeec53191c69f83fb28266a92</anchor>
      <arglist>(const Vector4ui &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a48dda12bda4b3286d958ae5227cab94f</anchor>
      <arglist>(const Vector4i &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setMaxAnisotropy</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a0e2eea1f336d05ff346461b7b77a8e70</anchor>
      <arglist>(Float anisotropy)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setSrgbDecode</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a8b91dabc53cf6d03ae585481815b52f7</anchor>
      <arglist>(bool decode)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setSRGBDecode</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a5fbdeb70c455bd089de6e0cae0221946</anchor>
      <arglist>(bool decode)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setSwizzle</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>af902dbae245b76ba2716a2d08531e529</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setCompareMode</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>acc04eb21f342e429e9ea075d55644e79</anchor>
      <arglist>(SamplerCompareMode mode)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setCompareFunction</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a00a60ffda1a3e82af7a47697bfbacb61</anchor>
      <arglist>(SamplerCompareFunction function)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setDepthStencilMode</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>af9bacee117d6b741177f87ab8d847a03</anchor>
      <arglist>(SamplerDepthStencilMode mode)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setStorage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a8cbd03eabfcf74c2cbad58182e227899</anchor>
      <arglist>(Int levels, TextureFormat internalFormat, const Vector3i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Vector3i</type>
      <name>imageSize</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a224e6aae7eeb062a9d706b9784b9ecbf</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a2a67f15c43316f3363312ee160e7b3d7</anchor>
      <arglist>(Int level, Image3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image3D</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a5f321c4b4607fa3aa9eac6b2f753ac91</anchor>
      <arglist>(Int level, Image3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a390a213011c4f8171b658da7f7a04dc1</anchor>
      <arglist>(Int level, const MutableImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a9cb6e3d1dcfdb19c7c798877d58cfc0f</anchor>
      <arglist>(Int level, BufferImage3D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage3D</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a10b5e58c766727eed479e97aaacdf28d</anchor>
      <arglist>(Int level, BufferImage3D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>af1f29f8f535efeca3368e500ac98b3d1</anchor>
      <arglist>(Int level, CompressedImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage3D</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a7798ea9b3095617660cd04ce99974658</anchor>
      <arglist>(Int level, CompressedImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a4a0c39dab8fe9512aa399fa5904a55d2</anchor>
      <arglist>(Int level, const MutableCompressedImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a3087ec27a85e92e20e265cbef75c0d3a</anchor>
      <arglist>(Int level, CompressedBufferImage3D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage3D</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a8972f9979835d051d69af9362892c00d</anchor>
      <arglist>(Int level, CompressedBufferImage3D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a1a100fb307e88ccd7fa2e8433e80e663</anchor>
      <arglist>(Int level, const Range3Di &amp;range, Image3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image3D</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a9e40301a1ffa10584c8bc0123cdf3540</anchor>
      <arglist>(Int level, const Range3Di &amp;range, Image3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a39f1ca41ecbf4bf158403ce481b94c83</anchor>
      <arglist>(Int level, const Range3Di &amp;range, const MutableImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a672a386edfea41f03a235d86e1b8d8af</anchor>
      <arglist>(Int level, const Range3Di &amp;range, BufferImage3D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage3D</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a1a89f432bf152ee5e5f0cfcd3b515517</anchor>
      <arglist>(Int level, const Range3Di &amp;range, BufferImage3D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a89cbd6cc829e4e269c1638e927cb38fb</anchor>
      <arglist>(Int level, const Range3Di &amp;range, CompressedImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage3D</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a92280973a5f3f145b7d794b40b8dbac9</anchor>
      <arglist>(Int level, const Range3Di &amp;range, CompressedImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a80b06754ff84d83ec589bd34716d7e33</anchor>
      <arglist>(Int level, const Range3Di &amp;range, const MutableCompressedImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a211832e395e69fa00c4df95888bcf580</anchor>
      <arglist>(Int level, const Range3Di &amp;range, CompressedBufferImage3D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage3D</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a7089ec55305c800c0f0dd26bf0519ccb</anchor>
      <arglist>(Int level, const Range3Di &amp;range, CompressedBufferImage3D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a0459bfefbc9a111d08dfb64d191378dc</anchor>
      <arglist>(Int level, TextureFormat internalFormat, const ImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>adc21d91894cd6bb7b8273cbe01456b0a</anchor>
      <arglist>(Int level, TextureFormat internalFormat, BufferImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a1fd785ab8c14ef4e756c678038709270</anchor>
      <arglist>(Int level, TextureFormat internalFormat, BufferImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a8dc828bfb89d7a35a0d163dd4e59fb85</anchor>
      <arglist>(Int level, const CompressedImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>ac94675e6c868c6deb5e88dcf166ed656</anchor>
      <arglist>(Int level, CompressedBufferImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a802c5e96ad4209000cfe74b3bae9eafc</anchor>
      <arglist>(Int level, CompressedBufferImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a3ac9105f5e0844097e64a5927412a819</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, const ImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>ae04387ddbbc527bc646e90dea9260c44</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, BufferImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>ad71eccfa8fbb0414eb75f4de61455285</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, BufferImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a43ba88c3f217bb60b543aa232ee14b81</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, const CompressedImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a3e36bd8ee00af8ee95616f9dcc05cbe0</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, CompressedBufferImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a706ffc1f7c398cf1e77f129d452aa4f3</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, CompressedBufferImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>generateMipmap</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a87710f16c1d1a4ba7b062d12077115e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a0d1f530c4339c24772b78249128c26e7</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>aaf3621ac5c93c3f5d9aedaed3b813b85</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, const Vector3i &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3i</type>
      <name>maxSize</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a47ab443741767287c389de284d1ce909</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector2i</type>
      <name>compressedBlockSize</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>aaea8d59e1b62b6863f9e0b0af93930df</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>compressedBlockDataSize</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a075ad40739f14894ebf86a9545ca060b</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CubeMapTextureArray</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1GL_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a2e2997cf228a496719a0a615b8b6e80f</anchor>
      <arglist>(GLuint id, ObjectFlags flags={})</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1CubeMapTextureArray" title="Usage">GL-CubeMapTextureArray-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::DebugGroup</name>
    <filename>classMagnum_1_1GL_1_1DebugGroup.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Source</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugGroup.html</anchorfile>
      <anchor>a97b4f16fd30c6c2b6942e72a361a8251</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1DebugGroup.html" anchor="a97b4f16fd30c6c2b6942e72a361a8251a7b2d70df6fb557246ecc29b745b6114d">ThirdParty</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugGroup.html" anchor="a97b4f16fd30c6c2b6942e72a361a8251ae498749f3c42246d50b15c81c101d988">Application</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>DebugGroup</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugGroup.html</anchorfile>
      <anchor>a6216a000c3bbaad6238745bebf32acb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DebugGroup</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugGroup.html</anchorfile>
      <anchor>ae5ed3ece7af634f55da8bcfbd2fd726e</anchor>
      <arglist>(Source source, UnsignedInt id, const std::string &amp;message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DebugGroup</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugGroup.html</anchorfile>
      <anchor>acdbe91be4cf19ef65f0d79727e92ce66</anchor>
      <arglist>(Source source, UnsignedInt id, const char(&amp;message)[size])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DebugGroup</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugGroup.html</anchorfile>
      <anchor>a27bc8c6e223c9253c19278eca608233e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugGroup.html</anchorfile>
      <anchor>a8ec69227b128ffc28fe7b6a0180438d6</anchor>
      <arglist>(Source source, UnsignedInt id, const std::string &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugGroup.html</anchorfile>
      <anchor>a6def547928d487573ab32b897659474e</anchor>
      <arglist>(Source source, UnsignedInt id, const char(&amp;message)[size])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugGroup.html</anchorfile>
      <anchor>ad9afccbd2539cecc839cc95a691c6891</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxStackDepth</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugGroup.html</anchorfile>
      <anchor>a0ea5ee0dc1ebe2b77dac1b52d7165982</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugGroup.html</anchorfile>
      <anchor>ac94d5fde25c824e3f7cafb1c0ff7cb13</anchor>
      <arglist>(Debug &amp;debug, DebugGroup::Source value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1DebugGroup" title="Basic usage">GL-DebugGroup-usage</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1DebugGroup" title="Interaction with debug output volume control">GL-DebugGroup-volume-control</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1DebugGroup" title="Performance notes">GL-DebugGroup-performance-notes</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::DebugMessage</name>
    <filename>classMagnum_1_1GL_1_1DebugMessage.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Source</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugMessage.html</anchorfile>
      <anchor>a4f5bdf06d4a20ae23a7381dba427d2c3</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1DebugMessage.html" anchor="a4f5bdf06d4a20ae23a7381dba427d2c3a7b2d70df6fb557246ecc29b745b6114d">ThirdParty</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugMessage.html" anchor="a4f5bdf06d4a20ae23a7381dba427d2c3ae498749f3c42246d50b15c81c101d988">Application</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugMessage.html</anchorfile>
      <anchor>ad11b64fe456d7cac36378422d608d4e1</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1DebugMessage.html" anchor="ad11b64fe456d7cac36378422d608d4e1a902b0d55fddef6f8d651fe1035b7d4bd">Error</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugMessage.html" anchor="ad11b64fe456d7cac36378422d608d4e1ab4cc97bb7245cc3bf5111ed4183fc3a5">DeprecatedBehavior</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugMessage.html" anchor="ad11b64fe456d7cac36378422d608d4e1a8dd33a40183f56a664a71123ee4763cc">UndefinedBehavior</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugMessage.html" anchor="ad11b64fe456d7cac36378422d608d4e1ae5c4972a8739402b5daa0acbce30d62b">Portability</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugMessage.html" anchor="ad11b64fe456d7cac36378422d608d4e1a9446a98ad14416153cc4d45ab8b531bf">Performance</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugMessage.html" anchor="ad11b64fe456d7cac36378422d608d4e1a0235c996b43b3799573658df41ef82f2">Marker</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugMessage.html" anchor="ad11b64fe456d7cac36378422d608d4e1a6311ae17c1ee52b36e68aaf4ad066387">Other</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>DebugMessage</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugMessage.html</anchorfile>
      <anchor>a64c6f7a1054c982c4c546223dcd432ac</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>insert</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugMessage.html</anchorfile>
      <anchor>ad9f214cb97cb2e362fc2fda929700890</anchor>
      <arglist>(Source source, Type type, UnsignedInt id, DebugOutput::Severity severity, const std::string &amp;string)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>insert</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugMessage.html</anchorfile>
      <anchor>a74cc2edadc30fd2750abb317b9db809b</anchor>
      <arglist>(Source source, Type type, UnsignedInt id, DebugOutput::Severity severity, const char(&amp;string)[size])</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugMessage.html</anchorfile>
      <anchor>a757e23b71bfbb06869da1eba3b7d45da</anchor>
      <arglist>(Debug &amp;debug, DebugMessage::Source value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugMessage.html</anchorfile>
      <anchor>ab1f7b8a72a9a538560f8f0606ca1f4a8</anchor>
      <arglist>(Debug &amp;debug, DebugMessage::Type value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1DebugMessage" title="Basic usage">GL-DebugMessage-usage</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1DebugMessage" title="Performance notes">GL-DebugMessage-performance-notes</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::DebugOutput</name>
    <filename>classMagnum_1_1GL_1_1DebugOutput.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Source</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>a8dcdc287c01a99ec4ea9db8b1c536aea</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1DebugOutput.html" anchor="a8dcdc287c01a99ec4ea9db8b1c536aeaa72664dc0959f3b0c04891f8c7046a9f3">Api</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugOutput.html" anchor="a8dcdc287c01a99ec4ea9db8b1c536aeaa622bcd3e3eb6eb6f2ca22d63fc98c5ea">WindowSystem</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugOutput.html" anchor="a8dcdc287c01a99ec4ea9db8b1c536aeaa780fd1ff590e0e52a3765ab7f223c30a">ShaderCompiler</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugOutput.html" anchor="a8dcdc287c01a99ec4ea9db8b1c536aeaa7b2d70df6fb557246ecc29b745b6114d">ThirdParty</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugOutput.html" anchor="a8dcdc287c01a99ec4ea9db8b1c536aeaae498749f3c42246d50b15c81c101d988">Application</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugOutput.html" anchor="a8dcdc287c01a99ec4ea9db8b1c536aeaa6311ae17c1ee52b36e68aaf4ad066387">Other</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>afd9cca757356dc5f05943ef0b4483b1c</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1DebugOutput.html" anchor="afd9cca757356dc5f05943ef0b4483b1ca902b0d55fddef6f8d651fe1035b7d4bd">Error</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugOutput.html" anchor="afd9cca757356dc5f05943ef0b4483b1cab4cc97bb7245cc3bf5111ed4183fc3a5">DeprecatedBehavior</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugOutput.html" anchor="afd9cca757356dc5f05943ef0b4483b1ca8dd33a40183f56a664a71123ee4763cc">UndefinedBehavior</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugOutput.html" anchor="afd9cca757356dc5f05943ef0b4483b1cae5c4972a8739402b5daa0acbce30d62b">Portability</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugOutput.html" anchor="afd9cca757356dc5f05943ef0b4483b1ca9446a98ad14416153cc4d45ab8b531bf">Performance</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugOutput.html" anchor="afd9cca757356dc5f05943ef0b4483b1ca0235c996b43b3799573658df41ef82f2">Marker</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugOutput.html" anchor="afd9cca757356dc5f05943ef0b4483b1cacef0afe9af5edb043716e736049224d3">PushGroup</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugOutput.html" anchor="afd9cca757356dc5f05943ef0b4483b1ca3e47d685c082c8b84bea759c25364090">PopGroup</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugOutput.html" anchor="afd9cca757356dc5f05943ef0b4483b1ca6311ae17c1ee52b36e68aaf4ad066387">Other</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Severity</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>abfb6f3e6d5f287d2136500b03189490e</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1DebugOutput.html" anchor="abfb6f3e6d5f287d2136500b03189490ea655d20c1ca69519ca647684edbb2db35">High</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugOutput.html" anchor="abfb6f3e6d5f287d2136500b03189490ea87f8a6ab85c9ced3702b4ea641ad4bb5">Medium</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugOutput.html" anchor="abfb6f3e6d5f287d2136500b03189490ea28d0edd045e05cf5af64e35ae0c4c6ef">Low</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DebugOutput.html" anchor="abfb6f3e6d5f287d2136500b03189490ea96d008db67fc0b5551a926842bbb6a71">Notification</enumvalue>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Callback</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>af0221e57f6732bd908b7d66baecade4b</anchor>
      <arglist>)(Source, Type, UnsignedInt, Severity, const std::string &amp;, const void *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DebugOutput</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>af13e8f4ba345856bb1911ae81d7ef062</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxLoggedMessages</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>a3512717314a4d9a8fb4192d1500661c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxMessageLength</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>a7d3a99fc4cc7005e995236358f41c14e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>aae1ae81430e83f2a187f655747e48a75</anchor>
      <arglist>(Source source, Type type, std::initializer_list&lt; UnsignedInt &gt; ids, bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>a0d23dc7b88730e5dc31c6322468b4521</anchor>
      <arglist>(Source source, Type type, Severity severity, bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>a5f81563b3a0ce73cd936434cbf43eada</anchor>
      <arglist>(Source source, Type type, bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>abb4e1917cc8cb917bcfcdbfc9fb14902</anchor>
      <arglist>(Source source, Severity severity, bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>a2d7b49db985af95382690e32d1b27ad6</anchor>
      <arglist>(Source source, bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>acde93d38b5fd43e0d87a6b8a34c94ce5</anchor>
      <arglist>(Type type, Severity severity, bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>a4bad1f4bb7975570b3d2017608ed4b31</anchor>
      <arglist>(Type type, bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>a08e882db7992e97b6d5d74dd3eda931d</anchor>
      <arglist>(Severity severity, bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>afe40a40dc8cba3d1541756261f0804c0</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setCallback</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>ae1e00eb0448b610496265bc4ecc194c0</anchor>
      <arglist>(Callback callback, const void *userParam=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDefaultCallback</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>a923b5d2a5b9647d1fa3b674fdb450e13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>a8ebfbeb18914398a29b94bb905a2d27d</anchor>
      <arglist>(Debug &amp;debug, DebugOutput::Source value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>a46414fbbd0eb0fa569512e82d9ee9e22</anchor>
      <arglist>(Debug &amp;debug, DebugOutput::Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1DebugOutput.html</anchorfile>
      <anchor>a89d1fd21bfaa208055a8c0c9520776e2</anchor>
      <arglist>(Debug &amp;debug, DebugOutput::Severity value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1DebugOutput" title="Basic usage">GL-Magnum-DebugOutput-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::DefaultFramebuffer</name>
    <filename>classMagnum_1_1GL_1_1DefaultFramebuffer.html</filename>
    <base>Magnum::GL::AbstractFramebuffer</base>
    <member kind="enumeration">
      <type></type>
      <name>Status</name>
      <anchorfile>classMagnum_1_1GL_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a87cc026e5c16c466c1c1c65c0f471d1a</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a87cc026e5c16c466c1c1c65c0f471d1aaae94f80b3ce82062a5dd7815daa04f9d">Complete</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a87cc026e5c16c466c1c1c65c0f471d1aaec0fc0100c4fc1ce4eea230c3dc10360">Undefined</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DrawAttachment</name>
      <anchorfile>classMagnum_1_1GL_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a86229217fe46a20b925e3a90c5497587</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a86229217fe46a20b925e3a90c5497587a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a86229217fe46a20b925e3a90c5497587a3a86c1ecef856c6360b14ee920abd2d4">FrontLeft</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a86229217fe46a20b925e3a90c5497587a17a1a1897fa234ffd995f32ff31c4075">FrontRight</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a86229217fe46a20b925e3a90c5497587abff6f014d4c53710a1ad968e9b401ccb">BackLeft</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a86229217fe46a20b925e3a90c5497587aa07ea17eb99337c60ed9ad770cf2bb55">BackRight</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a86229217fe46a20b925e3a90c5497587a0557fa923dcee4d0f86b1409f5c2167f">Back</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ReadAttachment</name>
      <anchorfile>classMagnum_1_1GL_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a174b1eb15b3d527298a6b8ea432715d3</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a174b1eb15b3d527298a6b8ea432715d3a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a174b1eb15b3d527298a6b8ea432715d3a3a86c1ecef856c6360b14ee920abd2d4">FrontLeft</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a174b1eb15b3d527298a6b8ea432715d3a17a1a1897fa234ffd995f32ff31c4075">FrontRight</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a174b1eb15b3d527298a6b8ea432715d3abff6f014d4c53710a1ad968e9b401ccb">BackLeft</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a174b1eb15b3d527298a6b8ea432715d3aa07ea17eb99337c60ed9ad770cf2bb55">BackRight</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a174b1eb15b3d527298a6b8ea432715d3a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a174b1eb15b3d527298a6b8ea432715d3a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a174b1eb15b3d527298a6b8ea432715d3a0557fa923dcee4d0f86b1409f5c2167f">Back</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a174b1eb15b3d527298a6b8ea432715d3a5835bab1ade0060909e31a06af2e2cde">Front</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a174b1eb15b3d527298a6b8ea432715d3a8be41da9b58e32ece35a2b5751f6aeb9">FrontAndBack</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InvalidationAttachment</name>
      <anchorfile>classMagnum_1_1GL_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a22497903dc2b1e725781dbd4454942a0</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a22497903dc2b1e725781dbd4454942a0a3a86c1ecef856c6360b14ee920abd2d4">FrontLeft</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a22497903dc2b1e725781dbd4454942a0a17a1a1897fa234ffd995f32ff31c4075">FrontRight</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a22497903dc2b1e725781dbd4454942a0abff6f014d4c53710a1ad968e9b401ccb">BackLeft</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a22497903dc2b1e725781dbd4454942a0aa07ea17eb99337c60ed9ad770cf2bb55">BackRight</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a22497903dc2b1e725781dbd4454942a0acb5feb1b7314637725a2e73bdc9f7295">Color</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a22497903dc2b1e725781dbd4454942a0a675056ad1441b6375b2c5abd48c27ef1">Depth</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DefaultFramebuffer.html" anchor="a22497903dc2b1e725781dbd4454942a0ad821e7ccd4d4c25a491ba1a9ea248895">Stencil</enumvalue>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DefaultFramebuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a9a135e8ff6d2b20d1b282f0331e72cb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefaultFramebuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a5537e9acdde6d2942b1d14ff9f9d28da</anchor>
      <arglist>(const DefaultFramebuffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefaultFramebuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a9c367949acb4125bea76f952aa63409d</anchor>
      <arglist>(DefaultFramebuffer &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>DefaultFramebuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>aa8a259be3df480379d4c8bd48d54b9ea</anchor>
      <arglist>(const DefaultFramebuffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>DefaultFramebuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a8883b23d5a7c9cf400a18db0cc2101d6</anchor>
      <arglist>(DefaultFramebuffer &amp;&amp;other)=delete</arglist>
    </member>
    <member kind="function">
      <type>Status</type>
      <name>checkStatus</name>
      <anchorfile>classMagnum_1_1GL_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a279ad9af4d7adfb762107eaccea4e2f8</anchor>
      <arglist>(FramebufferTarget target)</arglist>
    </member>
    <member kind="function">
      <type>DefaultFramebuffer &amp;</type>
      <name>clearColor</name>
      <anchorfile>classMagnum_1_1GL_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>aff5ca1dbdf24422d7e05bbcd95f41038</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>DefaultFramebuffer &amp;</type>
      <name>clearColor</name>
      <anchorfile>classMagnum_1_1GL_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>acc7ba6d92ac71eefeb7d20d6282a97a0</anchor>
      <arglist>(const Vector4i &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>DefaultFramebuffer &amp;</type>
      <name>clearColor</name>
      <anchorfile>classMagnum_1_1GL_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a8a8b97f67456e90d9802c50719bf0443</anchor>
      <arglist>(const Vector4ui &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>DefaultFramebuffer &amp;</type>
      <name>mapForDraw</name>
      <anchorfile>classMagnum_1_1GL_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a7d108ebb6a230a38a187adc5a5db484c</anchor>
      <arglist>(std::initializer_list&lt; std::pair&lt; UnsignedInt, DrawAttachment &gt;&gt; attachments)</arglist>
    </member>
    <member kind="function">
      <type>DefaultFramebuffer &amp;</type>
      <name>mapForDraw</name>
      <anchorfile>classMagnum_1_1GL_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a3def748c998a13317a640f4b71f99da0</anchor>
      <arglist>(DrawAttachment attachment)</arglist>
    </member>
    <member kind="function">
      <type>DefaultFramebuffer &amp;</type>
      <name>mapForRead</name>
      <anchorfile>classMagnum_1_1GL_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a1baf3bdf6267940266fd1c3efc23c3f1</anchor>
      <arglist>(ReadAttachment attachment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate</name>
      <anchorfile>classMagnum_1_1GL_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a8ff1e9f135831d0300294dbba5320d1b</anchor>
      <arglist>(std::initializer_list&lt; InvalidationAttachment &gt; attachments)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate</name>
      <anchorfile>classMagnum_1_1GL_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>ab079286eca8cca55f0101dbc7767b83b</anchor>
      <arglist>(std::initializer_list&lt; InvalidationAttachment &gt; attachments, const Range2Di &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a67c85d774decf9566ce34f0861b88198</anchor>
      <arglist>(Debug &amp;debug, DefaultFramebuffer::Status value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1DefaultFramebuffer" title="Usage">GL-DefaultFramebuffer-usage</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1DefaultFramebuffer" title="Performance optimizations">GL-DefaultFramebuffer-performance-optimizations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::DynamicAttribute</name>
    <filename>classMagnum_1_1GL_1_1DynamicAttribute.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Kind</name>
      <anchorfile>classMagnum_1_1GL_1_1DynamicAttribute.html</anchorfile>
      <anchor>a19df497be42edcc5435a829ceaa5015e</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="a19df497be42edcc5435a829ceaa5015ea8045a0a6c688b0635e3caccc408a1446">Generic</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="a19df497be42edcc5435a829ceaa5015ea267efc5c07962805b8bd786ba04037cb">GenericNormalized</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="a19df497be42edcc5435a829ceaa5015ea4ea94552a2bec56a29592359a1b6069e">Integral</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="a19df497be42edcc5435a829ceaa5015ea8394f0347c184cf156ac5924dccb773b">Long</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Components</name>
      <anchorfile>classMagnum_1_1GL_1_1DynamicAttribute.html</anchorfile>
      <anchor>aa2bf13489130a47442c698852d788794</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="aa2bf13489130a47442c698852d788794a06c2cea18679d64399783748fa367bdd">One</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="aa2bf13489130a47442c698852d788794aaada29daee1d64ed0fe907043855cb7e">Two</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="aa2bf13489130a47442c698852d788794aca8a2087e5557e317599344687a57391">Three</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="aa2bf13489130a47442c698852d788794a981b8fcee42e1e726a67a2b9a98ea6e9">Four</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="aa2bf13489130a47442c698852d788794a5a1fe3c61c9e2fd6dbbc823589f6e697">BGRA</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1GL_1_1DynamicAttribute.html</anchorfile>
      <anchor>a46e2e9c5cd535e7d1ddd96b86f60f308</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="a46e2e9c5cd535e7d1ddd96b86f60f308a8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="a46e2e9c5cd535e7d1ddd96b86f60f308aa245c3230debe5c956484ecc6fa93877">Byte</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="a46e2e9c5cd535e7d1ddd96b86f60f308aeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="a46e2e9c5cd535e7d1ddd96b86f60f308a30bb747c98bccdd11b3f89e644c4d0ad">Short</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="a46e2e9c5cd535e7d1ddd96b86f60f308ac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="a46e2e9c5cd535e7d1ddd96b86f60f308a1686a6c336b71b36d77354cea19a8b52">Int</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="a46e2e9c5cd535e7d1ddd96b86f60f308ad35523d81610cee8b87cdac1853ad51f">HalfFloat</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="a46e2e9c5cd535e7d1ddd96b86f60f308a22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="a46e2e9c5cd535e7d1ddd96b86f60f308ad909d38d705ce75386dd86e611a82f5b">Double</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="a46e2e9c5cd535e7d1ddd96b86f60f308a561473e5c75c919542b013eaaaff948d">UnsignedInt10f11f11fRev</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="a46e2e9c5cd535e7d1ddd96b86f60f308af181e9b017ba4f6226f947aef3d86755">UnsignedInt2101010Rev</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1DynamicAttribute.html" anchor="a46e2e9c5cd535e7d1ddd96b86f60f308af9d37615ff3e365189e48ed5b88dbd46">Int2101010Rev</enumvalue>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DynamicAttribute</name>
      <anchorfile>classMagnum_1_1GL_1_1DynamicAttribute.html</anchorfile>
      <anchor>a798431ab8435adbd9cdfbd1b1eb9cd3e</anchor>
      <arglist>(Kind kind, UnsignedInt location, Components components, DataType dataType)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Kind</type>
      <name>kind</name>
      <anchorfile>classMagnum_1_1GL_1_1DynamicAttribute.html</anchorfile>
      <anchor>aff989175d9a50d7255b50815eff04c33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr UnsignedInt</type>
      <name>location</name>
      <anchorfile>classMagnum_1_1GL_1_1DynamicAttribute.html</anchorfile>
      <anchor>ac02fb8b785261760514760b1efd2d1cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Components</type>
      <name>components</name>
      <anchorfile>classMagnum_1_1GL_1_1DynamicAttribute.html</anchorfile>
      <anchor>abb631d303a237f81129cdaf175605c66</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr DataType</type>
      <name>dataType</name>
      <anchorfile>classMagnum_1_1GL_1_1DynamicAttribute.html</anchorfile>
      <anchor>aba488585f93fb904a3b2d303b9d1476d</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::Extension</name>
    <filename>classMagnum_1_1GL_1_1Extension.html</filename>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>index</name>
      <anchorfile>classMagnum_1_1GL_1_1Extension.html</anchorfile>
      <anchor>afded1972cdbb5272ff3a1733cf54f87e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Version</type>
      <name>requiredVersion</name>
      <anchorfile>classMagnum_1_1GL_1_1Extension.html</anchorfile>
      <anchor>a5431e64a722c6de908b797fc39478b1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Version</type>
      <name>coreVersion</name>
      <anchorfile>classMagnum_1_1GL_1_1Extension.html</anchorfile>
      <anchor>a7ed3eded76fdd0ef9125b08aa80a14c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const char *</type>
      <name>string</name>
      <anchorfile>classMagnum_1_1GL_1_1Extension.html</anchorfile>
      <anchor>a1da0ae47589c77fd0f39cf2102bf289c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Containers::ArrayView&lt; const Extension &gt;</type>
      <name>extensions</name>
      <anchorfile>classMagnum_1_1GL_1_1Extension.html</anchorfile>
      <anchor>a322cf3c0b43bb448898e47082d6d18c6</anchor>
      <arglist>(Version version)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::Framebuffer</name>
    <filename>classMagnum_1_1GL_1_1Framebuffer.html</filename>
    <base>Magnum::GL::AbstractFramebuffer</base>
    <base>Magnum::GL::AbstractObject</base>
    <class kind="class">Magnum::GL::Framebuffer::BufferAttachment</class>
    <class kind="class">Magnum::GL::Framebuffer::ColorAttachment</class>
    <class kind="class">Magnum::GL::Framebuffer::DrawAttachment</class>
    <class kind="class">Magnum::GL::Framebuffer::InvalidationAttachment</class>
    <member kind="enumeration">
      <type></type>
      <name>Status</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a9259bdad2ead701477984d92966b2c0c</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Framebuffer.html" anchor="a9259bdad2ead701477984d92966b2c0caae94f80b3ce82062a5dd7815daa04f9d">Complete</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Framebuffer.html" anchor="a9259bdad2ead701477984d92966b2c0ca4cfa0e5e63c190c989287bac001d00db">IncompleteAttachment</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Framebuffer.html" anchor="a9259bdad2ead701477984d92966b2c0ca45f00106794509bc4fd64e7500e322ed">IncompleteMissingAttachment</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Framebuffer.html" anchor="a9259bdad2ead701477984d92966b2c0ca68882063e371274bb04a919c18a7c12f">IncompleteDrawBuffer</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Framebuffer.html" anchor="a9259bdad2ead701477984d92966b2c0caa86a2a2e8bcaa92a2f92fb28a94b0dc3">IncompleteReadBuffer</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Framebuffer.html" anchor="a9259bdad2ead701477984d92966b2c0cab4080bdf74febf04d578ff105cce9d3f">Unsupported</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Framebuffer.html" anchor="a9259bdad2ead701477984d92966b2c0ca3a68d544d09cb9463d21292993997d93">IncompleteMultisample</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Framebuffer.html" anchor="a9259bdad2ead701477984d92966b2c0cac367a641bfc569303493ba6d4f18bcee">IncompleteLayerTargets</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Framebuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a12ae4acb2e10304cd2b50f7947b12bb3</anchor>
      <arglist>(const Range2Di &amp;viewport)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Framebuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a0cbbda0738a36457f162b9924dcf091b</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Framebuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>af3e8e67b4cd7f4c75f8335180819ce60</anchor>
      <arglist>(const Framebuffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Framebuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>af85088413c53fc660ebcd2551fcbc492</anchor>
      <arglist>(Framebuffer &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Framebuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>abad33075ba4f25f9e1b8d49802bdfe17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>abcebc5d227a1af5d1fb485edcf64bb78</anchor>
      <arglist>(const Framebuffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a84f747ef74d87a6e613479bfa8bdb3c3</anchor>
      <arglist>(Framebuffer &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a5b881abc671dde67f228ad36e5c64b26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>afc799faa1b179b6e59b53951bc97ebee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a2fc35f428e10301e1e40f143258e2f01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>af9f3fbaead692c90f12b22b7898fe8e0</anchor>
      <arglist>(const std::string &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a8055bdf6a7940efdab8768b5e80a06c5</anchor>
      <arglist>(const char(&amp;label)[size])</arglist>
    </member>
    <member kind="function">
      <type>Status</type>
      <name>checkStatus</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a43dbfeb0020b1039135a055a56b6e92c</anchor>
      <arglist>(FramebufferTarget target)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>clearColor</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>aee4c815d1fc371199099fe893f9bfe49</anchor>
      <arglist>(Int attachment, const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>clearColor</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>aec665c545627c66ad7a23a138024fd79</anchor>
      <arglist>(Int attachment, const Vector4i &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>clearColor</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a338969a2992434b7b24fb77d65c5cba1</anchor>
      <arglist>(Int attachment, const Vector4ui &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>mapForDraw</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>abb5a77db524353a8fbd5ae6b7211807e</anchor>
      <arglist>(std::initializer_list&lt; std::pair&lt; UnsignedInt, DrawAttachment &gt;&gt; attachments)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>mapForDraw</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>ab59e6fe1f6eb5f1eed0b27686c1837b5</anchor>
      <arglist>(DrawAttachment attachment)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>mapForRead</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a1482ea8ff16bb2d4956ef46d872b67f0</anchor>
      <arglist>(ColorAttachment attachment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a8111716e4419baa88e1569a28d361ee7</anchor>
      <arglist>(std::initializer_list&lt; InvalidationAttachment &gt; attachments)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a6dee45a2da160b6033e268b822234b3d</anchor>
      <arglist>(std::initializer_list&lt; InvalidationAttachment &gt; attachments, const Range2Di &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachRenderbuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>af16df1a0f89a7cda513e9127f074b1a3</anchor>
      <arglist>(BufferAttachment attachment, Renderbuffer &amp;renderbuffer)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a256beca5a2750a4ef17edebbf64d73de</anchor>
      <arglist>(BufferAttachment attachment, Texture1D &amp;texture, Int level)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a8866ff928af3c8108ce861a36e274e9e</anchor>
      <arglist>(BufferAttachment attachment, Texture2D &amp;texture, Int level)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>ad18c66658f25eada77899b463ea53b27</anchor>
      <arglist>(BufferAttachment attachment, RectangleTexture &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a3ae48ab7d09b80d5bd4fbc47674c36c9</anchor>
      <arglist>(BufferAttachment attachment, MultisampleTexture2D &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachCubeMapTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a830b4fbac92e2a9b45b92d26624be32c</anchor>
      <arglist>(BufferAttachment attachment, CubeMapTexture &amp;texture, CubeMapCoordinate coordinate, Int level)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachTextureLayer</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a67e84d6fee6cf1770207a07a88eaa674</anchor>
      <arglist>(BufferAttachment attachment, Texture3D &amp;texture, Int level, Int layer)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachTextureLayer</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a0248a343fdc31d207f662ea08efd4a74</anchor>
      <arglist>(BufferAttachment attachment, Texture1DArray &amp;texture, Int level, Int layer)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachTextureLayer</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a7cfcb64bdee3d832575fca7ba8a8f56d</anchor>
      <arglist>(BufferAttachment attachment, Texture2DArray &amp;texture, Int level, Int layer)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachTextureLayer</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a0b2cfbd1958bf6bd4c0a9ea9e06ee00c</anchor>
      <arglist>(BufferAttachment attachment, CubeMapTextureArray &amp;texture, Int level, Int layer)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachTextureLayer</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a441db30a92d880379f432f4005b42da5</anchor>
      <arglist>(BufferAttachment attachment, MultisampleTexture2DArray &amp;texture, Int layer)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachLayeredTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a480c09350d22a3c24684f1537763ebe3</anchor>
      <arglist>(BufferAttachment attachment, Texture3D &amp;texture, Int level)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachLayeredTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a31a9d62e1e5d8bbadf6b1511b0e3031e</anchor>
      <arglist>(BufferAttachment attachment, Texture1DArray &amp;texture, Int level)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachLayeredTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a4cb06321712d1dd4e45822db91508350</anchor>
      <arglist>(BufferAttachment attachment, Texture2DArray &amp;texture, Int level)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachLayeredTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a4b744645f13b1058eea6976897e6aae2</anchor>
      <arglist>(BufferAttachment attachment, CubeMapTexture &amp;texture, Int level)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachLayeredTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>ac61c27489cb0241a70594a5717156af4</anchor>
      <arglist>(BufferAttachment attachment, CubeMapTextureArray &amp;texture, Int level)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachLayeredTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a1fd08a4d9311fa57ea9826a243fca97d</anchor>
      <arglist>(BufferAttachment attachment, MultisampleTexture2DArray &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>detach</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a690493da8df55f4fb6b859cc4a29dd3b</anchor>
      <arglist>(BufferAttachment attachment)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxColorAttachments</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a36ab6e86ba333a298361240a6f6424a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Framebuffer</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>aa385a47ad285690c3861f21227cced91</anchor>
      <arglist>(GLuint id, const Range2Di &amp;viewport, ObjectFlags flags={})</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer.html</anchorfile>
      <anchor>a969df0ccdd40303d80c983c3eda61ef8</anchor>
      <arglist>(Debug &amp;debug, Framebuffer::Status value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1Framebuffer" title="Example usage">GL-Framebuffer-usage</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1Framebuffer" title="Performance optimizations">GL-Framebuffer-performance-optimizations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::Framebuffer::BufferAttachment</name>
    <filename>classMagnum_1_1GL_1_1Framebuffer_1_1BufferAttachment.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>BufferAttachment</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer_1_1BufferAttachment.html</anchorfile>
      <anchor>a4c745b0d507b7c3e8a15968e13ad29dd</anchor>
      <arglist>(Framebuffer::ColorAttachment attachment)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const BufferAttachment</type>
      <name>Depth</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer_1_1BufferAttachment.html</anchorfile>
      <anchor>a9390badd97ee0386374c771412dc06ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const BufferAttachment</type>
      <name>Stencil</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer_1_1BufferAttachment.html</anchorfile>
      <anchor>ab9217344ec67d73f4f9058e636e91224</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const BufferAttachment</type>
      <name>DepthStencil</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer_1_1BufferAttachment.html</anchorfile>
      <anchor>a6d39f271e48bcbb4a2be560dac3c99dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::Framebuffer::ColorAttachment</name>
    <filename>classMagnum_1_1GL_1_1Framebuffer_1_1ColorAttachment.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>ColorAttachment</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer_1_1ColorAttachment.html</anchorfile>
      <anchor>aca8614f536fa0740c81db63dcee97939</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::Framebuffer::DrawAttachment</name>
    <filename>classMagnum_1_1GL_1_1Framebuffer_1_1DrawAttachment.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>DrawAttachment</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer_1_1DrawAttachment.html</anchorfile>
      <anchor>a8fab1339218d2cd33ac1939dfd63af60</anchor>
      <arglist>(Framebuffer::ColorAttachment attachment)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const DrawAttachment</type>
      <name>None</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer_1_1DrawAttachment.html</anchorfile>
      <anchor>aa2a85a54c0a6110f9daecb2439886e7c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::Framebuffer::InvalidationAttachment</name>
    <filename>classMagnum_1_1GL_1_1Framebuffer_1_1InvalidationAttachment.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>InvalidationAttachment</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer_1_1InvalidationAttachment.html</anchorfile>
      <anchor>aa7b300c76ae3b7380c7d068195db59b0</anchor>
      <arglist>(Framebuffer::ColorAttachment attachment)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const InvalidationAttachment</type>
      <name>Depth</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer_1_1InvalidationAttachment.html</anchorfile>
      <anchor>a4463a0ba23dec3316c18ed3fe0a9e745</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const InvalidationAttachment</type>
      <name>Stencil</name>
      <anchorfile>classMagnum_1_1GL_1_1Framebuffer_1_1InvalidationAttachment.html</anchorfile>
      <anchor>a1c270817850540f2c023d41d12fd32a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::Mesh</name>
    <filename>classMagnum_1_1GL_1_1Mesh.html</filename>
    <base>Magnum::GL::AbstractObject</base>
    <member kind="function">
      <type></type>
      <name>Mesh</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>adc4a788c8070910bcacd7fc86fe9f493</anchor>
      <arglist>(MeshPrimitive primitive=MeshPrimitive::Triangles)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Mesh</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a7073f453f8ae8af127f9c2b9d5f2cc58</anchor>
      <arglist>(Magnum::MeshPrimitive primitive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Mesh</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a0c217438ae48a0a9d009bd0bfdc7bf34</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Mesh</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>ac1ecdcdd02407c7c109ee3c59c775495</anchor>
      <arglist>(const Mesh &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Mesh</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a7cdc00a4feb48bbcd80e4f69bd7461ee</anchor>
      <arglist>(Mesh &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Mesh</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a53493b408d68bf03b9684eff5df17c90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a0c1fbfc667554411cfe779c107fa85da</anchor>
      <arglist>(const Mesh &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>ada9982cebe94c94f253db377c96e20a7</anchor>
      <arglist>(Mesh &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>ac3b2033a20114c7410191b0ae84e8f40</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a56f7a09b4283ce68fc3b45205f7c92c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>afc8d7e7b97b040323f97c754198d1a7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>ac62e1abd451ff22f0d7557ce910381fe</anchor>
      <arglist>(const std::string &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a6f6eb2873a20024a6c85b35fb92c2484</anchor>
      <arglist>(const char(&amp;label)[size])</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIndexed</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a1d2be82a3b4e0b95fbb1c7b1127bd55b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MeshIndexType</type>
      <name>indexType</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a590895392485cdd0f692a140f6c14a52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>indexTypeSize</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a5fa9fd4e1b004c503a01e00ef933085e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MeshPrimitive</type>
      <name>primitive</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a91d54266b0c19edf662c188dcd8f5a9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setPrimitive</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a1124a94ae0226818962b370f18c2e73c</anchor>
      <arglist>(MeshPrimitive primitive)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setPrimitive</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>ab3281802880af270c8e9e79155a8af67</anchor>
      <arglist>(Magnum::MeshPrimitive primitive)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>count</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a578604bfa913ebe59b9b404b13d2a2af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setCount</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a48dec084ecf8ce1a152889e7e4175d86</anchor>
      <arglist>(Int count)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>baseVertex</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a868a798a5bcc06cb0a99309a0f2d9175</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setBaseVertex</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>aaa49afa2c76cc12b8402418a6e31923f</anchor>
      <arglist>(Int baseVertex)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>instanceCount</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a7196adf1d96164569b2f4a3805267853</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setInstanceCount</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>adee2004929afe7de82cd031b0f809a62</anchor>
      <arglist>(Int count)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>baseInstance</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>aa8e05cc3f341193bd61e2d30dfd8fa0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setBaseInstance</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a46e2e42c41aa23a2b6ad41aa67593292</anchor>
      <arglist>(UnsignedInt baseInstance)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>addVertexBuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a7f3faf30ff104d7db5cfe3f8cbf5031e</anchor>
      <arglist>(Buffer &amp;buffer, GLintptr offset, const T &amp;... attributes)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>addVertexBufferInstanced</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a949ba55e141fc7f5239495329308722e</anchor>
      <arglist>(Buffer &amp;buffer, UnsignedInt divisor, GLintptr offset, const T &amp;... attributes)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>addVertexBuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>aa432a584e553ad705d60cf6c4b6a18e2</anchor>
      <arglist>(Buffer &amp;buffer, GLintptr offset, GLsizei stride, const DynamicAttribute &amp;attribute)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>addVertexBufferInstanced</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a4d044d08c35dd7dd9325fc097aaba558</anchor>
      <arglist>(Buffer &amp;buffer, UnsignedInt divisor, GLintptr offset, GLsizei stride, const DynamicAttribute &amp;attribute)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>addVertexBuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>acae39a43bd74024ffca28535f44baa46</anchor>
      <arglist>(Buffer &amp;&amp;buffer, GLintptr offset, const T &amp;... attributes)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>addVertexBufferInstanced</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a3d8de33c2ddc6a1b7f56fe164596989f</anchor>
      <arglist>(Buffer &amp;&amp;buffer, UnsignedInt divisor, GLintptr offset, const T &amp;... attributes)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>addVertexBuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a4f390f848c3522d5448d1bd7b2e7021e</anchor>
      <arglist>(Buffer &amp;&amp;buffer, GLintptr offset, GLsizei stride, const DynamicAttribute &amp;attribute)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>addVertexBufferInstanced</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a989abcb455e0a7af7a8afc59b463c8cd</anchor>
      <arglist>(Buffer &amp;&amp;buffer, UnsignedInt divisor, GLintptr offset, GLsizei stride, const DynamicAttribute &amp;attribute)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setIndexBuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>ad0f46d645633363d887274735b39b76f</anchor>
      <arglist>(Buffer &amp;buffer, GLintptr offset, MeshIndexType type, UnsignedInt start, UnsignedInt end)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setIndexBuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a133078829cd702f7b648bc0b7fbd1e7a</anchor>
      <arglist>(Buffer &amp;buffer, GLintptr offset, Magnum::MeshIndexType type, UnsignedInt start, UnsignedInt end)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setIndexBuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>ac45bd1dc3834fecca417e23269086ec0</anchor>
      <arglist>(Buffer &amp;buffer, GLintptr offset, MeshIndexType type)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setIndexBuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a36714a7655cc8ebdc666e1b32cfa4f7b</anchor>
      <arglist>(Buffer &amp;buffer, GLintptr offset, Magnum::MeshIndexType type)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setIndexBuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a74e2db3ea1e57d679b229e993080dac6</anchor>
      <arglist>(Buffer &amp;&amp;buffer, GLintptr offset, MeshIndexType type, UnsignedInt start, UnsignedInt end)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setIndexBuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>abb58197a5390bceebbad0ad8c49a02f1</anchor>
      <arglist>(Buffer &amp;&amp;buffer, GLintptr offset, Magnum::MeshIndexType type, UnsignedInt start, UnsignedInt end)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setIndexBuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>aeb1842b659e07d7525c9e5e177c113b7</anchor>
      <arglist>(Buffer &amp;&amp;buffer, GLintptr offset, MeshIndexType type)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setIndexBuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a75ca165cfcbac8eb02620f44157eeb39</anchor>
      <arglist>(Buffer &amp;&amp;buffer, GLintptr offset, Magnum::MeshIndexType type)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a034906d8cf63a180c5c79dabf3e504eb</anchor>
      <arglist>(AbstractShaderProgram &amp;shader)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a0f80c0151e3924e09b3cd6e7c5ee07f4</anchor>
      <arglist>(AbstractShaderProgram &amp;&amp;shader)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>ac4ee4aab72fe47c8750e6ff51b7b3858</anchor>
      <arglist>(AbstractShaderProgram &amp;shader, TransformFeedback &amp;xfb, UnsignedInt stream=0)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a10ee6dc6423b61c3db13e5bd4101bd50</anchor>
      <arglist>(AbstractShaderProgram &amp;&amp;shader, TransformFeedback &amp;xfb, UnsignedInt stream=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Long</type>
      <name>maxElementIndex</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>ad5f3b0aaf032c5402749e885e5c17487</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxElementsIndices</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a413250ee17e80943faffcd7f04173eb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxElementsVertices</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a3395ae3ea69e090acd9e824690f7effa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Mesh</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>a88adbf0ecac2788222bebd2e2ffb6368</anchor>
      <arglist>(GLuint id, MeshPrimitive primitive=MeshPrimitive::Triangles, ObjectFlags flags={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Mesh</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1GL_1_1Mesh.html</anchorfile>
      <anchor>ab81ab83a1c0c44f1795977fb3aa9b39f</anchor>
      <arglist>(GLuint id, ObjectFlags flags)</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1Mesh" title="Mesh configuration">GL-Mesh-configuration</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1Mesh" title="Example mesh configuration">GL-Mesh-configuration-example</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1Mesh" title="Basic non-indexed mesh">GL-Mesh-configuration-example-basic</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1Mesh" title="Interleaved vertex data">GL-Mesh-configuration-interleaved</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1Mesh" title="Indexed mesh">GL-Mesh-configuration-indexed</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1Mesh" title="Specific formats of vertex data">GL-Mesh-configuration-formats</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1Mesh" title="Dynamically specified attributes">GL-Mesh-configuration-dynamic</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1Mesh" title="Transfering buffer ownership">GL-Mesh-buffer-ownership</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1Mesh" title="Rendering meshes">GL-Mesh-rendering</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1Mesh" title="WebGL restrictions">GL-Mesh-webgl-restrictions</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1Mesh" title="Performance optimizations">GL-Mesh-performance-optimization</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::MeshView</name>
    <filename>classMagnum_1_1GL_1_1MeshView.html</filename>
    <member kind="function">
      <type></type>
      <name>MeshView</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>a727926995fcb8157a788c2c22dba1b88</anchor>
      <arglist>(Mesh &amp;original)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshView</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>aac18bb9a77101aa9f8608d500f481f22</anchor>
      <arglist>(const MeshView &amp;other)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshView</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>a2c894cbca2072aaac5c49a2738d4a749</anchor>
      <arglist>(MeshView &amp;&amp;other)=delete</arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>a69bc4587338c5d7ab314d6e93b925d70</anchor>
      <arglist>(const MeshView &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>a6f802b6b44e15df14d00d536ec03066f</anchor>
      <arglist>(MeshView &amp;&amp;other)=delete</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>mesh</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>a75a340ef01fd714d6fce6d726e7490d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Mesh &amp;</type>
      <name>mesh</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>acd5b2b24ec7fbbc7312a060e1898ab0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>count</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>a39d095f6330979be15931a0d136a2d2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>setCount</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>ac4935558797294799e5df67ad38ac297</anchor>
      <arglist>(Int count)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>baseVertex</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>a0d46cdef6e62e4112defd00cf8c71bf4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>setBaseVertex</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>a19dd7522e17aee13926b369fe239c9c5</anchor>
      <arglist>(Int baseVertex)</arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>setIndexRange</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>a3532225cfd4515da56aab1fa869c46df</anchor>
      <arglist>(Int first, UnsignedInt start, UnsignedInt end)</arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>setIndexRange</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>a08f2672a51dc7e4ea371f12e8bfcb27c</anchor>
      <arglist>(Int first)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>instanceCount</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>aa98adf01622e7241494d12ef2b79d91c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>setInstanceCount</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>a7e1889e8a99be6d6e78eb9c74050e4ee</anchor>
      <arglist>(Int count)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>baseInstance</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>a4560190ad9991000c087a48011f436e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>setBaseInstance</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>abaf213ef8b2f10476ca0fb830aea9da3</anchor>
      <arglist>(UnsignedInt baseInstance)</arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>ac17eec063c333670673c6927eb239e41</anchor>
      <arglist>(AbstractShaderProgram &amp;shader)</arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>a90c839dc2dd6aeff6bca65dbe578466a</anchor>
      <arglist>(AbstractShaderProgram &amp;&amp;shader)</arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>a5ceed8cc00d2fe5a65584377dda249aa</anchor>
      <arglist>(AbstractShaderProgram &amp;shader, TransformFeedback &amp;xfb, UnsignedInt stream=0)</arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>a153416a318ed40f7d8e0f1dd3dcb6cc3</anchor>
      <arglist>(AbstractShaderProgram &amp;&amp;shader, TransformFeedback &amp;xfb, UnsignedInt stream=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>a844fb757598f884fd289701801496c5d</anchor>
      <arglist>(AbstractShaderProgram &amp;shader, std::initializer_list&lt; Containers::Reference&lt; MeshView &gt;&gt; meshes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1GL_1_1MeshView.html</anchorfile>
      <anchor>a4a1a8553be52277a14489a1497422e30</anchor>
      <arglist>(AbstractShaderProgram &amp;&amp;shader, std::initializer_list&lt; Containers::Reference&lt; MeshView &gt;&gt; meshes)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::MultisampleTexture</name>
    <filename>classMagnum_1_1GL_1_1MultisampleTexture.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::GL::AbstractTexture</base>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1GL_1_1MultisampleTexture.html</anchorfile>
      <anchor>aecf21baac088a4a6db2ee0fb05e6e684a788e36a45fb490b7e34db70bdf4e984f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1GL_1_1MultisampleTexture.html</anchorfile>
      <anchor>aecf21baac088a4a6db2ee0fb05e6e684a788e36a45fb490b7e34db70bdf4e984f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultisampleTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1MultisampleTexture.html</anchorfile>
      <anchor>acb763255b11f470737a2d03593dccaf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultisampleTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1MultisampleTexture.html</anchorfile>
      <anchor>a5ac4bf670d0a6552eba4717a47ab48f0</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1GL_1_1MultisampleTexture.html</anchorfile>
      <anchor>afec15f6d339955139db01b91c2e79e7f</anchor>
      <arglist>(Int imageUnit, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1GL_1_1MultisampleTexture.html</anchorfile>
      <anchor>a94c94bfe1f0393172a44dbe5ccc0203b</anchor>
      <arglist>(Int imageUnit, Int layer, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImageLayered</name>
      <anchorfile>classMagnum_1_1GL_1_1MultisampleTexture.html</anchorfile>
      <anchor>a8c57bca35bf63c0213b7414ed7762039</anchor>
      <arglist>(Int imageUnit, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>MultisampleTexture&lt; dimensions &gt; &amp;</type>
      <name>setStorage</name>
      <anchorfile>classMagnum_1_1GL_1_1MultisampleTexture.html</anchorfile>
      <anchor>a3a8e7b7fa8fcd0edd562c664e7ee139f</anchor>
      <arglist>(Int samples, TextureFormat internalFormat, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, MultisampleTextureSampleLocations sampleLocations=MultisampleTextureSampleLocations::NotFixed)</arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>imageSize</name>
      <anchorfile>classMagnum_1_1GL_1_1MultisampleTexture.html</anchorfile>
      <anchor>a6517c89b2ee2d5b6863dd409d53fbd09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateImage</name>
      <anchorfile>classMagnum_1_1GL_1_1MultisampleTexture.html</anchorfile>
      <anchor>ae48f5b68b3f6abebdd9527af3d5caa88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1MultisampleTexture.html</anchorfile>
      <anchor>a8f290fc02daf17c16a54e522bc1889af</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>maxSize</name>
      <anchorfile>classMagnum_1_1GL_1_1MultisampleTexture.html</anchorfile>
      <anchor>a741498887c7bfabdc295862dd239bdde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MultisampleTexture&lt; dimensions &gt;</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1GL_1_1MultisampleTexture.html</anchorfile>
      <anchor>ae17a9bb48e8e27e1a7b312eab470cef5</anchor>
      <arglist>(GLuint id, ObjectFlags flags={})</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1MultisampleTexture" title="Usage">GL-MultisampleTexture-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::OpenGLTester</name>
    <filename>classMagnum_1_1GL_1_1OpenGLTester.html</filename>
    <base>Corrade::TestSuite::Tester</base>
    <member kind="enumeration">
      <type></type>
      <name>BenchmarkType</name>
      <anchorfile>classMagnum_1_1GL_1_1OpenGLTester.html</anchorfile>
      <anchor>ad19aef0115f064f4ca870d8ab64b69e3</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1OpenGLTester.html" anchor="ad19aef0115f064f4ca870d8ab64b69e3a7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1OpenGLTester.html" anchor="ad19aef0115f064f4ca870d8ab64b69e3a75fa4d137ea5adb50f81fb3c26229797">WallTime</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1OpenGLTester.html" anchor="ad19aef0115f064f4ca870d8ab64b69e3a582bcd601669f4956f55cb20feb2614f">CpuTime</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1OpenGLTester.html" anchor="ad19aef0115f064f4ca870d8ab64b69e3aba0d4b831fbcfdb7788fdfb4e8789207">CpuCycles</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1OpenGLTester.html" anchor="ad19aef0115f064f4ca870d8ab64b69e3a59078bc2d1f4f1779cbac36845323083">GpuTime</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>OpenGLTester</name>
      <anchorfile>classMagnum_1_1GL_1_1OpenGLTester.html</anchorfile>
      <anchor>ae775f33d3dfb216365d1e00a2a7a3192</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBenchmarks</name>
      <anchorfile>classMagnum_1_1GL_1_1OpenGLTester.html</anchorfile>
      <anchor>adb065a9897536e55d749b09c7c679c51</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; benchmarks, std::size_t batchCount, BenchmarkType benchmarkType=BenchmarkType::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBenchmarks</name>
      <anchorfile>classMagnum_1_1GL_1_1OpenGLTester.html</anchorfile>
      <anchor>ab832cd3a086559f57dc5feaae50ba9dd</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; benchmarks, std::size_t batchCount, void(Derived::*setup)(), void(Derived::*teardown)(), BenchmarkType benchmarkType=BenchmarkType::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInstancedBenchmarks</name>
      <anchorfile>classMagnum_1_1GL_1_1OpenGLTester.html</anchorfile>
      <anchor>a2efca8c94ccb97c2a8a4a7e9b80bc552</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; benchmarks, std::size_t batchCount, std::size_t instanceCount, BenchmarkType benchmarkType=BenchmarkType::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInstancedBenchmarks</name>
      <anchorfile>classMagnum_1_1GL_1_1OpenGLTester.html</anchorfile>
      <anchor>a198a62f97f5bfc99345103c92dde6cb1</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; benchmarks, std::size_t batchCount, std::size_t instanceCount, void(Derived::*setup)(), void(Derived::*teardown)(), BenchmarkType benchmarkType=BenchmarkType::Default)</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1OpenGLTester" title="Running the test executables">GL-OpenGLTester-running</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1OpenGLTester" title="OpenGL context creation">GL-OpenGLTester-context</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1OpenGLTester" title="Debug context and error checking">GL-OpenGLTester-debug</docanchor>
    <docanchor file="classMagnum_1_1GL_1_1OpenGLTester" title="GPU time benchmarks">GL-OpenGLTester-benchmarks</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::PrimitiveQuery</name>
    <filename>classMagnum_1_1GL_1_1PrimitiveQuery.html</filename>
    <base>Magnum::GL::AbstractQuery</base>
    <member kind="enumeration">
      <type></type>
      <name>Target</name>
      <anchorfile>classMagnum_1_1GL_1_1PrimitiveQuery.html</anchorfile>
      <anchor>af26d2fae98b5af3cce3591d261d3230b</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1PrimitiveQuery.html" anchor="af26d2fae98b5af3cce3591d261d3230ba4717ea25be625eeec8f5c57d6daad6e8">PrimitivesGenerated</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1PrimitiveQuery.html" anchor="af26d2fae98b5af3cce3591d261d3230ba0d15d17800f04e17d0f690daccf871a2">TransformFeedbackPrimitivesWritten</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1PrimitiveQuery.html" anchor="af26d2fae98b5af3cce3591d261d3230ba26d072b157181569387d1360487801fe">TransformFeedbackOverflow</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1PrimitiveQuery.html" anchor="af26d2fae98b5af3cce3591d261d3230bab4264ac87ca05d818474c3266164b61a">TransformFeedbackStreamOverflow</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>PrimitiveQuery</name>
      <anchorfile>classMagnum_1_1GL_1_1PrimitiveQuery.html</anchorfile>
      <anchor>ac8023071db9380a0d9b7c5cca2f0a3e4</anchor>
      <arglist>(Target target)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrimitiveQuery</name>
      <anchorfile>classMagnum_1_1GL_1_1PrimitiveQuery.html</anchorfile>
      <anchor>af58270afcdc2740cfd60229a10fbe2cb</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrimitiveQuery</name>
      <anchorfile>classMagnum_1_1GL_1_1PrimitiveQuery.html</anchorfile>
      <anchor>a7ff3d6b13e0d58d427663e8596ef6196</anchor>
      <arglist>(const PrimitiveQuery &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrimitiveQuery</name>
      <anchorfile>classMagnum_1_1GL_1_1PrimitiveQuery.html</anchorfile>
      <anchor>ab3d7a5337d0cb80bde94243db8a996b1</anchor>
      <arglist>(PrimitiveQuery &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>PrimitiveQuery &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1PrimitiveQuery.html</anchorfile>
      <anchor>a8c538ae0bde6144ca2d2c6c40c3f6c77</anchor>
      <arglist>(const PrimitiveQuery &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>PrimitiveQuery &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1PrimitiveQuery.html</anchorfile>
      <anchor>ac363338bedd37abc9e1c642fdfd9fb4d</anchor>
      <arglist>(PrimitiveQuery &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin</name>
      <anchorfile>classMagnum_1_1GL_1_1PrimitiveQuery.html</anchorfile>
      <anchor>ac5169477a4c0717804abc5f7b868d94a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin</name>
      <anchorfile>classMagnum_1_1GL_1_1PrimitiveQuery.html</anchorfile>
      <anchor>aa10c8e07816f6114cb2d1b84ae2bff63</anchor>
      <arglist>(UnsignedInt index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end</name>
      <anchorfile>classMagnum_1_1GL_1_1PrimitiveQuery.html</anchorfile>
      <anchor>a5351867ecc08a41261067d73fa3ba76c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PrimitiveQuery</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1GL_1_1PrimitiveQuery.html</anchorfile>
      <anchor>a0126373d349fa2c54e77829f71a8fa9d</anchor>
      <arglist>(GLuint id, Target target, ObjectFlags flags={})</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::RectangleTexture</name>
    <filename>classMagnum_1_1GL_1_1RectangleTexture.html</filename>
    <base>Magnum::GL::AbstractTexture</base>
    <member kind="function">
      <type></type>
      <name>RectangleTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>aca42775d3f71cbd2f3024090d0f03279</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RectangleTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>af34b4c2fdfdeb77b17a80ad02c915622</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RectangleTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a4264c37e1ec171a5de106df4f31abb81</anchor>
      <arglist>(const RectangleTexture &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RectangleTexture</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>aef13d6d691ffae7666c676d244664b96</anchor>
      <arglist>(RectangleTexture &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>ae1f93d872282c7afb815e1a49efdb5b9</anchor>
      <arglist>(const RectangleTexture &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a1e3c1af4b382f971b9821e4d33306058</anchor>
      <arglist>(RectangleTexture &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a5de0ab7b3c1f6921b906921bba70b435</anchor>
      <arglist>(Int imageUnit, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setMinificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a77405d7c41f18ade129433f4fa1ebc76</anchor>
      <arglist>(SamplerFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setMinificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>aabe4b39215c209ae580d54060fc59b4d</anchor>
      <arglist>(Magnum::SamplerFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setMagnificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a1e1d4c6c5f81cfbf668a39e222f45f4f</anchor>
      <arglist>(SamplerFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setMagnificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a67211893bbee942c11f36b635f4d7d83</anchor>
      <arglist>(Magnum::SamplerFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setWrapping</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a262dedd0181c2755264f2b98381b2cab</anchor>
      <arglist>(const Array2D&lt; SamplerWrapping &gt; &amp;wrapping)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setWrapping</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a9bcca85e63a16997a899388198e23106</anchor>
      <arglist>(const Array2D&lt; Magnum::SamplerWrapping &gt; &amp;wrapping)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>aa4278f3f8214e2866712806316a5c609</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a97077f160ba286efa6ce7129a9a82c60</anchor>
      <arglist>(const Vector4ui &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a63441839605dde1359ba1bc731e1270f</anchor>
      <arglist>(const Vector4i &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setMaxAnisotropy</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>ab95bba952b2cb5497c5357709ae49d79</anchor>
      <arglist>(Float anisotropy)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setSrgbDecode</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>adf90a24fb76a57234953bae20489fa97</anchor>
      <arglist>(bool decode)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setSRGBDecode</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>ae00cf16f7c5988a31daf34d9e7e95df1</anchor>
      <arglist>(bool decode)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setSwizzle</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>ae431eb6970be54ebfd967fe3d7304fc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setCompareMode</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a9bf4aa1d8356b06621f114a0c68114f2</anchor>
      <arglist>(SamplerCompareMode mode)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setCompareFunction</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a7c6853df04e6c617e0e84eebb48c1275</anchor>
      <arglist>(SamplerCompareFunction function)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setDepthStencilMode</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a94a26d186e3cd5053126cae47dec400a</anchor>
      <arglist>(SamplerDepthStencilMode mode)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setStorage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>ae2b064a65aa58f67af571d29ce1fb1f3</anchor>
      <arglist>(TextureFormat internalFormat, const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>imageSize</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a18b48c0c66bba465d9d1bb9e8fe05966</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a5b0346b2998f3eb3a99488d7cbbdcf7f</anchor>
      <arglist>(Image2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image2D</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>af00afdcf347d419dc8430d23f7478f68</anchor>
      <arglist>(Image2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a26c454a57cb605fa5a3a82638bc4787e</anchor>
      <arglist>(const MutableImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>ad29d931b2f5ba70579ab442d9011d56a</anchor>
      <arglist>(BufferImage2D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage2D</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a4a025c884aeae655e7f74a4d5e09ff35</anchor>
      <arglist>(BufferImage2D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>af895a7fb827ff4d6d9c68aaac8e7d759</anchor>
      <arglist>(CompressedImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage2D</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a02568fd54076a583fc3fcc3e5e141b5f</anchor>
      <arglist>(CompressedImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a72c084b3f8e8e1c1de630ef1d5bb18b7</anchor>
      <arglist>(const MutableCompressedImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a3c35ade4fefd6005a48e665d053e76fc</anchor>
      <arglist>(CompressedBufferImage2D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage2D</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a22b7ef58a7c72407f1b31a0420623c48</anchor>
      <arglist>(CompressedBufferImage2D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a9dbe0f78bf33e48303544cbdb17d1743</anchor>
      <arglist>(const Range2Di &amp;range, Image2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image2D</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a115af9ea3ba791ba34eee1c1c319ceb1</anchor>
      <arglist>(const Range2Di &amp;range, Image2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a9f4c5e36155845318a13ad6320b79b4b</anchor>
      <arglist>(const Range2Di &amp;range, const MutableImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a6f6d5ce081e60f4071e82aad2397bfcf</anchor>
      <arglist>(const Range2Di &amp;range, BufferImage2D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage2D</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a1c62bf2967b1fff1d18bdc93f528d3d8</anchor>
      <arglist>(const Range2Di &amp;range, BufferImage2D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>ae5a2005123eafb19fd724625a8ecfbe4</anchor>
      <arglist>(const Range2Di &amp;range, CompressedImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage2D</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>ad97c6aba6291ff281d17a59d7cf5cb1a</anchor>
      <arglist>(const Range2Di &amp;range, CompressedImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>ac084d9b735d82008e1cd912d40660790</anchor>
      <arglist>(const Range2Di &amp;range, const MutableCompressedImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a602b36395d5df491c93cf23f7ac60728</anchor>
      <arglist>(const Range2Di &amp;range, CompressedBufferImage2D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage2D</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a04c4a1138dc0ae492d1bdf7dab90231a</anchor>
      <arglist>(const Range2Di &amp;range, CompressedBufferImage2D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a8fd9f8012965d01395b8d7e1e1cf4a0a</anchor>
      <arglist>(TextureFormat internalFormat, const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a1f865f587f118567e9d333ff9e32b525</anchor>
      <arglist>(TextureFormat internalFormat, BufferImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>af9b7d0a4aae3608a6510d1fb9086634b</anchor>
      <arglist>(TextureFormat internalFormat, BufferImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>adc5e15a3d6787fec763a9571ba7b0d48</anchor>
      <arglist>(const CompressedImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a4fb98fa8e53c6ac3d7acf9a4de20a953</anchor>
      <arglist>(CompressedBufferImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>af3b020fdeb793de5ba58b82a8229b924</anchor>
      <arglist>(CompressedBufferImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a87f91e252ff54ef19f3c7241dfc55459</anchor>
      <arglist>(const Vector2i &amp;offset, const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>ac58d066be667205a04c9ea80b4185758</anchor>
      <arglist>(const Vector2i &amp;offset, BufferImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a1b45475d4baa4ca6dbefffb37585503a</anchor>
      <arglist>(const Vector2i &amp;offset, BufferImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a33084224dfebe69cd28a7084e458db2a</anchor>
      <arglist>(const Vector2i &amp;offset, const CompressedImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a5c264f434a4ed3d5bfb31a0e0addf9c7</anchor>
      <arglist>(const Vector2i &amp;offset, CompressedBufferImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>aa2541b04147f97df9bdd40c17530600f</anchor>
      <arglist>(const Vector2i &amp;offset, CompressedBufferImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a6664246b34ab87ba58cdf4835008c9d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a593270a78df0864715a0a159ca8101cf</anchor>
      <arglist>(const Vector2i &amp;offset, const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector2i</type>
      <name>maxSize</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a6da131d43648fb2078d0812e63a86ab5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector2i</type>
      <name>compressedBlockSize</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>ac99cf461553bb44e096407954b13af35</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>compressedBlockDataSize</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a17434d52ae1c93d7d1ea4c1993d76eab</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RectangleTexture</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1GL_1_1RectangleTexture.html</anchorfile>
      <anchor>a66cde1bbabd3d4483da5bfd701a14323</anchor>
      <arglist>(GLuint id, ObjectFlags flags={})</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1RectangleTexture" title="Usage">GL-RectangleTexture-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::Renderbuffer</name>
    <filename>classMagnum_1_1GL_1_1Renderbuffer.html</filename>
    <base>Magnum::GL::AbstractObject</base>
    <member kind="function">
      <type></type>
      <name>Renderbuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderbuffer.html</anchorfile>
      <anchor>a1706306842788ad23ac0ca5397fdcd0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Renderbuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderbuffer.html</anchorfile>
      <anchor>a7d2887e824e62b3c07f380bb0e753ec7</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Renderbuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderbuffer.html</anchorfile>
      <anchor>afaddc5d899f69ada1b81e5468cf6be2c</anchor>
      <arglist>(const Renderbuffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Renderbuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderbuffer.html</anchorfile>
      <anchor>adc91c0a428dd177782b94b8db068318b</anchor>
      <arglist>(Renderbuffer &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Renderbuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderbuffer.html</anchorfile>
      <anchor>a16d5530cbc6acf62c4488a61f506a22b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Renderbuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderbuffer.html</anchorfile>
      <anchor>a8aa5851e6e642ad5a25f3a9159fc2241</anchor>
      <arglist>(const Renderbuffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Renderbuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderbuffer.html</anchorfile>
      <anchor>a5b521b852a01a60e16246fb61eb8954e</anchor>
      <arglist>(Renderbuffer &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderbuffer.html</anchorfile>
      <anchor>a05fe3050ed23737397207fee88d9cb9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderbuffer.html</anchorfile>
      <anchor>ae1c83fd434853d23ab9ba86122869f36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderbuffer.html</anchorfile>
      <anchor>aefd6f457577e787c8fdc5800e8f34cfe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Renderbuffer &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderbuffer.html</anchorfile>
      <anchor>af86ab5e57522c2f8969e79b8b47d523d</anchor>
      <arglist>(const std::string &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Renderbuffer &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderbuffer.html</anchorfile>
      <anchor>a3b8d1d86ade4e6b0f24d306b958fe7f5</anchor>
      <arglist>(const char(&amp;label)[size])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStorage</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderbuffer.html</anchorfile>
      <anchor>afaf2264bc98bcca5599b2fcc594551c3</anchor>
      <arglist>(RenderbufferFormat internalFormat, const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStorageMultisample</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderbuffer.html</anchorfile>
      <anchor>a89b74f31420368b620c63e6ddbbad0e1</anchor>
      <arglist>(Int samples, RenderbufferFormat internalFormat, const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxSize</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderbuffer.html</anchorfile>
      <anchor>ac77c4a36e4e74ad472ab7ec5109be6a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxSamples</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderbuffer.html</anchorfile>
      <anchor>abc585b7e15cfe4dfd35ca59a86f2c8f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Renderbuffer</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderbuffer.html</anchorfile>
      <anchor>a7c084b88bdede0be7e2563c7ad2f71e9</anchor>
      <arglist>(GLuint id, ObjectFlags flags={})</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1Renderbuffer" title="Performance optimizations">GL-Renderbuffer-performance-optimizations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::Renderer</name>
    <filename>classMagnum_1_1GL_1_1Renderer.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>PolygonFacing</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>af83c4b42347c1f9a4b5fb56318af4eea</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="af83c4b42347c1f9a4b5fb56318af4eeaa5835bab1ade0060909e31a06af2e2cde">Front</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="af83c4b42347c1f9a4b5fb56318af4eeaa0557fa923dcee4d0f86b1409f5c2167f">Back</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="af83c4b42347c1f9a4b5fb56318af4eeaa8be41da9b58e32ece35a2b5751f6aeb9">FrontAndBack</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>af5ed7655c31326a82464a3856ce8adaa</anchor>
      <arglist>(Debug &amp;debug, Renderer::Error value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a4b42fb5b1eb68a0a42794f44ef20faf5</anchor>
      <arglist>(Debug &amp;debug, Renderer::ResetNotificationStrategy value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a41f92605fac305549dc1f4bdb6957fa7</anchor>
      <arglist>(Debug &amp;debug, Renderer::GraphicsResetStatus value)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Feature</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>aac87c961eb53921e17d66bbf146828ae</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aeaca2057d8cabd019c66599d583b2d392a">BlendAdvancedCoherent</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aea84e358c0cfad27b29c41c888167828f3">Blending</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aea754353eebf385a2b27a911c08f3a21a8">DebugOutput</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aea6bbee5ecbabad03dca096d64a8a18534">DebugOutputSynchronous</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aea0001d730ec06e6528bbdcbd9084c74ad">DepthClamp</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aea16704bc95ff0bd3291ba157e6f06e0ee">DepthTest</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aea5f53f71072ea59a25ea1e38ed78baa4b">Dithering</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aea5d38f487681199992492e86e0f406536">FaceCulling</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aeacf4e915b2cf983979e2c6372a4e6d9f4">FramebufferSrgb</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aea2435f99a7026a00f4326d7e758db8018">FramebufferSRGB</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aea1c7a8732a549e71eaf8d9c028b66b7c5">LogicOperation</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aeaf700a9560a1f9466894710793d64d28a">Multisampling</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aea0ac58d9a025260b3fee2d3fa3484336d">PolygonOffsetFill</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aeaad364373805413abc61172b2e330d8d9">PolygonOffsetLine</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aea54a7b2d52d3bb5f9a314551b6a224c57">PolygonOffsetPoint</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aeaef24c4936bda67d8de6ccab9770b84de">ProgramPointSize</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aea86e4d6e28a5b5ef8d4a3a0cac8ecc9ed">RasterizerDiscard</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aea5b3027805a75e72b6f14514d863d642c">SampleShading</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aeaa77e3a53fa44e4d967c93df46f5d820d">SeamlessCubeMapTexture</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aea0942d76ddbe5cf23a36a17b8501324aa">ScissorTest</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aac87c961eb53921e17d66bbf146828aeafb91927d3dded1a83eb78dd7725d7efc">StencilTest</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Hint</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a21184240cb5694a735208eb6d0bb959f</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a21184240cb5694a735208eb6d0bb959fad6026a84408fed42c5f1db8d19df1bd2">FragmentShaderDerivative</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a21184240cb5694a735208eb6d0bb959fa2dbe0dc786db7f87a39524d4571b02da">TextureCompression</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>HintMode</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>ae78af77a8afeb7324923e99523447161</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ae78af77a8afeb7324923e99523447161a90fd7fdf6f41406a75e5265b9583bb4e">Fastest</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ae78af77a8afeb7324923e99523447161a7dd754d7715f2ce24b4b153c4cd66c3a">Nicest</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ae78af77a8afeb7324923e99523447161a60a3629ef6a8f991f45d7a85f2458544">DontCare</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static Range1D</type>
      <name>lineWidthRange</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a1d00fe0ed5bf58ba77cb64dd22f3ae92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>enable</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>ae814cfce42bdc6ec2c2617bc1c2d5069</anchor>
      <arglist>(Feature feature)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>disable</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a8b352c857069643b5892bbcefcdf599f</anchor>
      <arglist>(Feature feature)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setFeature</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a6710e826c229a9513ebfe0463103bdde</anchor>
      <arglist>(Feature feature, bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setHint</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a4bab18f54baecdc4b6b1e95caf59cf9e</anchor>
      <arglist>(Hint target, HintMode mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setClearColor</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>ae043cc38748acae8facc6373621d2dbc</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setClearDepth</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a3edd004bf56f5eb2c5410b65eae9a560</anchor>
      <arglist>(Double depth)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setClearDepth</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a46bedb81e2b3ff9a57b3aa7669834299</anchor>
      <arglist>(Float depth)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setClearStencil</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a2ff34ed220871e4d1fa2bf21d4734063</anchor>
      <arglist>(Int stencil)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FrontFace</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a2c061f2fff85626937167418385c9f82</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a2c061f2fff85626937167418385c9f82a5a8821d3fbf32174429e2b28bc3b031b">CounterClockWise</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a2c061f2fff85626937167418385c9f82ad5a4d3410a83d1bcdf2ae918a53aabd6">ClockWise</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ProvokingVertex</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a7c62f31d59d75956405053157ab9e405</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7c62f31d59d75956405053157ab9e405affb1c6970bb6dfc3c38ff6a1fe5268e9">FirstVertexConvention</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7c62f31d59d75956405053157ab9e405a8cc96752640b5d7727a4383badf00713">LastVertexConvention</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PolygonMode</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a936dc72f8f47bfe567718261d0d123e5</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a936dc72f8f47bfe567718261d0d123e5adb3e3f51c9107e26c9bccf9a188ce2ed">Fill</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a936dc72f8f47bfe567718261d0d123e5a4803e6b9e63dabf04de980788d6a13c4">Line</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a936dc72f8f47bfe567718261d0d123e5a2a3cd5946cfd317eb99c3d32e35e2d4c">Point</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setFrontFace</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>ac81bb7fe770ecb18351eee8e4fd4734f</anchor>
      <arglist>(FrontFace mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setFaceCullingMode</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a9f312c16becbe52d6631c3d13adf7715</anchor>
      <arglist>(PolygonFacing mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setProvokingVertex</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>af8a935cf097537184fab7f3268a214b5</anchor>
      <arglist>(ProvokingVertex mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setPolygonMode</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a0c109e32248a65c6619d52cce7e73bea</anchor>
      <arglist>(PolygonMode mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setPolygonOffset</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>aec6549a4a4029e99291b237bb2180d40</anchor>
      <arglist>(Float factor, Float units)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setLineWidth</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a0d627309fdc37f89446cc10698d7e62f</anchor>
      <arglist>(Float width)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setPointSize</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a0c7a7ab3d64625b27c244f4cd983952e</anchor>
      <arglist>(Float size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMinSampleShading</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a7f50af9566c4a2cead73b3bb577cfc6f</anchor>
      <arglist>(Float value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setScissor</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a5838edb7902ae5e6ff90b685a5cf2bfa</anchor>
      <arglist>(const Range2Di &amp;rectangle)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StencilFunction</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a746227c3002a42d9effaa22279233a29</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a746227c3002a42d9effaa22279233a29a6e7b34fa59e1bd229b207892956dc41c">Never</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a746227c3002a42d9effaa22279233a29a68eec46437c384d8dad18d5464ebc35c">Always</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a746227c3002a42d9effaa22279233a29a1cfdf0e8d0c87a228c1f40d9bee7888b">Less</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a746227c3002a42d9effaa22279233a29aa4cbdbb6070a5abb35fc95ecf1e22c14">LessOrEqual</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a746227c3002a42d9effaa22279233a29af5f286e73bda105e538310b3190f75c5">Equal</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a746227c3002a42d9effaa22279233a29a19bb0af2c3c530538cb41aff7f235b96">NotEqual</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a746227c3002a42d9effaa22279233a29a6f2f0aefb3d22da0f3839453add5f937">GreaterOrEqual</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a746227c3002a42d9effaa22279233a29a8768a6821cd735aea4f5b0df88c1fc6a">Greater</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StencilOperation</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a22c98400ba06b7e94de99ce0ff428c3f</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a22c98400ba06b7e94de99ce0ff428c3fa02bce93bff905887ad2233110bf9c49e">Keep</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a22c98400ba06b7e94de99ce0ff428c3fad7ed4ee1df437474d005188535f74875">Zero</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a22c98400ba06b7e94de99ce0ff428c3fa0ebe6df8a3ac338e0512acc741823fdb">Replace</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a22c98400ba06b7e94de99ce0ff428c3fa6f15bdfa71aa83b0d197cad75757d580">Increment</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a22c98400ba06b7e94de99ce0ff428c3faaa91cb7f033b90dec9582dc5e9611732">IncrementWrap</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a22c98400ba06b7e94de99ce0ff428c3fa6182913ea7b5c02fe2773ea87177d4f9">Decrement</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a22c98400ba06b7e94de99ce0ff428c3fa6ec565c329385c8d59333abc6a1003d1">DecrementWrap</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a22c98400ba06b7e94de99ce0ff428c3fa9b8958acb7be504bb5f55f17c0eea366">Invert</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setStencilFunction</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a28bddb2f8985a897b9158cb978a88e3e</anchor>
      <arglist>(PolygonFacing facing, StencilFunction function, Int referenceValue, UnsignedInt mask)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setStencilFunction</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a84467b2171c1195e844c1bde1594458f</anchor>
      <arglist>(StencilFunction function, Int referenceValue, UnsignedInt mask)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setStencilOperation</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>abad16ed0e1a4ff9c0bd286e81e37b716</anchor>
      <arglist>(PolygonFacing facing, StencilOperation stencilFail, StencilOperation depthFail, StencilOperation depthPass)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setStencilOperation</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>af906ec5ad4eb1683f555e2b9638e7edc</anchor>
      <arglist>(StencilOperation stencilFail, StencilOperation depthFail, StencilOperation depthPass)</arglist>
    </member>
    <member kind="typedef">
      <type>StencilFunction</type>
      <name>DepthFunction</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a5fd8766b43ecc8864327a230a524ead6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDepthFunction</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a0cb2b7df13c5d53097ac54b38629c52d</anchor>
      <arglist>(DepthFunction function)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setColorMask</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>abf9f9bd9181f1f4bb5db5eab523531fc</anchor>
      <arglist>(GLboolean allowRed, GLboolean allowGreen, GLboolean allowBlue, GLboolean allowAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDepthMask</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a09a09f6f6e7e6346f5af08e7cc6ebf18</anchor>
      <arglist>(GLboolean allow)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setStencilMask</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>aa65661942dc87132f22ba00dfe30d450</anchor>
      <arglist>(PolygonFacing facing, UnsignedInt allowBits)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setStencilMask</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a2565611e5fe4966460b16839ae446349</anchor>
      <arglist>(UnsignedInt allowBits)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BlendEquation</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>aef456700b0c3416041ce33f03ccc456c</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456caec211f7c20af43e742bf2570c3cb84f9">Add</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456ca1d9baf077ee87921f57a8fe42d510b65">Subtract</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456cabd5458190996e76988cb2f27a820c685">ReverseSubtract</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456ca78d811e98514cd165dda532286610fd2">Min</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456ca6a061313d22e51e0f25b7cd4dc065233">Max</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456cae257376d913f3b53cbb4a9b19d770648">Multiply</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456ca2fc3359e12b2a9104121dcf04246f6a0">Screen</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456ca6b551379c3c0b59326abdaf3b4395bd3">Overlay</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456caf367cda25ead743bb0d2ab9c217e0b99">Darken</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456ca1371ecd5df513d77a001392435cf4d12">Lighten</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456caee9ea3fbc70cb0f07c7ec4c48712d900">ColorDodge</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456caa061fdf49738be2999f722b45661e825">ColorBurn</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456cad509708d332760c4dac5299aee3aa518">HardLight</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456ca0110233d77ea3a1b09b5a5a5e3e48ec3">SoftLight</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456ca28ed2ac6c29f64a3692c956004b8ff7a">Difference</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456ca25218e43e67f1b1c1c833bc48c7ca7bb">Exclusion</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456ca83b236e052d3ba2a6c01cd7be5046cdc">HslHue</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456caaf4674f2a4117022eddf768bcfb4ce91">HslSaturation</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456ca28a55c41463d8c364a951330e1a2ae90">HslColor</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="aef456700b0c3416041ce33f03ccc456ca68a144a811dfd282e5ad14a247c7ad78">HslLuminosity</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BlendFunction</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>ad49bbfcb32a2a66795902398c05a1807</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ad49bbfcb32a2a66795902398c05a1807ad7ed4ee1df437474d005188535f74875">Zero</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ad49bbfcb32a2a66795902398c05a1807a06c2cea18679d64399783748fa367bdd">One</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ad49bbfcb32a2a66795902398c05a1807aeb8eb99f8eea9079c0e76d5ce7301dd3">ConstantColor</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ad49bbfcb32a2a66795902398c05a1807a13ab8deb1c606ab17745354b4e92f43a">OneMinusConstantColor</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ad49bbfcb32a2a66795902398c05a1807a6f0229db491c3b01860363456dc57288">ConstantAlpha</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ad49bbfcb32a2a66795902398c05a1807a9a1874144125c69e93ec99f17e985e41">OneMinusConstantAlpha</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ad49bbfcb32a2a66795902398c05a1807a1901920023e2275becaae076a28b590a">SourceColor</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ad49bbfcb32a2a66795902398c05a1807a64f89315842022749884e9b7cdd83fb3">SecondSourceColor</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ad49bbfcb32a2a66795902398c05a1807a835824be5decf84a1823ba3a803b7fef">OneMinusSourceColor</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ad49bbfcb32a2a66795902398c05a1807a74e034becb3b0b5c760cd0d8faa152a1">OneMinusSecondSourceColor</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ad49bbfcb32a2a66795902398c05a1807a5660d86f4a66c824e699b26a51201a70">SourceAlpha</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ad49bbfcb32a2a66795902398c05a1807a8d2ffa2fdc89a05ab0bd151d79ae8a6a">SourceAlphaSaturate</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ad49bbfcb32a2a66795902398c05a1807a067bdd4969e200d4892204b371f9f68a">SecondSourceAlpha</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ad49bbfcb32a2a66795902398c05a1807aa1e6a89ebadf4a9ff9a6eaaac32dcd3e">OneMinusSourceAlpha</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ad49bbfcb32a2a66795902398c05a1807a8f641c1bb0e278d58aff95d55ec55456">OneMinusSecondSourceAlpha</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ad49bbfcb32a2a66795902398c05a1807ace2f1c6b2f0f03394c916d88e68157e5">DestinationColor</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ad49bbfcb32a2a66795902398c05a1807a769fa85c954e64b060b2aa3071fa65f8">OneMinusDestinationColor</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ad49bbfcb32a2a66795902398c05a1807a01b896b89509884af9544fec983ef271">DestinationAlpha</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="ad49bbfcb32a2a66795902398c05a1807afccdb697ecd743d6a2618b73d9fc53e8">OneMinusDestinationAlpha</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBlendEquation</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a494fa8fc96b3c75462b3a48e7fb7a31e</anchor>
      <arglist>(BlendEquation equation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBlendEquation</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a4d0fbf0a94dd255782747c9ee0f6b0fe</anchor>
      <arglist>(BlendEquation rgb, BlendEquation alpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBlendFunction</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>aa12c2441fd6a11d7197e944e9349564c</anchor>
      <arglist>(BlendFunction source, BlendFunction destination)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBlendFunction</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a2f533307c8b13331eecb9a23657e50a2</anchor>
      <arglist>(BlendFunction sourceRgb, BlendFunction destinationRgb, BlendFunction sourceAlpha, BlendFunction destinationAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBlendColor</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a3df1836803686cc6e8a533ceb846b046</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>blendBarrier</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a6617c386f5214f572061320675b03138</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LogicOperation</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a7874fa4042d2adabb713a5e2d0f2fbd4</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7874fa4042d2adabb713a5e2d0f2fbd4adc30bc0c7914db5918da4263fce93ad2">Clear</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7874fa4042d2adabb713a5e2d0f2fbd4a5d5b78699e57104f2fa03bbdf7b9197b">Set</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7874fa4042d2adabb713a5e2d0f2fbd4a5fb63579fc981698f97d55bfecb213ea">Copy</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7874fa4042d2adabb713a5e2d0f2fbd4ae7a387d9808b05131e4906e7655a33a0">CopyInverted</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7874fa4042d2adabb713a5e2d0f2fbd4a35721c181ec6a9cca6cdb99dd844d07b">Noop</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7874fa4042d2adabb713a5e2d0f2fbd4a9b8958acb7be504bb5f55f17c0eea366">Invert</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7874fa4042d2adabb713a5e2d0f2fbd4ac33315685a0cba3ce53be378b3c7874b">And</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7874fa4042d2adabb713a5e2d0f2fbd4a287b07d4ecc112d0a742eba7d4c845bc">AndReverse</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7874fa4042d2adabb713a5e2d0f2fbd4adf0344a044e102673403a03fe8e83d8d">AndInverted</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7874fa4042d2adabb713a5e2d0f2fbd4ad39e2d62791eb0c18e0bb54315180049">Nand</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7874fa4042d2adabb713a5e2d0f2fbd4a3a2d5fe857d8f9541136a124c2edec6c">Or</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7874fa4042d2adabb713a5e2d0f2fbd4aabbaa132814b3deb687143a873ab3100">OrReverse</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7874fa4042d2adabb713a5e2d0f2fbd4abf95e9e38b3918a85a27125fff7e47ea">OrInverted</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7874fa4042d2adabb713a5e2d0f2fbd4a5f61fcb6e17f7a46a46a47c7977c90c1">Nor</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7874fa4042d2adabb713a5e2d0f2fbd4a76feb79109026728a20736a8c6504548">Xor</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7874fa4042d2adabb713a5e2d0f2fbd4a7ec6afd15884879155163f16bd361350">Equivalence</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setLogicOperation</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a286e37393bdab9aea1eba62cd95c0a93</anchor>
      <arglist>(LogicOperation operation)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MemoryBarrier</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a8804c5a664fd768bd43674910ddf410e</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a8804c5a664fd768bd43674910ddf410ea9c1e37497b1150cf1a57a141d327f119">VertexAttributeArray</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a8804c5a664fd768bd43674910ddf410ea3726aa2adc65a493586528ddbd070204">ElementArray</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a8804c5a664fd768bd43674910ddf410eaf19516d11f2946f894070e92fcb56b6d">Uniform</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a8804c5a664fd768bd43674910ddf410ea3a41a29ef811be6590023852674ce727">TextureFetch</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a8804c5a664fd768bd43674910ddf410ea24faf38819ef9ddb4fc2f5862023d07e">ShaderImageAccess</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a8804c5a664fd768bd43674910ddf410eaee97be03cb04119af45014d815621ce1">Command</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a8804c5a664fd768bd43674910ddf410ea231358dbe55a68ad269e1d263d514e54">PixelBuffer</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a8804c5a664fd768bd43674910ddf410ea9543f643a50bea52d5ddfd485c0d2d05">TextureUpdate</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a8804c5a664fd768bd43674910ddf410ea20639e7aec243042a146df0126031fe2">BufferUpdate</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a8804c5a664fd768bd43674910ddf410ea42badd9e49002a3cefeaaf28867add83">Framebuffer</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a8804c5a664fd768bd43674910ddf410eaf42c5721f003b0657f081141043576f6">TransformFeedback</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a8804c5a664fd768bd43674910ddf410ea718568e47d2de4af4d51fc1114cb3583">AtomicCounter</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a8804c5a664fd768bd43674910ddf410ea63d204f04170f5bbf958083589f6572f">ShaderStorage</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; MemoryBarrier &gt;</type>
      <name>MemoryBarriers</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a815c753f2989e3ec799f300e94891393</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>flush</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>aeaaeda69a942adf60189a8f5b4a57890</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>finish</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a521b17cf395e9a0911a478d5c74a2e51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMemoryBarrier</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a270329e7ff0ae1ff3dd9212b5b668f2e</anchor>
      <arglist>(MemoryBarriers barriers)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMemoryBarrierByRegion</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a807300a47315867574a5d1d4ff5ee68a</anchor>
      <arglist>(MemoryBarriers barriers)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTextureBarrier</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a1e504720a722d1e28b21c0cf6b261530</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Error</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a9b8a03def669ce2ed624b361b9587e25</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a9b8a03def669ce2ed624b361b9587e25a70a47cae4eb221930f2663fd244369ea">NoError</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a9b8a03def669ce2ed624b361b9587e25abaf0777e3144a52d6fd69816f4ac22c8">InvalidEnum</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a9b8a03def669ce2ed624b361b9587e25a223e81e8afa42c41346a6696560ecc7b">InvalidValue</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a9b8a03def669ce2ed624b361b9587e25a1cd5ecce6fe138df5c3f7e8854a1a66d">InvalidOperation</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a9b8a03def669ce2ed624b361b9587e25a6db2cf069be94db4aef203851a04dfc5">InvalidFramebufferOperation</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a9b8a03def669ce2ed624b361b9587e25ab498327feeb51430af73e07deac268fd">OutOfMemory</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a9b8a03def669ce2ed624b361b9587e25a4ad9b4998eb87ae379db3fd52afd3075">StackUnderflow</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a9b8a03def669ce2ed624b361b9587e25a84d7dc19766c446f5e4084e8fce87f82">StackOverflow</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResetNotificationStrategy</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a503dad2f30212da816c3df8daaab88b9</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a503dad2f30212da816c3df8daaab88b9ac09912f69d7a5dc956fc096d47af37f8">NoResetNotification</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a503dad2f30212da816c3df8daaab88b9a9f11bc17e2495cd2799702f8bb0a3578">LoseContextOnReset</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GraphicsResetStatus</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a7f6b805b87763301b07b818084524056</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7f6b805b87763301b07b818084524056a70a47cae4eb221930f2663fd244369ea">NoError</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7f6b805b87763301b07b818084524056aa2b79ca50aa8753c550240352a2e4a3d">GuiltyContextReset</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7f6b805b87763301b07b818084524056ad20617a60ae9fd5eb4df3da499e2ca44">InnocentContextReset</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Renderer.html" anchor="a7f6b805b87763301b07b818084524056a6db42cace88a4f364ea72b5351a8294a">UnknownContextReset</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static Error</type>
      <name>error</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a0fed97c7c104a68b850f6a73ffca39ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ResetNotificationStrategy</type>
      <name>resetNotificationStrategy</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a75563c0caa6127c1f01f0c4aa39e87fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphicsResetStatus</type>
      <name>graphicsResetStatus</name>
      <anchorfile>classMagnum_1_1GL_1_1Renderer.html</anchorfile>
      <anchor>a543fa006132a7604f609d5c4e63e3b61</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::SampleQuery</name>
    <filename>classMagnum_1_1GL_1_1SampleQuery.html</filename>
    <base>Magnum::GL::AbstractQuery</base>
    <member kind="enumeration">
      <type></type>
      <name>Target</name>
      <anchorfile>classMagnum_1_1GL_1_1SampleQuery.html</anchorfile>
      <anchor>ab2d5670bd7df56e3d7a98410014e210c</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1SampleQuery.html" anchor="ab2d5670bd7df56e3d7a98410014e210ca54b43ab4bcabef00ca9685071f9f7ca9">SamplesPassed</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1SampleQuery.html" anchor="ab2d5670bd7df56e3d7a98410014e210cad9d4f2fa1ac91914ea2db06fd5a16dd1">AnySamplesPassed</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1SampleQuery.html" anchor="ab2d5670bd7df56e3d7a98410014e210ca7394e2930777769fd60c01b34213051a">AnySamplesPassedConservative</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ConditionalRenderMode</name>
      <anchorfile>classMagnum_1_1GL_1_1SampleQuery.html</anchorfile>
      <anchor>a0dd792b73588bf97a0e9d7e1049cb5ed</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1SampleQuery.html" anchor="a0dd792b73588bf97a0e9d7e1049cb5eda0f68101772bd5397ef8eb1b632798652">Wait</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1SampleQuery.html" anchor="a0dd792b73588bf97a0e9d7e1049cb5edae7a55c6ed1939617537247d7dba3fce7">WaitInverted</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1SampleQuery.html" anchor="a0dd792b73588bf97a0e9d7e1049cb5edaa79651554c2676976f6848a999d84aac">NoWait</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1SampleQuery.html" anchor="a0dd792b73588bf97a0e9d7e1049cb5eda48921ec2c5731edb34e04236d142ddf1">NoWaitInverted</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1SampleQuery.html" anchor="a0dd792b73588bf97a0e9d7e1049cb5eda4c6501c4d8976d9221a388263f903b5e">ByRegionWait</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1SampleQuery.html" anchor="a0dd792b73588bf97a0e9d7e1049cb5eda2e36dc1aa2f73d40cdecd959a5c7f4c6">ByRegionWaitInverted</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1SampleQuery.html" anchor="a0dd792b73588bf97a0e9d7e1049cb5eda1b8df86cdda06c9edf4923bc2018092b">ByRegionNoWait</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1SampleQuery.html" anchor="a0dd792b73588bf97a0e9d7e1049cb5eda21e387e80478d49286efae1aed6f202c">ByRegionNoWaitInverted</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>SampleQuery</name>
      <anchorfile>classMagnum_1_1GL_1_1SampleQuery.html</anchorfile>
      <anchor>a74d03f558572079de29c8c34e481cf0c</anchor>
      <arglist>(Target target)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SampleQuery</name>
      <anchorfile>classMagnum_1_1GL_1_1SampleQuery.html</anchorfile>
      <anchor>aecef0bb9ec63ae0e3ad75b9a5008b142</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SampleQuery</name>
      <anchorfile>classMagnum_1_1GL_1_1SampleQuery.html</anchorfile>
      <anchor>aa3d8fe7680fefbc631300f0a9d36972c</anchor>
      <arglist>(const SampleQuery &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SampleQuery</name>
      <anchorfile>classMagnum_1_1GL_1_1SampleQuery.html</anchorfile>
      <anchor>ab7d5507e78cf95780cb61c0bf74a32c3</anchor>
      <arglist>(SampleQuery &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>SampleQuery &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1SampleQuery.html</anchorfile>
      <anchor>abf309b753480b333c677919a15e8abde</anchor>
      <arglist>(const SampleQuery &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>SampleQuery &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1SampleQuery.html</anchorfile>
      <anchor>a5180f010a16656eaedf5f10a047d4a76</anchor>
      <arglist>(SampleQuery &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginConditionalRender</name>
      <anchorfile>classMagnum_1_1GL_1_1SampleQuery.html</anchorfile>
      <anchor>a8a1105b991ef82be0b66ae9d470894a9</anchor>
      <arglist>(ConditionalRenderMode mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endConditionalRender</name>
      <anchorfile>classMagnum_1_1GL_1_1SampleQuery.html</anchorfile>
      <anchor>a305243f0cf8f3b2e3ea037f805b74cd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SampleQuery</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1GL_1_1SampleQuery.html</anchorfile>
      <anchor>a80d3100b4d8f8f1be09fae0bd28f8700</anchor>
      <arglist>(GLuint id, Target target, ObjectFlags flags={})</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::Sampler</name>
    <filename>classMagnum_1_1GL_1_1Sampler.html</filename>
    <member kind="function" static="yes">
      <type>static Float</type>
      <name>maxMaxAnisotropy</name>
      <anchorfile>classMagnum_1_1GL_1_1Sampler.html</anchorfile>
      <anchor>ad970252af23fefb9e36357d29d88d3f2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::Shader</name>
    <filename>classMagnum_1_1GL_1_1Shader.html</filename>
    <base>Magnum::GL::AbstractObject</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a30fc73b772ae60f7982be962ff27d9d9</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1Shader.html" anchor="a30fc73b772ae60f7982be962ff27d9d9ab22b929ba52471a02d18bb3a4e4472e6">Vertex</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Shader.html" anchor="a30fc73b772ae60f7982be962ff27d9d9a91a08ad964ef35c89ae69cd4176cfb4a">TessellationControl</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Shader.html" anchor="a30fc73b772ae60f7982be962ff27d9d9a85a5d743bd284736223e3c1e95c6b952">TessellationEvaluation</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Shader.html" anchor="a30fc73b772ae60f7982be962ff27d9d9ad9c6333623e6357515fcbf17be806273">Geometry</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Shader.html" anchor="a30fc73b772ae60f7982be962ff27d9d9aa623a8d0366bf079411aa30be45b2d10">Compute</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1Shader.html" anchor="a30fc73b772ae60f7982be962ff27d9d9a37d01b98065725fe3a1d30acf3a0064a">Fragment</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Shader</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>ac0dbf32ed3c338d7bdf8305b60921b3d</anchor>
      <arglist>(Version version, Type type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shader</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a769abc4b71a121bacd1a21578fe4ae2f</anchor>
      <arglist>(const Shader &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shader</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>ae0b8a132112423e0fd70568eabcfa488</anchor>
      <arglist>(Shader &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Shader</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>aa7fbb2c30b146410e42e046151a29642</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shader &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a3a6bb5919a381a54dcf639da58a0c0e2</anchor>
      <arglist>(const Shader &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Shader &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a530f5cd08a7d99bf430b72f844269044</anchor>
      <arglist>(Shader &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>ac2e57eaafb3ccf4a7ee9203f727879ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a7e58c8b5a8e294d36c0a26cf65dd3e54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Shader &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a7052138c7f82bee82a3020b2c2de6263</anchor>
      <arglist>(const std::string &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Shader &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a5f6f6ccb4bd53f3b1e8c13fd95693af3</anchor>
      <arglist>(const char(&amp;label)[size])</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>ab0f72ae899a9415c864d1937ad072cd8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>sources</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a583231b821c2b5345872654e443a295b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Shader &amp;</type>
      <name>addSource</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a80e4f0be9e9a34dcc497ae7d7354f38e</anchor>
      <arglist>(std::string source)</arglist>
    </member>
    <member kind="function">
      <type>Shader &amp;</type>
      <name>addFile</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a6957c607482951d2afe7818287fe5cf3</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compile</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a8f0547a52e10574fdbca7cf0a6352c19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxVertexOutputComponents</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a5ba52861006fef8ff9344ce9bd474cf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxTessellationControlInputComponents</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a36b6b34e7d4774a5061fad6133edb439</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxTessellationControlOutputComponents</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>aad824be426289e9d102d0d51d087c6d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxTessellationControlTotalOutputComponents</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a29a59f83cf5376dc93ae923edd486039</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxTessellationEvaluationInputComponents</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a2528743f503fd0fd7c55212d871268dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxTessellationEvaluationOutputComponents</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>afa9fc5609d4c82d85c5597b28dd63a2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxGeometryInputComponents</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>acf179abd679a0155bc14db09146dee29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxGeometryOutputComponents</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>aea639c0f85172b5a0108892a47f6c1fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxGeometryTotalOutputComponents</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a6f6e99d2f71ebc12d9b59cd290326755</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxFragmentInputComponents</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a80e78a6869789e77abb575672725b434</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxUniformComponents</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a6e15053c0a5b28d323afe73d9bc96133</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxAtomicCounterBuffers</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>adb50479e512fe77c05aa374079d38797</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxCombinedAtomicCounterBuffers</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a02fbc178521e9cac13bd81649084e2bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxAtomicCounters</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>af26953fb21d5ee591ec3019f03bafa63</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxCombinedAtomicCounters</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a7c5b3fdbf324a7fad049d964febcf247</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxImageUniforms</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>add7690d10552e771f37a476832faf552</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxCombinedImageUniforms</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>abaf309dad829f86a0e6de939dbb4dc5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxShaderStorageBlocks</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a3e237b47b8e55c5ba043a926fa8534f9</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxCombinedShaderStorageBlocks</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>ad2e502dcd7672a0723214be6623375cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxTextureImageUnits</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a39010d24dc633fb071fc37e0bdd0c3fe</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxCombinedTextureImageUnits</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>ab3e89c53e79083289191f2b3da3e292e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxUniformBlocks</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>aee182da4e1e2f9e6e777f772fe4dcb92</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxCombinedUniformBlocks</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a3e246aaa434089dbc0ec896dd2506d50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxCombinedUniformComponents</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>abf62a96211d8402225342656dbdc7f63</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>compile</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a1bbdc698be3f3fbe288e3c7062692f84</anchor>
      <arglist>(std::initializer_list&lt; Containers::Reference&lt; Shader &gt;&gt; shaders)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1GL_1_1Shader.html</anchorfile>
      <anchor>a7ade40fd2de1c917757f97dbd6c5ab11</anchor>
      <arglist>(Debug &amp;debug, Shader::Type value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1Shader" title="Performance optimizations">GL-Shader-performance-optimizations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::Texture</name>
    <filename>classMagnum_1_1GL_1_1Texture.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::GL::AbstractTexture</base>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>af1d7bb0e7a587492b266c2cbc2ea986aa514cb35aa815831ef6f22ecb46b559af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>af1d7bb0e7a587492b266c2cbc2ea986aa514cb35aa815831ef6f22ecb46b559af</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Texture</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a9b891860a813ff8635a59d255005a95a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Texture</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>adb7efbf43c45ccf6771a3b0a502c8f73</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Texture</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a9269b2dd0d2702b3aaa9361d900689a5</anchor>
      <arglist>(const Texture&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Texture</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>af58beed8450892c97fa8656d5e2d649b</anchor>
      <arglist>(Texture&lt; dimensions &gt; &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a01a7c3ee7a162762185328c9e476e81a</anchor>
      <arglist>(const Texture&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a8c1cece1db1999d149f939a151a6bf57</anchor>
      <arglist>(Texture&lt; dimensions &gt; &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a6db159283a62f9e6919aa01d54da0e60</anchor>
      <arglist>(Int imageUnit, Int level, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a11b0e7c1d220e10445b513aac9f0daea</anchor>
      <arglist>(Int imageUnit, Int level, Int layer, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImageLayered</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a56fe5984fe4e589cfa2b387857b69a37</anchor>
      <arglist>(Int imageUnit, Int level, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setBaseLevel</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a1d0475b3c245a9d86e7b2c489c5a8353</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMaxLevel</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a31461f990ff2980eb59792323cc07c9d</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMinificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a13b90348d30ac672b58cac7e00e863f9</anchor>
      <arglist>(SamplerFilter filter, SamplerMipmap mipmap=SamplerMipmap::Base)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMinificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a9747a716602dde369d323ab428985670</anchor>
      <arglist>(Magnum::SamplerFilter filter, Magnum::SamplerMipmap mipmap=Magnum::SamplerMipmap::Base)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMagnificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a9d139af52629631bccf0d5ef7bbefc52</anchor>
      <arglist>(SamplerFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMagnificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a8fab22c5419a9ed476f34d38016094e3</anchor>
      <arglist>(Magnum::SamplerFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMinLod</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a0a01d04ebc16a406bbf0638e4931659e</anchor>
      <arglist>(Float lod)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMaxLod</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>ae022ea004cf90424e09db2a223fedd54</anchor>
      <arglist>(Float lod)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setLodBias</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a02cc1d55073cd58de0cc1cbf1804a7fd</anchor>
      <arglist>(Float bias)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setWrapping</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a0500782fb95e20bca856b6ed2f4cc255</anchor>
      <arglist>(const Array&lt; dimensions, SamplerWrapping &gt; &amp;wrapping)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setWrapping</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a1be6072464258a12337fa2373342fcf5</anchor>
      <arglist>(const Array&lt; dimensions, Magnum::SamplerWrapping &gt; &amp;wrapping)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>af731753579b3c11430defd25fb599639</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a1d1f24277f134189646e65a21bc5e74d</anchor>
      <arglist>(const Vector4ui &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a2dcf7937991f955b1a970462c3f9a9d6</anchor>
      <arglist>(const Vector4i &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMaxAnisotropy</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a857fb8c57f68c77e5c93808c632ab901</anchor>
      <arglist>(Float anisotropy)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setSrgbDecode</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a76815a9c8ba88c8e46b8fa4730451c27</anchor>
      <arglist>(bool decode)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setSRGBDecode</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>ab8795730f84df8b1c54682b13213f20e</anchor>
      <arglist>(bool decode)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setSwizzle</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a3a2f9a1f3e33dd64d86e5c6931426efd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompareMode</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>aa1940ba0e91e18c40ec1f71dceded45c</anchor>
      <arglist>(SamplerCompareMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompareFunction</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a1f8ed8e67d6e695ee95f63c36504b144</anchor>
      <arglist>(SamplerCompareFunction function)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setDepthStencilMode</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>aeba6984d1ebf3ac89e55613de6388867</anchor>
      <arglist>(SamplerDepthStencilMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setStorage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a77f4822b1023b22d70d04cb5f2684c56</anchor>
      <arglist>(Int levels, TextureFormat internalFormat, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>imageSize</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>ad3701277ef093f71129ffd00b0bd0a74</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>ac3e66e40414dbf96bd609e7b8653346e</anchor>
      <arglist>(Int level, Image&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image&lt; dimensions &gt;</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a5a07c0e98128da6c777c0c518de2c8e8</anchor>
      <arglist>(Int level, Image&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a8bf7e7b4b0fce2a5a8f1ff2de0fdc1cc</anchor>
      <arglist>(Int level, const BasicMutableImageView&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a7068dafa28faab0b12316e920ca5442f</anchor>
      <arglist>(Int level, BufferImage&lt; dimensions &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage&lt; dimensions &gt;</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>ae6f02e78f2c99e5c415fa0c5454631d0</anchor>
      <arglist>(Int level, BufferImage&lt; dimensions &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>aea9014e7bb009be9a43ca4c8deae5864</anchor>
      <arglist>(Int level, CompressedImage&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage&lt; dimensions &gt;</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a8153fd9d12bf5406c729e6a7d3114c4a</anchor>
      <arglist>(Int level, CompressedImage&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a6a785410fa3ecc70559f557d2d97ddc0</anchor>
      <arglist>(Int level, const BasicMutableCompressedImageView&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>af314a47b45f61d6a7653d7109c16e4ba</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage&lt; dimensions &gt;</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>ad3ad7b47694f192f3b4984964311647d</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a1c137d45443f51b628f26fab2af92b43</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, Image&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image&lt; dimensions &gt;</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>af0f8c31d6861dd977d09bcdaefd3efde</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, Image&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a81f3734de35b6324d29eb4dc50a594fc</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, const BasicMutableImageView&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>ad21fce402fab6dd1f07a5a92a2315c40</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, BufferImage&lt; dimensions &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage&lt; dimensions &gt;</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>aa16c8bdacd9dfb905a9ddeaac70958eb</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, BufferImage&lt; dimensions &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a88b68f888dc3a9f972da43de4ed35e19</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, CompressedImage&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage&lt; dimensions &gt;</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a92b896c3cda4cb6f62c7b697bc530731</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, CompressedImage&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a9985b43ce1b0a5adcd3f738bcd2fc625</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, const BasicMutableCompressedImageView&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a3f7b6d55c4d166f6a2917c98aaed2365</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, CompressedBufferImage&lt; dimensions &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage&lt; dimensions &gt;</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>af2a09f793bc3836865f27d9753a23fba</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, CompressedBufferImage&lt; dimensions &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a060cd5c0ce5d8e69dfd2f6fd746890c9</anchor>
      <arglist>(Int level, TextureFormat internalFormat, const BasicImageView&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a528d7b778cfde23294ba79f1b87438a5</anchor>
      <arglist>(Int level, TextureFormat internalFormat, BufferImage&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a7d586cc2e547227729fa2e63d5db2845</anchor>
      <arglist>(Int level, TextureFormat internalFormat, BufferImage&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a1a13087b41bf2dc1175fc2519148b231</anchor>
      <arglist>(Int level, const BasicCompressedImageView&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a28401742236deab8fa0a7995357a05b8</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a17a234cf3d109f8f5bfd2c1e143a14ba</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>ac78f469c4c2bd3b793f10ba8ba374055</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, const BasicImageView&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a07f87dbe913e144ecdb70a1121e2ca91</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, BufferImage&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a2ec952eccc74e027080a29c2be809782</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, BufferImage&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a61ba2d2fda25cb2480a230ab66d61d8e</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, const BasicCompressedImageView&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a650b662a00524c28c90a5c836ca3d3cc</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, CompressedBufferImage&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a82c801de19db3c22b867dbcd4ee4df2e</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, CompressedBufferImage&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>generateMipmap</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a7917e69afe4af2149b2780f12ba8c90d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>ab2b02df2afdd40b73fe883545702fd34</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>adc9ccdd441088101f41637fe6386c9ee</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>maxSize</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>aa73a617525fb75f124668e098a5923a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>compressedBlockSize</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a861ebbf408140db08e78f52d37a498f4</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>compressedBlockDataSize</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>af0e6b7bf0260943e2d040f90dc91f97e</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Texture&lt; dimensions &gt;</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1GL_1_1Texture.html</anchorfile>
      <anchor>a88eb81320bf6a5ad699659e53b6dff7b</anchor>
      <arglist>(GLuint id, ObjectFlags flags={})</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1Texture" title="Usage">GL-Texture-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::TextureArray</name>
    <filename>classMagnum_1_1GL_1_1TextureArray.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::GL::AbstractTexture</base>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a86566a1014aef95ee747666bbba0f684a0bd1caf6f03656dcb03eac048a264324</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a86566a1014aef95ee747666bbba0f684a0bd1caf6f03656dcb03eac048a264324</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextureArray</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a2a51d8f76f875041b0a36b42ad7d33e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextureArray</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a71a286e5a4cd28a45a6454e96cfa6dbb</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextureArray</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>aa70cdbd15d96d306939764c87e015669</anchor>
      <arglist>(const TextureArray&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextureArray</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a74ce8079a6544a8aedee745a60d40809</anchor>
      <arglist>(TextureArray&lt; dimensions &gt; &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>aaeb1637af474b4b429fe17671e8889f8</anchor>
      <arglist>(const TextureArray&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a41687ed138e958b5bfded9bad3f41ea2</anchor>
      <arglist>(TextureArray&lt; dimensions &gt; &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a23597cfb92133d6481dcf4909b46131e</anchor>
      <arglist>(Int imageUnit, Int level, Int layer, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImageLayered</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a9da08c99082b08dd165d3b652c38e6ba</anchor>
      <arglist>(Int imageUnit, Int level, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setBaseLevel</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a2542c48366f23a1a654fd22f2d254411</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setMaxLevel</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>ab11509dde42993eb924e833a04e7d376</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setMinificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a56f0f261cba18bcd1fd25610651da21a</anchor>
      <arglist>(SamplerFilter filter, SamplerMipmap mipmap=SamplerMipmap::Base)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setMinificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a2fa4f65d6312c45d52c6f3fb834404bc</anchor>
      <arglist>(Magnum::SamplerFilter filter, Magnum::SamplerMipmap mipmap=Magnum::SamplerMipmap::Base)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setMagnificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a2a7720190a1c3e6b09bacc38ebf3562d</anchor>
      <arglist>(SamplerFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setMagnificationFilter</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>aefed32e2f5ccd14e1cd06ff4755b21f9</anchor>
      <arglist>(Magnum::SamplerFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setMinLod</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a2b561871a21b9d5ce3faacca7dd2cd8d</anchor>
      <arglist>(Float lod)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setMaxLod</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>aa6b1c5ee2079eef5976365d8fee9e9a2</anchor>
      <arglist>(Float lod)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setLodBias</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a466dddff3c47a9692634d6317ed528f2</anchor>
      <arglist>(Float bias)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setWrapping</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a65c8ea40c2a8388f84a6fb1737868011</anchor>
      <arglist>(const Array&lt; dimensions, SamplerWrapping &gt; &amp;wrapping)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setWrapping</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>aae4eb3bb8c9d0e673084f15180e58f90</anchor>
      <arglist>(const Array&lt; dimensions, Magnum::SamplerWrapping &gt; &amp;wrapping)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>ac6f79f34f9f48924faefaa54b26efac1</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>ac7d0ea91b2642aa7440df2df41c5b395</anchor>
      <arglist>(const Vector4ui &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a3ff4c8e9bf0e9b1cc8f04d7ad7a07918</anchor>
      <arglist>(const Vector4i &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setMaxAnisotropy</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>af15ebcd41b402455e9cfad046caf6197</anchor>
      <arglist>(Float anisotropy)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setSrgbDecode</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>ac1655afb9106c579f417443f43bc0108</anchor>
      <arglist>(bool decode)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setSRGBDecode</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>ab652349f7195fb8e50d30aaad23379f3</anchor>
      <arglist>(bool decode)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setSwizzle</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>ac6dc83df7715e203654b16275f263fef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setCompareMode</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>ab2c153aedb7b9a333c9a55c6af2577ab</anchor>
      <arglist>(SamplerCompareMode mode)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setCompareFunction</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>abb86eda8fbb2999bdd88936aef5ac4fa</anchor>
      <arglist>(SamplerCompareFunction function)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setDepthStencilMode</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a5fa8c16ec859b50790fddd7e89f64206</anchor>
      <arglist>(SamplerDepthStencilMode mode)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setStorage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>aec8adb7971bd389552870a9c2a342c1c</anchor>
      <arglist>(Int levels, TextureFormat internalFormat, const VectorTypeFor&lt; dimensions+1, Int &gt; &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; dimensions+1, Int &gt;</type>
      <name>imageSize</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a1c2d799f4c509d10211f567f51b14a68</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a12a979b21585b383cebf8c49453af144</anchor>
      <arglist>(Int level, Image&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image&lt; dimensions+1 &gt;</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a253b82fe067778fa11ce517746c1e95f</anchor>
      <arglist>(Int level, Image&lt; dimensions+1 &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a48bd4d7fcd59f4e152bdece6a92dcff2</anchor>
      <arglist>(Int level, const BasicMutableImageView&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a3e3c5359561e45d3589ed7451c26de2d</anchor>
      <arglist>(Int level, BufferImage&lt; dimensions+1 &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage&lt; dimensions+1 &gt;</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>ab1954f98dd555a2162c533bd8eb57d4e</anchor>
      <arglist>(Int level, BufferImage&lt; dimensions+1 &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a2b5f2b63c32b258a8160c5f1c26510dc</anchor>
      <arglist>(Int level, CompressedImage&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage&lt; dimensions+1 &gt;</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a2d122741dbde27f30c4fc182046ae5b8</anchor>
      <arglist>(Int level, CompressedImage&lt; dimensions+1 &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a5452012a13cc30281edc01924e380985</anchor>
      <arglist>(Int level, const BasicMutableCompressedImageView&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a139c4d9c3dd1aae22891d71f41ad32be</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions+1 &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage&lt; dimensions+1 &gt;</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>af20c12f0227fd47a296c60a571bf2b6c</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions+1 &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>af3a71f58d9d30ca0ff73389cac31faec</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions+1, Int &gt; &amp;range, Image&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image&lt; dimensions+1 &gt;</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a282f00ad8895adfb34b4ac62cd0c96e8</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions+1, Int &gt; &amp;range, Image&lt; dimensions+1 &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>acc205931218cb362d9fcdcac1ee026e3</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions+1, Int &gt; &amp;range, const BasicMutableImageView&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a9cb92f968020015c940021c992dbb0e0</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions+1, Int &gt; &amp;range, BufferImage&lt; dimensions+1 &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage&lt; dimensions+1 &gt;</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a4c8543a535de1974cf861b1d88fcf38e</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions+1, Int &gt; &amp;range, BufferImage&lt; dimensions+1 &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a159f41acea38c52f766ddbab478d46ad</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions+1, Int &gt; &amp;range, CompressedImage&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage&lt; dimensions+1 &gt;</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>aa8d22c6e61c5ac8581846ae151417eeb</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions+1, Int &gt; &amp;range, CompressedImage&lt; dimensions+1 &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>adfaecb006ab1d7bee74b407fb3d2671b</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions+1, Int &gt; &amp;range, const BasicMutableCompressedImageView&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a4278371fa0651b8e8ec7b127626d3c2b</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions+1, Int &gt; &amp;range, CompressedBufferImage&lt; dimensions+1 &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage&lt; dimensions+1 &gt;</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>ae6e8aa00a515bdf3d86938e80003bc89</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions+1, Int &gt; &amp;range, CompressedBufferImage&lt; dimensions+1 &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a339bf896c21de1c6b07d92aaa7e50584</anchor>
      <arglist>(Int level, TextureFormat internalFormat, const BasicImageView&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a1aef63593c4855de1623cb201d258afc</anchor>
      <arglist>(Int level, TextureFormat internalFormat, BufferImage&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a33afcac112ebf110f6aaef5d1d5d3d79</anchor>
      <arglist>(Int level, TextureFormat internalFormat, BufferImage&lt; dimensions+1 &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>ac10fc011440230cc2da1e08590bcd713</anchor>
      <arglist>(Int level, const BasicCompressedImageView&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>ae5f4624cb397da68b1c664b96fbd4d18</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a39291c08b91870b0d9eb25111654898f</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions+1 &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>adf330871a73d4d8353b796a675e77842</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions+1, Int &gt; &amp;offset, const BasicImageView&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a200834fb4810763905eb5ca23d763983</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions+1, Int &gt; &amp;offset, BufferImage&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a47a73dd485c1752290312a508277201b</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions+1, Int &gt; &amp;offset, BufferImage&lt; dimensions+1 &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>afec0f200b1ac4e4553779050f02fd6d1</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions+1, Int &gt; &amp;offset, const BasicCompressedImageView&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>aee269e3497f3c86e3aa463298def6449</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions+1, Int &gt; &amp;offset, CompressedBufferImage&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>ab476d58059cf6651a88f8705f7896dfd</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions+1, Int &gt; &amp;offset, CompressedBufferImage&lt; dimensions+1 &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>generateMipmap</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a19e38cbee0b13c59eabb6a459a2307f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a24a379ddc7ff5f438f45837f3b80ff92</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateSubImage</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>aa1f6c540dc74727914399b56a2f06c5f</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions+1, Int &gt; &amp;offset, const VectorTypeFor&lt; dimensions+1, Int &gt; &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VectorTypeFor&lt; dimensions+1, Int &gt;</type>
      <name>maxSize</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a954d54151d32b9d3e950e696994ef47a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>compressedBlockSize</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a75d59659fbcb9d3b5bba761b0617329d</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>compressedBlockDataSize</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>a86d06362792a6e15bc1bdd79e1e34786</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TextureArray&lt; dimensions &gt;</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1GL_1_1TextureArray.html</anchorfile>
      <anchor>aafa2c06a7a18901f83e9001f3f9153e6</anchor>
      <arglist>(GLuint id, ObjectFlags flags={})</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1TextureArray" title="Usage">GL-TextureArray-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::TimeQuery</name>
    <filename>classMagnum_1_1GL_1_1TimeQuery.html</filename>
    <base>Magnum::GL::AbstractQuery</base>
    <member kind="enumeration">
      <type></type>
      <name>Target</name>
      <anchorfile>classMagnum_1_1GL_1_1TimeQuery.html</anchorfile>
      <anchor>a0bad252e601a7983ee20c444c5d2bb27</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1TimeQuery.html" anchor="a0bad252e601a7983ee20c444c5d2bb27abf99cf7e56562e0125e9a648597239f8">TimeElapsed</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1TimeQuery.html" anchor="a0bad252e601a7983ee20c444c5d2bb27aa3d5de3eac8bb00ae86fd1a1005f1500">Timestamp</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeQuery</name>
      <anchorfile>classMagnum_1_1GL_1_1TimeQuery.html</anchorfile>
      <anchor>a61745ddcf7cd5877afa0da05293f0972</anchor>
      <arglist>(Target target)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeQuery</name>
      <anchorfile>classMagnum_1_1GL_1_1TimeQuery.html</anchorfile>
      <anchor>a71906d6e2f356d9ee2242839d49259b8</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeQuery</name>
      <anchorfile>classMagnum_1_1GL_1_1TimeQuery.html</anchorfile>
      <anchor>ab089ae4f828a0125357b0deca9c2d0e5</anchor>
      <arglist>(const TimeQuery &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeQuery</name>
      <anchorfile>classMagnum_1_1GL_1_1TimeQuery.html</anchorfile>
      <anchor>a74524b367c5797264df9b12c1481b9ea</anchor>
      <arglist>(TimeQuery &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>TimeQuery &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1TimeQuery.html</anchorfile>
      <anchor>ad87b5a3cf5c31ffc2b727c5b325a2aa6</anchor>
      <arglist>(const TimeQuery &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TimeQuery &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1TimeQuery.html</anchorfile>
      <anchor>a4ad72a8601eef306c434140e9ed80bd1</anchor>
      <arglist>(TimeQuery &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timestamp</name>
      <anchorfile>classMagnum_1_1GL_1_1TimeQuery.html</anchorfile>
      <anchor>a023b772e5629156daefbd7921c615768</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimeQuery</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1GL_1_1TimeQuery.html</anchorfile>
      <anchor>a6d695b42aacb1d5fec0838b5efe473d3</anchor>
      <arglist>(GLuint id, Target target, ObjectFlags flags={})</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::GL::TransformFeedback</name>
    <filename>classMagnum_1_1GL_1_1TransformFeedback.html</filename>
    <base>Magnum::GL::AbstractObject</base>
    <member kind="enumeration">
      <type></type>
      <name>PrimitiveMode</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a96444440b26d6d3672c5dc39f30a06d8</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1GL_1_1TransformFeedback.html" anchor="a96444440b26d6d3672c5dc39f30a06d8a75dd5f1160a3f02b6fae89c54361a1b3">Points</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1TransformFeedback.html" anchor="a96444440b26d6d3672c5dc39f30a06d8aa0b0293a2db49f5f93c15a62e095c819">Lines</enumvalue>
      <enumvalue file="classMagnum_1_1GL_1_1TransformFeedback.html" anchor="a96444440b26d6d3672c5dc39f30a06d8a7ca66fdfaad3eb33fc65d7490178f856">Triangles</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>TransformFeedback</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>aa7789eea468ba295117d4f30a4d90b08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransformFeedback</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a3feac9a65b0471c417967af53d7ea6f2</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransformFeedback</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a2934277af124a64b7fc568a8bd3a5347</anchor>
      <arglist>(const TransformFeedback &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransformFeedback</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a986de6ad740d247b8f9c030301c12793</anchor>
      <arglist>(TransformFeedback &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TransformFeedback</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>ae22744ab1b0e9ad72825e7b4deb21e38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TransformFeedback &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a211efdb5c0646e88112acf22193e4eb4</anchor>
      <arglist>(const TransformFeedback &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TransformFeedback &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a4bb844086976e760c664282f18447788</anchor>
      <arglist>(TransformFeedback &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>ad09d61a65022de4d44cc17c448df320b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a7d1ffc98139f63985f07126f02ac910d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>adc6e68cb56a6018b839faf0c049530aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TransformFeedback &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a77dbd55999fcc7abdf50fa0c4f3e8218</anchor>
      <arglist>(const std::string &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>TransformFeedback &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a574ede6ecdedad75d6f420e1020e420f</anchor>
      <arglist>(const char(&amp;label)[size])</arglist>
    </member>
    <member kind="function">
      <type>TransformFeedback &amp;</type>
      <name>attachBuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a6d231905ebbf144262050bf4d978bdc1</anchor>
      <arglist>(UnsignedInt index, Buffer &amp;buffer, GLintptr offset, GLsizeiptr size)</arglist>
    </member>
    <member kind="function">
      <type>TransformFeedback &amp;</type>
      <name>attachBuffer</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a0425c940f4e3b0db6f95b3079b080943</anchor>
      <arglist>(UnsignedInt index, Buffer &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>TransformFeedback &amp;</type>
      <name>attachBuffers</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a4c1ba4eaaf2b86b114aaaf5c528818bf</anchor>
      <arglist>(UnsignedInt firstIndex, std::initializer_list&lt; std::tuple&lt; Buffer *, GLintptr, GLsizeiptr &gt;&gt; buffers)</arglist>
    </member>
    <member kind="function">
      <type>TransformFeedback &amp;</type>
      <name>attachBuffers</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a72b0e8ba028512363caefbc6eb7a57aa</anchor>
      <arglist>(UnsignedInt firstIndex, std::initializer_list&lt; Buffer * &gt; buffers)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a56b6c4ac45e2190912c55d889cf983d5</anchor>
      <arglist>(AbstractShaderProgram &amp;shader, PrimitiveMode mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pause</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>ac992ca0fe8be76259315febb3cedc5d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resume</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>af45c1d065061cd450ff60ba5f417ccac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a3f606b5577243ad63796019038f0cd02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxInterleavedComponents</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a7dd3006dc07195efb8b0010cfe9b02a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxSeparateAttributes</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>aaf44186954a711c8717df245f58b3fc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxSeparateComponents</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a652bdba6367694d5d559816cef913df9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxBuffers</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a6e9710caa5c0955384c30a0970fd2b14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxVertexStreams</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a4738c4a3282ad6963d31148a3c68de2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TransformFeedback</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1GL_1_1TransformFeedback.html</anchorfile>
      <anchor>a0ac71e50a8667a3791da28d02dd579cb</anchor>
      <arglist>(GLuint id, ObjectFlags flags={})</arglist>
    </member>
    <docanchor file="classMagnum_1_1GL_1_1TransformFeedback" title="Performance optimizations">GL-TransformFeedback-performance-optimizations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Image</name>
    <filename>classMagnum_1_1Image.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a624aed73954765aa9d76b8bbfc98f15fa026b7b79d571822eededa65f67114638</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a624aed73954765aa9d76b8bbfc98f15fa026b7b79d571822eededa65f67114638</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a9de314589d30396c4451b47d6f182743</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>acb5655643e72350cc4dcd83e7a54bf19</anchor>
      <arglist>(PixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>ab91c3509ee1d6ee74f96ca9810ad92f6</anchor>
      <arglist>(PixelStorage storage, PixelFormat format) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>ab557d2f26cd6defa7a701cee140c3b76</anchor>
      <arglist>(PixelFormat format) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a182216e6ab8d11ff19500d0c2cbf779b</anchor>
      <arglist>(PixelStorage storage, UnsignedInt format, UnsignedInt formatExtra, UnsignedInt pixelSize, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a561b33399ebaefde3284cd8aa75de251</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, UnsignedInt formatExtra, UnsignedInt pixelSize, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a7c8e67c82f52239e66c924ddad9eba26</anchor>
      <arglist>(PixelStorage storage, UnsignedInt format, UnsignedInt formatExtra, UnsignedInt pixelSize) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>ac1c8250080290f3557df2c545dfc6ceb</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, UnsignedInt formatExtra, UnsignedInt pixelSize) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>aa5be89763271246a55eeb47df9ed210f</anchor>
      <arglist>(PixelStorage storage, T format, U formatExtra, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>ad13084417715addbd14622f95fc76e92</anchor>
      <arglist>(PixelStorage storage, T format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a18311a520389f6906010c7445064a295</anchor>
      <arglist>(T format, U formatExtra, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a9152f9bb1fba681b3c4264f1ad5c655a</anchor>
      <arglist>(T format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a74d210c1392858245e8068119dc302ec</anchor>
      <arglist>(PixelStorage storage, T format, U formatExtra) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>ac897078ce3257af3c5102eb13353342f</anchor>
      <arglist>(T format, U formatExtra) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a5d328cef2d6dedb4709b5b1762685a8a</anchor>
      <arglist>(PixelStorage storage, T format) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>aaa09ca2e41c1e1ed27c64d99129785ce</anchor>
      <arglist>(T format) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a492707710297377a106202e54f365938</anchor>
      <arglist>(const Image&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a5fdfd4afc4e3a6e91ac42ce5b623b5e8</anchor>
      <arglist>(Image&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Image&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a3a131f7c0c1a9cbf9e55b0207c5097ec</anchor>
      <arglist>(const Image&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Image&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a92e4d762fb2256a269ab7141db7838bd</anchor>
      <arglist>(Image&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BasicMutableImageView&lt; dimensions &gt;</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a79c6f2502c38eea9d6ca10da7aec3159</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BasicImageView&lt; dimensions &gt;</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>abf75d77f42eef8840407fd4576e8336b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PixelStorage</type>
      <name>storage</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a2019333b577f01b22ec92da414302249</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PixelFormat</type>
      <name>format</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a31b79fec393c2efba4ccb86174e2623c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>formatExtra</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a065f663276625f3535f538fd91fbd73b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>pixelSize</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>ad63304e4745bdda3b1898aaa45ee657b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a37d53d5e069ad208088e0121fbcc1515</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; VectorTypeFor&lt; dimensions, std::size_t &gt;, VectorTypeFor&lt; dimensions, std::size_t &gt; &gt;</type>
      <name>dataProperties</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>aae5920049461cfe189a68b0200497726</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>ac91746e9a487130aaa789c57283d2b63</anchor>
      <arglist>() &amp;</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>aff212a898d56c40bf013628c9afc7202</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>aaaa7d2c9fee1f268e3fd8aa1e53ab9b8</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a339a528e0fb2fb75dba930fd3a3c1e06</anchor>
      <arglist>() const &amp;&amp;=delete</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a0e2fd4c4389ae9c10ff5bd9eed3ba20a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>aa74b0f1e3f6915eae3aa26355415383f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView&lt; dimensions+1, char &gt;</type>
      <name>pixels</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a2fa5831183fcd118cb3e4040a258e895</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView&lt; dimensions+1, const char &gt;</type>
      <name>pixels</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a608203a161cef0e2e2e79dc8287f83d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView&lt; dimensions, T &gt;</type>
      <name>pixels</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a9551102653cd6c275d04e4b77ff097ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView&lt; dimensions, const T &gt;</type>
      <name>pixels</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a22ff216a618ce4f1b5cfb56da432b8aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>ad3bdde891ad5f92d312c40b9151f8599</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classMagnum_1_1Image" title="Basic usage">Image-usage</docanchor>
    <docanchor file="classMagnum_1_1Image" title="Obtaining a view on pixel data">Image-pixel-views</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::ImageView</name>
    <filename>classMagnum_1_1ImageView.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>ae91ce080e231c0705fe9a84302321de8a26cd5807eb6fa0a94cf14d8153995ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>adfe5d6695cfb2bf72bc70425104dd6b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::conditional&lt; std::is_const&lt; T &gt;::value, const void, void &gt;::type</type>
      <name>ErasedType</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>abe5ec4937a11fb84fb3fa1b861434486</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>ae91ce080e231c0705fe9a84302321de8a26cd5807eb6fa0a94cf14d8153995ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>aa1b6192193bb993eed13d75083c79c5e</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; ErasedType &gt; data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>af485d18b4eb29775b973421b6d59704e</anchor>
      <arglist>(PixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; ErasedType &gt; data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a09251735d25915b3c90caa57c11b3511</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a5cd4e285d04bcf26fa0682866a49cb73</anchor>
      <arglist>(PixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a316f8b016dd26295e391d6be8af364a9</anchor>
      <arglist>(PixelStorage storage, UnsignedInt format, UnsignedInt formatExtra, UnsignedInt pixelSize, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; ErasedType &gt; data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>abf75019af70d3c5a4556b0d274756d24</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, UnsignedInt formatExtra, UnsignedInt pixelSize, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; ErasedType &gt; data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a25baf1e23384af907ed31418e1fe5a9e</anchor>
      <arglist>(PixelStorage storage, UnsignedInt format, UnsignedInt formatExtra, UnsignedInt pixelSize, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a2e593e679f0db4252b285cbb92becde9</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, UnsignedInt formatExtra, UnsignedInt pixelSize, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a03fdda770a6625062f482fac879377a8</anchor>
      <arglist>(PixelStorage storage, U format, V formatExtra, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; ErasedType &gt; data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a6f63f207ee0da9d8a815f75846d997e8</anchor>
      <arglist>(PixelStorage storage, U format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; ErasedType &gt; data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a9d5d514a07293390bbefe4f0e6e8ba62</anchor>
      <arglist>(U format, V formatExtra, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; ErasedType &gt; data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a891569eccb324264eaef0772b0626e4e</anchor>
      <arglist>(U format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; ErasedType &gt; data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>afcb1e42b1af026b18a18e0a3cbd2285a</anchor>
      <arglist>(PixelStorage storage, U format, V formatExtra, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>aef9e2c91ddc8295b5f50670aaf444b9f</anchor>
      <arglist>(PixelStorage storage, U format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a3d75499895de338d852acd827b02e44a</anchor>
      <arglist>(U format, V formatExtra, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a4b6dd42c8e002c1a7bec2d4437d1aa67</anchor>
      <arglist>(U format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>adf095a3cd4e4d3943873c3c5bf057db5</anchor>
      <arglist>(const ImageView&lt; dimensions, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PixelStorage</type>
      <name>storage</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>afb7cbb4cae2686c7ae407b065567292f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PixelFormat</type>
      <name>format</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a3633ff647c9c359861ac7bcfdcb98393</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>formatExtra</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a8a3bdbe489ed468be624da25b87963ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>pixelSize</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>aa2860f9031a1a2a7019d0ac5ef5342c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>ae4900ab401191dd8b0864b25930d620d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; VectorTypeFor&lt; dimensions, std::size_t &gt;, VectorTypeFor&lt; dimensions, std::size_t &gt; &gt;</type>
      <name>dataProperties</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a43d2c8481a40cf110baf5888788c00f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; Type &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a8912e449f976d0d8a6d67c775fb175d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const U *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a4db2c3ad6f957533553a3b188a8d20cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a34eabb7f51e1b2cfaf9bd59da830b706</anchor>
      <arglist>(Containers::ArrayView&lt; ErasedType &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView&lt; dimensions+1, Type &gt;</type>
      <name>pixels</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a13bedd03f65287197a040b32ac51ac7f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView&lt; dimensions, typename std::conditional&lt; std::is_const&lt; Type &gt;::value, typename std::add_const&lt; U &gt;::type, U &gt;::type &gt;</type>
      <name>pixels</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>adeb303dc779520049f45a997cb99e0f0</anchor>
      <arglist>() const</arglist>
    </member>
    <docanchor file="classMagnum_1_1ImageView" title="Basic usage">ImageView-usage</docanchor>
    <docanchor file="classMagnum_1_1ImageView" title="Data mutability">ImageView-mutable</docanchor>
    <docanchor file="classMagnum_1_1ImageView" title="Implementation-specific formats">ImageView-usage-implementation-specific</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::ImGuiIntegration::Context</name>
    <filename>classMagnum_1_1ImGuiIntegration_1_1Context.html</filename>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>a83d1808f9bce52874260251dfee4e6ba</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;windowSize, const Vector2i &amp;framebufferSize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>ae2ef6c96dca0671180497b61b379c83a</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>ac55344ed7b7fc465f42e38f4b5e557eb</anchor>
      <arglist>(ImGuiContext &amp;context, const Vector2 &amp;size, const Vector2i &amp;windowSize, const Vector2i &amp;framebufferSize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>ab77bae0278bc3728cce577ac5759759c</anchor>
      <arglist>(ImGuiContext &amp;context, const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>a24cfd4b00e8c78fb8d81d8682dd9a1de</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>a3b23c5172ccfe9f2a48ae68240b1b7db</anchor>
      <arglist>(const Context &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>a3afa24382486bbdb260235de4371a7d1</anchor>
      <arglist>(Context &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Context</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>a1f1def2849fb9c331eb4bf66ba0eede2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Context &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>a3198ad993b94fc8e58499a24c44fc779</anchor>
      <arglist>(const Context &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Context &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>ac29c50703c036d68032f133a65612af4</anchor>
      <arglist>(Context &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ImGuiContext *</type>
      <name>context</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>a5263d5f577418d5c44b006e91ec465fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ImGuiContext *</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>a02a58ec766b44fb00b0f762ff54fbea3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>relayout</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>a25e18ffcfd6008dab9d29049c55bfdc7</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;windowSize, const Vector2i &amp;framebufferSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>relayout</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>ac4b1103fabf85016556b1bbd64a9a5bd</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newFrame</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>a34bc622fceb5b34da42bb4034865e8a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawFrame</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>a70f0c9c332e841b927136c6426af2106</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handleMousePressEvent</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>a6544580827a811ff73313b6dd1c2f5c9</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handleMouseReleaseEvent</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>a087b39f38f5bc55f7401a4807e670aae</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handleMouseScrollEvent</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>a9b948defa0d5605e41acfdf52475d1ba</anchor>
      <arglist>(MouseScrollEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handleMouseMoveEvent</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>a093c45899e7ddb078cb094a574b54c81</anchor>
      <arglist>(MouseMoveEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handleKeyPressEvent</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>aeec3125987be76fec174655ea8dcea5c</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handleKeyReleaseEvent</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>ab0be2d187eae4314c58581b84f3a6e7b</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handleTextInputEvent</name>
      <anchorfile>classMagnum_1_1ImGuiIntegration_1_1Context.html</anchorfile>
      <anchor>aba1ce77adc1789f2fdcebe6d7813b4d7</anchor>
      <arglist>(TextInputEvent &amp;event)</arglist>
    </member>
    <docanchor file="classMagnum_1_1ImGuiIntegration_1_1Context" title="Usage">ImGuiIntegration-Context-usage</docanchor>
    <docanchor file="classMagnum_1_1ImGuiIntegration_1_1Context" title="Rendering">ImGuiIntegration-Context-usage-rendering</docanchor>
    <docanchor file="classMagnum_1_1ImGuiIntegration_1_1Context" title="Event handling">ImGuiIntegration-Context-usage-events</docanchor>
    <docanchor file="classMagnum_1_1ImGuiIntegration_1_1Context" title="Text input">ImGuiIntegration-Context-usage-text-input</docanchor>
    <docanchor file="classMagnum_1_1ImGuiIntegration_1_1Context" title="Loading custom fonts">ImGuiIntegration-Context-fonts</docanchor>
    <docanchor file="classMagnum_1_1ImGuiIntegration_1_1Context" title="DPI awareness">ImGuiIntegration-Context-dpi</docanchor>
    <docanchor file="classMagnum_1_1ImGuiIntegration_1_1Context" title="HiDPI fonts">ImGuiIntegration-Context-dpi-fonts</docanchor>
    <docanchor file="classMagnum_1_1ImGuiIntegration_1_1Context" title="Multiple contexts">ImGuiIntegration-Context-multiple-contexts</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Bezier</name>
    <filename>classMagnum_1_1Math_1_1Bezier.html</filename>
    <templarg>order</templarg>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <member kind="enumvalue">
      <name>Order</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a4774e6f204308797c1d9aa74e5c7c372a445d6fec9761733d428807f35142e5e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a4774e6f204308797c1d9aa74e5c7c372a14c6baf2b69659aec19dbf3f7ba62e43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>ae25ec557d5dee6e517e4db5bd43553cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Order</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a4774e6f204308797c1d9aa74e5c7c372a445d6fec9761733d428807f35142e5e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a4774e6f204308797c1d9aa74e5c7c372a14c6baf2b69659aec19dbf3f7ba62e43</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Bezier</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a1d6c92a2deccc4095df18c9f4b905e45</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Bezier</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a77d627eecfdd39d555ee6a5b883e2165</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Bezier</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a1a8f0f47a9f4756939df843c97bba05e</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Bezier</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a7efc2e4817c2eda9237b22f653232901</anchor>
      <arglist>(const Vector&lt; dimensions, T &gt; &amp;first, U... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Bezier</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>ae06e500bbd585b9b26bdfaf70e5fe47d</anchor>
      <arglist>(const Bezier&lt; order, dimensions, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Bezier</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a97bddf2ed032b0991ce13ac64221f5a6</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>ac9fa6c78041b8db6bf27093875083747</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; dimensions, T &gt; *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a6523b0be883d7d0dfe21dcba936451c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector&lt; dimensions, T &gt; *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a22e7415210a9de098dff5352eec8b03c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>af4a44730e226a27ade41713be89423bc</anchor>
      <arglist>(const Bezier&lt; order, dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a740decd640602ffcbeff59ba95fd09fc</anchor>
      <arglist>(const Bezier&lt; order, dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; dimensions, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>affad9a82f9b5fbbf53bf7836b7b1f2aa</anchor>
      <arglist>(std::size_t i)</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector&lt; dimensions, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a118d695ea920a7726f193614ba39ab13</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; dimensions, T &gt;</type>
      <name>value</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>af4f0872ef081462fb148660acb8c0e05</anchor>
      <arglist>(Float t) const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Bezier&lt; order, dimensions, T &gt;, Bezier&lt; order, dimensions, T &gt; &gt;</type>
      <name>subdivide</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>aa1f5ce13755de370c1c87470188c7c84</anchor>
      <arglist>(Float t) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Bezier&lt; order, dimensions, T &gt;</type>
      <name>fromCubicHermite</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>ab36143840d1f26bad201c341fd471a87</anchor>
      <arglist>(const CubicHermite&lt; VectorType &gt; &amp;a, const CubicHermite&lt; VectorType &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>ab1001276d3083c0d6d035c9e343c1c3c</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Bezier&lt; order, dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::BoolVector</name>
    <filename>classMagnum_1_1Math_1_1BoolVector.html</filename>
    <templarg>size</templarg>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ad43cfac37b674bed68ea964c859c91c1a1687d1927ae165da75b463cbb593afaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DataSize</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ad43cfac37b674bed68ea964c859c91c1a1a7ca87098d157b8f6e5f874301ccad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ad43cfac37b674bed68ea964c859c91c1a1687d1927ae165da75b463cbb593afaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DataSize</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ad43cfac37b674bed68ea964c859c91c1a1a7ca87098d157b8f6e5f874301ccad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BoolVector</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a5aedb24f182c55947dd77b5a71412570</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BoolVector</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>af6fb45b087c7175e6f7d8c282af9e8ce</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoolVector</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>aafc0cf95b7259bba289f7823ddab53ae</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BoolVector</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a25ea1a7ad197a44d95723680a7ab2384</anchor>
      <arglist>(UnsignedByte first, T... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoolVector</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a1ee5b3eb0414b0d5e41e8d9319a21fa6</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BoolVector</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a6136560a767709ac53cc836c63328a59</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BoolVector</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a32e0d0dd79dd34de89cd30ed5b0d9407</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a9a8566df74e806c251f8fa620c93e1f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedByte *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ad941981e7c128f15ca06c4dd2fbd7332</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const UnsignedByte *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a3b04b1691259ce1fe001f970582c8b48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a6ef644e93df29a37d3da4eebf1139a08</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt; &amp;</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ac0607188a716c624baa30ed44a5c735f</anchor>
      <arglist>(std::size_t i, bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a4826c2edde3a42d743038ae253fcd783</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a8292a7da3f1ab74667c4ee655292dbc0</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ad2e2f271fe2148b01fb3f82cd12cc58c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>all</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a85d0ab7ff56d7594e9d3ec7d400202dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>none</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a49d407193c1abce5f005939d7a5fc513</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>any</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a6c5d7b57ea3ac2a0b03d902836e144e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ad4e84e4ba2c021f6eac0e882425ca741</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator!</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>afcb151424bc10947f5a1c10d5f9e74ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ab4fabb0a2db04517c4f22fc9f358b4fc</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator &amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a353ec9869645a293dad68ca6f7969da1</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator &amp;&amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a59fc1338b42c90c64fc0de2b0233bde8</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>aadd51582e168a144e95fa9784a43e134</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>aaa584e4819e8aa52a8332997a79f84af</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator||</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a01f549325b2a2f11e7538ac53d806e35</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a712c1369f006c5c6939b1c1986a7556e</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>aa81df850f66d455d6b2c5546aacb56c7</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a05ecfedf1ed791f07d32b7d45d978432</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const BoolVector&lt; size &gt; &amp;value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Math_1_1BoolVector" title="Bit indexing">Math-BoolVector-indexing</docanchor>
    <docanchor file="classMagnum_1_1Math_1_1BoolVector" title="Boolean operations">Math-BoolVector-boolean</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Color3</name>
    <filename>classMagnum_1_1Math_1_1Color3.html</filename>
    <templarg>T</templarg>
    <base>Magnum::Math::Vector3</base>
    <member kind="typedef">
      <type>TypeTraits&lt; T &gt;::FloatingPointType</type>
      <name>FloatingPointType</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a86a0a40b43b75d5b79b96bcb8cfc4465</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::tuple&lt; Deg&lt; FloatingPointType &gt;, FloatingPointType, FloatingPointType &gt;</type>
      <name>Hsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a6cf345a849a99e6138cb7d5763c0f636</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a741ddcd548a07d332ec9eab16432980a</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a8b672f86b5f789f04f581d1394830a68</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a8ae83d7e3fbf51bf85eee05b60cc1047</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>aafb96a0def60bc6169f565c6565c5d5c</anchor>
      <arglist>(T rgb) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>aa051703cbe236f31bdebc0285d45edea</anchor>
      <arglist>(T r, T g, T b) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a757e4d7a08c4948a11d9b2f951342645</anchor>
      <arglist>(const Vector&lt; 3, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>ab8db848acaf2c503fb74f54eb2774504</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a7137df615641f011e6eb6d782355acae</anchor>
      <arglist>(const Vector&lt; 3, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ColorHsv&lt; FloatingPointType &gt;</type>
      <name>toHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a5d18fe79285510431b55dab09de1dd9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Deg&lt; FloatingPointType &gt;</type>
      <name>hue</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a2772846166d8dd42c3884166354d3918</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatingPointType</type>
      <name>saturation</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a6964d1866712d255ba134ab2f895cd6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatingPointType</type>
      <name>value</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a15bd6841f9bcb607eeb8d5176ef7fc8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; FloatingPointType &gt;</type>
      <name>toSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a93036f86b82faa4fa0eebf0093004bfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Integral &gt;</type>
      <name>toSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a68cd66a79ae9ea9360d84eb87427df14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>toSrgbInt</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>ab8973838f9133f44c97e3341ed8eddfb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; FloatingPointType &gt;</type>
      <name>toXyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>ae98d6399c74e2bce7d29783d3fccaecb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color3&lt; T &gt;</type>
      <name>red</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a7be92cdfd9820b995d17a919edff1b4c</anchor>
      <arglist>(T red=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color3&lt; T &gt;</type>
      <name>green</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a0f2c3b68a89395fdf84d5b3dcc684fb3</anchor>
      <arglist>(T green=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color3&lt; T &gt;</type>
      <name>blue</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a99d3728fd643515067dbff11465b1b2e</anchor>
      <arglist>(T blue=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color3&lt; T &gt;</type>
      <name>cyan</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a6c460f6e2a1774afa92e81c970728eee</anchor>
      <arglist>(T red=T(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color3&lt; T &gt;</type>
      <name>magenta</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a784887d433a871fbed66e83f37805fc8</anchor>
      <arglist>(T green=T(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color3&lt; T &gt;</type>
      <name>yellow</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>af61b7b73cdddc3e58dac3b7806f9b575</anchor>
      <arglist>(T blue=T(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; T &gt;</type>
      <name>fromHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a2d06c178f7b2f03f5a2d975e2588e601</anchor>
      <arglist>(const ColorHsv&lt; FloatingPointType &gt; &amp;hsv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; T &gt;</type>
      <name>fromHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>acb8828a8260e38cd9a3c52163c15b1bf</anchor>
      <arglist>(Deg&lt; FloatingPointType &gt; hue, FloatingPointType saturation, FloatingPointType value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; T &gt;</type>
      <name>fromSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>ad96e9d1d54d587cb94c1fee199c8ccfd</anchor>
      <arglist>(const Vector3&lt; FloatingPointType &gt; &amp;srgb)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; T &gt;</type>
      <name>fromSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>af7ce280a2514f8e974b59439af0081b6</anchor>
      <arglist>(const Vector3&lt; Integral &gt; &amp;srgb)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; T &gt;</type>
      <name>fromSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>aa1e4d7bcae3f3d61248d0b32eb079f53</anchor>
      <arglist>(UnsignedInt srgb)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; T &gt;</type>
      <name>fromXyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a63548a8d5b5b672b031e3a5cc4de74ef</anchor>
      <arglist>(const Vector3&lt; FloatingPointType &gt; &amp;xyz)</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>xyYToXyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a4fc7e7145d373b085fe34b3492b12b88</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;xyY)</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>xyzToXyY</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a95bff66ce9604939340d44686f857aa6</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;xyz)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Color3&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_rgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a3d234669d966a01ca22618dcd9dabc7e</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_srgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a411d16876bfb22e418e80ad779355b3e</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color3&lt; Float &gt;</type>
      <name>operator&quot;&quot;_rgbf</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>ad78e022530fcb6bdeb0baa17287a6492</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color3&lt; Float &gt;</type>
      <name>operator&quot;&quot;_srgbf</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a8ce737bc231dc4fb12acb250712a3693</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>afae5b383b9623a3b56c4fae43a16b9ca</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Color3&lt; UnsignedByte &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Color4</name>
    <filename>classMagnum_1_1Math_1_1Color4.html</filename>
    <templarg>T</templarg>
    <base>Magnum::Math::Vector4</base>
    <member kind="typedef">
      <type>Color3&lt; T &gt;::FloatingPointType</type>
      <name>FloatingPointType</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a5b3e32cd0f193133504ccef2dfb5dc61</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::tuple&lt; Deg&lt; FloatingPointType &gt;, FloatingPointType, FloatingPointType &gt;</type>
      <name>Hsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>abeef62268e3583126a95e558a79e1233</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a3e73d9d3abc4b033bbb38ee1ea642bab</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a9c5f1880e7062cf7e0027470aa1761f6</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a796009a7631e5d687e40ab9ef26b7b3d</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a99c1f739fab793c9e4c0f65255e28b3b</anchor>
      <arglist>(T rgb, T alpha=Implementation::fullChannel&lt; T &gt;()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a9317e9cebea34f140b4cb3662447d0c8</anchor>
      <arglist>(T r, T g, T b, T a=Implementation::fullChannel&lt; T &gt;()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a640e8d95a9faa7564c40597ada282ab4</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;rgb, T a=Implementation::fullChannel&lt; T &gt;()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a5803e017a8019fe2d7755166b99de4ae</anchor>
      <arglist>(const Vector&lt; 4, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>ae1417108d82b436e60166f28bd51a4dc</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a40b0075a9217c25fd7bfa32340a5a211</anchor>
      <arglist>(const Vector&lt; 4, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ColorHsv&lt; FloatingPointType &gt;</type>
      <name>toHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>aa4ece001536738f1acb2160d165ff2b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Deg&lt; FloatingPointType &gt;</type>
      <name>hue</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a04e818f657bcab9d064b2c5138edd438</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatingPointType</type>
      <name>saturation</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a5a4d833f266bb4a1ab6d8ff6e4c8ee27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatingPointType</type>
      <name>value</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a370619eb5a0910cb5eaed06fd4fce98b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4&lt; FloatingPointType &gt;</type>
      <name>toSrgbAlpha</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a01009d803817acaadcf5b045d417de3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4&lt; Integral &gt;</type>
      <name>toSrgbAlpha</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>aebc238e239975ebce4ac26f6a05950d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>toSrgbAlphaInt</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a19a310fd5718c1edd15c1110a1fa91eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; FloatingPointType &gt;</type>
      <name>toXyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a7339f6d4af8c0ce2d531cf78c572d890</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; T &gt;</type>
      <name>red</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a784b2314a5f960bb91e11baadccd8ca7</anchor>
      <arglist>(T red=Implementation::fullChannel&lt; T &gt;(), T alpha=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; T &gt;</type>
      <name>green</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a8a5429704f834f4375371e620109b4f8</anchor>
      <arglist>(T green=Implementation::fullChannel&lt; T &gt;(), T alpha=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; T &gt;</type>
      <name>blue</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>ae0ce831e82daa97a2a694c16ecb20d07</anchor>
      <arglist>(T blue=Implementation::fullChannel&lt; T &gt;(), T alpha=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; T &gt;</type>
      <name>cyan</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a489b6778ff29a17b4d8f60c0b9b4c97c</anchor>
      <arglist>(T red=T(0), T alpha=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; T &gt;</type>
      <name>magenta</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a14f58e1fcfdee9fc6a045e5a58570f3e</anchor>
      <arglist>(T green=T(0), T alpha=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; T &gt;</type>
      <name>yellow</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>af88b6d80684a9f068eed07133a48f0dc</anchor>
      <arglist>(T blue=T(0), T alpha=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; T &gt;</type>
      <name>fromHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a3ee58ac0c7e6dc617af4ebc00b4417b4</anchor>
      <arglist>(const ColorHsv&lt; FloatingPointType &gt; &amp;hsv, T a=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; T &gt;</type>
      <name>fromHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a83a5c010d34fe1f490406d757441c57d</anchor>
      <arglist>(Deg&lt; FloatingPointType &gt; hue, FloatingPointType saturation, FloatingPointType value, T alpha=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; T &gt;</type>
      <name>fromSrgbAlpha</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a84c259d66eac3166fa9134f8f15eb785</anchor>
      <arglist>(const Vector4&lt; FloatingPointType &gt; &amp;srgbAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; T &gt;</type>
      <name>fromSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a97b5b2df8675f86d199c56ada8be27b2</anchor>
      <arglist>(const Vector3&lt; FloatingPointType &gt; &amp;srgb, T a=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; T &gt;</type>
      <name>fromSrgbAlpha</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a66c193208074fe92e65243ee4e162f8b</anchor>
      <arglist>(const Vector4&lt; Integral &gt; &amp;srgbAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; T &gt;</type>
      <name>fromSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a75a9d660a17cf6f974b8b29085d798ad</anchor>
      <arglist>(const Vector3&lt; Integral &gt; &amp;srgb, T a=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; T &gt;</type>
      <name>fromSrgbAlpha</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a4e07381f06de1efa26a4ea141a4f1c83</anchor>
      <arglist>(UnsignedInt srgbAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; T &gt;</type>
      <name>fromSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>ac1e493faae13315ac8bfdd8907e161dd</anchor>
      <arglist>(UnsignedInt srgb, T a=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; T &gt;</type>
      <name>fromXyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a6a23a77cf0f2d9fee7c53b79163c9646</anchor>
      <arglist>(const Vector3&lt; FloatingPointType &gt; xyz, T a=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function">
      <type>constexpr Color4&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_rgba</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a33bb6e4470bbebf78e05c434ceabec43</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_srgba</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a88197216abf20bf0d1bd7c5699ec519c</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color4&lt; Float &gt;</type>
      <name>operator&quot;&quot;_rgbaf</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a827104fe7653f4bde5966f8ae5b0913a</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color4&lt; Float &gt;</type>
      <name>operator&quot;&quot;_srgbaf</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a7cc23ef04fa621c95f3ec3a28638edcc</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a338890901a6aa2d1e80e689f9b2532a4</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Color4&lt; UnsignedByte &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Math::ColorHsv</name>
    <filename>structMagnum_1_1Math_1_1ColorHsv.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>constexpr</type>
      <name>ColorHsv</name>
      <anchorfile>structMagnum_1_1Math_1_1ColorHsv.html</anchorfile>
      <anchor>a11433b330ca71936425387d46603b801</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ColorHsv</name>
      <anchorfile>structMagnum_1_1Math_1_1ColorHsv.html</anchorfile>
      <anchor>aa07a6c2017e7a2857a80f933e9a8488c</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorHsv</name>
      <anchorfile>structMagnum_1_1Math_1_1ColorHsv.html</anchorfile>
      <anchor>afa618dcc1298bf07203e1bef7a4a4755</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ColorHsv</name>
      <anchorfile>structMagnum_1_1Math_1_1ColorHsv.html</anchorfile>
      <anchor>a37de8af3e1665f7e993e57e9e736a07a</anchor>
      <arglist>(Deg&lt; T &gt; hue, T saturation, T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ColorHsv</name>
      <anchorfile>structMagnum_1_1Math_1_1ColorHsv.html</anchorfile>
      <anchor>a3b3182c9525f9081c396bce34daba445</anchor>
      <arglist>(const ColorHsv&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ColorHsv</name>
      <anchorfile>structMagnum_1_1Math_1_1ColorHsv.html</anchorfile>
      <anchor>afb1b74c548b765ee42a2c1ca1e201201</anchor>
      <arglist>(std::tuple&lt; Deg&lt; T &gt;, T, T &gt; hsv) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator std::tuple&lt; Deg&lt; T &gt;, T, T &gt;</name>
      <anchorfile>structMagnum_1_1Math_1_1ColorHsv.html</anchorfile>
      <anchor>a49c9da1eb4c77c33f1f6ce3a21f14eeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator std::tuple&lt; Deg&lt; T &gt; &amp;, T &amp;, T &amp; &gt;</name>
      <anchorfile>structMagnum_1_1Math_1_1ColorHsv.html</anchorfile>
      <anchor>abaa3c6c6f831fe794aba0a4de0007a6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator std::tuple&lt; const Deg&lt; T &gt; &amp;, const T &amp;, const T &amp; &gt;</name>
      <anchorfile>structMagnum_1_1Math_1_1ColorHsv.html</anchorfile>
      <anchor>ac0d332a7270bab5837c58259f7fc304b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structMagnum_1_1Math_1_1ColorHsv.html</anchorfile>
      <anchor>a8e056f634521287186b7731403a23319</anchor>
      <arglist>(const ColorHsv&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structMagnum_1_1Math_1_1ColorHsv.html</anchorfile>
      <anchor>ab4ccf6c71029be78f9b087a835311353</anchor>
      <arglist>(const ColorHsv&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="variable">
      <type>Deg&lt; T &gt;</type>
      <name>hue</name>
      <anchorfile>structMagnum_1_1Math_1_1ColorHsv.html</anchorfile>
      <anchor>a072d583b68f36f9dfb49e8ee8a6971bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>T</type>
      <name>saturation</name>
      <anchorfile>structMagnum_1_1Math_1_1ColorHsv.html</anchorfile>
      <anchor>a21b27a5995ecdefbfe5058c874af61b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>T</type>
      <name>value</name>
      <anchorfile>structMagnum_1_1Math_1_1ColorHsv.html</anchorfile>
      <anchor>abc6fa98b2cfe255d19ae05fdcb4c2c9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>structMagnum_1_1Math_1_1ColorHsv.html</anchorfile>
      <anchor>a89bc10efa4914f4bd586cf6f493ee898</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const ColorHsv&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Complex</name>
    <filename>classMagnum_1_1Math_1_1Complex.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a436e9f8f692179a12a1ef4b8c735306d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a84ca1871d9a1ebd42206e55c6a98e7dd</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a37087d820ab87abce18a3437963bdf6e</anchor>
      <arglist>(IdentityInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a28270cfda770405f5182e74e5a1ec535</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>add7e74a502d3f01f447e2baebc96dea9</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>afbd653cbcaed2d9816fe4c96d8881b3c</anchor>
      <arglist>(T real, T imaginary) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>aa594b40572861c6f1036cdb56ffe9288</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a0206ee3f6107c2263f83e735e93ce8dd</anchor>
      <arglist>(const Complex&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ab9deb3750ce9e1c7144d8608e0dd5440</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ab185e2196f0710d63ae7ad7a6d117bb9</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>acbaf5134609e865f9d7f3b71328803e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a05566d7f195eb5b693745fe6a8de63e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a324aea67b630c86b9d893bfd55f59520</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a23a50123c81cb454dd712f18b7209ea2</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>aad7ca8f011cbb14f01f94fbb03319eb2</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a02598f7d85b546729d451e4c32ce8d95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>real</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a283ca72904733a6efc964e21e9f0434f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>real</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ae26350052e50de8ad19f5e620220be0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>imaginary</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>afca760adeadd93baf120c9e13b26e4b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>imaginary</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>af765e3d1dbfbde4b40bc58f946d474c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator Vector2&lt; T &gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a6cd841213ac5a08ede036fd4a0c73c58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>aaa1ba9de3112a1211158350c2257eea3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix2x2&lt; T &gt;</type>
      <name>toMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a552a5392fc3cd97351e3b880c29434a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a87bf0b8aec5e81069b7260f92c38a2a4</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a455d42f87b9ae401d8e507ebc8c57248</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ab65a28c04c72509feef803db9be2c582</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>aca7a18b5610abade761a17433acc3faa</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a4a42b783c0d585e5e4b373124c4e8564</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ad6bb867effa311356aea5a142cdf23b5</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a0a2a9e2fe9d985ee2536baa47d4710eb</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a7f7e129f3502a118f03a02d6fff59cf1</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a68564f1355697544e5ee8dc78d22d34c</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a2a9ab4d442d0356ba9bc7fa37d11d730</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a992d2f7992ae121dcf8d95d4a6c1a0f6</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ab5122d8679a48957fa9c45e7f445694f</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>aec7c9e1147a081f62ff2d5ff6d8f3a9e</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>aa9fb4fab0507d47fed697e5814774e7c</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a6541e39208d89e8ce102a0697fb8232a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a940aea79dfa2078eb8472a4223c7adef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a15e4e9663ac38b24bffd56e752ea5ac9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>conjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ae15f5a6d99696b65dda24502e7c004d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>inverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a6da5587ed161facbc9d89c296ecd9e14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>invertedNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>af3547e1b18b4ac638379c26d52698c72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt;</type>
      <name>transformVector</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>af6e39cc056cbe97cbbcb81805beb246d</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Complex&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ac6209d9d93a6c213750cd087e59b35f5</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Complex&lt; T &gt;</type>
      <name>fromMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a1c3928355fdf5a4cf1f5b59e20a7ccb4</anchor>
      <arglist>(const Matrix2x2&lt; T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ae3d695a1794978f2aded487bc9e6e312</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;a, const Complex&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ab0d977c1e3f6a66dcdedcd261b758210</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;normalizedA, const Complex&lt; T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a34f27bc82f532ab76366f368d2d7fdc3</anchor>
      <arglist>(T scalar, const Complex&lt; T &gt; &amp;complex)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ac2f12a2b45f2b85dd1c8e9797b03fa13</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector, const Complex&lt; T &gt; &amp;complex)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a7c6460d09ef7244ad15a0f438a6e2248</anchor>
      <arglist>(T scalar, const Complex&lt; T &gt; &amp;complex)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ab3b997e9fa0336754c9dc188df84b2db</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector, const Complex&lt; T &gt; &amp;complex)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>lerp</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a61610c4747e550c9076fa7e783494498</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;normalizedA, const Complex&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>slerp</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>aa3c5f948767edd96cd712952485a1275</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;normalizedA, const Complex&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a673cbf89633bedbae0a30457b9bfaceb</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Complex&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Math::Constants</name>
    <filename>structMagnum_1_1Math_1_1Constants.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>pi</name>
      <anchorfile>structMagnum_1_1Math_1_1Constants.html</anchorfile>
      <anchor>ae4530a2b57f7171de9873546b710441e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>piHalf</name>
      <anchorfile>structMagnum_1_1Math_1_1Constants.html</anchorfile>
      <anchor>af1d0179c0213986ec14d5f09efd494bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>piQuarter</name>
      <anchorfile>structMagnum_1_1Math_1_1Constants.html</anchorfile>
      <anchor>a2ad4921321637b0a03dc57fcd4367d16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>tau</name>
      <anchorfile>structMagnum_1_1Math_1_1Constants.html</anchorfile>
      <anchor>a6e4c9293554be66cd7d26228f06c3faf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>e</name>
      <anchorfile>structMagnum_1_1Math_1_1Constants.html</anchorfile>
      <anchor>acc3f1e0c7c386b32a28eeb4bf478bbec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>sqrt2</name>
      <anchorfile>structMagnum_1_1Math_1_1Constants.html</anchorfile>
      <anchor>adeb45f98b1d92e393bf8bcbeacb05af1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>sqrt3</name>
      <anchorfile>structMagnum_1_1Math_1_1Constants.html</anchorfile>
      <anchor>aefe8aa823c32ec9908c20a8ce6778472</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>sqrtHalf</name>
      <anchorfile>structMagnum_1_1Math_1_1Constants.html</anchorfile>
      <anchor>a62aaef15e650ed24a53ad164631a704b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>nan</name>
      <anchorfile>structMagnum_1_1Math_1_1Constants.html</anchorfile>
      <anchor>a0cc96df25e99d8e386551475d6d171fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>inf</name>
      <anchorfile>structMagnum_1_1Math_1_1Constants.html</anchorfile>
      <anchor>a33437fd32195685dc87c2b8b44176c62</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::CubicHermite</name>
    <filename>classMagnum_1_1Math_1_1CubicHermite.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>afc7a603a85848fd3404bcb9949d38905</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>CubicHermite</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>a8d8a21228a1530c76c8839bc03268b06</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>CubicHermite</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>a4a1812dd011d9a041d8df682c427ee88</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>CubicHermite</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>a8eb6fa97f467fbef3d3d9f774b4575c9</anchor>
      <arglist>(IdentityInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CubicHermite</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>ab411e8be4998e91028225ee3c8ff687c</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>CubicHermite</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>a1320a518cc706a89603e8aee495ca480</anchor>
      <arglist>(const T &amp;inTangent, const T &amp;point, const T &amp;outTangent) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>CubicHermite</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>af4ae67897c18faeea4055e4c6ad8caad</anchor>
      <arglist>(const CubicHermite&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>ab72e9fb29b0037d7569b1fdbeb83bbd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>a2549a1bbcd7edd25e0bf393fdd656f87</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>ab9c958cee1e731bcc6170f33877ad65c</anchor>
      <arglist>(const CubicHermite&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>ab37ef447b1644598849dbd605a674afd</anchor>
      <arglist>(const CubicHermite&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>inTangent</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>a1a84c54ba5217a17aa2ea2064b66540a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T &amp;</type>
      <name>inTangent</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>a977889805ec7cfbf7900105e3401f57e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>point</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>a487e3f373f0b8a6c12f2aa24d6520bdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T &amp;</type>
      <name>point</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>a3b0a8e9d9c141b99fd8c3389bb40c5a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>outTangent</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>a6b477d6a02a5520c7c366af9224d1242</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T &amp;</type>
      <name>outTangent</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>a7b41f06d2676e586170dd598d8c14ba0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CubicHermite&lt; T &gt;</type>
      <name>fromBezier</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>a489877e360c89560860a997b3da40d68</anchor>
      <arglist>(const CubicBezier&lt; dimensions, U &gt; &amp;a, const CubicBezier&lt; dimensions, U &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>a744c87e95b64c6546f5b7b8298ac9aa7</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const CubicHermite&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>select</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>abc745d7090d44bb511d569a7216c978d</anchor>
      <arglist>(const CubicHermite&lt; T &gt; &amp;a, const CubicHermite&lt; T &gt; &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerp</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>a576071442da326909b9b303ad0b53372</anchor>
      <arglist>(const CubicHermite&lt; T &gt; &amp;a, const CubicHermite&lt; T &gt; &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>lerp</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>a7470cab437d00cad96234c6d1a342cae</anchor>
      <arglist>(const CubicHermiteComplex&lt; T &gt; &amp;a, const CubicHermiteComplex&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>lerp</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>ab913ecf3dca35c39c342943f59e60011</anchor>
      <arglist>(const CubicHermiteQuaternion&lt; T &gt; &amp;a, const CubicHermiteQuaternion&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>lerpShortestPath</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>a500433112c7749a99bfb107f193770e8</anchor>
      <arglist>(const CubicHermiteQuaternion&lt; T &gt; &amp;a, const CubicHermiteQuaternion&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>slerp</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>a2eeb9131e981855582bf20deff050427</anchor>
      <arglist>(const CubicHermiteComplex&lt; T &gt; &amp;a, const CubicHermiteComplex&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>slerp</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>a6e4b17bc7fbbdb663093b1c453edf61c</anchor>
      <arglist>(const CubicHermiteQuaternion&lt; T &gt; &amp;a, const CubicHermiteQuaternion&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>slerpShortestPath</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>afdcbab518271116c57eba6d6046e8bf8</anchor>
      <arglist>(const CubicHermiteQuaternion&lt; T &gt; &amp;a, const CubicHermiteQuaternion&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>splerp</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>aada021cfaf2a04e3a8c1f0c6c4b5addd</anchor>
      <arglist>(const CubicHermite&lt; T &gt; &amp;a, const CubicHermite&lt; T &gt; &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>splerp</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>aa5bbd5f87e7e2a7bae49f6bcd1562b8f</anchor>
      <arglist>(const CubicHermiteComplex&lt; T &gt; &amp;a, const CubicHermiteComplex&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>splerp</name>
      <anchorfile>classMagnum_1_1Math_1_1CubicHermite.html</anchorfile>
      <anchor>a8a1e8df44aad8f5bf8861f026737f334</anchor>
      <arglist>(const CubicHermiteQuaternion&lt; T &gt; &amp;a, const CubicHermiteQuaternion&lt; T &gt; &amp;b, T t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Deg</name>
    <filename>classMagnum_1_1Math_1_1Deg.html</filename>
    <templarg></templarg>
    <base>Unit&lt; Deg, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Deg</name>
      <anchorfile>classMagnum_1_1Math_1_1Deg.html</anchorfile>
      <anchor>aca386bba50be4f4d5cbb7b1bc4488533</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Deg</name>
      <anchorfile>classMagnum_1_1Math_1_1Deg.html</anchorfile>
      <anchor>aafafe69fc606edafeeaf01eec9009f3e</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Deg</name>
      <anchorfile>classMagnum_1_1Math_1_1Deg.html</anchorfile>
      <anchor>a72e48d82eada6d0c39cd07204351ddbc</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Deg</name>
      <anchorfile>classMagnum_1_1Math_1_1Deg.html</anchorfile>
      <anchor>a0b19ed4122ec285b0ee2e3661aaf6fec</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Deg</name>
      <anchorfile>classMagnum_1_1Math_1_1Deg.html</anchorfile>
      <anchor>a4384b3662f49dafbd5ca13e9772f403f</anchor>
      <arglist>(Unit&lt; Math::Deg, U &gt; value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Deg</name>
      <anchorfile>classMagnum_1_1Math_1_1Deg.html</anchorfile>
      <anchor>a79fe26b36f035eae640e1995f1f873c2</anchor>
      <arglist>(Unit&lt; Math::Deg, T &gt; other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Deg</name>
      <anchorfile>classMagnum_1_1Math_1_1Deg.html</anchorfile>
      <anchor>a33aa75b5af1937c4e3fcfd98b46b719e</anchor>
      <arglist>(Unit&lt; Rad, T &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Deg&lt; Double &gt;</type>
      <name>operator&quot;&quot;_deg</name>
      <anchorfile>classMagnum_1_1Math_1_1Deg.html</anchorfile>
      <anchor>aac689d53d0c631771a1eaaaa23afb3a5</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Deg&lt; Float &gt;</type>
      <name>operator&quot;&quot;_degf</name>
      <anchorfile>classMagnum_1_1Math_1_1Deg.html</anchorfile>
      <anchor>ae8c27c930965439412e761d6991f727a</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Deg.html</anchorfile>
      <anchor>ac757572f15467c51569563ea991a2549</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Unit&lt; Deg, T &gt; &amp;value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Math_1_1Deg" title="Usage">Math-Deg-usage</docanchor>
    <docanchor file="classMagnum_1_1Math_1_1Deg" title="Requirement of explicit conversion">Math-Angle-explicit-conversion</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Dual</name>
    <filename>classMagnum_1_1Math_1_1Dual.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a3be18c964dc9a31a5adef067790a37d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a1510f9f641c2dfd00ca7b01834cde0fd</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>ae1030ae3f17f87e504c1bca6bb4512f4</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa778161aca036a8f91f1416484c0f3e4</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a145bf8a971711d63b11cce2cdbf60401</anchor>
      <arglist>(const T &amp;real, const T &amp;dual=T()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa69830829a6d39af13c7c0a36ce8d4e9</anchor>
      <arglist>(const Dual&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a3547ae5040344880683a611501a4eb3a</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a5c25339de4ad7ae20ddd098c4ec2f410</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>abda197b01ac12ab20cab5ae02da9c633</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a00074698ec219582ba9dedfa2d2dcd7a</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a7a06e7de324d2168c187a3369ac7f40b</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>real</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a8f653e88c741b4a2adad75bca3bddf6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T</type>
      <name>real</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a6070b7bf86682f74983f69262439aaf9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af66cf3b6fb28b6c2979191ac95b3b492</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T</type>
      <name>dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>ad428092734ca57b8792e7df3acba5f73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa696c4eb5da36892502a712ee0031f3c</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a61c3f0b21f1c2c3a2e38e184491660f3</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aff2f040c1cae6d3235f1274f389a7728</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a27a849b0e8599549e6f1bc1372411109</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a529cf18a6dd33234326801ffefb0387a</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a02bc5e1be386bb0526610dcac28ee047</anchor>
      <arglist>(const Dual&lt; U &gt; &amp;other) const -&gt; Dual&lt; decltype(std::declval&lt; T &gt;() *std::declval&lt; U &gt;())&gt;</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; decltype(std::declval&lt; T &gt;) *std::declval&lt; U &gt;))&gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af0cf6edd8baf2fa47cf89ddd77762ede</anchor>
      <arglist>(const U &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a37b6755ad6f0abc8bab3d6bf3ee1df6c</anchor>
      <arglist>(const Dual&lt; U &gt; &amp;other) const -&gt; Dual&lt; decltype(std::declval&lt; T &gt;()/std::declval&lt; U &gt;())&gt;</arglist>
    </member>
    <member kind="function">
      <type>V</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a0f947718fd1df17fd663ff4032f2f623</anchor>
      <arglist>(const U &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt;</type>
      <name>conjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>ab83f86f45e4b526ef3b646effa1ce4d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>V</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a108824148a16f579b12bee454ea47638</anchor>
      <arglist>(const T &amp;a, const Dual&lt; U &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a566f5ca101d2a3793843141980b2545e</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Dual&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt;</type>
      <name>sqrt</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a9f399ec60dc87478fcdbe6091e0b6783</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;dual)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Dual&lt; T &gt;, Dual&lt; T &gt; &gt;</type>
      <name>sincos</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>adf84b1bff280ad75079c8774ca25cbec</anchor>
      <arglist>(const Dual&lt; Rad&lt; T &gt;&gt; &amp;angle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::DualComplex</name>
    <filename>classMagnum_1_1Math_1_1DualComplex.html</filename>
    <templarg></templarg>
    <base>Dual&lt; Complex&lt; T &gt; &gt;</base>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a5256076560a545242298ddbb92dc914f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualComplex</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a26423201043550b407e4c9e03afe1e4b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualComplex</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a7510dd566c7d03d532c98d9ed91b8c45</anchor>
      <arglist>(IdentityInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualComplex</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>ae4e9acb4806527cd1810001fe4f01eb6</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DualComplex</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>aadae835c2d72814e1df71dea1d1178d7</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualComplex</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a78ca3b0f2e78693615c9f44f6718dfc5</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;real, const Complex&lt; T &gt; &amp;dual=Complex&lt; T &gt;(T(0), T(0))) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualComplex</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>af98becfe73485242e65ab3e90f7a9a54</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualComplex</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a72ee826679689906b6c21ea419e4ae57</anchor>
      <arglist>(const DualComplex&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualComplex</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>aea00eb119f7d13a79b7a46934b23b3d2</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualComplex</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a3d776fb1f7a6ac50623a63210158cca1</anchor>
      <arglist>(const Dual&lt; Complex&lt; T &gt;&gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a6e50d80280e1a49a1a072c668f1e4e36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a94ce7e2660e39dad9baf292bcc21d770</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>aa555fba14873a04ea3677a23e188c4d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a5f4140b57c00ca8ae2b052ed1d32b1db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Complex&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>afeb76be597da22fedfb70e2be30507ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a54ea4ccdd453e12ea9fddb97d02565e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3&lt; T &gt;</type>
      <name>toMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a7a13bb64a5b0ea7b01210b81fbd1dba3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DualComplex&lt; T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a56196387b927b550cd5a10520cf6d405</anchor>
      <arglist>(const DualComplex&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>DualComplex&lt; T &gt;</type>
      <name>complexConjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a0f36c51f82f500f7f243409a5ed7bfcc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DualComplex&lt; T &gt;</type>
      <name>dualConjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>aba9b17bf2b6acf0dc22c835756b5a396</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DualComplex&lt; T &gt;</type>
      <name>conjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>ab3e78959bb39a91edb8cd46cc39807ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lengthSquared</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a0e98a37ed3be60c5597cdfb282428c3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>af62c1eaf347d39e3ae2e8e8d87afe79c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DualComplex&lt; T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a0477170d087535b1c2a214d91b8e3315</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DualComplex&lt; T &gt;</type>
      <name>inverted</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a95b1f4abd6c03903c7758b202c4b0f38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DualComplex&lt; T &gt;</type>
      <name>invertedNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a8c0d99aba30b66de166703f6edf91e22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt;</type>
      <name>transformPoint</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>af48f2093e753180b895b75fd27905daa</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DualComplex&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a55b9ca9a69c3f10280ffb600550101c1</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DualComplex&lt; T &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a2ce37da4456e1218d7c87ae83fae1739</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DualComplex&lt; T &gt;</type>
      <name>fromMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a2497caa52fa01a67332880e0e7ec243c</anchor>
      <arglist>(const Matrix3&lt; T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a59b3488a700c0d5fcaed8ce7d7e5b1fc</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const DualComplex&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::DualQuaternion</name>
    <filename>classMagnum_1_1Math_1_1DualQuaternion.html</filename>
    <templarg></templarg>
    <base>Dual&lt; Quaternion&lt; T &gt; &gt;</base>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a91876740a6540c47944effcbdf0496ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualQuaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>abfe14254541d958d9da27a9db66a3373</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualQuaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>acb84623784522e697a087dffd80245fe</anchor>
      <arglist>(IdentityInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualQuaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a01527fa3f92eafba35f8e8598b3a5840</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DualQuaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a9d62cce23b486b1a8eb3953045823c51</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualQuaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a6dcad20c0e9c7c9361b9c291ee42b181</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;real, const Quaternion&lt; T &gt; &amp;dual=Quaternion&lt; T &gt;({}, T(0))) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualQuaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a2cf520ef5d7e83a95ab9efda58a037f8</anchor>
      <arglist>(const Dual&lt; Vector3&lt; T &gt;&gt; &amp;vector, const Dual&lt; T &gt; &amp;scalar) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualQuaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>ae1cab2c3759e71fc88bbe6e1118dcbfe</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualQuaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a44c4733d1f4e9d96245e541777b716af</anchor>
      <arglist>(const DualQuaternion&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualQuaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>aea11101366e60dbb8efd5c90eb0c5b18</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualQuaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a51c30b9d1f1131951fb60c91bc023d31</anchor>
      <arglist>(const Dual&lt; Quaternion&lt; T &gt;&gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a60696faface3f01b8e579362f78fe09d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>ae9a39f761b8e162b34aba477bb847b34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a449d326d1bc01ca1f9f80e2d4e1162c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a57511a87c8b5e02551d988183cb0ceb5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Quaternion&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a9d0ccaf3c31b557b504cfd51226d7f83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a0a78df02e7c4a28e4f4103abddecd825</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix4&lt; T &gt;</type>
      <name>toMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>ad44df25561a54fbde9cedd72a00bc42b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>quaternionConjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a2ae3e9bb300950a347760eae297ede0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>dualConjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>acdd97ac337ec51cfab4a1eeda174e691</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>conjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a28ce953624be903dab723873a3218986</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt;</type>
      <name>lengthSquared</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a958447f9429c93a41946408217e71949</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt;</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>af0264b372febdfb307efee0be2dfc33e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>aaccd1dea040a2d0418c96ede8bfb96b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>inverted</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a86fa6d0e9021cfc1bfbdf5ede7373a9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>invertedNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>ac31bb76f0626c3f789a54c0fcfd1f0f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>transformPoint</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>ad37200a2e08968dc933762420c19729b</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>transformPointNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a9f2f30219136ed65b8b6363472c98163</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DualQuaternion&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a9240d1feef53fa777cf95a5139a611f3</anchor>
      <arglist>(Rad&lt; T &gt; angle, const Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DualQuaternion&lt; T &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>aecdac97d6027049f08ac2b6773dd045a</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DualQuaternion&lt; T &gt;</type>
      <name>fromMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a83bd669e5f3cd425b3f7856b2c9dbb36</anchor>
      <arglist>(const Matrix4&lt; T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>sclerp</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a16a9790aad4406e49517818bd3fa632b</anchor>
      <arglist>(const DualQuaternion&lt; T &gt; &amp;normalizedA, const DualQuaternion&lt; T &gt; &amp;normalizedB, const T t)</arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>sclerpShortestPath</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a473dd6757639985c2f395396089a02b5</anchor>
      <arglist>(const DualQuaternion&lt; T &gt; &amp;normalizedA, const DualQuaternion&lt; T &gt; &amp;normalizedB, const T t)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a827f6a5c6237137238f27a82aa9d1f4d</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const DualQuaternion&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Frustum</name>
    <filename>classMagnum_1_1Math_1_1Frustum.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>constexpr</type>
      <name>Frustum</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a6694ccce85ef7b3ac118e56e29f24ded</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Frustum</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>ab38690f67f445e2c3821e6dc05daefda</anchor>
      <arglist>(IdentityInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Frustum</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>acf93fe440a72897e81eb236f2076336d</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Frustum</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>af486b8ef269cfe67b5588fbaf60cc3b5</anchor>
      <arglist>(const Vector4&lt; T &gt; &amp;left, const Vector4&lt; T &gt; &amp;right, const Vector4&lt; T &gt; &amp;bottom, const Vector4&lt; T &gt; &amp;top, const Vector4&lt; T &gt; &amp;near, const Vector4&lt; T &gt; &amp;far) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Frustum</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a2bc120467ccc77ced67a3d4a5f80e8fd</anchor>
      <arglist>(const Frustum&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Frustum</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a491cbc166606747bf5d375b73532a9de</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>acca22c87cd063ebd48ae6fe975ede862</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a8273d64fbe63633656ce2bcc037fb931</anchor>
      <arglist>(const Frustum&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>ad806979e73db69c4925c6a73c08d0937</anchor>
      <arglist>(const Frustum&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a76647edf6e417dd3ba98e166bf101f41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a0fb38723ed4a5de23667fafbe4d4e9cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Corrade::Containers::StaticArrayView&lt; 6, const Vector4&lt; T &gt; &gt;</type>
      <name>planes</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>aefbd1ef329b6b4426901da60302b77ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector4&lt; T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>aee6847764bc2a07c1c200237a6a9446a</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>Vector4&lt; T &gt; *</type>
      <name>begin</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a99677c6077aec38b4fc44d14adf4a636</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector4&lt; T &gt; *</type>
      <name>begin</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a9f81386af1c76f5174876ec79a7e0ebf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector4&lt; T &gt; *</type>
      <name>cbegin</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>adb5832fe04715ee7a5bc392d5ad9ded2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4&lt; T &gt; *</type>
      <name>end</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a7e0c0fc51b1855d73c8ddfc5d8158d7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector4&lt; T &gt; *</type>
      <name>end</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a17493a8663bc410978c4e96156035d5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector4&lt; T &gt; *</type>
      <name>cend</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a4938a3db9e0dfbab87360124ba8723aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; T &gt;</type>
      <name>left</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>ad44f1b082ff88904adfc009fb8018321</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; T &gt;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a23f72bedb3d3f472418fca49ff8093d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; T &gt;</type>
      <name>bottom</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a1311ffe7027ec0e5d9ccfdee35bc245c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; T &gt;</type>
      <name>top</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a451bdfdb6d36b904c1072a3f4e1fb144</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; T &gt;</type>
      <name>near</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a8174b84589369f43e65b13722d25a7f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; T &gt;</type>
      <name>far</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a413ec02d534fb70d1419c867324a2e0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Frustum&lt; T &gt;</type>
      <name>fromMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a4ea5186bc9a20948753b196c1d7be5ca</anchor>
      <arglist>(const Matrix4&lt; T &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>aad6fdc9ca9b5bd751970733503de84ee</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Frustum&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Half</name>
    <filename>classMagnum_1_1Math_1_1Half.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Half</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>a4363d9e60ca34b9aa1329a30772f4657</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Half</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>a5f7472dee1022319aca9dcca798ac545</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Half</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>a871ed35333f1654899f3e25b7dd84d45</anchor>
      <arglist>(UnsignedShort data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Half</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>ac36b0bdd862ca9ad376b0eda98472ba8</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Half</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>a8ea74f724b16dbe9afc668ecb3c6f5f4</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>a14742113c3dc4ec61584289fffe57232</anchor>
      <arglist>(Half other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>a12d44af6cebdc3dab80a8c3f7c73e2db</anchor>
      <arglist>(Half other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Half</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>a190841dcc781d67c0e16f5576ec24321</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Half</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>ae950b6aa88290bb1576e7be6348399b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator UnsignedShort</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>a9226bceeb44311e99efb076f71887f8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Float</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>a542fe8bd57feae95bd9deb85daa5f6eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr UnsignedShort</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>aff02a80a1b70130f235d6ae21e10c394</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Half</type>
      <name>operator&quot;&quot;_h</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>abb4a09a79116fffb3b8b806d4a6f6e0e</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>a158798027e4c105796ba27c51b857848</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, Half value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Math::IdentityInitT</name>
    <filename>structMagnum_1_1Math_1_1IdentityInitT.html</filename>
  </compound>
  <compound kind="struct">
    <name>Magnum::Math::IsFloatingPoint</name>
    <filename>structMagnum_1_1Math_1_1IsFloatingPoint.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Magnum::Math::IsIntegral</name>
    <filename>structMagnum_1_1Math_1_1IsIntegral.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Magnum::Math::IsScalar</name>
    <filename>structMagnum_1_1Math_1_1IsScalar.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Magnum::Math::IsUnitless</name>
    <filename>structMagnum_1_1Math_1_1IsUnitless.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Magnum::Math::IsUnitless&lt; Deg&lt; T &gt; &gt;</name>
    <filename>structMagnum_1_1Math_1_1IsUnitless_3_01Deg_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>std::false_type</base>
  </compound>
  <compound kind="struct">
    <name>Magnum::Math::IsUnitless&lt; Rad&lt; T &gt; &gt;</name>
    <filename>structMagnum_1_1Math_1_1IsUnitless_3_01Rad_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>std::false_type</base>
  </compound>
  <compound kind="struct">
    <name>Magnum::Math::IsUnitless&lt; Unit&lt; Derived, T &gt; &gt;</name>
    <filename>structMagnum_1_1Math_1_1IsUnitless_3_01Unit_3_01Derived_00_01T_01_4_01_4.html</filename>
    <templarg>Derived</templarg>
    <templarg></templarg>
    <base>std::false_type</base>
  </compound>
  <compound kind="struct">
    <name>Magnum::Math::IsVector</name>
    <filename>structMagnum_1_1Math_1_1IsVector.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Matrix</name>
    <filename>classMagnum_1_1Math_1_1Matrix.html</filename>
    <templarg>size</templarg>
    <templarg></templarg>
    <base>RectangularMatrix&lt; size, size, T &gt;</base>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a0da88f787b26f1995a60361559187f1fa71e0ecab841744afb1340b04ed546966</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a0da88f787b26f1995a60361559187f1fa71e0ecab841744afb1340b04ed546966</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a3f45b28de8d83b5fef4e9de286a5b2ae</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a71bdb64c27c381d9fa9ac1e0788699fb</anchor>
      <arglist>(IdentityInitT, T value=T(1)) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a4adf91d400fae079b7eb9cd71f90d050</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>ac76456f63fb61569d593b802fb1ad4ab</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a19c63bbe73f745947a11551b03cde642</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;first, const U &amp;... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a599542f22f34ff97f7196e16d1106d93</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a96a98c28fbabc625f469e56665d65563</anchor>
      <arglist>(const RectangularMatrix&lt; size, size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a9910cf6c8bbb229676da1e3ed6e7f99b</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>abde2ca326c38a13ebad531220657c788</anchor>
      <arglist>(const RectangularMatrix&lt; otherSize, otherSize, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>aaf73ff90d43d921d7f72d4756cd3532c</anchor>
      <arglist>(const RectangularMatrix&lt; size, size, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOrthogonal</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a5a5ba4486a72512a19f73e9b591725e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>trace</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a7bc22d2fdb751075d74b7e174be92a4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix&lt; size-1, T &gt;</type>
      <name>ij</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a977df6a1330e72a96b296c3bdebea420</anchor>
      <arglist>(std::size_t skipCol, std::size_t skipRow) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>determinant</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a563c81272c914127ed61a334376f13a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix&lt; size, T &gt;</type>
      <name>inverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a3968270276ed3790d4ca4d32c3c48850</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix&lt; size, T &gt;</type>
      <name>invertedOrthogonal</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a15db534cf8ef1c131a596502a628c216</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Matrix3</name>
    <filename>classMagnum_1_1Math_1_1Matrix3.html</filename>
    <templarg>T</templarg>
    <base>Magnum::Math::Matrix</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ae7e4f50af7d17071f51dae94942274bf</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a0a33c9739acf1728ec121cc28a148d32</anchor>
      <arglist>(IdentityInitT, T value=T{1}) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a84877a6cfca61b877cc156b1343eb163</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a07a3083c64e4336cfd5c6f23bf034846</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a046b4514311f06a092081949f702d41a</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;first, const Vector3&lt; T &gt; &amp;second, const Vector3&lt; T &gt; &amp;third) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ab7ab26d8c749e484e2759d9c47d70217</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a606b8212d38868a43dc068bacae061ca</anchor>
      <arglist>(const RectangularMatrix&lt; 3, 3, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a460014a92e0ad60f5e4cd617f87839e3</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a3871500c9f5914f84fe8274ebb933df0</anchor>
      <arglist>(const RectangularMatrix&lt; otherSize, otherSize, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a8d13e6f0adec507471b69f23ac88ec4c</anchor>
      <arglist>(const RectangularMatrix&lt; 3, 3, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRigidTransformation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a1cb3f693edd867f2b91dcdcad8f43254</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Matrix2x2&lt; T &gt;</type>
      <name>rotationScaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a9722ddc83126061ed5eee55585ef75cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix2x2&lt; T &gt;</type>
      <name>rotationShear</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ad7cb356c1d7ef6ced8a18a16a029de47</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix2x2&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a01b3f4c9267cf2fce150e5fbb0f6daae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix2x2&lt; T &gt;</type>
      <name>rotationNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ac0477da30ba0e23a2580ca5418c5cb86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt;</type>
      <name>scalingSquared</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a21c33135a73d0fbc23a614dac4cf0b8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt;</type>
      <name>scaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a209d7d42968509e593f0f234f3f9587d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>uniformScalingSquared</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>af193c63d86b751829033f71c6b15cc61</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>uniformScaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a95485a2a36a8dd90f236212f656b8e4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt; &amp;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ad166d31fcb12797eb258230b47ca80f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; T &gt;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a3e6c48760f53cb76ce13c6f7036b50fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt; &amp;</type>
      <name>up</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>aeb8a324e5abe64f09bc888e4bc58e114</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; T &gt;</type>
      <name>up</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a1ee9224d13dfdc31ec06f90b4243cdde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt; &amp;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a05ed7ce765c5c0a3cdbda15b8d5355da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; T &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a3f550c18324b821611216a5d5258fba5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3&lt; T &gt;</type>
      <name>invertedRigid</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a7c1b9bcef51ab3bfe2b4f6fd28c1bcb0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt;</type>
      <name>transformVector</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a430850a00a6fad971a6135d49e533e95</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt;</type>
      <name>transformPoint</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a71796f21f0f69b86066add1cf7bff8a9</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; T &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ae22c375a0af7fac1a22cb8bbc5bba1c1</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; T &gt;</type>
      <name>scaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a8d1392224570b254702baeaadfa79692</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix3&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a51a3dddeb726e7679cbaa2190d1e889c</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix3&lt; T &gt;</type>
      <name>reflection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a4c517f1a78c5300fc9c207496ea867e2</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;normal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; T &gt;</type>
      <name>shearingX</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a5a10fe4eb0b05f0fae43797642ad8570</anchor>
      <arglist>(T amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; T &gt;</type>
      <name>shearingY</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a791d5ea6cff14636c10374826668749c</anchor>
      <arglist>(T amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix3&lt; T &gt;</type>
      <name>projection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a8a782bf6187750b0f4bc763623ee3857</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; T &gt;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a04ab2a75059c8016904ad30f5ed7d89c</anchor>
      <arglist>(const Matrix2x2&lt; T &gt; &amp;rotationScaling, const Vector2&lt; T &gt; &amp;translation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Matrix4</name>
    <filename>classMagnum_1_1Math_1_1Matrix4.html</filename>
    <templarg>T</templarg>
    <base>Magnum::Math::Matrix</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ab52f256b38c1eb82dbc531bd2ab19f57</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a8077a9f1b2fe83e42066ee74dcdf98dc</anchor>
      <arglist>(IdentityInitT, T value=T{1}) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a07a734e23014fa82b969228965f4aea2</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a8640c92bd243d3ff10ce37af5cc1e908</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>abf0b673faa0db9089a403c9c45ede727</anchor>
      <arglist>(const Vector4&lt; T &gt; &amp;first, const Vector4&lt; T &gt; &amp;second, const Vector4&lt; T &gt; &amp;third, const Vector4&lt; T &gt; &amp;fourth) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ac633e90736fe4d196813d1ab30ed2c47</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ac4240b374984e79fee6a98c00848b6d0</anchor>
      <arglist>(const RectangularMatrix&lt; 4, 4, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a6448feda6260b10d8269e562bea39eb2</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a13cf9f97bcb982e0d05fbc81256c8b95</anchor>
      <arglist>(const RectangularMatrix&lt; otherSize, otherSize, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a826e3c118fb9be8590d2ba0ff32997c8</anchor>
      <arglist>(const RectangularMatrix&lt; 4, 4, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRigidTransformation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a439990b227184bfb3115bb86e37888e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Matrix3x3&lt; T &gt;</type>
      <name>rotationScaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ac63b78267d15cb3325ec451f1fe2af21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3x3&lt; T &gt;</type>
      <name>rotationShear</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>af4bfef89c8f44e214af28a9cb8ece87f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3x3&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a0dd749ed64b8da222898122f0b0df8ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3x3&lt; T &gt;</type>
      <name>rotationNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a6c4703ebb92c1f2af55d1c39c71dcb4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>scalingSquared</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>adefd2d431fcce1532a7851c71c164163</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>scaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a8b753daaa0faa7dc9e840cb593e36462</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>uniformScalingSquared</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ab39268f1c1cb33237ebfb4e59ebaaa42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>uniformScaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>aff4872f95ade6a9571ccbaf8e5ac03b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt; &amp;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a01d3d5de521bddf5b4a91fbcc24adad4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>adf2acff169ef524f799d97ab1ab5d341</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt; &amp;</type>
      <name>up</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a91a49eeea70603cb4446f21abc7e4bf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>up</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ae182bdf767ace0ae90afda6dbf596308</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt; &amp;</type>
      <name>backward</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>abbb01409dd273bb1f0f00b4d251d096f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>backward</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a28d0030e6bed530f53b5ec0e8c36796f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt; &amp;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a9a2876c4f7d3f3af31defa3af839f8ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a37629bf0ecaa2eeb5a667d084186715f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix4&lt; T &gt;</type>
      <name>invertedRigid</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a60c0aefaad71d6a0658c2db7637f690b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>transformVector</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a950213df0114f0eb91800ab4f79972e9</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>transformPoint</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ace937774e16d8e3a32518d23dcf3369c</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; T &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a45c6efa069510006c721f6668c1085aa</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; T &gt;</type>
      <name>scaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>af7be765c3968058eaa46212573d08f51</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a33c92542c8fa696eccb4ab1a988b197e</anchor>
      <arglist>(Rad&lt; T &gt; angle, const Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; T &gt;</type>
      <name>rotationX</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>af13627059189e2a41972bc050fc64380</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; T &gt;</type>
      <name>rotationY</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>afb3faf19d351e69287e62a9a1b5a58d9</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; T &gt;</type>
      <name>rotationZ</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a4233c4525af0e29ca99f036b48ecd4cb</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; T &gt;</type>
      <name>reflection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ac873401ad2ba0868ab7d6ee0bafc1a0d</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;normal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; T &gt;</type>
      <name>shearingXY</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>aaf0d40fe677b13ce587cd60fc770a503</anchor>
      <arglist>(T amountX, T amountY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; T &gt;</type>
      <name>shearingXZ</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>af45de8e18101c8d5c3a207d2528cd966</anchor>
      <arglist>(T amountX, T amountZ)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; T &gt;</type>
      <name>shearingYZ</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a39ca88e718fab9bf21d22aa6a633deb3</anchor>
      <arglist>(T amountY, T amountZ)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; T &gt;</type>
      <name>orthographicProjection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a41a7c41a0f1c450758fa0e91c31f9bf6</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;size, T near, T far)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; T &gt;</type>
      <name>perspectiveProjection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>aeed8f8ff2daedc28b7e3638e8e4ded47</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;size, T near, T far)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; T &gt;</type>
      <name>perspectiveProjection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a6475b3ef155c9142b890c8133504ae9b</anchor>
      <arglist>(Rad&lt; T &gt; fov, T aspectRatio, T near, T far)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; T &gt;</type>
      <name>perspectiveProjection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ac9e1d8b17f47c17213a20ab26a53f3b5</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;bottomLeft, const Vector2&lt; T &gt; &amp;topRight, T near, T far)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; T &gt;</type>
      <name>lookAt</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a568407217908849afa90cfe99ccf54a7</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;eye, const Vector3&lt; T &gt; &amp;target, const Vector3&lt; T &gt; &amp;up)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; T &gt;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a557b7e93cc1cf9f0efc3bd972dfa8db5</anchor>
      <arglist>(const Matrix3x3&lt; T &gt; &amp;rotationScaling, const Vector3&lt; T &gt; &amp;translation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Quaternion</name>
    <filename>classMagnum_1_1Math_1_1Quaternion.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ad8794a36ca3182cf7759ce5563dd2b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a7b74640bc04651a9f8c755bf0debed1c</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a564619a4909c7eeb0250bc84589541e0</anchor>
      <arglist>(IdentityInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a087d50f5ec2dbfee5b98d071723a467e</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a6a9d3810094b75dc70d1523f3d1026d7</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a721460f866326e5d476cf5691637a872</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector, T scalar) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ac062b38ffc6436c59cc92f3dfbebf96c</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a9e99bc7d5af3164714cc89fed50d7d41</anchor>
      <arglist>(const Quaternion&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>aa6b2a61b3a9910aa83480acfa6de23ac</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ab174407328d03d9386fa98b7db21b8f9</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ac6679a64cf8a8e45f78375ae05866a42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a85d7aa31fc378b439f1f467a7fae5b93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a4d42af40ee815758cb267848c3b2bdf0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a3dc38e6999d684c5893ec0353bba2e36</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a260acd4122d8300a21b511560590ac87</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>aaeaeee6c8659236ce26687050ab8bd19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt; &amp;</type>
      <name>vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a17b554622c5a61e7db2faf3774ef8b44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector3&lt; T &gt;</type>
      <name>vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a95bdbf800eb279249bd0784b8c6234bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>scalar</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a14feb0ad2c46ed29835680e978cf90df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>scalar</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ad95b83c37e4e4d4613b486b15edf3929</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ae8e09c06b590ce0c8676f83ed771d395</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>axis</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>aef03833a4e10d0d350b943b9554f7b25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3x3&lt; T &gt;</type>
      <name>toMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a29ce9f54ae56cfd640e085caf957f6b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>afa68cb15d04ef08a87eb5dea405b3754</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>af978cb442efcd8cdc60926804931fdee</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>adc12b36273b20e6aeadbd88fa17803a7</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a3a15af5b5aa430c3cae4e8c19893e2d5</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ab31dbb0b1957393b21db0025f08b0fff</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a99cd732a650d7ffd53c44eeee9909989</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a1ff55e79fc0f1ce08565b2bb4a8994f7</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ac3e12b812a058b938eef2857fcf32379</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ab251087c1f9c0a36b9c6d89a7533b68b</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ac1da5af64ecfeecc32900b52e4b55f88</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a9a79faf30b78e114a87404f0dff005bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a4f07f8fac1e663050e09b40fccad74cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a9048c42e840280ea86f7d37cbe269d3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>conjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a728e308bf68b9f1c612ef0c6890d256d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>inverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a9a2bde72652a78c175b4c6fa8931ea1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>invertedNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a9971664bf49d564b7836fafc5931f71f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>transformVector</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a790d6cad5ad57b90b00d5612b8f85222</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>transformVectorNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a6cb28a56b2ce9d3d3d886d069522ed8f</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quaternion&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>accba70d55affe884d8086110a130475a</anchor>
      <arglist>(Rad&lt; T &gt; angle, const Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quaternion&lt; T &gt;</type>
      <name>fromMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>aae9f73fca12e7b81ff5b45bdb34cc039</anchor>
      <arglist>(const Matrix3x3&lt; T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a24a478c9463275d440061899c3630a32</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;a, const Quaternion&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a77252a59dcbaf44761edc9213f0e5927</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>lerp</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a702539c58371af1c8635c2bc60e3e0a5</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>lerpShortestPath</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a7af2a318a3c70abee764adfa3b5a3a02</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>slerp</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>aa52d32b2fcb66f28a4330fb39fa50589</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>slerpShortestPath</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a0d790000a3656bf3b1bad2098ec00ea0</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a6104723d69f728da05794bdfd10eedc9</anchor>
      <arglist>(T scalar, const Quaternion&lt; T &gt; &amp;quaternion)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ad46afcb9966fa5007b579ff41442abaa</anchor>
      <arglist>(T scalar, const Quaternion&lt; T &gt; &amp;quaternion)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a03f030af72160303a9934d7a9af40f37</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Quaternion&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Rad</name>
    <filename>classMagnum_1_1Math_1_1Rad.html</filename>
    <templarg>T</templarg>
    <base>Unit&lt; Rad, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a72936fdcd7fcf088fa89a1e73d3779a9</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a36917ffee1793b2991ccc32d2ef9ebea</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a0ffa51c6c54c775284fbcdf896e49350</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a3103647d758537197096e0eeda87aa8a</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a259baea5e418004734ee1d8d47293648</anchor>
      <arglist>(Unit&lt; Math::Rad, U &gt; value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a808735c8f585f24db7e764b231d0f5c2</anchor>
      <arglist>(Unit&lt; Math::Rad, T &gt; value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a6666a48047298ac78dda704a21be4dd5</anchor>
      <arglist>(Unit&lt; Deg, T &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Rad&lt; Double &gt;</type>
      <name>operator&quot;&quot;_rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>aaf0bfb135a94f2bfd98cae7acc20a495</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Rad&lt; Float &gt;</type>
      <name>operator&quot;&quot;_radf</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a143288fa3c5bea5542c6ab59798d4013</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a577c8c280a0b3753ef06a23b5b496a3a</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Unit&lt; Rad, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Range</name>
    <filename>classMagnum_1_1Math_1_1Range.html</filename>
    <templarg>dimensions</templarg>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>Implementation::RangeTraits&lt; dimensions, T &gt;::Type</type>
      <name>VectorType</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9b67475211cb779b753bf6e7c4a0a71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a650845bc19f8fe4c1574f97b003c873b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a8e8e55738263e64c8fb90e99c15df06d</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a37cf32f96975f2252d535476aee0a0b0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>adbcdfa9101feecf1ff90ba5c246997eb</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a271043537801b6a2e51cae80246d6cea</anchor>
      <arglist>(const std::pair&lt; VectorType, VectorType &gt; &amp;minmax) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aa67b6d337c31f7a65ef86936c7c890ad</anchor>
      <arglist>(const std::pair&lt; Vector&lt; dimensions, T &gt;, Vector&lt; dimensions, T &gt;&gt; &amp;minmax) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a42d6842532079884d60019890d0de09d</anchor>
      <arglist>(const Range&lt; dimensions, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2060f88e1d0f1efe96068ca5341260c9</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af98d7db502faa0044a758c879c9d2972</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6ecf2d8ffea88084f853e01f362ffd08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a40a9a2b4f00284deb1552cdaefc76620</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af0b9970e905186f2b6f0ab75742f65d3</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2715cd7abca4c9c0ede4d3227507495f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a62582bc30f7bdbb674bd9eb636c8f7aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad4919361a2086212fac96da0221e4dcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2a2efabf1737ae8669c6cb2e018ee9a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ae792027e5ae23ebd90d55f6447746b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad2d637d3bde56c518b6394c45852b4ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3c59a148364abf99ed0fbdd742ad0c30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>center</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aef0a43bdd3b998eb4abeccfb69901108</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>translated</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a383e5039e9be5cd9ee2b01bcb1a59dff</anchor>
      <arglist>(const VectorType &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>padded</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a96e089200f2f516864f30be32fd928d9</anchor>
      <arglist>(const VectorType &amp;padding) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>scaled</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3dde95deae8eb49866d5fa20d697b7f4</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>scaledFromCenter</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aa2f8a673876848215327b4d63b255d24</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a533a85506cc4477abdae31e6de91a5d0</anchor>
      <arglist>(const VectorType &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ac662b1902428c419d6fae43d25bbacb1</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;b) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, T &gt;</type>
      <name>fromSize</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6c72f85612084d91d80c5c95905b2e32</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, T &gt;</type>
      <name>fromCenter</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aaa5a16a5eeebaf324ee9849e7744f2db</anchor>
      <arglist>(const VectorType &amp;center, const VectorType &amp;halfSize)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>join</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ab1a605df6c5b25fe493c1ee83e2ae6d6</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>intersect</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a4cf6ac31a2f0a80774021f83cd397426</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a21df4e4922ea49e428d71f6fe56e7b63</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a1f3385fec96840d6f57368596e7b8fe5</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Range&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Math_1_1Range" title="Use in generic code">Math-Range-generic</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Range2D</name>
    <filename>classMagnum_1_1Math_1_1Range2D.html</filename>
    <templarg>T</templarg>
    <base>Range&lt; 2, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a8e5fa029f93091756be5ac1ab4659ce9</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ad6fbfb66b109a075ec04f9c1714901f0</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>aba01c4477be2625eeac588c1291012f1</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a29a5b08d68619e6f88d1ebcc71a14d7d</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;min, const Vector2&lt; T &gt; &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>abf4ff365167312845528c8c29d9fa13b</anchor>
      <arglist>(const Range2D&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac6fff4886595aa98843ea4b0143953dc</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac6b2efabb797a86e2695ae5c52345ad8</anchor>
      <arglist>(const Range&lt; 2, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt; &amp;</type>
      <name>bottomLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a72523c0c53c0c1eb52b2bf4ee20ef655</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; T &gt;</type>
      <name>bottomLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>aad0afb0a3c99b351bd28f821389dcd3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; T &gt;</type>
      <name>bottomRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a60456f7c398d53b1b1e225298f07f421</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; T &gt;</type>
      <name>topLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a4d853da0c896ca113bce1f984e0ca070</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt; &amp;</type>
      <name>topRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>af722c06c6594f0c95dd8e226ada01e4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; T &gt;</type>
      <name>topRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a3eff9b525a63168ef4cef378e692291a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>left</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ab0045c3d9efc537479a7e1a3b62a3d31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>left</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a5f099e84b0b9d36415b39468eb1ac95c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a6dd0190fea1c0ca659b08761d7de8d21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a5796dd1cb50687b3c2ca1a7456ba0f6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>bottom</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>add87a538ca7568b55d86377b16192226</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>bottom</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ab5c52e6efa2407b70155fded40a28905</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>top</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a304ac9d040df205686a08ec706ccc51a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>top</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a029fc35b1654114396d56c38c6ffc5a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Range&lt; 1, T &gt;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac3c3a467504221db21594193752cea5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Range&lt; 1, T &gt;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a1537da527c80dfbec801d645ac972171</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sizeX</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a073eae95552ee758f592ef235863939d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sizeY</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a8dc36ba53543299f1bb1a9a32da266cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>centerX</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a84b2f466fd99dc9c01acb4cd315e0efa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>centerY</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a7330d482350accc43b8b8a6c61b937db</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Range3D</name>
    <filename>classMagnum_1_1Math_1_1Range3D.html</filename>
    <templarg></templarg>
    <base>Range&lt; 3, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Range3D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a81ee8ecebe092b6bb4e0bf75221af907</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range3D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a7c5bded658f8c8e3136087eb2e96ebfe</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range3D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>ac69dc08457d0394757dbe06a85c5a677</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range3D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a9f63b11e3d68bf2ee8ece361412a4691</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;min, const Vector3&lt; T &gt; &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range3D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>add87562c91ca8368f081f928d9316321</anchor>
      <arglist>(const Range3D&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range3D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>aef79c60912137a909ded6985db0a4d67</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range3D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>abd079518721f25e5c5881f9cc379d86b</anchor>
      <arglist>(const Range&lt; 3, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt; &amp;</type>
      <name>backBottomLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a538d83a3a8dd9886fdee223ad5737025</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>backBottomLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>aafe72b95217774504c2ade59dbbc0c1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>backBottomRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>ad0b4e97d6bef833682fd41cb086e9fed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>backTopLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>ab02fe405be79cfd77b820d9bf1130855</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>backTopRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>ac812f53ea6729f335d40bccb99ae30a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt; &amp;</type>
      <name>frontTopRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>acbc3adf04f1660a33114ee8a2be57a9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>frontTopRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>adf62bf01664c2bea12a725d49834b700</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>frontTopLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a584789146a93716b9323b6cf816d420c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>frontBottomRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a18e18cdc907d81a135307311accbcd38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>frontBottomLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>ac08abd0cd10bce537bb5c74318cf658a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>left</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>afd3e55f3b41625a536ae0b796ebb1fca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>left</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a57a1d6bfbf9d9a24f2b8bbc3279391a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a0c51e4b91035bade69e5cdd749470c9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a49d1c4877bb251ae05c6608c81842743</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>bottom</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a31e7bbdeeb735e8e3933f86bc185cd53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>bottom</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>adf424319f851150b83f3cabaad3bebe3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>top</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a13c69973eefb791daa1c3effda176b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>top</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a6c1c5f8786f8818ef87f81d8d7a0dce6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>back</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a12afe910da6758f65e96a5846186ac66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>back</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a79efebd9ddd81b531a2f610110b14f36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>front</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>ad82da90dc7bfa8790cbdc563efcdf541</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>front</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>ae5b7a8f31203aa4b93945c695f9f1780</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Range&lt; 1, T &gt;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a892090a7aa6c60c1002f81eef1d02354</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Range&lt; 1, T &gt;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a69f9f0d89ce18302ac592a92ec20f543</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Range&lt; 1, T &gt;</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>ac75461d24b0eac9a09f5c0d110b33ee8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Range2D&lt; T &gt;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>ae96e031542f7576fc851ab822f44ca68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sizeX</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>aaec1b5cf97bce4344dd2a5758fc87cb8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sizeY</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a81a3ed30632ab91a00e6fffe48bf703d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sizeZ</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>ae6ec48faaf084691cc52147ce47e7c7e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>centerX</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>ab01908aabc6545cf1e35d88698d94a8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>centerY</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>acbcac036f5ca6492e82c13d6104a8c9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>centerZ</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>ab6e4ecf36ddef40ba4c16c547c35a9ae</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::RectangularMatrix</name>
    <filename>classMagnum_1_1Math_1_1RectangularMatrix.html</filename>
    <templarg>cols</templarg>
    <templarg>rows</templarg>
    <templarg>T</templarg>
    <member kind="enumvalue">
      <name>Cols</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a027df728dac126bd0156a17e4fc2b15fab1d8e57eaa8f76414d64eec51b2c69a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Rows</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a027df728dac126bd0156a17e4fc2b15fad1257f2c47ba6de49124e584aa29fa5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DiagonalSize</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a027df728dac126bd0156a17e4fc2b15faf08ebca5bb2c2fbf4d0a2340cbd5b46a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a518fcd0815a9c2b24b429ffc6a9ef5a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Cols</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a027df728dac126bd0156a17e4fc2b15fab1d8e57eaa8f76414d64eec51b2c69a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Rows</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a027df728dac126bd0156a17e4fc2b15fad1257f2c47ba6de49124e584aa29fa5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DiagonalSize</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a027df728dac126bd0156a17e4fc2b15faf08ebca5bb2c2fbf4d0a2340cbd5b46a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ae4553743a264bc6e0a66a8776ae14da8</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a6009f95ed2cba70259e3cc748d229069</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a04fb3ef57a300c528475d4f77c190b1b</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aa4d25ccbf54d4e83ce99173d83afeb00</anchor>
      <arglist>(const Vector&lt; rows, T &gt; &amp;first, const U &amp;... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a04b9085c6de3a53567f36b45c4eb9225</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a5df773bcf7827a2c23cfc477f73306ca</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a3ecfd82db21760be18d560777edc67a5</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a66735ff7cfdf23ff7fc8c8fca466f8e3</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a92d9f16dd53e8c60f912212381270688</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a18852de01a97e7f65398097520364288</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a882b199d2b7f18abe3980bb08568326b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; rows, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a9bc7bd15bebd143c7eab6dda01b8c647</anchor>
      <arglist>(std::size_t col)</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector&lt; rows, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>accdb25c48a591f75f9c18304c8b08e57</anchor>
      <arglist>(std::size_t col) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; cols, T &gt;</type>
      <name>row</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a5e8632dd419c545421991bbe0660b0cf</anchor>
      <arglist>(std::size_t row) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRow</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>afa7d894585174e509984a83ab9e9538a</anchor>
      <arglist>(std::size_t row, const Vector&lt; cols, T &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a83317c37a9493d65c5b2834407fdec5f</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ac381f262a7665b382f73c32925e47378</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; cols *rows &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a1d00a6644290cafdcf8ea02ae10a1d36</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; cols *rows &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ac0825c48cca576f6425a133504b4fb66</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; cols *rows &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>adfc9e199cd6cc8e67ada273443b138fd</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; cols *rows &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ae1ee073595f293a7d014f0b655170db4</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a45f356ab8240e14486bf84f622059b5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>adf84e802e22d8196d542bcf8530097a5</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ac0645c43273fe88f6795e9653994f083</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aa15b9de3a8dcc459b1a40d30b1cba635</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a6798090ca6e9bbb52303f499db5c1af3</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aff9cc62672a8d760f43d9caa25f95854</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ad493e29f21cce9cdf014c97eda1e8b37</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a15a877951dbfc7804a0b883b6aae60da</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a01f0e65957dc0fe3c9c0bdebab7dbc42</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; size, rows, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ad5b68758852e6c871f89c522067406e3</anchor>
      <arglist>(const RectangularMatrix&lt; size, cols, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; rows, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a577f6efb443b111eb0cd508e3c617dbc</anchor>
      <arglist>(const Vector&lt; cols, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; rows, cols, T &gt;</type>
      <name>transposed</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a5b808dc2358fd7caa4cb15b254a97ca0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>flippedCols</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a2dc8438bd21f0cfd724b96f0c87c1b70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>flippedRows</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>add503da27438282a1eb47cee1f929e5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; DiagonalSize, T &gt;</type>
      <name>diagonal</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a7c799b9741575c1919e61d9f38a52228</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; rows *cols, T &gt;</type>
      <name>toVector</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a7a1eebc345f4d1768e1c707cb3d0b15d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aedde7d7c746be363bf845ebce7496274</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a482af1168480ab08df88d4529a71fa2b</anchor>
      <arglist>(const T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>fromVector</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aaf45a111900971de89b0448ffafa29c6</anchor>
      <arglist>(const Vector&lt; cols *rows, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>fromDiagonal</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a2b5423dcaab476595937428092187123</anchor>
      <arglist>(const Vector&lt; DiagonalSize, T &gt; &amp;diagonal) noexcept</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a857a83c191f7e2b43540231bd31f6ca9</anchor>
      <arglist>(T scalar, const RectangularMatrix&lt; cols, rows, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ab8a19b385a4f0fd3f5ba1bbeb18e4ccf</anchor>
      <arglist>(T scalar, const RectangularMatrix&lt; cols, rows, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aaed1e091d5eeb50532741f90c39639e9</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;vector, const RectangularMatrix&lt; cols, 1, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a2b4c9a90c6ef57998d88efe24b223a07</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Magnum::Math::RectangularMatrix&lt; cols, rows, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Math::StrictWeakOrdering</name>
    <filename>structMagnum_1_1Math_1_1StrictWeakOrdering.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structMagnum_1_1Math_1_1StrictWeakOrdering.html</anchorfile>
      <anchor>afb2928f5f2ad7c390549d960e30ba298</anchor>
      <arglist>(const T &amp;a, const T &amp;b) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Math::TypeTraits</name>
    <filename>structMagnum_1_1Math_1_1TypeTraits.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>U</type>
      <name>FloatingPointType</name>
      <anchorfile>structMagnum_1_1Math_1_1TypeTraits.html</anchorfile>
      <anchor>a0ec0c970bdf97752fa9570088e942acd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr const char *</type>
      <name>name</name>
      <anchorfile>structMagnum_1_1Math_1_1TypeTraits.html</anchorfile>
      <anchor>a8429cde176b586538bc81e0a7855d898</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>epsilon</name>
      <anchorfile>structMagnum_1_1Math_1_1TypeTraits.html</anchorfile>
      <anchor>a915c1572d075ae136a0f89ff11da5567</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>equals</name>
      <anchorfile>structMagnum_1_1Math_1_1TypeTraits.html</anchorfile>
      <anchor>a8e7ba417cfae3d00b717a17afed16152</anchor>
      <arglist>(T a, T b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>equalsZero</name>
      <anchorfile>structMagnum_1_1Math_1_1TypeTraits.html</anchorfile>
      <anchor>ad617cc41b2cf1fbf78ea45f222e282bd</anchor>
      <arglist>(T a, T magnitude)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Unit</name>
    <filename>classMagnum_1_1Math_1_1Unit.html</filename>
    <templarg>Derived</templarg>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ab2e8497e07678a07d34a06afa2f626e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a618525f8bcc09d925e2ad4df434088d7</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a92df661b8b5708e9163143120ef8c146</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aae41c717c1a7e3d87249b094e2e7a2cc</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a12be119a79e2633d6a63bc8725d6254e</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ad3433bd988806231e5912b8f9c97cd12</anchor>
      <arglist>(Unit&lt; Derived, U &gt; value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aef1230eb1f0f105cc5fa361252fd82ba</anchor>
      <arglist>(const Unit&lt; Derived, T &gt; &amp;other) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator T</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ad3daaa7512ba4921a3ce45a5834ebccd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a893631dd50266c6c2220a10be32141c8</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ae16bd77a7b2792454325f9a8dcba2408</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a16cd8c8a1097cb629abec4cd41cd29bc</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a94d88d9b634f4fb6db87f26cd06edc10</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>add731be31fd911fc4a312eb3f32fa636</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>abc5312ce70aa7e355e7725a4d041a90a</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Derived, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aa97419bbdb20717a9fe338e433b2c980</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Derived, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aacb4f2522bf1dd729c588e7f58cbdd84</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Derived, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>abb2ad665f946a3f4758f69f9da742eab</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Derived, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a331d372da95342b27e44314083b288d6</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Derived, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a83f44ad7991944e5dfa013998851bfc6</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Derived, T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a2ce61d9c75694b1a19429804e7e9e025</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Derived, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a43ea20c0de684591365881acb649e6b8</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Derived, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a0f6cf00382251fa20c2b3a2a1c5b4424</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Derived, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a35f89b0c0646977e2cc741542c88bfac</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a9210ee22ce427d36f4a6c9d4f56cd1d2</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Derived, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a5a4b711ccc9f18f9dbee94995c3520f4</anchor>
      <arglist>(typename std::common_type&lt; T &gt;::type number, const Unit&lt; Derived, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Vector</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <templarg>size</templarg>
    <templarg>T</templarg>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0634d37e5a1519ace4b803e06ecb43cfa2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0634d37e5a1519ace4b803e06ecb43cfa2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c134c9f5cdb4e5c6886d8c73f2b57d1</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac3524040cfdd9709bdb56242e5efd882</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a153841d1ca03ab3811d3bf43f381d782</anchor>
      <arglist>(T first, U... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b4c806af871f8861814bb6eeff4395f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad1ef6a051bb081ff81c5a4070cb4fdf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6fede358bde75530578036f5144f295e</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab905b0efb03cf6e09395d1e9251f3860</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af75dd213f994f154cd693056b94426e2</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9f5051aa0ceaa935da2ea1c86ee9763f</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a84a88da37683e57a59ab30e73e737e51</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a190de3ad0b3fc8688348a45b3bb68588</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7137a5c0dd802f5f587c0166251ec271</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae3d83b814def0dc539ef92f268d06ef6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e1dcc1ee8a2bf7bae0ac4cbe507eb16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91edf5e7b6b815bf5a46c87b0cc34753</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b9157115c3f38190ab01ae9a43bc64c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dcb5089b460ab47a0a3d9b06c3f43fc</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2b7f88740a354041a7874b67b45a7068</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af48972b84492b789e790bbc4bbc91008</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ece942a9d2413efa3a80d203a0fb0f2</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a997212fb25ecc5086fdc40bee98f5a54</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfd197a1ed9b9ba2a7b8b6f3e2ffd57e</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfc51e8b830e24a036c5fd533226306d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0c4ee399d5519dce001580496d7725be</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ff59211affc895b3fce601521204cba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aacb3f8fb6e72a6320ee1d54573b984e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa36b88833846a6273d615c9dd5162ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abf62db06660ed3400c2c821650685d18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18a0d90b9d68f689f78dfbae207baf14</anchor>
      <arglist>(T length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a56a53e47640fa101a07b09829a690fa9</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1d7fcd5a855055ff6a3f8211ec2acfbf</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, T &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1f04a8aab1c8e61ab927b72d27b36fbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ace6841f09c905a8d28d1717ac9297738</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abad4faef8f2d96d9f911a00762506ee4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a25b77344cc1f8d3c330f77584660791b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a86a9ba7941653ed31447ad09cb855f50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a981118d0b1a6101c6b8df136dc08a5f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, T &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, T &gt; &amp;a, T value=T(0))</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; FloatingPoint &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aee8c44413ae416ea25a03146bf8a5484</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;normalizedA, const Vector&lt; size, FloatingPoint &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>equal</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5b9f7afdebb621e14931b9199bb57920</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>notEqual</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9c34112dad523fa92071f5cad7f01d3c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1ea63308ee1f0174b602004293189a5b</anchor>
      <arglist>(T scalar, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a740e684ba6af1944fe621ab15600e738</anchor>
      <arglist>(T scalar, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator &amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af62ef89cd21a0f1f3e860f5e1a50a68e</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae51db32d9dd90d4afdedcf008e15a5fb</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e4baf5c1f33fe5db74b29835e356654</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa947967a1311fcc5edbb52332b418e46</anchor>
      <arglist>(FloatingPoint scalar, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a320e28a1b95546d77d2603fa5da088cf</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af26b82bbc46d722b34979df93bd7c344</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2802be457dc38a0090c13074a45e5d23</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa21a302814733abb0d4d59de87421001</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac2100f59a9660445d7df3b703daafff</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Vector2</name>
    <filename>classMagnum_1_1Math_1_1Vector2.html</filename>
    <templarg>T</templarg>
    <base>Vector&lt; 2, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a8ee62c69a2005bbd1b0e3f5c89b52c4f</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>aeec1dd75eec65d056b6e418527181895</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae39d10df93e68e4d0415ada257e826de</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a594b5a10001b0a5626011490aee1b553</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>abc9c7d99a718e2280028cd40cbfcb2c6</anchor>
      <arglist>(T x, T y) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a271e60cacd2cf82cdccc2c6be2d1d832</anchor>
      <arglist>(const Vector&lt; 2, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae15a00d470ae74d85596deb6ba5ee32c</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a4f5d0735664c9600830a6cefbdac221c</anchor>
      <arglist>(const Vector&lt; 2, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a4d5125c64aec36d08023c2e82f6acbdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ad0287e9d975c15c118e8bb3872c2c948</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a65a74d0a2d9ab8ffa032c2085b2ebc7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a9b87fa8e49850e7c5469bdb7a025386e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt;</type>
      <name>perpendicular</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ac4bf17cef48a5b842092595e1d7a3881</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>aspectRatio</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a4f097e00b03c17ffe212da2c8371d614</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; T &gt;</type>
      <name>xAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a90795a3ca77e0df1017cdbcb9552e3f5</anchor>
      <arglist>(T length=T(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; T &gt;</type>
      <name>yAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae842e564c385b5c6d7a3bf6a7710798a</anchor>
      <arglist>(T length=T(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; T &gt;</type>
      <name>xScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a0ea3ef7c48c5c304f8ca2304138ead91</anchor>
      <arglist>(T scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; T &gt;</type>
      <name>yScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae24066f2e0ad888faeaa839149068586</anchor>
      <arglist>(T scale)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Vector3</name>
    <filename>classMagnum_1_1Math_1_1Vector3.html</filename>
    <templarg>T</templarg>
    <base>Vector&lt; 3, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a694547ad274e9d0655f8b34899f8f2d8</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a96ab187a56a28a976f424efa2cbe6a62</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a68b81fc43343ea75bb6bd4c705aea7e0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a61a987b9bd7ae821f95fbe67d4d3a60b</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ae802b9e422b70b200a70b7c8f40625dc</anchor>
      <arglist>(T x, T y, T z) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a75ef10a3f27446ff9bd02b1dd1b5f58d</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;xy, T z) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a779b7e5a6262b2cfd9577414dc63c716</anchor>
      <arglist>(const Vector&lt; 3, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a058879e4b043bcd45e4387f5051619cb</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a25e3da8ce96c645cf2a782305a2b12a5</anchor>
      <arglist>(const Vector&lt; 3, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a30c538699bff804fb2fb205e1e30d207</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ace9c68d6dab4c075e153afde40e743c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ae51e27f72cf5db9142a8761a4dce56fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>adc79d0b323fc3f415833bcf29edeb406</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a194609d99092b9f3443208f355c685ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>aa460c7193ffbf871888912b3007a4cbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a4b90a303fe009795f5a48214da862be9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ae11cceab1684739b42ee4ccba460c307</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a5635d89362bf6559fb014d0ecabc6813</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a46a00528415633e71c90790d172ca86f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a240568b4069ed8aabd9eb7bba3d4a8d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a0d8c76bd32ec83265fe53d535664b172</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt; &amp;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>aedf182498210bb6999346591599ffb44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector2&lt; T &gt;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a286fe8f7831d2948b0f741f206b43ac5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; T &gt;</type>
      <name>xAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a922be261842df8d174cdcfe1e1eb72da</anchor>
      <arglist>(T length=T(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; T &gt;</type>
      <name>yAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a49a18966ee5980786f9e42162febf82f</anchor>
      <arglist>(T length=T(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; T &gt;</type>
      <name>zAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a9476a5845a4b28caa36c8cb75298f0db</anchor>
      <arglist>(T length=T(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; T &gt;</type>
      <name>xScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a2272fdcf3efb0aa0ea7c79e1927c5b91</anchor>
      <arglist>(T scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; T &gt;</type>
      <name>yScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a84688a819f616d059d472e92c6f80f54</anchor>
      <arglist>(T scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; T &gt;</type>
      <name>zScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ada1b75b4ea58dfe1771d0593e8c2e071</anchor>
      <arglist>(T scale)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Vector4</name>
    <filename>classMagnum_1_1Math_1_1Vector4.html</filename>
    <templarg>T</templarg>
    <base>Vector&lt; 4, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aa42da5920b0c7b9a22c231a7ce2023ec</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ad203bf8fe5464c2139ec449e945b4ad2</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ae6892ff7c3ed4626ea99b73f29bc9235</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ac311a28a30f9ce485a2a61f18c4c801b</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a71c9a0ed0b5b185672501fca3c51a98c</anchor>
      <arglist>(T x, T y, T z, T w) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aff20895adccd77f096e8a454533312a6</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;xyz, T w) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ab00c86b71d9bb66d4216b31b3b5b86cf</anchor>
      <arglist>(const Vector&lt; 4, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a485318584ef67c13775b2885efb31671</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a99ad9f8b03a4a5db2bafdd38d0bf820b</anchor>
      <arglist>(const Vector&lt; 4, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a44cc44ad96da15bf040b711fc433c68e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a4d4bab019c30ecf7a79634db10495158</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a36379d5ad3bf107bae1350b79053162b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>acb3a125702bba6fef33cfffa1440e012</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a2ca432de620e30419826ab63d01dc11e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ae2bd9cc7971d3e77354f1db850808f0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>w</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a7d629f87754fb6f3c588594c4bf23f6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>w</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aa69d10f9fad88eb586f1818c7881cb3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a63f020a0b0efecc40b7e77a6a5c8faab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a0173103ea7d789ab2459d86490953f84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a0a4427077479ae52b3d208e15c0e915f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ad9e718ad972f7fc0dc8b15a38e805c9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aa6d70fccd810e231fe5b8917d2ce0ab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aceb19be42664241069c5ea8329f82f96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>a</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ac18be154bdf0d5a6c52f6dbcd1a33139</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>a</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ae710faf1d4c0d9e70bbcf952e24d3e94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt; &amp;</type>
      <name>xyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a22aae9d118103c82fb5411b8c5616d62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector3&lt; T &gt;</type>
      <name>xyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ae271cab96f56a4f2ef444c57f26f7a77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt; &amp;</type>
      <name>rgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aa731470df39b494e1c65f6d12a2551fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector3&lt; T &gt;</type>
      <name>rgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a59678977b93bc7372db7de5d4b1255dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt; &amp;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a3325cd512caa0c56c49bb74a022dc965</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector2&lt; T &gt;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>af2662a6b8a9433c118be6fa0f57d1955</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector4&lt; T &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a2ffd1bba90fe992a80655bb192075d4c</anchor>
      <arglist>(const Vector&lt; otherSize, T &gt; &amp;a, T xyz, T w)</arglist>
    </member>
    <member kind="function">
      <type>Vector4&lt; T &gt;</type>
      <name>planeEquation</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a0c975a8c8c6bbff31a943561f9adf681</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;p0, const Vector3&lt; T &gt; &amp;p1, const Vector3&lt; T &gt; &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>Vector4&lt; T &gt;</type>
      <name>planeEquation</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>adcb3b9fbc37a6d26d5330b1e5c84d143</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;normal, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Math::ZeroInitT</name>
    <filename>structMagnum_1_1Math_1_1ZeroInitT.html</filename>
  </compound>
  <compound kind="struct">
    <name>Magnum::NoCreateT</name>
    <filename>structMagnum_1_1NoCreateT.html</filename>
  </compound>
  <compound kind="struct">
    <name>Magnum::OpenDdl::CharacterLiteral</name>
    <filename>structMagnum_1_1OpenDdl_1_1CharacterLiteral.html</filename>
    <base>ArrayView&lt; const char &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>CharacterLiteral</name>
      <anchorfile>structMagnum_1_1OpenDdl_1_1CharacterLiteral.html</anchorfile>
      <anchor>a4857ec122deba79fca99775f20d49bf1</anchor>
      <arglist>(const char(&amp;string)[size])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OpenDdl::Document</name>
    <filename>classMagnum_1_1OpenDdl_1_1Document.html</filename>
    <member kind="function">
      <type></type>
      <name>Document</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a81b3bb36beebb7c356cde21695ac42ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Document</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a8e10d09a9949e8a51cbe5cb84696bd6e</anchor>
      <arglist>(const Document &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Document</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a7c0d54dd3470c5ff8a1c45be215a2a2c</anchor>
      <arglist>(Document &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Document &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>ad6dc95e6548a673ca6a74fd0de5b315b</anchor>
      <arglist>(const Document &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Document &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>aeb290b7daa1fcb285956815eabfcbdb4</anchor>
      <arglist>(Document &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a20d36c2ba73d7972bd5d04e611f1e08f</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data, std::initializer_list&lt; CharacterLiteral &gt; structureIdentifiers, std::initializer_list&lt; CharacterLiteral &gt; propertyIdentifiers)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>aa8f2eccf58ea927116c757377d7ccc5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Structure &gt;</type>
      <name>findFirstChild</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>ab6165b215ff891f3063ee8be9d9b3095</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Structure</type>
      <name>firstChild</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>aba20194385239e0a1b87cf10e7a16712</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Implementation::StructureList</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a0683347ab8fbc45ce04245ef2d72b52d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Structure &gt;</type>
      <name>findFirstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a1590ddd271f7d5dc34d3af9c80b64f8c</anchor>
      <arglist>(Type type) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Structure &gt;</type>
      <name>findFirstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a23103daa5b546b3c5de0e5ab3b46b9c5</anchor>
      <arglist>(Int identifier) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Structure &gt;</type>
      <name>findFirstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>ab100c5754a71b48533e18fb0e90cd425</anchor>
      <arglist>(std::initializer_list&lt; Int &gt; identifiers) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Structure &gt;</type>
      <name>findFirstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>afae80f39cc926e9f8ab8f4a3cc8d4054</anchor>
      <arglist>(Containers::ArrayView&lt; const Int &gt; identifiers) const</arglist>
    </member>
    <member kind="function">
      <type>Structure</type>
      <name>firstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a4443dda4370feb0374fb3b6b0c821854</anchor>
      <arglist>(Type type) const</arglist>
    </member>
    <member kind="function">
      <type>Structure</type>
      <name>firstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>abf1fed8b50bd7b96d1641d1777718a50</anchor>
      <arglist>(Int identifier) const</arglist>
    </member>
    <member kind="function">
      <type>Implementation::StructureOfList&lt; sizeof...(T)+1 &gt;</type>
      <name>childrenOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a79eb83406bccbc8845bab1a18209baf3</anchor>
      <arglist>(Int identifier, T... identifiers) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validate</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>afd0f4f9528e45ab1b50c0b490462cb8a</anchor>
      <arglist>(Validation::Structures allowedRootStructures, std::initializer_list&lt; Validation::Structure &gt; structures) const</arglist>
    </member>
    <docanchor file="classMagnum_1_1OpenDdl_1_1Document" title="Usage">Magnum-OpenDdl-Document-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::OpenDdl::Property</name>
    <filename>classMagnum_1_1OpenDdl_1_1Property.html</filename>
    <member kind="function">
      <type>Int</type>
      <name>identifier</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Property.html</anchorfile>
      <anchor>a9241d9c070c0402c810698de3c3106c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTypeCompatibleWith</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Property.html</anchorfile>
      <anchor>a51e8e0f311127d1fea85a951b24e2914</anchor>
      <arglist>(PropertyType type) const</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>as</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Property.html</anchorfile>
      <anchor>afcf1d3ca81c279cd6876294b2d97a99c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Structure &gt;</type>
      <name>asReference</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Property.html</anchorfile>
      <anchor>a3b51c6e75e1575df31f06614f1be4a56</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OpenDdl::Structure</name>
    <filename>classMagnum_1_1OpenDdl_1_1Structure.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a56bfb2a85640cc4d77dba5b0b1234195</anchor>
      <arglist>(const Structure &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a2ab869a143293045e253e4aa85c65c68</anchor>
      <arglist>(const Structure &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCustom</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>ae7a783b5612df8f46fb3fb84a26ace43</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>ab7df01df49772c8cd276f4cf3d1ca834</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>identifier</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>ab4085b459676cf620dd2d154c243035b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasName</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>acc7e58eef81070cf7908500d35444ca6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a8ef1e583c89b93f9412195a12400695c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>arraySize</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>adc2dfaf49a91a54aed7fed79c4b3c220</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>subArraySize</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>aea43f173b58c46e1f78befde3675f143</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>as</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a45a4807bcd50962ab421bd95b388425b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Structure &gt;</type>
      <name>asReference</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>ab913aa41a28678267b7fb07f09d6aec5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const T &gt;</type>
      <name>asArray</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a2aae9a579f404aae6bde70c804b1cafd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; Containers::Optional&lt; Structure &gt; &gt;</type>
      <name>asReferenceArray</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a6bc518cdd22fc51a33cfd1180aa8df89</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Structure &gt;</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>aa892dcfb19955aba458e7c09d69a2e82</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Structure &gt;</type>
      <name>findNext</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a9906af0c2f798dd8444e143d7cc6ab90</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Structure &gt;</type>
      <name>findNextOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a5eb5b3733c1e13bad3f6d2a44c77e196</anchor>
      <arglist>(Int identifier) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Structure &gt;</type>
      <name>findNextOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a2a8c4f2a15a652223eb3d9f51a9ab945</anchor>
      <arglist>(std::initializer_list&lt; Int &gt; identifiers) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Structure &gt;</type>
      <name>findNextOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>afafb8754a02f4d1699859e565c98d368</anchor>
      <arglist>(Containers::ArrayView&lt; const Int &gt; identifiers) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Structure &gt;</type>
      <name>findNextSame</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a7f91b575993243334c40810c65bf5f74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProperties</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a88decf699dbb173c043d5db03e4cfc48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>propertyCount</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>aba4e45d718e73077358c551febf0ff72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Implementation::PropertyList</type>
      <name>properties</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a98b7aba8530d899109d03f9eda1c005e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Property &gt;</type>
      <name>findPropertyOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a36d1e7b3a4a083e039c1d4d1254dd08b</anchor>
      <arglist>(Int identifier) const</arglist>
    </member>
    <member kind="function">
      <type>Property</type>
      <name>propertyOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>aff8ab79be829db6e34f856c91181d6e6</anchor>
      <arglist>(Int identifier) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasChildren</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>ab846a40e98f07055bcf6eaa1e26b26f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Structure &gt;</type>
      <name>findFirstChild</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a73d68f83bb5547b3e2a36720cd91e8fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Structure</type>
      <name>firstChild</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a3f18399327880cae9f715b9faff7fe93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Implementation::StructureList</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>ae7ddca44a12c21dec23c7373676b7528</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Structure &gt;</type>
      <name>findFirstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a38289971f23267a8b76f8b1fc4cd6ec3</anchor>
      <arglist>(Type type) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Structure &gt;</type>
      <name>findFirstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a7baaea64f673d2d343fb52b487c6deb9</anchor>
      <arglist>(Int identifier) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Structure &gt;</type>
      <name>findFirstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>ae54d26aed452583b3b696ea38b3c2dbd</anchor>
      <arglist>(std::initializer_list&lt; Int &gt; identifiers) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Structure &gt;</type>
      <name>findFirstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>ad35fe3180e1620387205c343b51fc961</anchor>
      <arglist>(Containers::ArrayView&lt; const Int &gt; identifiers) const</arglist>
    </member>
    <member kind="function">
      <type>Structure</type>
      <name>firstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a0818a7622f375765944060c55aa9a5a5</anchor>
      <arglist>(Type type) const</arglist>
    </member>
    <member kind="function">
      <type>Structure</type>
      <name>firstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>af73a1d9017ff47519a495d461330d900</anchor>
      <arglist>(Int identifier) const</arglist>
    </member>
    <member kind="function">
      <type>Implementation::StructureOfList&lt; 1 &gt;</type>
      <name>childrenOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a88add479fc55b15f8ad860fc5001f970</anchor>
      <arglist>(Int identifier) const</arglist>
    </member>
    <member kind="function">
      <type>Implementation::StructureOfList&lt; sizeof...(T)+1 &gt;</type>
      <name>childrenOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a131dd66ceab41d7a338b2cc300f70662</anchor>
      <arglist>(Int identifier, T... identifiers) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OpenDdl::Validation::Property</name>
    <filename>classMagnum_1_1OpenDdl_1_1Validation_1_1Property.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Property</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Validation_1_1Property.html</anchorfile>
      <anchor>a56ccb7cfda54d9c467e5811fbce26f9c</anchor>
      <arglist>(Int identifier, PropertyType type, RequiredPropertyType required)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::OpenDdl::Validation::RequiredPropertyType</name>
    <filename>structMagnum_1_1OpenDdl_1_1Validation_1_1RequiredPropertyType.html</filename>
  </compound>
  <compound kind="class">
    <name>Magnum::OpenDdl::Validation::Structure</name>
    <filename>classMagnum_1_1OpenDdl_1_1Validation_1_1Structure.html</filename>
    <member kind="function">
      <type></type>
      <name>Structure</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Validation_1_1Structure.html</anchorfile>
      <anchor>a0e4fcc701482dce008d5a0ea1ae455b6</anchor>
      <arglist>(Int identifier, Properties properties, Primitives primitives, std::size_t primitiveCount, std::size_t primitiveArraySize, Structures structures={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Structure</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Validation_1_1Structure.html</anchorfile>
      <anchor>a55047621dc9350aa61737b7762abcd56</anchor>
      <arglist>(Int identifier, Primitives primitives, std::size_t primitiveCount, std::size_t primitiveArraySize, Structures structures={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Structure</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Validation_1_1Structure.html</anchorfile>
      <anchor>a5191f7a0a7427c90b2cc7cbb18c56348</anchor>
      <arglist>(Int identifier, Properties properties, Structures structures={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Structure</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Validation_1_1Structure.html</anchorfile>
      <anchor>a26fe4395c4063ffaba9b69293a70116b</anchor>
      <arglist>(Int identifier, Structures structures={})</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::OvrIntegration::Buttons</name>
    <filename>structMagnum_1_1OvrIntegration_1_1Buttons.html</filename>
    <base>EnumSet&lt; Button &gt;</base>
    <member kind="variable" static="yes">
      <type>static constexpr Buttons</type>
      <name>RMask</name>
      <anchorfile>structMagnum_1_1OvrIntegration_1_1Buttons.html</anchorfile>
      <anchor>ac038a6b0d78714d98b69fe99e5dd5d0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr Buttons</type>
      <name>LMask</name>
      <anchorfile>structMagnum_1_1OvrIntegration_1_1Buttons.html</anchorfile>
      <anchor>a53e6ef9b933b14671441c815695618d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr Buttons</type>
      <name>PrivateMask</name>
      <anchorfile>structMagnum_1_1OvrIntegration_1_1Buttons.html</anchorfile>
      <anchor>a612284da8d143a275e15435a0fa3570a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::Compositor</name>
    <filename>classMagnum_1_1OvrIntegration_1_1Compositor.html</filename>
    <member kind="function">
      <type></type>
      <name>Compositor</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Compositor.html</anchorfile>
      <anchor>ad26e34795db5d852a4b8de652f4e8f42</anchor>
      <arglist>(const Compositor &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Compositor</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Compositor.html</anchorfile>
      <anchor>a6707c0301cd33fdc6039dea41176e3a6</anchor>
      <arglist>(Compositor &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Compositor &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Compositor.html</anchorfile>
      <anchor>aaa92a83e2888d69c41ae41b83dca2447</anchor>
      <arglist>(const Compositor &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Compositor &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Compositor.html</anchorfile>
      <anchor>a08f45e9b956e7c9b4bf5b6ef4abb2c0f</anchor>
      <arglist>(Compositor &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Layer &amp;</type>
      <name>addLayer</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Compositor.html</anchorfile>
      <anchor>a0b9a7a09528a2ede23a0cc31028d30d9</anchor>
      <arglist>(LayerType type)</arglist>
    </member>
    <member kind="function">
      <type>LayerEyeFov &amp;</type>
      <name>addLayerEyeFov</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Compositor.html</anchorfile>
      <anchor>a73af2470ce69273019880741326dc6dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LayerQuad &amp;</type>
      <name>addLayerQuad</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Compositor.html</anchorfile>
      <anchor>add804d346f57112525f3808ac7eb5eee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Compositor &amp;</type>
      <name>submitFrame</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Compositor.html</anchorfile>
      <anchor>a68a95040c892970f05e35f19b693bbe7</anchor>
      <arglist>(Session &amp;session)</arglist>
    </member>
    <docanchor file="classMagnum_1_1OvrIntegration_1_1Compositor" title="Usage">OvrIntegration-Compositor-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::Context</name>
    <filename>classMagnum_1_1OvrIntegration_1_1Context.html</filename>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>ae365a583bbe41ad3935bc1aa0dc1cd14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>a4af60bdea85f618c5ecea33b5bfaabec</anchor>
      <arglist>(const Context &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>a5bc0309f7b10dc21a4edd17cfca06d02</anchor>
      <arglist>(Context &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Context &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>a181e32882994fea48b29715216168cff</anchor>
      <arglist>(const Context &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Context &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>ac8245dc715cfb680d1d324781295274c</anchor>
      <arglist>(Context &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>detect</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>aa0e55e7b93829311b281e4e190f265ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Session &gt;</type>
      <name>createSession</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>a2acf69a397f1c92be8db374fd6124983</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Compositor &amp;</type>
      <name>compositor</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>a6e9f5b8537d891b43382d6d8c924c8cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Error</type>
      <name>error</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>afbb30295f0a05e244f5f8c0f6135aee1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DetectResults</type>
      <name>detect</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>a6f727d7ae98cbc54c3b8faccb4bf9cdd</anchor>
      <arglist>(Int timeout)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Context &amp;</type>
      <name>get</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>a6be091c7c622ecdbaa523777e62be9d6</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classMagnum_1_1OvrIntegration_1_1Context" title="Usage">OvrIntegration-Context-usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>Magnum::OvrIntegration::Error</name>
    <filename>structMagnum_1_1OvrIntegration_1_1Error.html</filename>
    <member kind="variable">
      <type>ErrorType</type>
      <name>type</name>
      <anchorfile>structMagnum_1_1OvrIntegration_1_1Error.html</anchorfile>
      <anchor>a8d2cead82acd150ac99ad2d19ae1563d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>message</name>
      <anchorfile>structMagnum_1_1OvrIntegration_1_1Error.html</anchorfile>
      <anchor>a818d89d5cdf9ba840843f588fe612804</anchor>
      <arglist>[512]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::HeadLockableLayer</name>
    <filename>classMagnum_1_1OvrIntegration_1_1HeadLockableLayer.html</filename>
    <base>Magnum::OvrIntegration::Layer</base>
    <member kind="function">
      <type></type>
      <name>HeadLockableLayer</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1HeadLockableLayer.html</anchorfile>
      <anchor>a887d1ceffee76ba55f5d5166c31d30c5</anchor>
      <arglist>(LayerType type)</arglist>
    </member>
    <member kind="function">
      <type>HeadLockableLayer &amp;</type>
      <name>setHeadLocked</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1HeadLockableLayer.html</anchorfile>
      <anchor>a22b5cbfa1f602113a92a8e2bc2a88d09</anchor>
      <arglist>(bool headLocked)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHeadLocked</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1HeadLockableLayer.html</anchorfile>
      <anchor>a88075591282823f4224e3f2091a64907</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::InputState</name>
    <filename>classMagnum_1_1OvrIntegration_1_1InputState.html</filename>
    <member kind="function">
      <type></type>
      <name>InputState</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>aa0d2dc7c20e9bb27b89f41d0b9dcc200</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputState</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>a878924fe024423c96be3d04edc923b91</anchor>
      <arglist>(const ovrInputState &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>Buttons</type>
      <name>buttons</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>ac441054a9a41f2359d4ad463a28a115b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Touches</type>
      <name>touches</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>aaa41ea0d5534b29d92a74ffcb2c9f35f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>indexTrigger</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>abf3a590b2d78228f8977dd563f19242f</anchor>
      <arglist>(UnsignedInt hand) const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>handTrigger</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>ae7df8affbf67b81b85cfb06ce6a08a7f</anchor>
      <arglist>(UnsignedInt hand) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>thumbstick</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>a85aa7942f05cb96c54d1c2462a757673</anchor>
      <arglist>(UnsignedInt hand) const</arglist>
    </member>
    <member kind="function">
      <type>Double</type>
      <name>time</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>ae0733b8c717890c002d4de9d8d126009</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ControllerType</type>
      <name>controllerType</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>aa2a404c8d3d0606a7598b8b7e55f2549</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>::ovrInputState &amp;</type>
      <name>ovrInputState</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>a3d24cbf0ed6bf6273a197abea2ab248f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::Layer</name>
    <filename>classMagnum_1_1OvrIntegration_1_1Layer.html</filename>
    <member kind="function">
      <type></type>
      <name>Layer</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Layer.html</anchorfile>
      <anchor>ab9b0f106d1c85786beebaba03d3668ca</anchor>
      <arglist>(LayerType type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Layer</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Layer.html</anchorfile>
      <anchor>a71fb347608defed7eaa02fb607458b71</anchor>
      <arglist>(const Layer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Layer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Layer.html</anchorfile>
      <anchor>a726a01536134b8ebef01264984242e00</anchor>
      <arglist>(const Layer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Layer &amp;</type>
      <name>setHighQuality</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Layer.html</anchorfile>
      <anchor>a1b3c3683b4c083ee1516a00611ded54f</anchor>
      <arglist>(bool highQuality)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHighQuality</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Layer.html</anchorfile>
      <anchor>abf5bc03f2529651e23a5b371fe8658ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Layer &amp;</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Layer.html</anchorfile>
      <anchor>a833cbe956654859892c04095ced69b00</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>LayerType</type>
      <name>layerType</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Layer.html</anchorfile>
      <anchor>af21ae64d92a4a0a313b70f502f34d38f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ovrLayerHeader &amp;</type>
      <name>layerHeader</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Layer.html</anchorfile>
      <anchor>a0dcb137b2ccf3aa94923110e4ecc89d9</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::LayerEyeFov</name>
    <filename>classMagnum_1_1OvrIntegration_1_1LayerEyeFov.html</filename>
    <base>Magnum::OvrIntegration::HeadLockableLayer</base>
    <member kind="function">
      <type></type>
      <name>LayerEyeFov</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerEyeFov.html</anchorfile>
      <anchor>a47c5eaeb2894573eeb949e1a218e1937</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LayerEyeFov &amp;</type>
      <name>setColorTexture</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerEyeFov.html</anchorfile>
      <anchor>aa9ccac3838d778409bbf3a402b9c62ad</anchor>
      <arglist>(Int eye, const TextureSwapChain &amp;swapChain)</arglist>
    </member>
    <member kind="function">
      <type>LayerEyeFov &amp;</type>
      <name>setViewport</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerEyeFov.html</anchorfile>
      <anchor>a7106639162079d4011f727193e31d12c</anchor>
      <arglist>(Int eye, const Range2Di &amp;viewport)</arglist>
    </member>
    <member kind="function">
      <type>LayerEyeFov &amp;</type>
      <name>setRenderPoses</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerEyeFov.html</anchorfile>
      <anchor>a4c752e4b26332f52992ad5ed0afb28bb</anchor>
      <arglist>(const Session &amp;session)</arglist>
    </member>
    <member kind="function">
      <type>LayerEyeFov &amp;</type>
      <name>setFov</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerEyeFov.html</anchorfile>
      <anchor>a107be4851e9c5773ef3ce6c4225ef2e6</anchor>
      <arglist>(const Session &amp;session)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::LayerQuad</name>
    <filename>classMagnum_1_1OvrIntegration_1_1LayerQuad.html</filename>
    <base>Magnum::OvrIntegration::HeadLockableLayer</base>
    <member kind="function">
      <type></type>
      <name>LayerQuad</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerQuad.html</anchorfile>
      <anchor>a4d538b12dd52c5bb9fc360b9a1d5c84f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LayerQuad &amp;</type>
      <name>setColorTexture</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerQuad.html</anchorfile>
      <anchor>a6901cd28c1ebb3f539ad1fcb702b35cb</anchor>
      <arglist>(const TextureSwapChain &amp;swapChain)</arglist>
    </member>
    <member kind="function">
      <type>LayerQuad &amp;</type>
      <name>setViewport</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerQuad.html</anchorfile>
      <anchor>adaf6dd57fda56bec3186cff648aa96ab</anchor>
      <arglist>(const Range2Di &amp;viewport)</arglist>
    </member>
    <member kind="function">
      <type>LayerQuad &amp;</type>
      <name>setCenterPose</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerQuad.html</anchorfile>
      <anchor>a0d858e449e7a2f758eb0e5b5fdeb1eb1</anchor>
      <arglist>(const DualQuaternion &amp;pose)</arglist>
    </member>
    <member kind="function">
      <type>LayerQuad &amp;</type>
      <name>setQuadSize</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerQuad.html</anchorfile>
      <anchor>ac71c53b1002a63493bedb569a697c928</anchor>
      <arglist>(const Vector2 &amp;size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::PoseState</name>
    <filename>classMagnum_1_1OvrIntegration_1_1PoseState.html</filename>
    <member kind="function">
      <type></type>
      <name>PoseState</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>ac150358806fe6517322de4fa07b5025e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PoseState</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>a2c66193c30ed731f655687f5537b1292</anchor>
      <arglist>(const ovrPoseStatef &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion</type>
      <name>pose</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>a8e6cf04644af3ccd1303123c0c28d3d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>angularVelocity</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>a23d52e6196303f4aca0b80470607d4fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>LinearVelocity</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>a4181cbfc6ec67f4209713319ed8e9792</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>angularAcceleration</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>a0245a9e12166ee05107b7a4b3e4d58c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>linearAcceleration</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>a60067c92abdb9168aaf8a64412433951</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Double</type>
      <name>time</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>a75b0d9f597a15935a66768ff28081da4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>::ovrPoseStatef &amp;</type>
      <name>ovrPoseStatef</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>a9821da4f9a1476fd2ec4d49d59d100d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PoseState &amp;</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>a4f23c45e02f9f4e0999a0d1c44ed5a1b</anchor>
      <arglist>(::ovrPoseStatef &amp;state)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const PoseState &amp;</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>a023ccf56be4df1403a6b36f5e1d4f5fe</anchor>
      <arglist>(const ::ovrPoseStatef &amp;state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::Session</name>
    <filename>classMagnum_1_1OvrIntegration_1_1Session.html</filename>
    <member kind="function">
      <type>Session &amp;</type>
      <name>configureRendering</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>aec331ca97149841e684aed1628bff0c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>fovTextureSize</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a097aff332cfa159eb4c8095d9500b435</anchor>
      <arglist>(Int eye)</arglist>
    </member>
    <member kind="function">
      <type>GL::Texture2D &amp;</type>
      <name>createMirrorTexture</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a7fb2b9821b5ab223b2c07e2419ff0c68</anchor>
      <arglist>(const Vector2i &amp;size, MirrorOptions mirrorOptions={})</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; TextureSwapChain &gt;</type>
      <name>createTextureSwapChain</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a042e15bcc3424620dcbdb7df1b07747b</anchor>
      <arglist>(Int eye)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; TextureSwapChain &gt;</type>
      <name>createTextureSwapChain</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a6a263cd5409481368e0401ceaa775ee5</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>const PoseState &amp;</type>
      <name>headPoseState</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a9209354bdeaae0ab67f84d81d31b45b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion</type>
      <name>calibratedOrigin</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a8c1fae78096a3d43c8f1e2c76b5130df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::array&lt; DualQuaternion, 2 &gt;</type>
      <name>eyePoses</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a46e8edf7f5d08fa1bd0c311ab312a883</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::array&lt; std::reference_wrapper&lt; const PoseState &gt;, 2 &gt;</type>
      <name>handPoseStates</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a9d4b16fc0af435c540477197a4755062</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Session &amp;</type>
      <name>pollTrackers</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a5f76e51030381109eab9310e7b1c3e62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Session &amp;</type>
      <name>pollEyePoses</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>ad093c8eca09f83dbe15b2fe4bbb191f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Session &amp;</type>
      <name>pollController</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a1fcb3a78ab1f44c5716f85639e54a234</anchor>
      <arglist>(ControllerType types, InputState &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>resolution</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a2d93e916db8c0d4063129034389ffe50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>defaultEyeFov</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a0ae3471f84b5bdc708525175fd264475</anchor>
      <arglist>(Int eye) const</arglist>
    </member>
    <member kind="function">
      <type>Matrix4</type>
      <name>projectionMatrix</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a60844c1e15bf1355b75f595131d12cf8</anchor>
      <arglist>(Int eye, Float near, Float far) const</arglist>
    </member>
    <member kind="function">
      <type>Matrix4</type>
      <name>orthoSubProjectionMatrix</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a3281ec56fcc0619fc62105cc43284a18</anchor>
      <arglist>(Int eye, const Matrix4 &amp;proj, const Vector2 &amp;scale, Float distance) const</arglist>
    </member>
    <member kind="function">
      <type>::ovrSession</type>
      <name>ovrSession</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>abd9584d17f621bef2a855ec3e596bd06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>::ovrHmdDesc</type>
      <name>ovrHmdDesc</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a0390dca2c7ee46e0047095990aa63fd8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ::ovrViewScaleDesc &amp;</type>
      <name>ovrViewScaleDesc</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a723d013b167dc22fd9cbde4613c4736e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>worldScale</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a5e5a394b2bec7d489c73ee8a644c4960</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Session &amp;</type>
      <name>setWorldScale</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>ad99dbde3e27ef2da18de3fc042f7d45a</anchor>
      <arglist>(Float scale)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDebugHmd</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>aec6ab0ed0f3f1286c1fb9eff0fa93011</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Containers::StaticArrayView&lt; 2, const ovrPosef &gt;</type>
      <name>ovrEyePoses</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>af845721f5dabaa0a309b1800037deabc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Containers::StaticArrayView&lt; 2, const ovrPoseStatef &gt;</type>
      <name>ovrHandPoseStates</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a131fae11fe79539704472cf691548e6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recenterTrackingOrigin</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a63f657418ee8539b5f41ed3de27c1a81</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTrackingOrigin</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>af0a3834c9275ae450510308ee616556f</anchor>
      <arglist>(TrackingOrigin origin) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearShouldRecenterFlag</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a92092c18619d4fd8cb9857c89bad82eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Long</type>
      <name>currentFrameIndex</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>aa4cb33efd392919bba9905d1c319f343</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Long</type>
      <name>incFrameIndex</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>ad38d4ec54e9e691e232e39f50004f0e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPerformanceHudMode</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a4907c8ef9476ddb3966c3aa7d326ddc3</anchor>
      <arglist>(PerformanceHudMode mode) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDebugHudStereoMode</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a7a8c08ea65a92ddc8e79797a7dc92624</anchor>
      <arglist>(DebugHudStereoMode mode) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLayerHudMode</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>add3d08cac210139301245a03e242416b</anchor>
      <arglist>(LayerHudMode mode) const</arglist>
    </member>
    <member kind="function">
      <type>StatusFlags</type>
      <name>trackingState</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>ae0eff6c21ffeec5de76fdc2bbd60b2f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>user</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a47bab1d764d9d34dc613e7c857dda515</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>playerName</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a233c74ed961af7d274fb187d6fe085b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>playerGender</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>ae8f7c0f5c209de0d6aea09988d101980</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>playerHeight</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>ab4bdb607a8147b57aa525b6d8f1a030c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>eyeHeight</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>ad37ea3b4305d11d5943596c9d0f8680b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::array&lt; Float, 2 &gt;</type>
      <name>neckToEyeDistance</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a8cf1c37b7963c664ea8db75050c1d508</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::array&lt; Float, 2 &gt;</type>
      <name>eyeToNoseDistance</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>aab28c06f881626c8725cb7b988aa0079</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SessionStatusFlags</type>
      <name>status</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a0401bbe46a8d1b08fe3835d58bc1b66b</anchor>
      <arglist>() const</arglist>
    </member>
    <docanchor file="classMagnum_1_1OvrIntegration_1_1Session" title="Usage">OvrIntegration-Session-usage</docanchor>
    <docanchor file="classMagnum_1_1OvrIntegration_1_1Session" title="Rendering to the HMD">OvrIntegration-Session-usage-rendering</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::TextureSwapChain</name>
    <filename>classMagnum_1_1OvrIntegration_1_1TextureSwapChain.html</filename>
    <member kind="function">
      <type></type>
      <name>TextureSwapChain</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1TextureSwapChain.html</anchorfile>
      <anchor>ab9d57ce413456070668d35f118b00e94</anchor>
      <arglist>(const Session &amp;session, const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>GL::Texture2D &amp;</type>
      <name>activeTexture</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1TextureSwapChain.html</anchorfile>
      <anchor>abc534226120a1543bdb900bb9fac65c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TextureSwapChain &amp;</type>
      <name>commit</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1TextureSwapChain.html</anchorfile>
      <anchor>a36935f6792ec7a17e3f473b288e7596e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>::ovrTextureSwapChain</type>
      <name>ovrTextureSwapChain</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1TextureSwapChain.html</anchorfile>
      <anchor>a7caff3f5ed835db33734298a12e3a8e4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::OvrIntegration::Touches</name>
    <filename>structMagnum_1_1OvrIntegration_1_1Touches.html</filename>
    <base>EnumSet&lt; Touch &gt;</base>
    <member kind="variable" static="yes">
      <type>static constexpr Touches</type>
      <name>RMask</name>
      <anchorfile>structMagnum_1_1OvrIntegration_1_1Touches.html</anchorfile>
      <anchor>aecebb52583fc12204fe370039f47ec41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr Touches</type>
      <name>LMask</name>
      <anchorfile>structMagnum_1_1OvrIntegration_1_1Touches.html</anchorfile>
      <anchor>ac4ede400998abc0b698073784b9138e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr Touches</type>
      <name>RPoseMask</name>
      <anchorfile>structMagnum_1_1OvrIntegration_1_1Touches.html</anchorfile>
      <anchor>a1f8ca18d8772d99f12392ffc492925f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr Touches</type>
      <name>LPoseMask</name>
      <anchorfile>structMagnum_1_1OvrIntegration_1_1Touches.html</anchorfile>
      <anchor>a931575b061f56ce68a2c809d227c15da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::PixelStorage</name>
    <filename>classMagnum_1_1PixelStorage.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>PixelStorage</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>a457e62793428c7f84d661205d3f2492b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>a70992d6a89b9a9a96f969809f21e70ce</anchor>
      <arglist>(const PixelStorage &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>a1716c1d2f265c7efed825eaa931b7c4c</anchor>
      <arglist>(const PixelStorage &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>alignment</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>a3e69d87df87e27017f012179e1aa2f7e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PixelStorage &amp;</type>
      <name>setAlignment</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>ad3da75b1e18c4b864ade56023df95595</anchor>
      <arglist>(Int alignment)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>rowLength</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>a618b0661c8d035957202ac35d1dfb683</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PixelStorage &amp;</type>
      <name>setRowLength</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>afcebb732a1ad64b3025edd656ae8de4b</anchor>
      <arglist>(Int length)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>imageHeight</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>a4742be6c8589fec5b336edfb9817ec7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PixelStorage &amp;</type>
      <name>setImageHeight</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>a9f9cba7250ffa4a2d68db9c08187fd1b</anchor>
      <arglist>(Int height)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3i</type>
      <name>skip</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>a1e02bcfd824a0d791dd0a6a9159e52a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PixelStorage &amp;</type>
      <name>setSkip</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>a1f46c621041686b241179edeb1b8f909</anchor>
      <arglist>(const Vector3i &amp;skip)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Math::Vector3&lt; std::size_t &gt;, Math::Vector3&lt; std::size_t &gt; &gt;</type>
      <name>dataProperties</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>ad7188b0bfaa4c50207d254382eb9b16e</anchor>
      <arglist>(std::size_t pixelSize, const Vector3i &amp;size) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AbstractXApplication</name>
    <filename>classMagnum_1_1Platform_1_1AbstractXApplication.html</filename>
    <class kind="struct">Magnum::Platform::AbstractXApplication::Arguments</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::Configuration</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::GLConfiguration</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::InputEvent</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::KeyEvent</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::MouseEvent</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::MouseMoveEvent</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::ViewportEvent</class>
    <member kind="function">
      <type></type>
      <name>AbstractXApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>ae7b6f68ea7c91b77f613e5012f9bc6bd</anchor>
      <arglist>(const AbstractXApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractXApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>ae36465e9672d59850840cb3a5ad088b6</anchor>
      <arglist>(AbstractXApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractXApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>ad55349e90e6ba0fe2470140cab54aab2</anchor>
      <arglist>(const AbstractXApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractXApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>aa1eafc5ee50538f57a7f2a0bb0de5ac0</anchor>
      <arglist>(AbstractXApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>a7dde2cd0c0105289646efc14bcc69259</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exit</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>ae7afef63adc6d3211b7ae0ffbfb82d73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>create</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>adb6aef12e2c3345a3bca1963a231c5a2</anchor>
      <arglist>(const Configuration &amp;configuration, const GLConfiguration &amp;glConfiguration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>create</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>af56a953a6fa96715e456299dacf3bd05</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>create</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>a31e2d04923deffba167c4aceb7a75b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreate</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>ac5ec4940f3e459bb6644042555abc7e6</anchor>
      <arglist>(const Configuration &amp;configuration, const GLConfiguration &amp;glConfiguration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreate</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>abeb4aca3da62cc77f14e12c03d7c3e42</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>windowSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>a173288cb138ba6906f4c829d56d39d82</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>framebufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>aa838357808c5e50e264ff5fca0cc08b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>swapBuffers</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>acf2ed010f7d9ed19070eb2c8f2a99bb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>redraw</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>a74589e540beef25d6f844f9febaf982d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>viewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>a100681787cd65e3d4e1e17290b2b36b4</anchor>
      <arglist>(ViewportEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>viewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>a37464791fbdac271ce40819f28d69b23</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>drawEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>af2c5853ec1ef59ee2a496b31a5ce1eb2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>keyPressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>a5300a85c9cb15c3150fd967a842f4613</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>keyReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>a023100947ae0a6e4443d3876ac7cc0b1</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mousePressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>a4fd5a53087603bb299fecf9e4a361862</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>abed988d061fa8037c49744daefa42b69</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseMoveEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>af9a6f4136f9d66fac5ab897382c7410e</anchor>
      <arglist>(MouseMoveEvent &amp;event)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::AbstractXApplication::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1AbstractXApplication_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1AbstractXApplication_1_1Arguments.html</anchorfile>
      <anchor>a450112f8e95f81b2d5b9de9f140710e6</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1AbstractXApplication_1_1Arguments.html</anchorfile>
      <anchor>a123d5ba7e3b5080eb2166712f1518699</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1AbstractXApplication_1_1Arguments.html</anchorfile>
      <anchor>aa1209e732e8134ccf235236cc32b60d2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AbstractXApplication::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1AbstractXApplication_1_1Configuration.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>title</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1Configuration.html</anchorfile>
      <anchor>a1338ea8fe7e21a6e52295020d132dc7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setTitle</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1Configuration.html</anchorfile>
      <anchor>abd48bf906bf6d2b5edd3ef8dc3dd854b</anchor>
      <arglist>(std::string title)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1Configuration.html</anchorfile>
      <anchor>a8ab37e1cb384c55c8fd722029b977a80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1Configuration.html</anchorfile>
      <anchor>aa24dae5c5aa6e797543503db938f41b8</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AbstractXApplication::GLConfiguration</name>
    <filename>classMagnum_1_1Platform_1_1AbstractXApplication_1_1GLConfiguration.html</filename>
    <member kind="function">
      <type>GL::Version</type>
      <name>version</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>ab6b0a7fc5455d0e810be040d7dc076f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setVersion</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>aae4f4b30cb9e3294030605d27a038af2</anchor>
      <arglist>(GL::Version version)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AbstractXApplication::InputEvent</name>
    <filename>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Modifier</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>a527de777d490fd7076179e8339e744ee</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html" anchor="a527de777d490fd7076179e8339e744eea825a3d98017bab11815ad2817201324c">Shift</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html" anchor="a527de777d490fd7076179e8339e744eea2b61e0d5977f2e38f06e16281c802b47">Ctrl</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html" anchor="a527de777d490fd7076179e8339e744eeaa2e92861b757ab878312dd57993d60cf">Alt</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html" anchor="a527de777d490fd7076179e8339e744eea571dc3ee993d6e9a33bdc851be52b995">AltGr</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html" anchor="a527de777d490fd7076179e8339e744eea8d0f4171170104d094d8b6d4f8bf49e6">CapsLock</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html" anchor="a527de777d490fd7076179e8339e744eeacf6cc0261135c6d163fd4305375773d2">NumLock</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>a74d97fb59c1afc8b3723b42311202d29</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html" anchor="a74d97fb59c1afc8b3723b42311202d29a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html" anchor="a74d97fb59c1afc8b3723b42311202d29ab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html" anchor="a74d97fb59c1afc8b3723b42311202d29a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Modifier &gt;</type>
      <name>Modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>a391685081d02e608fd71f886a87eea00</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Button &gt;</type>
      <name>Buttons</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>a21dc1d563acd35cc9f9e41f7a92f121b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>a2708c692d9ee68832ef253c4a12c87d2</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>ae6ba3698a7c262180b143fcd5ab29ffa</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>a1b49d22039d83d1974faeff375d710b8</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>a8aec50d6882de3a79bd649400ad86b29</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>ab2fa5478cdd425a3c0dce0582daa353c</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>a20d1577dcc9e5c6f859eb48a66cf2988</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>ad54d430483516ca69d982743920c76cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Buttons</type>
      <name>buttons</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>afcd02238074916c7f68f7efa7e155f1f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AbstractXApplication::KeyEvent</name>
    <filename>classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html</filename>
    <base>Magnum::Platform::AbstractXApplication::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Key</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html</anchorfile>
      <anchor>a63ffae576fbf74e2700ee1485dffaa8f</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faf1851d5600eae616ee802a31ac74701b">Enter</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa91f4253ca587ca8ac4e63b9ceb351f5d">Esc</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa258f49887ef8d14ac268c92b02503aaa">Up</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa08a38277b0309070706f6652eeae9a53">Down</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fae1dffc8709f31a4987c8a88334107e89">F1</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fafe5c3684dce76cdd9f7f42430868aa74">F2</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa4b6bf4b531770872d4328ce69bef5627">F3</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fae7e0e72401a9f2718ed0f39f2861d702">F4</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa37f438df6a6d5ba4c17ef8ca58562f00">F5</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa1faf42f2823f184eb2c9f0dffe5d73f2">F6</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa47489eb597b7db34caa24b1fc78fc839">F7</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa4787509ad9f9d747a81a30e9dde3d4a7">F8</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa892a245e287c163080b23db737d3c4c9">F9</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fab213ce22ca6ad4eda8db82966b9b6e5a">F10</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa643b0662422d1d0dffa3fca2e2bf28a8">F11</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fae902674982fc99aa343cdd94da7476c3">F12</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa8cf04a9734132302f96da8e113e80ce5">Home</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa87557f11575c0ad78e4e28abedc13b6e">End</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa9b869c510c75c5827ac82e49d4340927">PageUp</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faee3677bcca83ece9384b01e43952bf33">PageDown</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fad511f8439ecde36647437fbba67a4394">Space</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa58be47db9455679e6a44df2eff9c9fa6">Comma</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa1901606ea069a83dc7beea17881ef95a">Period</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa453fb623e752c5993f65bc410fd74fe5">Minus</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa32ba78fe43257d3e7f88e3935a8ea0d4">Plus</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa358cfe58715d680d9ab09f82e4010cbc">Slash</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faadaaee4b22041c27198d410c68d952c9">Percent</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faf5f286e73bda105e538310b3190f75c5">Equal</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fad7ed4ee1df437474d005188535f74875">Zero</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa06c2cea18679d64399783748fa367bdd">One</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faaada29daee1d64ed0fe907043855cb7e">Two</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faca8a2087e5557e317599344687a57391">Three</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa981b8fcee42e1e726a67a2b9a98ea6e9">Four</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fae5d9de39f7ca1ba2637e5640af3ae8aa">Five</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fae6fbc0b9673f8c86726688d7607fc8f5">Six</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa12e67aac3e7f9227cc35f8f047d7dc74">Seven</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fabaca0ca6729684fd54206793ae4b5bd5">Eight</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa24db11216549ee55172c33cf3def2f3f">Nine</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa7fc56270e7a70fa81a5935b72eacbe29">A</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa9d5ed678fe57bcca610140957afab571">B</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa0d61f8370cad1d412f80b84d143e1257">C</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faf623e75af30e62bbd73d6df5b50bb7b5">D</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa3a3ea00cfc35332cedf6e5e9a32e94da">E</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa800618943025315f869e4e1f09471012">F</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fadfcf28d0734569a6a693bc8194de62bf">G</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fac1d9f50f86825a1a2302ec2449c17196">H</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fadd7536794b63bf90eccfd37f9b147d7f">I</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faff44570aca8241914870afbc310cdb85">J</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faa5f3c6a11b03839d46af9fb43c97c188">K</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fad20caec3b48a1eef164cb4ca81ba2587">L</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa69691c7bdcc3ce6d5d8a1361f22d04ac">M</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa8d9c307cb7f3c4a32822a51922d1ceaa">N</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faf186217753c37b9b9f958d906208506e">O</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa44c29edb103a2872f519ad0c9a0fdaaa">P</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faf09564c9ca56850d4cd6b3319e541aee">Q</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fae1e1d3d40573127e9ee0480caf1283d6">R</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa5dbc98dcc983a70728bd082d1a47546e">S</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fab9ece18c950afbfa6b0fdbfa4ff731d3">T</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa4c614360da93c0a041b22e537de151eb">U</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa5206560a306a2e085a437fd258eb57ce">V</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa61e9c06ea9a85a5088a499df6458d276">W</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa21c2e59531c8710156d34a3c30ac81d5">Z</enumvalue>
    </member>
    <member kind="function">
      <type>Key</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html</anchorfile>
      <anchor>ae69ab51986e050619d0aba6b2c606df2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html</anchorfile>
      <anchor>ab9a2417390008376513308097f4f4d15</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AbstractXApplication::MouseEvent</name>
    <filename>classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseEvent.html</filename>
    <base>Magnum::Platform::AbstractXApplication::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseEvent.html</anchorfile>
      <anchor>a764326cd502ad1038ce66d8e8ffce588</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseEvent.html" anchor="a764326cd502ad1038ce66d8e8ffce588a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseEvent.html" anchor="a764326cd502ad1038ce66d8e8ffce588ab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseEvent.html" anchor="a764326cd502ad1038ce66d8e8ffce588a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseEvent.html" anchor="a764326cd502ad1038ce66d8e8ffce588a050f568559dcada95ba3ecb63de39971">WheelUp</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseEvent.html" anchor="a764326cd502ad1038ce66d8e8ffce588a95cf2a3dc58aff6d85e53738a089d9d1">WheelDown</enumvalue>
    </member>
    <member kind="function">
      <type>Button</type>
      <name>button</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseEvent.html</anchorfile>
      <anchor>aa0c682426f731a39ac247336c2c2f4f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseEvent.html</anchorfile>
      <anchor>a275df30855ccfe7a3d445a00add6bb53</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AbstractXApplication::MouseMoveEvent</name>
    <filename>classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseMoveEvent.html</filename>
    <base>Magnum::Platform::AbstractXApplication::InputEvent</base>
    <member kind="function">
      <type>Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>ac113c1da8750cf5fc1c390be60fd623c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AbstractXApplication::ViewportEvent</name>
    <filename>classMagnum_1_1Platform_1_1AbstractXApplication_1_1ViewportEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>ViewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>ad1922924c577483a51518853832b46b7</anchor>
      <arglist>(const ViewportEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ViewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>ad3f35ccef1a7d4d5a4665c332b6cf8e9</anchor>
      <arglist>(ViewportEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ViewportEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>a3357c0f812f04ef1ba00c4a3814bdc25</anchor>
      <arglist>(const ViewportEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ViewportEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>ae1b2537bc04495b75564a786f9acabc0</anchor>
      <arglist>(ViewportEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>windowSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>ac9c74930bcac35946aec1e511aa69c62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>framebufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>ab503ecae1a7da44eece13db85fb3a494</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AndroidApplication</name>
    <filename>classMagnum_1_1Platform_1_1AndroidApplication.html</filename>
    <class kind="class">Magnum::Platform::AndroidApplication::Configuration</class>
    <class kind="class">Magnum::Platform::AndroidApplication::GLConfiguration</class>
    <class kind="class">Magnum::Platform::AndroidApplication::InputEvent</class>
    <class kind="class">Magnum::Platform::AndroidApplication::MouseEvent</class>
    <class kind="class">Magnum::Platform::AndroidApplication::MouseMoveEvent</class>
    <class kind="class">Magnum::Platform::AndroidApplication::ViewportEvent</class>
    <member kind="typedef">
      <type>android_app *</type>
      <name>Arguments</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a58c9ea82abc05790ddf2337b4f406264</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AndroidApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>adddc50d4617d727bc7c2d6143395e5b5</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration, const GLConfiguration &amp;glConfiguration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AndroidApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a9e78d7e5e9c6c7567aeb9e164e72f435</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AndroidApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a1aa071d04a5f881db42050bb539c6cb4</anchor>
      <arglist>(const Arguments &amp;arguments)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AndroidApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a95a4116cf39c28587de2283c8e8fd837</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AndroidApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>aa0fdb76a85a84bf49063c5f464d53d27</anchor>
      <arglist>(const AndroidApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AndroidApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>af2bf1c84681f70fa8261b2c0d7029cf9</anchor>
      <arglist>(AndroidApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AndroidApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>acafb56ac864a1a0b8101cce18930f83f</anchor>
      <arglist>(const AndroidApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AndroidApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a7eb6cdbc378fcbb4feec05b29f2826f2</anchor>
      <arglist>(AndroidApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ANativeActivity *</type>
      <name>nativeActivity</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>acc7aff76dc9a09a9694d919bec6d225e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>aeb6233dd46dd16f8632d4d3d276fd445</anchor>
      <arglist>(android_app *state, Containers::Pointer&lt; AndroidApplication &gt;(*instancer)(const Arguments &amp;))</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>create</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>ac38cced62256e4a8d18d0b272aec2526</anchor>
      <arglist>(const Configuration &amp;configuration, const GLConfiguration &amp;glConfiguration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>create</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>afb106c58fa9c87ee9ea40f19af058ec9</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>create</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a724f83364df7f7b11e5e4aff5ba828d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreate</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>adc568c646c218cfb8f8481d61998951a</anchor>
      <arglist>(const Configuration &amp;configuration, const GLConfiguration &amp;glConfiguration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreate</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>ab00414f6776116917e4df0834ad5640c</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>windowSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a7d104a6bdd46a9cb370ec5d6842da213</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>framebufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a2e2ca60d993e16372afb879f6b240974</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>dpiScaling</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a701833e71d85a60d3c811ec963a7e573</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>dpiScaling</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>abdebae4d3497b394646396b9ae1de4fe</anchor>
      <arglist>(const Configuration &amp;configuration) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapBuffers</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a78801e96db6d013c85c2c2a4d2051788</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redraw</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a308e1560c581fe3edd12777fc3444beb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>viewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a0d2e9484d544d7b6bb477cc1232dbcb0</anchor>
      <arglist>(ViewportEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>viewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>afcdfe648357b272c838f624f42de3a2f</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>drawEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a75396810d496499ddb8fc1a45bf9d7fd</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mousePressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a51370e0415a65b7cb967a6fa445a6a62</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>aad71c338afe32ef72a6329f0e6d66814</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseMoveEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a1712a5ea421c0833d092c05eee25c0ba</anchor>
      <arglist>(MouseMoveEvent &amp;event)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Platform_1_1AndroidApplication" title="Bootstrap application">Platform-AndroidApplication-bootstrap</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1AndroidApplication" title="General usage">Platform-AndroidApplication-usage</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1AndroidApplication" title="Responding to viewport events">Platform-AndroidApplication-resizing</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1AndroidApplication" title="Redirecting output to Android log buffer">Platform-AndroidApplication-output-redirection</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AndroidApplication::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1AndroidApplication_1_1Configuration.html</filename>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setTitle</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1Configuration.html</anchorfile>
      <anchor>a50910221f99afaccfbe6635a81d1eeaf</anchor>
      <arglist>(const T &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1Configuration.html</anchorfile>
      <anchor>ab7d07cfa766d6ec0c7ebe30f805ee206</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1Configuration.html</anchorfile>
      <anchor>a82e2c923bd358531afa0e19d3da4e809</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AndroidApplication::GLConfiguration</name>
    <filename>classMagnum_1_1Platform_1_1AndroidApplication_1_1GLConfiguration.html</filename>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setVersion</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>afed90da1a5baebbfc12aa98f0d69ba9e</anchor>
      <arglist>(GL::Version)</arglist>
    </member>
    <member kind="function">
      <type>Vector4i</type>
      <name>colorBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>ae58d34c6871e37c0141fb335cb7b743f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setColorBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a3e7240d3f0bf02f79ac3a49e890e5b51</anchor>
      <arglist>(const Vector4i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>depthBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a2ba59ba804f65395b8af42122b520556</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setDepthBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a4b5e6dd6cbca71eec7afbb0255bff602</anchor>
      <arglist>(Int size)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>stencilBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>ac73e57d49c1eb893e5f9910f73a8d23a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setStencilBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a7ebd7ebdc7039447cbf596a0a2685d1c</anchor>
      <arglist>(Int size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AndroidApplication::InputEvent</name>
    <filename>classMagnum_1_1Platform_1_1AndroidApplication_1_1InputEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1InputEvent.html</anchorfile>
      <anchor>a008d90905e03f03c4b4f8c3afcf2c721</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1InputEvent.html</anchorfile>
      <anchor>a437c1d44d78c659695e68fb87fba2579</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1InputEvent.html</anchorfile>
      <anchor>a8cba4f2e77ce1d849aebda12687d336a</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1InputEvent.html</anchorfile>
      <anchor>a96d462d6093274451624aa2953118248</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1InputEvent.html</anchorfile>
      <anchor>a1557b96bd7ebdbc61f52bb9da140d173</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1InputEvent.html</anchorfile>
      <anchor>a9a1a85918c4917058eb6384a4c925167</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AndroidApplication::MouseEvent</name>
    <filename>classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseEvent.html</filename>
    <base>Magnum::Platform::AndroidApplication::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseEvent.html</anchorfile>
      <anchor>ab092b366c5ca3c48c38c220d1acb7156</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseEvent.html" anchor="ab092b366c5ca3c48c38c220d1acb7156a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseEvent.html" anchor="ab092b366c5ca3c48c38c220d1acb7156a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseEvent.html" anchor="ab092b366c5ca3c48c38c220d1acb7156ab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseEvent.html" anchor="ab092b366c5ca3c48c38c220d1acb7156a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
    </member>
    <member kind="function">
      <type>Button</type>
      <name>button</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseEvent.html</anchorfile>
      <anchor>a7ed21004b68a4a6b7c906f2c795d007d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseEvent.html</anchorfile>
      <anchor>ad02a9a1317cacbce2ad816dd805fe842</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AndroidApplication::MouseMoveEvent</name>
    <filename>classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseMoveEvent.html</filename>
    <base>Magnum::Platform::AndroidApplication::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>abdcf2c89160e7320cd27e68e4eef9b3e</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseMoveEvent.html" anchor="abdcf2c89160e7320cd27e68e4eef9b3ea945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseMoveEvent.html" anchor="abdcf2c89160e7320cd27e68e4eef9b3eab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseMoveEvent.html" anchor="abdcf2c89160e7320cd27e68e4eef9b3ea92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Button &gt;</type>
      <name>Buttons</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a0daa91452fa905843eeae994d6dc9154</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>af5c4f9f597029b137fa5d6cc8534c988</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Buttons</type>
      <name>buttons</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>aeed84df2fcd96169376e2a8af7898ed7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AndroidApplication::ViewportEvent</name>
    <filename>classMagnum_1_1Platform_1_1AndroidApplication_1_1ViewportEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>ViewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>ad59ab83024a47129d76fa959c1fce4fe</anchor>
      <arglist>(const ViewportEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ViewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>a815efaf5facfd5338f1fc7fa7b33ee69</anchor>
      <arglist>(ViewportEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ViewportEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>a86d34353f495c26e7bfb97514f2cd1bd</anchor>
      <arglist>(const ViewportEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ViewportEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>abc6b790501fea1021ab1d2e53259c204</anchor>
      <arglist>(ViewportEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>windowSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>a915baa17eaf000dd89401e49d868c9e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>framebufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>aa64cbe6d56d57f5b51227c2790c3cb0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>dpiScaling</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>a64fc83372bdfe1c4d6f2b05b16a7eaeb</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::BasicScreen</name>
    <filename>classMagnum_1_1Platform_1_1BasicScreen.html</filename>
    <templarg></templarg>
    <base protection="private">LinkedListItem&lt; BasicScreen&lt; Application &gt;, BasicScreenedApplication&lt; Application &gt; &gt;</base>
    <member kind="enumeration">
      <type></type>
      <name>PropagatedEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a00413be55df986bc41a8f78cdb290c22</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1BasicScreen.html" anchor="a00413be55df986bc41a8f78cdb290c22a2d03c2d5a7ec65ef4619e0582c272ec2">Draw</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1BasicScreen.html" anchor="a00413be55df986bc41a8f78cdb290c22a324118a6721dd6b8a9b9f4e327df2bf5">Input</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; PropagatedEvent &gt;</type>
      <name>PropagatedEvents</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a20783b2906594a1c6a8ddda333527c1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicScreenedApplication&lt; Application &gt;::ViewportEvent</type>
      <name>ViewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a8fe020721553203aa5e87dcef240e059</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicScreenedApplication&lt; Application &gt;::InputEvent</type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>ac062cfde71504c82ca701de84ec7ee62</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicScreenedApplication&lt; Application &gt;::KeyEvent</type>
      <name>KeyEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a41c6798b8356feb60d6e79d02a080755</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicScreenedApplication&lt; Application &gt;::MouseEvent</type>
      <name>MouseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a1531f2e05db360226c48b0d986e8fe57</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicScreenedApplication&lt; Application &gt;::MouseMoveEvent</type>
      <name>MouseMoveEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a32d89d95a29d527d8f5f1d032e9594ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicScreenedApplication&lt; Application &gt;::MouseScrollEvent</type>
      <name>MouseScrollEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a0c124e7d7d0e0b65a6c8ad54263bafe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicScreenedApplication&lt; Application &gt;::TextInputEvent</type>
      <name>TextInputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a9fe7ae7ce6f644dfde246491378057cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicScreenedApplication&lt; Application &gt;::TextEditingEvent</type>
      <name>TextEditingEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>ab4956a7806089f9eb593b85570f1d5c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasicScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>ab2bd32ab9c82c82b838b7b2d11272942</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasicScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a02a6d04852db858dda0216aa0dc9c15b</anchor>
      <arglist>(BasicScreenedApplication&lt; Application &gt; &amp;application, PropagatedEvents events)</arglist>
    </member>
    <member kind="function">
      <type>PropagatedEvents</type>
      <name>propagatedEvents</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>aa5ca94a42b9585746e3fe462eab9716d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPropagatedEvents</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a74700edde790d741350a849927d597ca</anchor>
      <arglist>(PropagatedEvents events)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>application</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>ab03228ac10947c2a06809f542153c0b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>application</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a9281cd411b35d171372145a01c424c3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BasicScreen&lt; Application &gt; *</type>
      <name>nextNearerScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a87f1926029c47cd224b1b0f418ca7c25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BasicScreen&lt; Application &gt; *</type>
      <name>nextNearerScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a949485675e4a935dee3bc148cfafa0e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BasicScreen&lt; Application &gt; *</type>
      <name>nextFartherScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>aa20ec0ff557b1add220d8d78fe1fb2b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BasicScreen&lt; Application &gt; *</type>
      <name>nextFartherScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>aa2c453c175dc5a93b1ce08b1ccb2b6d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>keyPressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a5c518ffcb7f87465907f0f520dc4a61d</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>keyReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a36763bb325a89b682de3c5de6d59175a</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mousePressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a46cb5dfe4f0e65ae9eaaeaab64434240</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a8ae62461e2797944b2238d290e4e1485</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseMoveEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a2320f71394d5e757fb59b8f3fdf3152c</anchor>
      <arglist>(MouseMoveEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseScrollEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>ad219b685b942d8ce03a49f1a574b533b</anchor>
      <arglist>(MouseScrollEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>textInputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a372bf015b511ac82dbc2b64dd529d075</anchor>
      <arglist>(TextInputEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>textEditingEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a4955eacdbfb0c76abe5ea713de94a9b0</anchor>
      <arglist>(TextEditingEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>redraw</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>ae33347d9790875e95c8a436dcc027109</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>focusEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a16987210120c0380672b49a59a593f4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>blurEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a23b64ec27c9d274d39da35e298ce5f76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>viewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a807e5925932fb15d9d0929bac91c2ba4</anchor>
      <arglist>(ViewportEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>viewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>aaf18f2e29d8d2da54c0d33d9b0cef223</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>drawEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a4649b372d245c99c627035b8cd5f6f75</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>keyPressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a5c518ffcb7f87465907f0f520dc4a61d</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>keyReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a36763bb325a89b682de3c5de6d59175a</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mousePressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a46cb5dfe4f0e65ae9eaaeaab64434240</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a8ae62461e2797944b2238d290e4e1485</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseMoveEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a2320f71394d5e757fb59b8f3fdf3152c</anchor>
      <arglist>(MouseMoveEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseScrollEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>ad219b685b942d8ce03a49f1a574b533b</anchor>
      <arglist>(MouseScrollEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>textInputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a372bf015b511ac82dbc2b64dd529d075</anchor>
      <arglist>(TextInputEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>textEditingEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a4955eacdbfb0c76abe5ea713de94a9b0</anchor>
      <arglist>(TextEditingEvent &amp;event)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Platform_1_1BasicScreen" title="Explicit template specializations">Platform-BasicScreen-template-specializations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::BasicScreenedApplication</name>
    <filename>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</filename>
    <templarg></templarg>
    <base protection="private">LinkedList&lt; BasicScreen&lt; Application &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>BasicScreenedApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>a878b1766b63f486b17e63b5980d27ffb</anchor>
      <arglist>(const typename Application::Arguments &amp;arguments, const typename Application::Configuration &amp;configuration, const typename Application::GLConfiguration &amp;glConfiguration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasicScreenedApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>a38978ee177ee8b2925c9be43749affed</anchor>
      <arglist>(const typename Application::Arguments &amp;arguments, const typename Application::Configuration &amp;configuration=typename Application::Configuration{})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasicScreenedApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>acfb517aed1e85fcc3642e29b93d41ab2</anchor>
      <arglist>(const typename Application::Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type>BasicScreenedApplication&lt; Application &gt; &amp;</type>
      <name>addScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>ad1e3c186a2802bae60207087c443b4c8</anchor>
      <arglist>(BasicScreen&lt; Application &gt; &amp;screen)</arglist>
    </member>
    <member kind="function">
      <type>BasicScreenedApplication&lt; Application &gt; &amp;</type>
      <name>removeScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>a50614a96b1b20376275e7672a5fb2ce9</anchor>
      <arglist>(BasicScreen&lt; Application &gt; &amp;screen)</arglist>
    </member>
    <member kind="function">
      <type>BasicScreenedApplication&lt; Application &gt; &amp;</type>
      <name>focusScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>ad21f7a735f84df27e1192fa778ce7e8a</anchor>
      <arglist>(BasicScreen&lt; Application &gt; &amp;screen)</arglist>
    </member>
    <member kind="function">
      <type>Containers::LinkedList&lt; BasicScreen&lt; Application &gt; &gt; &amp;</type>
      <name>screens</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>a0b9dfc27c41139a1a78dd051e05efbb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Containers::LinkedList&lt; BasicScreen&lt; Application &gt; &gt; &amp;</type>
      <name>screens</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>ab50977a136ef2389f2f91a3a8c6e9bbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>globalViewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>adb9a41e2ea8ae6496ddd5062670eeafb</anchor>
      <arglist>(typename Application::ViewportEvent &amp;size)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>globalDrawEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>a7e8fce19853330b675e34e15f9937fdb</anchor>
      <arglist>()=0</arglist>
    </member>
    <docanchor file="classMagnum_1_1Platform_1_1BasicScreenedApplication" title="Explicit template specializations">Platform-ScreenedApplication-template-specializations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::EmscriptenApplication</name>
    <filename>classMagnum_1_1Platform_1_1EmscriptenApplication.html</filename>
    <class kind="struct">Magnum::Platform::EmscriptenApplication::Arguments</class>
    <class kind="class">Magnum::Platform::EmscriptenApplication::Configuration</class>
    <class kind="class">Magnum::Platform::EmscriptenApplication::GLConfiguration</class>
    <class kind="class">Magnum::Platform::EmscriptenApplication::InputEvent</class>
    <class kind="class">Magnum::Platform::EmscriptenApplication::KeyEvent</class>
    <class kind="class">Magnum::Platform::EmscriptenApplication::MouseEvent</class>
    <class kind="class">Magnum::Platform::EmscriptenApplication::MouseMoveEvent</class>
    <class kind="class">Magnum::Platform::EmscriptenApplication::MouseScrollEvent</class>
    <class kind="class">Magnum::Platform::EmscriptenApplication::TextInputEvent</class>
    <class kind="class">Magnum::Platform::EmscriptenApplication::ViewportEvent</class>
    <member kind="function">
      <type></type>
      <name>EmscriptenApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a01f61399f2fa0d469170e8698362c63f</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration, const GLConfiguration &amp;glConfiguration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmscriptenApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a1406eb43c706297d4e9129051938ac3c</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmscriptenApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a074ac7642320754c8da0cf5608c5c64f</anchor>
      <arglist>(const Arguments &amp;arguments)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmscriptenApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a45e5ba31b802cd41316de025b3e24380</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmscriptenApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>aea1af18b5ed56e668c855421a907bb9c</anchor>
      <arglist>(const EmscriptenApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmscriptenApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>aee893f919061377a9137c2c7409ab80a</anchor>
      <arglist>(EmscriptenApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>EmscriptenApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>ad95fc404f668da7af71b8f45307e1f6b</anchor>
      <arglist>(const EmscriptenApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>EmscriptenApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>ae14cd0c9a3d18fbf952abe90bb6872a6</anchor>
      <arglist>(EmscriptenApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a54ad2cc0b64bfa54b8fc5c8cb8f45249</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exit</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a111d1ed5249eedb8d7ac11f8ee4134ec</anchor>
      <arglist>(int exitCode=0)</arglist>
    </member>
    <member kind="function">
      <type>EMSCRIPTEN_WEBGL_CONTEXT_HANDLE</type>
      <name>glContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a2075cf6da5396752730f5fc17935eec3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>create</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a48a20f0beee5da75c3ae587a299783ea</anchor>
      <arglist>(const Configuration &amp;configuration, const GLConfiguration &amp;glConfiguration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>create</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>aa04c43bac5de5c97000d1d6414ea6df7</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>create</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>aa0f16c3377c7f37bd2b2850731c3c768</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreate</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a84e33726c654b90ed74c63331e12bd6d</anchor>
      <arglist>(const Configuration &amp;configuration, const GLConfiguration &amp;glConfiguration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreate</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>afb04453660908b2cc1101de86a257289</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>windowSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>afc078e274c216441c8f7689e8a8d8093</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>framebufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>afa506715580500ad830656aa2a739b11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>dpiScaling</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a9b93afaef60f7827dc22323f5f8beb2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>dpiScaling</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a80f3e4e8afed264511fbc45ff4747ab1</anchor>
      <arglist>(const Configuration &amp;configuration) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>devicePixelRatio</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a75110d5862fa2901872d13daa72c621c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContainerCssClass</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a9607f6a787d9930ec462771735bc7686</anchor>
      <arglist>(const std::string &amp;cssClass)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapBuffers</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a4e597749f441dbf17f1e53b011c63412</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redraw</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a62cdbf31dffa098cd6cf04825e8d650f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>viewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a45b1d39657c6506c2913cdcd22a7b908</anchor>
      <arglist>(ViewportEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>drawEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>af0accaecc0ee9f520113d1a0ea43de38</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>keyPressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>aa434f1aff8ac1f3e133efa082fbcbdc5</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>keyReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a2bf8e6f5194864b86a5f54da3346c08b</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mousePressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>ab5b511db5a91dac5f8eb5c76c23febd4</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a3b723fd5ace6960492724eab3e7f0491</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseMoveEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>ae0aeae7ef0072cff0c287276f0c8ee58</anchor>
      <arglist>(MouseMoveEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseScrollEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>ad05e41f647a620d05d3fffb64fb45d2d</anchor>
      <arglist>(MouseScrollEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTextInputActive</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a20c0ed5dcaad440f81afceb150b1a288</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startTextInput</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a603073ebd94374137ab0bcc97bb79010</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopTextInput</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>ada2e0ccbd772c75eb860a748560d6ad8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextInputRect</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>ae02ea4b8bc9f4abf70afbdd5eed75c83</anchor>
      <arglist>(const Range2Di &amp;rect)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>textInputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication.html</anchorfile>
      <anchor>a3a652d16fc3ef5716f8e3e36e821658b</anchor>
      <arglist>(TextInputEvent &amp;event)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Platform_1_1EmscriptenApplication" title="Bootstrap application">Platform-EmscriptenApplication-bootstrap</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1EmscriptenApplication" title="General usage">Platform-EmscriptenApplication-usage</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1EmscriptenApplication" title="Browser-specific behavior">Platform-EmscriptenApplication-browser</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1EmscriptenApplication" title="Main loop implementation">Platform-EmscriptenApplication-browser-main-loop</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1EmscriptenApplication" title="WebGL-specific behavior">Platform-EmscriptenApplication-webgl</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1EmscriptenApplication" title="DPI awareness">Platform-EmscriptenApplication-dpi</docanchor>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::EmscriptenApplication::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1EmscriptenApplication_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1EmscriptenApplication_1_1Arguments.html</anchorfile>
      <anchor>a3d55fb1161e100de82ab3a1e3afbd801</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1EmscriptenApplication_1_1Arguments.html</anchorfile>
      <anchor>a5890209a92e4a20e6d3f4bfe8326ef22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1EmscriptenApplication_1_1Arguments.html</anchorfile>
      <anchor>a9f508c4181ccac2f4113bf4fb5a9888a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::EmscriptenApplication::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1Configuration.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>WindowFlag</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1Configuration.html</anchorfile>
      <anchor>af9c287a10c6653375212c81f5c5a06a5</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1Configuration.html" anchor="af9c287a10c6653375212c81f5c5a06a5a6ccd70de20161a61101cfd18027aa795">Contextless</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1Configuration.html" anchor="af9c287a10c6653375212c81f5c5a06a5aaff10bf1618da00a8a80b74044e719b2">Resizable</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1Configuration.html" anchor="af9c287a10c6653375212c81f5c5a06a5a2adc1927109b3276aacd33dca1a6733d">AlwaysRequestAnimationFrame</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; WindowFlag &gt;</type>
      <name>WindowFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1Configuration.html</anchorfile>
      <anchor>af0b86e2d197a669deaf8b3bbbd3ad5dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setTitle</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1Configuration.html</anchorfile>
      <anchor>a9fe49fa37abe6f4f5964b77b4792714a</anchor>
      <arglist>(const T &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1Configuration.html</anchorfile>
      <anchor>a80ffba92732e5389c034c54650dc5516</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1Configuration.html</anchorfile>
      <anchor>a21d5ba06d2790f3f71046cd9d2d494ca</anchor>
      <arglist>(const Vector2i &amp;size, const Vector2 &amp;dpiScaling={})</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>dpiScaling</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1Configuration.html</anchorfile>
      <anchor>afad0d11c4739f566228a020003851b3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WindowFlags</type>
      <name>windowFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1Configuration.html</anchorfile>
      <anchor>aa477b68c581b4cc3a8324db77214f8ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setWindowFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1Configuration.html</anchorfile>
      <anchor>a84035a8ad5963db35e7f64c7284a8f64</anchor>
      <arglist>(WindowFlags windowFlags)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::EmscriptenApplication::GLConfiguration</name>
    <filename>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a67a264501f4d50a3e546a9c098c1b4e6</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html" anchor="a67a264501f4d50a3e546a9c098c1b4e6aa06de9cb1eb80f8a416b1c479ab947de">PremultipliedAlpha</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html" anchor="a67a264501f4d50a3e546a9c098c1b4e6aa2ecee1a1bec976bb9350943f5423e30">PreserveDrawingBuffer</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html" anchor="a67a264501f4d50a3e546a9c098c1b4e6a1067b7c6feef948889f93d9e15ce070c">PreferLowPowerToHighPerformance</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html" anchor="a67a264501f4d50a3e546a9c098c1b4e6a8c94604a2bf812d4f1060ea530686fb2">FailIfMajorPerformanceCaveat</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html" anchor="a67a264501f4d50a3e546a9c098c1b4e6afe817b69be921d959cb1a97c97e30772">ExplicitSwapControl</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html" anchor="a67a264501f4d50a3e546a9c098c1b4e6ac97f53be8bede4e7996af7b4dbebfe49">EnableExtensionsByDefault</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html" anchor="a67a264501f4d50a3e546a9c098c1b4e6a549ec7c529b3e02cab356c7d59238907">RenderViaOffscreenBackBuffer</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html" anchor="a67a264501f4d50a3e546a9c098c1b4e6a3ce8db2abc83f3edbc31026cba752e65">ProxyContextToMainThread</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a741a1900cadaa9ef2e4c50c667c66b89</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a2ffd6e449e0443b4fa7cbf67f3932a7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>afcb07549c72b2a9291755a2e9df38683</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>addFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a486b8e709101c8df250f6704b660dba9</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>clearFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a8cbc21c0c9e474f3b9ca140fd66bea17</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setVersion</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>ad3cba34f3841de693ea76582e844ae58</anchor>
      <arglist>(GL::Version)</arglist>
    </member>
    <member kind="function">
      <type>Vector4i</type>
      <name>colorBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a146bf1a84a4392a764af128f8d374e24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setColorBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a40421499c880653cc27193c532b74c2e</anchor>
      <arglist>(const Vector4i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>depthBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a9d57748293ba5b83eeb0990142c64b54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setDepthBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a5da59d4eb42592004cb2c700b5998706</anchor>
      <arglist>(Int size)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>stencilBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>aada1c2287659e315d14ea6fa8bee07af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setStencilBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a0723631509b03c3b7fe9aa7cfe2b04f6</anchor>
      <arglist>(Int size)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sampleCount</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>ae4cccd9392bb54c0aeab616faff4b164</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setSampleCount</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>ab406c1661808bdc3b4385b3581f1b440</anchor>
      <arglist>(Int count)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::EmscriptenApplication::InputEvent</name>
    <filename>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1InputEvent.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Modifier</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1InputEvent.html</anchorfile>
      <anchor>aa0c64257b15a1dca9f2776f9ce636438</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1InputEvent.html" anchor="aa0c64257b15a1dca9f2776f9ce636438a825a3d98017bab11815ad2817201324c">Shift</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1InputEvent.html" anchor="aa0c64257b15a1dca9f2776f9ce636438a2b61e0d5977f2e38f06e16281c802b47">Ctrl</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1InputEvent.html" anchor="aa0c64257b15a1dca9f2776f9ce636438aa2e92861b757ab878312dd57993d60cf">Alt</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1InputEvent.html" anchor="aa0c64257b15a1dca9f2776f9ce636438a0ce3266d4eb71ad50f7a90aee6d21dcd">Super</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Modifier &gt;</type>
      <name>Modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1InputEvent.html</anchorfile>
      <anchor>a6c8e18c69fea6dcd61066938b3f58faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1InputEvent.html</anchorfile>
      <anchor>a3a736de74c20218bb7d253bd708823f6</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1InputEvent.html</anchorfile>
      <anchor>aa3b9ea7cb1f4fe2544e9c16b4032e88d</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1InputEvent.html</anchorfile>
      <anchor>ac546acae7ffa6c22de88280cafde80aa</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1InputEvent.html</anchorfile>
      <anchor>a67b016304f2a5a51c504d4feacfe8eca</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1InputEvent.html</anchorfile>
      <anchor>a191917c6c04fab79497275d772f8ef07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1InputEvent.html</anchorfile>
      <anchor>acbd319563a23781d02e27fb9a76e8ac9</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::EmscriptenApplication::KeyEvent</name>
    <filename>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html</filename>
    <base>Magnum::Platform::EmscriptenApplication::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Key</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html</anchorfile>
      <anchor>ae8b04d5764ad4063dd27ac7bf6421d1e</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea982621712db76f723b7bb88b631dc64d">LeftShift</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea317d4a7487ee62605713987d4a037f83">RightShift</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaf2be247d68aadad6e9ba07db1885cd1c">LeftCtrl</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaf298b75d2207818c0459c063a21fd172">RightCtrl</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea96f9c4eb595a467d02e35c723f63ebf7">LeftAlt</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ead88bad98046b623323aa6ca28eefa6d5">RightAlt</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea4bd45bf12e08f60072b6962e9f7794c2">LeftSuper</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea0cc5a9f113dc1147c8eeae2f0199f9f2">RightSuper</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaf1851d5600eae616ee802a31ac74701b">Enter</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea91f4253ca587ca8ac4e63b9ceb351f5d">Esc</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea258f49887ef8d14ac268c92b02503aaa">Up</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea08a38277b0309070706f6652eeae9a53">Down</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea8cf04a9734132302f96da8e113e80ce5">Home</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea87557f11575c0ad78e4e28abedc13b6e">End</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea9b869c510c75c5827ac82e49d4340927">PageUp</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaee3677bcca83ece9384b01e43952bf33">PageDown</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eacd7d13ceea728b08555f7c818cfb13ef">Backspace</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaa458be0f08b7e4ff3c0f633c100176c0">Insert</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaf2a6c498fb90ee345d997f888fce3b18">Delete</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eae1dffc8709f31a4987c8a88334107e89">F1</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eafe5c3684dce76cdd9f7f42430868aa74">F2</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea4b6bf4b531770872d4328ce69bef5627">F3</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eae7e0e72401a9f2718ed0f39f2861d702">F4</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea37f438df6a6d5ba4c17ef8ca58562f00">F5</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea1faf42f2823f184eb2c9f0dffe5d73f2">F6</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea47489eb597b7db34caa24b1fc78fc839">F7</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea4787509ad9f9d747a81a30e9dde3d4a7">F8</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea892a245e287c163080b23db737d3c4c9">F9</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eab213ce22ca6ad4eda8db82966b9b6e5a">F10</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea643b0662422d1d0dffa3fca2e2bf28a8">F11</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eae902674982fc99aa343cdd94da7476c3">F12</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ead7ed4ee1df437474d005188535f74875">Zero</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea06c2cea18679d64399783748fa367bdd">One</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaaada29daee1d64ed0fe907043855cb7e">Two</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaca8a2087e5557e317599344687a57391">Three</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea981b8fcee42e1e726a67a2b9a98ea6e9">Four</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eae5d9de39f7ca1ba2637e5640af3ae8aa">Five</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eae6fbc0b9673f8c86726688d7607fc8f5">Six</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea12e67aac3e7f9227cc35f8f047d7dc74">Seven</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eabaca0ca6729684fd54206793ae4b5bd5">Eight</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea24db11216549ee55172c33cf3def2f3f">Nine</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea7fc56270e7a70fa81a5935b72eacbe29">A</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea9d5ed678fe57bcca610140957afab571">B</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea0d61f8370cad1d412f80b84d143e1257">C</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaf623e75af30e62bbd73d6df5b50bb7b5">D</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea3a3ea00cfc35332cedf6e5e9a32e94da">E</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea800618943025315f869e4e1f09471012">F</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eadfcf28d0734569a6a693bc8194de62bf">G</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eac1d9f50f86825a1a2302ec2449c17196">H</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eadd7536794b63bf90eccfd37f9b147d7f">I</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaff44570aca8241914870afbc310cdb85">J</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaa5f3c6a11b03839d46af9fb43c97c188">K</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ead20caec3b48a1eef164cb4ca81ba2587">L</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea69691c7bdcc3ce6d5d8a1361f22d04ac">M</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea8d9c307cb7f3c4a32822a51922d1ceaa">N</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaf186217753c37b9b9f958d906208506e">O</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea44c29edb103a2872f519ad0c9a0fdaaa">P</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaf09564c9ca56850d4cd6b3319e541aee">Q</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eae1e1d3d40573127e9ee0480caf1283d6">R</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea5dbc98dcc983a70728bd082d1a47546e">S</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eab9ece18c950afbfa6b0fdbfa4ff731d3">T</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea4c614360da93c0a041b22e537de151eb">U</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea5206560a306a2e085a437fd258eb57ce">V</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea61e9c06ea9a85a5088a499df6458d276">W</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea21c2e59531c8710156d34a3c30ac81d5">Z</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ead511f8439ecde36647437fbba67a4394">Space</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea5c6ba25104401c9ee0650230fc6ba413">Tab</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea58be47db9455679e6a44df2eff9c9fa6">Comma</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea1901606ea069a83dc7beea17881ef95a">Period</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea453fb623e752c5993f65bc410fd74fe5">Minus</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea32ba78fe43257d3e7f88e3935a8ea0d4">Plus</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea358cfe58715d680d9ab09f82e4010cbc">Slash</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaadaaee4b22041c27198d410c68d952c9">Percent</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaf5f286e73bda105e538310b3190f75c5">Equal</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea242f46f77c7bc68feb14704514de1079">Backquote</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaf6c6379402dce27659f7cffee6bc1f00">Backslash</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eac48e929b2b1eabba2ba036884433345e">Quote</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea2d6d51d277805b8a661b023b6c5a9837">BracketRight</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea2db1aac436f604c1d6f9e3e93df6a7dd">BracketLeft</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea8d0f4171170104d094d8b6d4f8bf49e6">CapsLock</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea7d7902d5e2998e4fb2b8694a2de4ff65">ScrollLock</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eacf6cc0261135c6d163fd4305375773d2">NumLock</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eabf54024481cd2ad6bbb9ae44b7312472">PrintScreen</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea105b296a83f9c105355403f3332af50f">Pause</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eab61541208db7fa7dba42c85224405911">Menu</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea1869dff90f04dc9d3440e15914911c4b">NumZero</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea434921bdf9c88d2f95dad4c36d7470c7">NumOne</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea157dafd3675172c7d6e3d1db3328c86d">NumTwo</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaf66a061b82c07e120dfc396b228e89ec">NumThree</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaf56576fa9aa7b5a204e2b14c7e37b19c">NumFour</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea5ff8650b509a4b11e0ddc38d3703a427">NumFive</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaaf599848db6b5bb6b851f50ba44c6a98">NumSix</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea61a96fdbd354c8a5f808b9fb61dc15bc">NumSeven</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea385f9a2264878bc6c93ec7b5dc287467">NumEight</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea615aef11d2a108f3ede8bca77e451f87">NumNine</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea2d7b9bc754ace6e474a3f68c493eb553">NumDecimal</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea7fee165fee036b58e2e460ca8e006f03">NumDivide</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ead6c81b855af26854fa89ebf21f8ff972">NumMultiply</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea8e0411bbc85a52f7986b8ed9beb886ba">NumSubtract</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1eaf4ddc8457c915e0e241a547fd7153ac4">NumAdd</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea2c1389c1c9102cf39c69b0f334a0b859">NumEnter</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html" anchor="ae8b04d5764ad4063dd27ac7bf6421d1ea8ac0ce1e964c895dac72be97a4b61177">NumEqual</enumvalue>
    </member>
    <member kind="function">
      <type>Key</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html</anchorfile>
      <anchor>aadf3ac140861a9c14aafff239e4e68df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>keyName</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html</anchorfile>
      <anchor>a6e0f31736cba29998cd2da6cc2c115e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html</anchorfile>
      <anchor>a09dba15b4dd29bef75aa952426cf12c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const EmscriptenKeyboardEvent &amp;</type>
      <name>event</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1KeyEvent.html</anchorfile>
      <anchor>af6a8f9f51594928b0e8ac086863ead73</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::EmscriptenApplication::MouseEvent</name>
    <filename>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseEvent.html</filename>
    <base>Magnum::Platform::EmscriptenApplication::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseEvent.html</anchorfile>
      <anchor>ab9338c65d748f8a5587b2d4724771d4c</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseEvent.html" anchor="ab9338c65d748f8a5587b2d4724771d4ca945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseEvent.html" anchor="ab9338c65d748f8a5587b2d4724771d4cab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseEvent.html" anchor="ab9338c65d748f8a5587b2d4724771d4ca92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
    </member>
    <member kind="function">
      <type>Button</type>
      <name>button</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseEvent.html</anchorfile>
      <anchor>a263d53cad0f47b12430e741250564b29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseEvent.html</anchorfile>
      <anchor>a6ad02981df4481086def90108f119442</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseEvent.html</anchorfile>
      <anchor>ac814a39952339eb7cb0c389c376e5072</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const EmscriptenMouseEvent &amp;</type>
      <name>event</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseEvent.html</anchorfile>
      <anchor>a1855b726463fd0edaae146573fb4b19f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::EmscriptenApplication::MouseMoveEvent</name>
    <filename>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseMoveEvent.html</filename>
    <base>Magnum::Platform::EmscriptenApplication::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>abeb6c20c9dbe28395ecc1539dec876b3</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseMoveEvent.html" anchor="abeb6c20c9dbe28395ecc1539dec876b3a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseMoveEvent.html" anchor="abeb6c20c9dbe28395ecc1539dec876b3ab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseMoveEvent.html" anchor="abeb6c20c9dbe28395ecc1539dec876b3a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Button &gt;</type>
      <name>Buttons</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a352f92f1cf85c1261f240218eb70ed00</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a5eee4b5f38e8df4c1eecb981f96c1fc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Buttons</type>
      <name>buttons</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a263ef4abf8efe7076abd83659b33b636</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a25177146839decde2da0607ac761c1b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const EmscriptenMouseEvent &amp;</type>
      <name>event</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>afc3f49e3089c05007d113a04dade3be9</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::EmscriptenApplication::MouseScrollEvent</name>
    <filename>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseScrollEvent.html</filename>
    <base>Magnum::Platform::EmscriptenApplication::InputEvent</base>
    <member kind="function">
      <type>Vector2</type>
      <name>offset</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseScrollEvent.html</anchorfile>
      <anchor>a636c9b1babdfb08b9560f448ae78b69c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseScrollEvent.html</anchorfile>
      <anchor>a52298548413080d92bb4be3b9edd1d66</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseScrollEvent.html</anchorfile>
      <anchor>a43f938dbe6dffe34a87eb7673bd13915</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const EmscriptenWheelEvent &amp;</type>
      <name>event</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1MouseScrollEvent.html</anchorfile>
      <anchor>a0599f987b07a57e3ace7b938d944c8d7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::EmscriptenApplication::TextInputEvent</name>
    <filename>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1TextInputEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>TextInputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>af62237a4162dc617b4f22b8014fb1615</anchor>
      <arglist>(const TextInputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextInputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>a883fe02469ad139fafb628894dbebf85</anchor>
      <arglist>(TextInputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TextInputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>ab952dd58558735122ff805892f30c6b3</anchor>
      <arglist>(const TextInputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TextInputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>a16532fbf416f4901571c520975182fc6</anchor>
      <arglist>(TextInputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>ae8d6964fd45f0ac64e596c44c3b20480</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>a82a24d9d8df6c45647abfa4a645b5fb0</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const char &gt;</type>
      <name>text</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>aeed5fcbea4fad67aaa68a90d6b47ee70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const EmscriptenKeyboardEvent &amp;</type>
      <name>event</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>a23c68869b499cf5b6b191a34a9052d8b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::EmscriptenApplication::ViewportEvent</name>
    <filename>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1ViewportEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>ViewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>a5ad173c9a3b6ee04ffb64cb9cfadff82</anchor>
      <arglist>(const ViewportEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ViewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>ae5e0f619f27596d389e0d12d5a819912</anchor>
      <arglist>(ViewportEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ViewportEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>ac828abc82ed16d6ea78f435e44f2cb91</anchor>
      <arglist>(const ViewportEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ViewportEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>a5abb02568f85422631070bd947802820</anchor>
      <arglist>(ViewportEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>windowSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>a3eb0f5dfa678ae3f7d89ab1e4acc6915</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>framebufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>a26d1275eb91c8ad9e821425bf6581bf1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>dpiScaling</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>ab0db81d5f32795bf34b4e0d26150ed8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>devicePixelRatio</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>a568400dd11d267b9f46e7d12318fe897</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const EmscriptenUiEvent *</type>
      <name>event</name>
      <anchorfile>classMagnum_1_1Platform_1_1EmscriptenApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>a1900ddf56d5280ad8c99a510ea19fb91</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GLContext</name>
    <filename>classMagnum_1_1Platform_1_1GLContext.html</filename>
    <base>Magnum::GL::Context</base>
    <member kind="function">
      <type></type>
      <name>GLContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1GLContext.html</anchorfile>
      <anchor>ae01624525a4fab03b1da59eb4bcb8228</anchor>
      <arglist>(Int argc, const char **argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GLContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1GLContext.html</anchorfile>
      <anchor>a9351b27194bedff3a573ce8f799f891a</anchor>
      <arglist>(Int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GLContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1GLContext.html</anchorfile>
      <anchor>ae74f17fc2bd67c850d5fc5d1ff5675ee</anchor>
      <arglist>(Int argc, std::nullptr_t argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GLContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1GLContext.html</anchorfile>
      <anchor>afdff7debed7cf81414726cafa88740c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GLContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1GLContext.html</anchorfile>
      <anchor>a61941204b77a09a244d2c79d909cff8c</anchor>
      <arglist>(NoCreateT, Int argc, const char **argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GLContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1GLContext.html</anchorfile>
      <anchor>af15e45de7d4e2c8b5233347682d1ea03</anchor>
      <arglist>(NoCreateT, Int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GLContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1GLContext.html</anchorfile>
      <anchor>a1c2bb1bbe6bde8ebb5ce3178053f748f</anchor>
      <arglist>(NoCreateT, Int argc, std::nullptr_t argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GLContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1GLContext.html</anchorfile>
      <anchor>ae228e18b42a4a2519d223f499dbd0455</anchor>
      <arglist>(NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>create</name>
      <anchorfile>classMagnum_1_1Platform_1_1GLContext.html</anchorfile>
      <anchor>a357f67ad0cc0b884adca9a28dbc9cf30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tryCreate</name>
      <anchorfile>classMagnum_1_1Platform_1_1GLContext.html</anchorfile>
      <anchor>a0cd186490a242ebb5f2f3feff316ad21</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlfwApplication</name>
    <filename>classMagnum_1_1Platform_1_1GlfwApplication.html</filename>
    <class kind="struct">Magnum::Platform::GlfwApplication::Arguments</class>
    <class kind="class">Magnum::Platform::GlfwApplication::Configuration</class>
    <class kind="class">Magnum::Platform::GlfwApplication::ExitEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::GLConfiguration</class>
    <class kind="class">Magnum::Platform::GlfwApplication::InputEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::KeyEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::MouseEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::MouseMoveEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::MouseScrollEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::TextInputEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::ViewportEvent</class>
    <member kind="function">
      <type></type>
      <name>GlfwApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>aeeefee51f32dce640351c1778cbde7a9</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration, const GLConfiguration &amp;glConfiguration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlfwApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>ab57b09dc0566bb7ec26a9ad3764ffbb6</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlfwApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a02ededa9b49c7429106f350a9e472d8f</anchor>
      <arglist>(const Arguments &amp;arguments)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlfwApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a616194e6b0501f9eb914d275907d1ecc</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlfwApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a6e5f3dd9d4e4b68b950d75d915545ec8</anchor>
      <arglist>(const GlfwApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlfwApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a563f6cf43cf00cb204829686c06381eb</anchor>
      <arglist>(GlfwApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>GlfwApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>ae03a1033276427626013b9c5b435460f</anchor>
      <arglist>(const GlfwApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>GlfwApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a960093801384fea7ac5805f29cc02a50</anchor>
      <arglist>(GlfwApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a2721b1a89bd4b1685be45505c25cbd27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exit</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a7de5fd1778375d52c93d8ee50495684c</anchor>
      <arglist>(int exitCode=0)</arglist>
    </member>
    <member kind="function">
      <type>GLFWwindow *</type>
      <name>window</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a19095cf0b6dfa8d3b7f3d3e30b241bd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>create</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a19dcd49aca5b14e6502860cdf36bf22e</anchor>
      <arglist>(const Configuration &amp;configuration, const GLConfiguration &amp;glConfiguration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>create</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a074e4617b6fa2ad692496934b8c49f39</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>create</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a9212e484f9dd2dad754e9b89cf4e2026</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreate</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a97bf7d1a392c28eeaaee6af62e487968</anchor>
      <arglist>(const Configuration &amp;configuration, const GLConfiguration &amp;glConfiguration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreate</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a05f4653f31ba2d564320496adaf4bba1</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>windowSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a865aecbf1e84f6afcc62eb94be8e4cc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinWindowSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a4f4056460a635eec25fda0502012a52e</anchor>
      <arglist>(const Vector2i &amp;size={-1, -1})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxWindowSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a16a2e1debd10d99a8324c6aa7abc7990</anchor>
      <arglist>(const Vector2i &amp;size={-1, -1})</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>framebufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a2f204f6d093a151b9e701526cb9e1e34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>dpiScaling</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a3423544663e0970ccba0d56334783cfb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>dpiScaling</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a8166be6c9e6ee10dd79a91424a8aa389</anchor>
      <arglist>(const Configuration &amp;configuration) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapBuffers</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>ac6db31c9431d95ee8f08ef7137e0ca43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSwapInterval</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a69162fdc40698223dd64bce75766cb74</anchor>
      <arglist>(Int interval)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redraw</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>ac78b59f00aa006b24a00a361f63d956a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>viewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a9c3f08e800f965aea55872c20f1cbc19</anchor>
      <arglist>(ViewportEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>viewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a13ea90265fa30653f6e2c4123fe34acc</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>drawEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a5761ff4826f3d1facfef0e2eed3c90bd</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>keyPressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>afd3317ee8f0d8a8796906f9cfc402e83</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>keyReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a3e41fc05d973695979bd2f40e19df957</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>warpCursor</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a6f3b26a38e9bce274a6fb77dccf59474</anchor>
      <arglist>(const Vector2i &amp;position)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mousePressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>abe83afa1c9c5377195ea7d5994887668</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>adac83b36392c0701ed1a7e1583a68b11</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseMoveEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>ae3ce8d14de628078a480cab77caa2efe</anchor>
      <arglist>(MouseMoveEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseScrollEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>aad142d14117ee8a26c24f9cdc01c577d</anchor>
      <arglist>(MouseScrollEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTextInputActive</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>ab2ccd94fa4eb4fdef9da2f2113bca782</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startTextInput</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>ac1294c1dad8d766f05624b790e5c59f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopTextInput</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a37032f7784b2a82e29ec8dd5960d16e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>textInputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a8483f136c94f1fc651257fcf8c90f72b</anchor>
      <arglist>(TextInputEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>exitEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>ae74e0dc5e258cfab172c180c5460bb54</anchor>
      <arglist>(ExitEvent &amp;event)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Platform_1_1GlfwApplication" title="Bootstrap application">Platform-GlfwApplication-bootstrap</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1GlfwApplication" title="General usage">Platform-GlfwApplication-usage</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1GlfwApplication" title="DPI awareness">Platform-GlfwApplication-dpi</docanchor>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::GlfwApplication::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1GlfwApplication_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1GlfwApplication_1_1Arguments.html</anchorfile>
      <anchor>aa71d2287269c4e5433b42d9dba38565d</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1GlfwApplication_1_1Arguments.html</anchorfile>
      <anchor>a949d70f2fc4972fbe35bf3df63d302ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1GlfwApplication_1_1Arguments.html</anchorfile>
      <anchor>a54ae3b31b5ac3305316b41143fb43584</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlfwApplication::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>WindowFlag</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>ac329bec3923186c994a8912edb8539b6</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ac329bec3923186c994a8912edb8539b6a0829ea6734059d66e6bf87096b215dc1">Fullscreen</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ac329bec3923186c994a8912edb8539b6aaff10bf1618da00a8a80b74044e719b2">Resizable</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ac329bec3923186c994a8912edb8539b6a7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ac329bec3923186c994a8912edb8539b6a49d903a5c02560cf79bf6b516cc89457">Maximized</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ac329bec3923186c994a8912edb8539b6a074afcc50ae51f248cbae4950845549e">Minimized</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ac329bec3923186c994a8912edb8539b6ac8df43648942ec3a9aec140f07f47b7c">Floating</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ac329bec3923186c994a8912edb8539b6af1be21488589b6fe6a2c777e0c6ebc1f">AutoIconify</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ac329bec3923186c994a8912edb8539b6aa2e08e1fbbc3e1489d688eba112f7964">Focused</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ac329bec3923186c994a8912edb8539b6a6ccd70de20161a61101cfd18027aa795">Contextless</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DpiScalingPolicy</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a0698386ae4c2791f28b57a73a5909ee6</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="a0698386ae4c2791f28b57a73a5909ee6a42badd9e49002a3cefeaaf28867add83">Framebuffer</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="a0698386ae4c2791f28b57a73a5909ee6a615e6f9baca5553d44683a098d342b70">Virtual</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="a0698386ae4c2791f28b57a73a5909ee6ace898d62ed9ca7653a01fe0c781e97e9">Physical</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="a0698386ae4c2791f28b57a73a5909ee6a7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CursorMode</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>ae9dffa3324ddf42435d2e27c7ea5160b</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ae9dffa3324ddf42435d2e27c7ea5160ba960b44c579bc2f6818d2daaf9e4c16f0">Normal</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ae9dffa3324ddf42435d2e27c7ea5160ba7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ae9dffa3324ddf42435d2e27c7ea5160bab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; WindowFlag &gt;</type>
      <name>WindowFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a36cbc10723ac3c7dbab74d1efb6a65c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>title</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a1bdbd52798f435c25e98b4447a449c78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setTitle</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a362858c34fa03931d6924bb30a009022</anchor>
      <arglist>(std::string title)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a939b0046c2c069a988338901f81d1b65</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DpiScalingPolicy</type>
      <name>dpiScalingPolicy</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a2dc96cb3983591a59dcebc1476e4aea1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>dpiScaling</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>aa0a7063c716b05128d518b43744025e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>af1a2ae40cf8ea81303d26567a8c6b757</anchor>
      <arglist>(const Vector2i &amp;size, DpiScalingPolicy dpiScalingPolicy=DpiScalingPolicy::Default)</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a2168956d40f2c8c7fb901d47ca410642</anchor>
      <arglist>(const Vector2i &amp;size, const Vector2 &amp;dpiScaling)</arglist>
    </member>
    <member kind="function">
      <type>WindowFlags</type>
      <name>windowFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>af6fdec2b5739147cc7d3d22595f220db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setWindowFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a300c1513737c39cae9050d8d950b21ac</anchor>
      <arglist>(WindowFlags windowFlags)</arglist>
    </member>
    <member kind="function">
      <type>CursorMode</type>
      <name>cursorMode</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>aa6c4edf3b5b503b5041c87f1c4277351</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setCursorMode</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a7902d60a5fe76a062ae6f393f9d8288a</anchor>
      <arglist>(CursorMode cursorMode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlfwApplication::ExitEvent</name>
    <filename>classMagnum_1_1Platform_1_1GlfwApplication_1_1ExitEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>ExitEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1ExitEvent.html</anchorfile>
      <anchor>a438d6191a41dfb4e33e7ac8281a57a52</anchor>
      <arglist>(const ExitEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExitEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1ExitEvent.html</anchorfile>
      <anchor>a968c6215b5934a4dfebc7fd48e14c771</anchor>
      <arglist>(ExitEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ExitEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1ExitEvent.html</anchorfile>
      <anchor>a5f52c78ee8f5bb1dd5f9ec2396157cdc</anchor>
      <arglist>(const ExitEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ExitEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1ExitEvent.html</anchorfile>
      <anchor>a97d0d19738e37b63cef29721ff047fec</anchor>
      <arglist>(ExitEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1ExitEvent.html</anchorfile>
      <anchor>ac0014fda21547dc286304ab6777af9ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1ExitEvent.html</anchorfile>
      <anchor>acb676e68d630801f5cfb465d7ac68758</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlfwApplication::GLConfiguration</name>
    <filename>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>ac45497a7da4b80c0503e6f9d25d3d783</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html" anchor="ac45497a7da4b80c0503e6f9d25d3d783a90b21fdee9b0f1e07fec562556052bab">ForwardCompatible</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html" anchor="ac45497a7da4b80c0503e6f9d25d3d783a70a47cae4eb221930f2663fd244369ea">NoError</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html" anchor="ac45497a7da4b80c0503e6f9d25d3d783aa603905470e2a5b8c13e96b579ef0dba">Debug</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html" anchor="ac45497a7da4b80c0503e6f9d25d3d783abbc45d9b35436f5f0ed9e33499efcea9">Stereo</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a15c17ce2f93f9aa8a3181fc043049361</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>ab7ae74f3c062ec6351fdafb8ff692b79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a61b9a1f910e41385c0e075a4b2b41de0</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>addFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a7f9306beeb5c8e3958cca8f112727ffa</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>clearFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a64fa4898623d368ba88c4bab77d41097</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>GL::Version</type>
      <name>version</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a10caadba268b2c070a65f289e2381caf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setVersion</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a84c5a748f48437664a9360af8a4e3f2e</anchor>
      <arglist>(GL::Version version)</arglist>
    </member>
    <member kind="function">
      <type>Vector4i</type>
      <name>colorBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a3f0afd5086f0b5dbbd3a41953f81193c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setColorBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>ac126d2601b44dce39f922e101b51db1f</anchor>
      <arglist>(const Vector4i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>depthBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a6242708cfb1046d302f0fd8fe3797c2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setDepthBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a70c2de952088de39d1a8a27304999438</anchor>
      <arglist>(Int size)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>stencilBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a9730a19e60621e2e30e925175da4b03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setStencilBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a112e3af62e79f94cfc4b71ed43d5245a</anchor>
      <arglist>(Int size)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sampleCount</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>ae079a4d036756767cb59fdc2c3facdc5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setSampleCount</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a894c7c81c4b9cdb644d0bb01ed37dc50</anchor>
      <arglist>(Int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSrgbCapable</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>ae76c5f9a3d1b79712b13b8c5f7006d5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setSrgbCapable</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a95f13bfb294a096cd1e6e499ba5d40e0</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSRGBCapable</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>a9b8976b6829774279a5b9be57d9d54a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setSRGBCapable</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1GLConfiguration.html</anchorfile>
      <anchor>aac5858ed4c0d61668b1799feaf2ebeed</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlfwApplication::InputEvent</name>
    <filename>classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Modifier</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html</anchorfile>
      <anchor>aa0ab3ab0661751f494bc00ad14a06653</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html" anchor="aa0ab3ab0661751f494bc00ad14a06653a825a3d98017bab11815ad2817201324c">Shift</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html" anchor="aa0ab3ab0661751f494bc00ad14a06653a2b61e0d5977f2e38f06e16281c802b47">Ctrl</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html" anchor="aa0ab3ab0661751f494bc00ad14a06653aa2e92861b757ab878312dd57993d60cf">Alt</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html" anchor="aa0ab3ab0661751f494bc00ad14a06653a0ce3266d4eb71ad50f7a90aee6d21dcd">Super</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Modifier &gt;</type>
      <name>Modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html</anchorfile>
      <anchor>ac3a649a7e0b48828bbf93dce4caffe13</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html</anchorfile>
      <anchor>a0897a8ef577ef7ea555e377ceb880ef0</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html</anchorfile>
      <anchor>ae212573566426faac4461d4883a482cf</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html</anchorfile>
      <anchor>a7978c8f420dab764a5b1e6d4e7fb70b6</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html</anchorfile>
      <anchor>ac51bb2614d67c1f86a0c61d8a45169ff</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html</anchorfile>
      <anchor>a3b93ef0f2947d02ab98224c2f6270d77</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html</anchorfile>
      <anchor>afe11d61b9ec1325440cd28da76936ee7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlfwApplication::KeyEvent</name>
    <filename>classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html</filename>
    <base>Magnum::Platform::GlfwApplication::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Key</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html</anchorfile>
      <anchor>a90b72544e22cdacf39831c53b39c4a48</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a982621712db76f723b7bb88b631dc64d">LeftShift</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a317d4a7487ee62605713987d4a037f83">RightShift</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af2be247d68aadad6e9ba07db1885cd1c">LeftCtrl</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af298b75d2207818c0459c063a21fd172">RightCtrl</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a96f9c4eb595a467d02e35c723f63ebf7">LeftAlt</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ad88bad98046b623323aa6ca28eefa6d5">RightAlt</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a4bd45bf12e08f60072b6962e9f7794c2">LeftSuper</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a0cc5a9f113dc1147c8eeae2f0199f9f2">RightSuper</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af1851d5600eae616ee802a31ac74701b">Enter</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a91f4253ca587ca8ac4e63b9ceb351f5d">Esc</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a258f49887ef8d14ac268c92b02503aaa">Up</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a08a38277b0309070706f6652eeae9a53">Down</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a8cf04a9734132302f96da8e113e80ce5">Home</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a87557f11575c0ad78e4e28abedc13b6e">End</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a9b869c510c75c5827ac82e49d4340927">PageUp</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48aee3677bcca83ece9384b01e43952bf33">PageDown</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48acd7d13ceea728b08555f7c818cfb13ef">Backspace</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48aa458be0f08b7e4ff3c0f633c100176c0">Insert</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af2a6c498fb90ee345d997f888fce3b18">Delete</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ae1dffc8709f31a4987c8a88334107e89">F1</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48afe5c3684dce76cdd9f7f42430868aa74">F2</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a4b6bf4b531770872d4328ce69bef5627">F3</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ae7e0e72401a9f2718ed0f39f2861d702">F4</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a37f438df6a6d5ba4c17ef8ca58562f00">F5</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a1faf42f2823f184eb2c9f0dffe5d73f2">F6</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a47489eb597b7db34caa24b1fc78fc839">F7</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a4787509ad9f9d747a81a30e9dde3d4a7">F8</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a892a245e287c163080b23db737d3c4c9">F9</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ab213ce22ca6ad4eda8db82966b9b6e5a">F10</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a643b0662422d1d0dffa3fca2e2bf28a8">F11</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ae902674982fc99aa343cdd94da7476c3">F12</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ad511f8439ecde36647437fbba67a4394">Space</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a5c6ba25104401c9ee0650230fc6ba413">Tab</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a58be47db9455679e6a44df2eff9c9fa6">Comma</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a1901606ea069a83dc7beea17881ef95a">Period</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a453fb623e752c5993f65bc410fd74fe5">Minus</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a32ba78fe43257d3e7f88e3935a8ea0d4">Plus</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a358cfe58715d680d9ab09f82e4010cbc">Slash</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48aadaaee4b22041c27198d410c68d952c9">Percent</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a9806fa37a3ecd39bf637c203aa011ed0">Semicolon</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a02c46eec0a232f46ee7080dfb78a65de">Smicolon</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af5f286e73bda105e538310b3190f75c5">Equal</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ad7ed4ee1df437474d005188535f74875">Zero</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a06c2cea18679d64399783748fa367bdd">One</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48aaada29daee1d64ed0fe907043855cb7e">Two</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48aca8a2087e5557e317599344687a57391">Three</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a981b8fcee42e1e726a67a2b9a98ea6e9">Four</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ae5d9de39f7ca1ba2637e5640af3ae8aa">Five</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ae6fbc0b9673f8c86726688d7607fc8f5">Six</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a12e67aac3e7f9227cc35f8f047d7dc74">Seven</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48abaca0ca6729684fd54206793ae4b5bd5">Eight</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a24db11216549ee55172c33cf3def2f3f">Nine</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a7fc56270e7a70fa81a5935b72eacbe29">A</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a9d5ed678fe57bcca610140957afab571">B</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a0d61f8370cad1d412f80b84d143e1257">C</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af623e75af30e62bbd73d6df5b50bb7b5">D</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a3a3ea00cfc35332cedf6e5e9a32e94da">E</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a800618943025315f869e4e1f09471012">F</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48adfcf28d0734569a6a693bc8194de62bf">G</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ac1d9f50f86825a1a2302ec2449c17196">H</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48add7536794b63bf90eccfd37f9b147d7f">I</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48aff44570aca8241914870afbc310cdb85">J</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48aa5f3c6a11b03839d46af9fb43c97c188">K</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ad20caec3b48a1eef164cb4ca81ba2587">L</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a69691c7bdcc3ce6d5d8a1361f22d04ac">M</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a8d9c307cb7f3c4a32822a51922d1ceaa">N</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af186217753c37b9b9f958d906208506e">O</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a44c29edb103a2872f519ad0c9a0fdaaa">P</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af09564c9ca56850d4cd6b3319e541aee">Q</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ae1e1d3d40573127e9ee0480caf1283d6">R</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a5dbc98dcc983a70728bd082d1a47546e">S</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ab9ece18c950afbfa6b0fdbfa4ff731d3">T</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a4c614360da93c0a041b22e537de151eb">U</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a5206560a306a2e085a437fd258eb57ce">V</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a61e9c06ea9a85a5088a499df6458d276">W</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a21c2e59531c8710156d34a3c30ac81d5">Z</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a8d0f4171170104d094d8b6d4f8bf49e6">CapsLock</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a7d7902d5e2998e4fb2b8694a2de4ff65">ScrollLock</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48acf6cc0261135c6d163fd4305375773d2">NumLock</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48abf54024481cd2ad6bbb9ae44b7312472">PrintScreen</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a105b296a83f9c105355403f3332af50f">Pause</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ab61541208db7fa7dba42c85224405911">Menu</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a1869dff90f04dc9d3440e15914911c4b">NumZero</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a434921bdf9c88d2f95dad4c36d7470c7">NumOne</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a157dafd3675172c7d6e3d1db3328c86d">NumTwo</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af66a061b82c07e120dfc396b228e89ec">NumThree</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af56576fa9aa7b5a204e2b14c7e37b19c">NumFour</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a5ff8650b509a4b11e0ddc38d3703a427">NumFive</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48aaf599848db6b5bb6b851f50ba44c6a98">NumSix</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a61a96fdbd354c8a5f808b9fb61dc15bc">NumSeven</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a385f9a2264878bc6c93ec7b5dc287467">NumEight</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a615aef11d2a108f3ede8bca77e451f87">NumNine</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a2d7b9bc754ace6e474a3f68c493eb553">NumDecimal</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a7fee165fee036b58e2e460ca8e006f03">NumDivide</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ad6c81b855af26854fa89ebf21f8ff972">NumMultiply</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a8e0411bbc85a52f7986b8ed9beb886ba">NumSubtract</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af4ddc8457c915e0e241a547fd7153ac4">NumAdd</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a2c1389c1c9102cf39c69b0f334a0b859">NumEnter</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a8ac0ce1e964c895dac72be97a4b61177">NumEqual</enumvalue>
    </member>
    <member kind="function">
      <type>Key</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html</anchorfile>
      <anchor>aff35e71b32d784d732fb87ecb4aabe8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>keyName</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html</anchorfile>
      <anchor>aaeb39f31696e4b2ef4bc3cdb2a9ebbbc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html</anchorfile>
      <anchor>a46d030d3df7f39acfd036c9b7a34beb5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRepeated</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html</anchorfile>
      <anchor>a4965249180a5fcfb53ba023826d164e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>keyName</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html</anchorfile>
      <anchor>a122d7fbe873fbe41cac116c850353e26</anchor>
      <arglist>(Key key)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlfwApplication::MouseEvent</name>
    <filename>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html</filename>
    <base>Magnum::Platform::GlfwApplication::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html</anchorfile>
      <anchor>a6dcf802a3aa78c19081f8312fc976377</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377ab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377a6475a3746209a62a6ce6289a3741d07e">Button1</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377ae165925a7c2d5ea94209b91389aa189f">Button2</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377a6d0c69e60d65a93dd244ae95f90e679c">Button3</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377a91ff24acfc01cc2c3a4238a272a37d07">Button4</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377af8849babaeaee3344306b87310664d65">Button5</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377a375ccc6b3a6125cc5c67f2c700a55b72">Button6</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377aa00c628d1b186fa4fe9c7f633426979e">Button7</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377a4f651f24c0b38f6e7ea0d52b0c514e36">Button8</enumvalue>
    </member>
    <member kind="function">
      <type>Button</type>
      <name>button</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html</anchorfile>
      <anchor>a62be76294384dbad314f599a9342e017</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html</anchorfile>
      <anchor>a2c6895665a6999ae2b696d1e82b5976c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html</anchorfile>
      <anchor>a0034be791a1dc9cc93d083ead978a9d8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlfwApplication::MouseMoveEvent</name>
    <filename>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseMoveEvent.html</filename>
    <base>Magnum::Platform::GlfwApplication::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a9fff9af30c7c657f9a9a6b76cc1426c2</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseMoveEvent.html" anchor="a9fff9af30c7c657f9a9a6b76cc1426c2a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseMoveEvent.html" anchor="a9fff9af30c7c657f9a9a6b76cc1426c2ab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseMoveEvent.html" anchor="a9fff9af30c7c657f9a9a6b76cc1426c2a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Button &gt;</type>
      <name>Buttons</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a06e10625072da10b1419aac6575b3edc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Buttons</type>
      <name>buttons</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>aa852fef7a676e6bc29d7155ceb7455c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a1a0a9bc2486821bb8c16ebc013a6639f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a47f10d1044e2340fa6b48f58009569e9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlfwApplication::MouseScrollEvent</name>
    <filename>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseScrollEvent.html</filename>
    <base>Magnum::Platform::GlfwApplication::InputEvent</base>
    <member kind="function">
      <type>Vector2</type>
      <name>offset</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseScrollEvent.html</anchorfile>
      <anchor>aef750504daf6c9d029d5bfa4f0b7c269</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseScrollEvent.html</anchorfile>
      <anchor>a910fa58fb24d6554bc8a7b72af8759e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseScrollEvent.html</anchorfile>
      <anchor>a4e3346a94ce7beaae2644cfbe2491576</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlfwApplication::TextInputEvent</name>
    <filename>classMagnum_1_1Platform_1_1GlfwApplication_1_1TextInputEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>TextInputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>a5d1a5f5ff7a5d11b44508b7b606a2282</anchor>
      <arglist>(const TextInputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextInputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>af443f16d3d78ead1bca3cabf3a7518d5</anchor>
      <arglist>(TextInputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TextInputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>afa34658405d0eae9ff1ca7c32256170b</anchor>
      <arglist>(const TextInputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TextInputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>a5698117de59e1758492db04c2582d032</anchor>
      <arglist>(TextInputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>a2d78b647d1b37a61a6db4e6aedfd6543</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>af7d46da1b5b4a69d39d27017c8ab12e9</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const char &gt;</type>
      <name>text</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>a7f72dacea90aa52f94c5985b851996d6</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlfwApplication::ViewportEvent</name>
    <filename>classMagnum_1_1Platform_1_1GlfwApplication_1_1ViewportEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>ViewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>a982edc5967148891bd45b386f72d8587</anchor>
      <arglist>(const ViewportEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ViewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>a8c1bdeb6aec24e4da306ac1235cb3a28</anchor>
      <arglist>(ViewportEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ViewportEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>aaf5b130fdea8ab9aa23b439d15e9a72c</anchor>
      <arglist>(const ViewportEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ViewportEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>ad0ccedd73baa33e8727a6d2005a99a0b</anchor>
      <arglist>(ViewportEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>windowSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>a80f124dde155ef73ccf202aedd2c68c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>framebufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>a9a8a76bb9776f490fb4b2c0953777363</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>dpiScaling</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1ViewportEvent.html</anchorfile>
      <anchor>a0d8b00658292105e4ef25bd7f4d46b11</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlxApplication</name>
    <filename>classMagnum_1_1Platform_1_1GlxApplication.html</filename>
    <base>Magnum::Platform::AbstractXApplication</base>
    <member kind="function">
      <type></type>
      <name>GlxApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlxApplication.html</anchorfile>
      <anchor>acf7a4e0684e5f3a29c9b51f1c6c90b27</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration{}, const GLConfiguration &amp;glConfiguration=GLConfiguration{})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlxApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlxApplication.html</anchorfile>
      <anchor>a00a8886216281413691a539ce6658792</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Platform_1_1GlxApplication" title="Bootstrap application">Platform-GlxApplication-bootstrap</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1GlxApplication" title="General usage">Platform-GlxApplication-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application.html</filename>
    <class kind="struct">Magnum::Platform::Sdl2Application::Arguments</class>
    <class kind="class">Magnum::Platform::Sdl2Application::Configuration</class>
    <class kind="class">Magnum::Platform::Sdl2Application::ExitEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::GLConfiguration</class>
    <class kind="class">Magnum::Platform::Sdl2Application::InputEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::KeyEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::MouseEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::MouseMoveEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::MouseScrollEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::MultiGestureEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::TextEditingEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::TextInputEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::ViewportEvent</class>
    <member kind="function">
      <type></type>
      <name>Sdl2Application</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>aebfcb9e049f1f78bf8267b49432c0631</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration, const GLConfiguration &amp;glConfiguration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sdl2Application</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a125d9ea1451561cb8f8f71206588c8a6</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sdl2Application</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a4e4dbe5d2b9ec1f44e60efbbd9a35ce7</anchor>
      <arglist>(const Arguments &amp;arguments)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sdl2Application</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a53504f1d4812366ba3f5aefc2f4668b7</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sdl2Application</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>adf305172a1238dc4ee154d309d80752b</anchor>
      <arglist>(const Sdl2Application &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sdl2Application</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a5cdfbec176e6bf05db1eaf9fd9d61c5b</anchor>
      <arglist>(Sdl2Application &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Sdl2Application &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a4db049866c383dc95b2e1321ee4e51a0</anchor>
      <arglist>(const Sdl2Application &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Sdl2Application &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>acd991e06cc66b2b213d577d50c06817e</anchor>
      <arglist>(Sdl2Application &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a8ca499010e9c76be83acc7220489a174</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exit</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a07f69abfc17925a015a4494d06baef0a</anchor>
      <arglist>(int exitCode=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mainLoopIteration</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a75b6be5ecc7def9f65da122b966d45d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SDL_Window *</type>
      <name>window</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>aaf7814899eda4398287ad5a61a40a784</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SDL_GLContext</type>
      <name>glContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a27d11abc1f8f50d583da721b5ece8f1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>create</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a97599b274cbe65df010c54bc43b7ed73</anchor>
      <arglist>(const Configuration &amp;configuration, const GLConfiguration &amp;glConfiguration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>create</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a5b2e12e1af9a001f5c0ec6622306c984</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>create</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a481160db0e65539b39e5f7d3946a65fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreate</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a8b3a53be607d21771c91551fe28e18bc</anchor>
      <arglist>(const Configuration &amp;configuration, const GLConfiguration &amp;glConfiguration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreate</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a38a2875f7f785dfa5afe7b34118e59b4</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>windowSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a878988745a29773a4b7d224ef53f425c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinWindowSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a73c0278414599c4a887fe7e9b6d4c845</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxWindowSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>ae3a0c90d55a7f2c974fc2c6e1b98ca7f</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>framebufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a2d5a3fb1e725a268cf43294a0f7a31f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>dpiScaling</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a31c735939a819fcd5fe17cbe681ba385</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>dpiScaling</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>aa3b50c7783eb231ca03136503be935b1</anchor>
      <arglist>(const Configuration &amp;configuration) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContainerCssClass</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a762485ce16efabd78ece3085b8753249</anchor>
      <arglist>(const std::string &amp;cssClass)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapBuffers</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a2e6c2689b7f733fb4949e7d35664e993</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>swapInterval</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>aff37a648dcccefac568677d4a537478e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setSwapInterval</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a745b3b3793fb1a65e30d1fce72c0625e</anchor>
      <arglist>(Int interval)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimalLoopPeriod</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a296b443b1cfb30460417f0e897042764</anchor>
      <arglist>(UnsignedInt milliseconds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redraw</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a07b8148f0f212659259d060c7b6ad2bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>viewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a4da09dd168d20ec596428ec342e269f6</anchor>
      <arglist>(ViewportEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>viewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>afa87bd8a7a55f1d3cd88c920dcf8326b</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>drawEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>af9354a5fca56b4c1aa5e95151e4f60c5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>keyPressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a6f5d00985cb306c5a510da091e45a7ca</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>keyReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a813c21092b0705d411a272e59c6c12d6</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMouseLocked</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a75e73355b014758da8bd9b1414da7362</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMouseLocked</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>add8dcb7f6d2a04afc25dc88f4761a1d8</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mousePressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>acef081f3f7b1d171336baed4c24af66b</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>ab1bfe00e5e47fc4ab450542e56c61826</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseMoveEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a49a81c84de790329bd4263c5366d28d3</anchor>
      <arglist>(MouseMoveEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseScrollEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a220138d8fec37f22282e1e6e856ae0d9</anchor>
      <arglist>(MouseScrollEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>multiGestureEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>aa38a60935f9414ad81597a45577781c7</anchor>
      <arglist>(MultiGestureEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTextInputActive</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>acf205218076ba4214fed12bd9f1dcd90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startTextInput</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a91245cb15aa5af835d1e507be67ec2c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopTextInput</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a08cc9a843c9e9b21bfd5ea27b24de224</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextInputRect</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a520389bdebe2c243cab7fde3aba4e883</anchor>
      <arglist>(const Range2Di &amp;rect)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>textInputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a42f61cd43beae72388d69479d242afdc</anchor>
      <arglist>(TextInputEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>textEditingEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>af700c9491a5c748a897001d373b2be6a</anchor>
      <arglist>(TextEditingEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>exitEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a441d4172478d3b405eecd4e3fe3b8646</anchor>
      <arglist>(ExitEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>tickEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a487227b0018f9999555595bbf8e8b8f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>anyEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>afcaac66718ddfcf624155cdf4af4d438</anchor>
      <arglist>(SDL_Event &amp;event)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Platform_1_1Sdl2Application" title="Bootstrap application">Platform-Sdl2Application-bootstrap</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1Sdl2Application" title="Bootstrap application for Emscripten">Platform-Sdl2Application-bootstrap-emscripten</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1Sdl2Application" title="Bootstrap application for iOS">Platform-Sdl2Application-bootstrap-ios</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1Sdl2Application" title="Bootstrap application for Windows RT">Platform-Sdl2Application-bootstrap-winrt</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1Sdl2Application" title="General usage">Platform-Sdl2Application-usage</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1Sdl2Application" title="POSIX specifics">Platform-Sdl2Application-usage-posix</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1Sdl2Application" title="Linux specifics">Platform-Sdl2Application-usage-linux</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1Sdl2Application" title="iOS specifics">Platform-Sdl2Application-usage-ios</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1Sdl2Application" title="Emscripten specifics">Platform-Sdl2Application-usage-emscripten</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1Sdl2Application" title="OpenGL ES specifics">Platform-Sdl2Application-usage-gles</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1Sdl2Application" title="DPI awareness">Platform-Sdl2Application-dpi</docanchor>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::Sdl2Application::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1Sdl2Application_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1Sdl2Application_1_1Arguments.html</anchorfile>
      <anchor>a38cdf0a8ebffa15d03806e8275612081</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1Sdl2Application_1_1Arguments.html</anchorfile>
      <anchor>ae06e1fd5a4291fce50ce98a38ccba772</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1Sdl2Application_1_1Arguments.html</anchorfile>
      <anchor>afd395254543cd1ad28b31f14c3cfa122</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>WindowFlag</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>aaedcde29393bd4be1788b5d0ebb7a0bf</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="aaedcde29393bd4be1788b5d0ebb7a0bfaaff10bf1618da00a8a80b74044e719b2">Resizable</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="aaedcde29393bd4be1788b5d0ebb7a0bfa0829ea6734059d66e6bf87096b215dc1">Fullscreen</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="aaedcde29393bd4be1788b5d0ebb7a0bfa78f0192ac55eba33ee88d026452952e5">Borderless</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="aaedcde29393bd4be1788b5d0ebb7a0bfa03047a86a12fd0de50c60eb5e8fa3a00">AllowHighDpi</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="aaedcde29393bd4be1788b5d0ebb7a0bfa7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="aaedcde29393bd4be1788b5d0ebb7a0bfa49d903a5c02560cf79bf6b516cc89457">Maximized</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="aaedcde29393bd4be1788b5d0ebb7a0bfa074afcc50ae51f248cbae4950845549e">Minimized</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="aaedcde29393bd4be1788b5d0ebb7a0bfa3cabee44dc8e0f3eaaa976a0b9a8f280">MouseLocked</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="aaedcde29393bd4be1788b5d0ebb7a0bfa6ccd70de20161a61101cfd18027aa795">Contextless</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DpiScalingPolicy</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>ae020962789140b0a76f57d9a93d4f5bb</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="ae020962789140b0a76f57d9a93d4f5bba42badd9e49002a3cefeaaf28867add83">Framebuffer</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="ae020962789140b0a76f57d9a93d4f5bba615e6f9baca5553d44683a098d342b70">Virtual</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="ae020962789140b0a76f57d9a93d4f5bbace898d62ed9ca7653a01fe0c781e97e9">Physical</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="ae020962789140b0a76f57d9a93d4f5bba7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; WindowFlag &gt;</type>
      <name>WindowFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>a7a39952d1ce94fa385b74f5e0644fc66</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>title</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>aed08295bed045ff660db945b370e5434</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setTitle</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>afdbff6fad143fa1e8bb18371475c2083</anchor>
      <arglist>(std::string title)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>a24541df0bb0a07bd301dcd37ac1fbc1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DpiScalingPolicy</type>
      <name>dpiScalingPolicy</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>ab69d5c5d87564c691c4bbd7c56724058</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>dpiScaling</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>ace8b4d402179320b3b74a3d8b9754df1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>a9095f2340dd1c068ac35fef7eb6bc1fe</anchor>
      <arglist>(const Vector2i &amp;size, DpiScalingPolicy dpiScalingPolicy=DpiScalingPolicy::Default)</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>aa218da71334769e5b38bd733c4bbc92a</anchor>
      <arglist>(const Vector2i &amp;size, const Vector2 &amp;dpiScaling)</arglist>
    </member>
    <member kind="function">
      <type>WindowFlags</type>
      <name>windowFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>a1e9afcbd47f5be2907981fd37944da07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setWindowFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>a52f1e601a16f78b6870de3e9da61224b</anchor>
      <arglist>(WindowFlags flags)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::ExitEvent</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1ExitEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>ExitEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1ExitEvent.html</anchorfile>
      <anchor>a4cbb41b47474bd3a9f753d517609aeb9</anchor>
      <arglist>(const ExitEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExitEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1ExitEvent.html</anchorfile>
      <anchor>a01a161eab0b13745ad473a07b4c44427</anchor>
      <arglist>(ExitEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ExitEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1ExitEvent.html</anchorfile>
      <anchor>a81c9b58b025d3eea7861cc691a815929</anchor>
      <arglist>(const ExitEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ExitEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1ExitEvent.html</anchorfile>
      <anchor>ad1f29605115b3a3e393b4c5a78170040</anchor>
      <arglist>(ExitEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1ExitEvent.html</anchorfile>
      <anchor>a984bbc2ea606511cb858c2a158c2be47</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1ExitEvent.html</anchorfile>
      <anchor>af3a2a406f763dd46b7e355d71e1d0903</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
    <member kind="function">
      <type>const SDL_Event &amp;</type>
      <name>event</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1ExitEvent.html</anchorfile>
      <anchor>a7831f9772e467350e00befe5dba76cce</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::GLConfiguration</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>ac1dbf9738e2dfb4b8808687a5820dfd8</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html" anchor="ac1dbf9738e2dfb4b8808687a5820dfd8a90b21fdee9b0f1e07fec562556052bab">ForwardCompatible</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html" anchor="ac1dbf9738e2dfb4b8808687a5820dfd8aa603905470e2a5b8c13e96b579ef0dba">Debug</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html" anchor="ac1dbf9738e2dfb4b8808687a5820dfd8aef797a197a966bf786c3075d041793ab">RobustAccess</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html" anchor="ac1dbf9738e2dfb4b8808687a5820dfd8a97791223c6d1bf656e8114d7f822d7bd">ResetIsolation</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>a4f7d5bc406b5dbbe101b3129672086cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>a99fe21999d8a65e8b6717b71bb2a8dd6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>a4c66af813d427d6775a4ca813ddc12a8</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>addFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>a09880bb14e3ccdc5d27b292ddf57b3a8</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>clearFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>aa48aea077d187baf34a61f31a0cf6848</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>GL::Version</type>
      <name>version</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>a535cade991f6ce484206e4f244301b48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setVersion</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>a5b597a376aaebfad437c95942c804bac</anchor>
      <arglist>(GL::Version version)</arglist>
    </member>
    <member kind="function">
      <type>Vector4i</type>
      <name>colorBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>a5707dfd5570a6847fb0a6d2ee2067fbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setColorBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>a3f284346fedd6ccb7532af0b1f0a9758</anchor>
      <arglist>(const Vector4i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>depthBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>a4f17e33761d8611eac4cc35f5c6612e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setDepthBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>a515f0d3c4271a742d11e42842d98c6ac</anchor>
      <arglist>(Int size)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>stencilBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>a3e14790fda6cd2e4f4c7552db19c791a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setStencilBufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>a87e96bce3668a31cf61957161f17094f</anchor>
      <arglist>(Int size)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sampleCount</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>ad1445223ba24b7ae0513f8b0c2bcd2b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setSampleCount</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>a6f1d875cf07d3e074944dceda6ea4c0a</anchor>
      <arglist>(Int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSrgbCapable</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>ad6e25eb666e713db9d287f73756692e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setSrgbCapable</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>a1ef2bba940d6f8913341b756ffb254d6</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSRGBCapable</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>a4a86468497ed5b13efa169fd3b8ede58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLConfiguration &amp;</type>
      <name>setSRGBCapable</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1GLConfiguration.html</anchorfile>
      <anchor>aba25ce3db0b3111b1e4f5f2944fa7468</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::InputEvent</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Modifier</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html</anchorfile>
      <anchor>aa10e8a5d31cc11f1d2dbe9195c7f65b2</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html" anchor="aa10e8a5d31cc11f1d2dbe9195c7f65b2a825a3d98017bab11815ad2817201324c">Shift</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html" anchor="aa10e8a5d31cc11f1d2dbe9195c7f65b2a2b61e0d5977f2e38f06e16281c802b47">Ctrl</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html" anchor="aa10e8a5d31cc11f1d2dbe9195c7f65b2aa2e92861b757ab878312dd57993d60cf">Alt</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html" anchor="aa10e8a5d31cc11f1d2dbe9195c7f65b2a0ce3266d4eb71ad50f7a90aee6d21dcd">Super</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html" anchor="aa10e8a5d31cc11f1d2dbe9195c7f65b2a571dc3ee993d6e9a33bdc851be52b995">AltGr</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html" anchor="aa10e8a5d31cc11f1d2dbe9195c7f65b2a8d0f4171170104d094d8b6d4f8bf49e6">CapsLock</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html" anchor="aa10e8a5d31cc11f1d2dbe9195c7f65b2acf6cc0261135c6d163fd4305375773d2">NumLock</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Modifier &gt;</type>
      <name>Modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html</anchorfile>
      <anchor>a0e0241129f46fe775273ac014a2b7f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html</anchorfile>
      <anchor>a27a2ede3e8e96f3d2f06a4ec862fde8a</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html</anchorfile>
      <anchor>a9ac318eef525daa857d91aa8e3d0a74e</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html</anchorfile>
      <anchor>a24218b791112cf5dd0588ce206f05ca4</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html</anchorfile>
      <anchor>a55d6fd86685605ec932fa30d456bea5d</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html</anchorfile>
      <anchor>a84f8ed1c55a915225ab6c982ad5c6e22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html</anchorfile>
      <anchor>a32f98bcf019844dc25f07cffd804be66</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
    <member kind="function">
      <type>const SDL_Event &amp;</type>
      <name>event</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html</anchorfile>
      <anchor>a8c24a4e06b3c321bd4a322dfe575e807</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::KeyEvent</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html</filename>
    <base>Magnum::Platform::Sdl2Application::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Key</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html</anchorfile>
      <anchor>ae83b84c36f8fab8c50ad8d5353f0cd9d</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da982621712db76f723b7bb88b631dc64d">LeftShift</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da317d4a7487ee62605713987d4a037f83">RightShift</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daf2be247d68aadad6e9ba07db1885cd1c">LeftCtrl</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daf298b75d2207818c0459c063a21fd172">RightCtrl</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da96f9c4eb595a467d02e35c723f63ebf7">LeftAlt</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dad88bad98046b623323aa6ca28eefa6d5">RightAlt</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da4bd45bf12e08f60072b6962e9f7794c2">LeftSuper</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da0cc5a9f113dc1147c8eeae2f0199f9f2">RightSuper</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da571dc3ee993d6e9a33bdc851be52b995">AltGr</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daf1851d5600eae616ee802a31ac74701b">Enter</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da91f4253ca587ca8ac4e63b9ceb351f5d">Esc</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da258f49887ef8d14ac268c92b02503aaa">Up</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da08a38277b0309070706f6652eeae9a53">Down</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da8cf04a9734132302f96da8e113e80ce5">Home</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da87557f11575c0ad78e4e28abedc13b6e">End</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da9b869c510c75c5827ac82e49d4340927">PageUp</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daee3677bcca83ece9384b01e43952bf33">PageDown</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dacd7d13ceea728b08555f7c818cfb13ef">Backspace</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daa458be0f08b7e4ff3c0f633c100176c0">Insert</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daf2a6c498fb90ee345d997f888fce3b18">Delete</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dae1dffc8709f31a4987c8a88334107e89">F1</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dafe5c3684dce76cdd9f7f42430868aa74">F2</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da4b6bf4b531770872d4328ce69bef5627">F3</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dae7e0e72401a9f2718ed0f39f2861d702">F4</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da37f438df6a6d5ba4c17ef8ca58562f00">F5</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da1faf42f2823f184eb2c9f0dffe5d73f2">F6</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da47489eb597b7db34caa24b1fc78fc839">F7</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da4787509ad9f9d747a81a30e9dde3d4a7">F8</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da892a245e287c163080b23db737d3c4c9">F9</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dab213ce22ca6ad4eda8db82966b9b6e5a">F10</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da643b0662422d1d0dffa3fca2e2bf28a8">F11</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dae902674982fc99aa343cdd94da7476c3">F12</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dad511f8439ecde36647437fbba67a4394">Space</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da5c6ba25104401c9ee0650230fc6ba413">Tab</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da58be47db9455679e6a44df2eff9c9fa6">Comma</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da1901606ea069a83dc7beea17881ef95a">Period</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da453fb623e752c5993f65bc410fd74fe5">Minus</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da32ba78fe43257d3e7f88e3935a8ea0d4">Plus</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da358cfe58715d680d9ab09f82e4010cbc">Slash</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daadaaee4b22041c27198d410c68d952c9">Percent</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da9806fa37a3ecd39bf637c203aa011ed0">Semicolon</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daf5f286e73bda105e538310b3190f75c5">Equal</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dad7ed4ee1df437474d005188535f74875">Zero</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da06c2cea18679d64399783748fa367bdd">One</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daaada29daee1d64ed0fe907043855cb7e">Two</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daca8a2087e5557e317599344687a57391">Three</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da981b8fcee42e1e726a67a2b9a98ea6e9">Four</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dae5d9de39f7ca1ba2637e5640af3ae8aa">Five</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dae6fbc0b9673f8c86726688d7607fc8f5">Six</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da12e67aac3e7f9227cc35f8f047d7dc74">Seven</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dabaca0ca6729684fd54206793ae4b5bd5">Eight</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da24db11216549ee55172c33cf3def2f3f">Nine</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da7fc56270e7a70fa81a5935b72eacbe29">A</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da9d5ed678fe57bcca610140957afab571">B</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da0d61f8370cad1d412f80b84d143e1257">C</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daf623e75af30e62bbd73d6df5b50bb7b5">D</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da3a3ea00cfc35332cedf6e5e9a32e94da">E</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da800618943025315f869e4e1f09471012">F</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dadfcf28d0734569a6a693bc8194de62bf">G</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dac1d9f50f86825a1a2302ec2449c17196">H</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dadd7536794b63bf90eccfd37f9b147d7f">I</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daff44570aca8241914870afbc310cdb85">J</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daa5f3c6a11b03839d46af9fb43c97c188">K</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dad20caec3b48a1eef164cb4ca81ba2587">L</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da69691c7bdcc3ce6d5d8a1361f22d04ac">M</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da8d9c307cb7f3c4a32822a51922d1ceaa">N</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daf186217753c37b9b9f958d906208506e">O</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da44c29edb103a2872f519ad0c9a0fdaaa">P</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daf09564c9ca56850d4cd6b3319e541aee">Q</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dae1e1d3d40573127e9ee0480caf1283d6">R</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da5dbc98dcc983a70728bd082d1a47546e">S</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dab9ece18c950afbfa6b0fdbfa4ff731d3">T</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da4c614360da93c0a041b22e537de151eb">U</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da5206560a306a2e085a437fd258eb57ce">V</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da61e9c06ea9a85a5088a499df6458d276">W</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da21c2e59531c8710156d34a3c30ac81d5">Z</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da1869dff90f04dc9d3440e15914911c4b">NumZero</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da434921bdf9c88d2f95dad4c36d7470c7">NumOne</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da157dafd3675172c7d6e3d1db3328c86d">NumTwo</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daf66a061b82c07e120dfc396b228e89ec">NumThree</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daf56576fa9aa7b5a204e2b14c7e37b19c">NumFour</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da5ff8650b509a4b11e0ddc38d3703a427">NumFive</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daaf599848db6b5bb6b851f50ba44c6a98">NumSix</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da61a96fdbd354c8a5f808b9fb61dc15bc">NumSeven</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da385f9a2264878bc6c93ec7b5dc287467">NumEight</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da615aef11d2a108f3ede8bca77e451f87">NumNine</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da2d7b9bc754ace6e474a3f68c493eb553">NumDecimal</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da7fee165fee036b58e2e460ca8e006f03">NumDivide</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dad6c81b855af26854fa89ebf21f8ff972">NumMultiply</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da8e0411bbc85a52f7986b8ed9beb886ba">NumSubtract</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daf4ddc8457c915e0e241a547fd7153ac4">NumAdd</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da2c1389c1c9102cf39c69b0f334a0b859">NumEnter</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da8ac0ce1e964c895dac72be97a4b61177">NumEqual</enumvalue>
    </member>
    <member kind="function">
      <type>Key</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html</anchorfile>
      <anchor>a6bf9a3bbbab8c040a5c9eba739efae02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>keyName</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html</anchorfile>
      <anchor>a1a9179e2ba96ce23d73823af5b6a8e20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html</anchorfile>
      <anchor>a078677720bd01f77cc5d0a49cf6123d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRepeated</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html</anchorfile>
      <anchor>a8f057b106f0b182aee6baed9dd6724e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>keyName</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html</anchorfile>
      <anchor>a8ce012422f0aed921aa5298ad8dd5d38</anchor>
      <arglist>(Key key)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::MouseEvent</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html</filename>
    <base>Magnum::Platform::Sdl2Application::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html</anchorfile>
      <anchor>a5fb1402365ce5585b402e27dc7702e16</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html" anchor="a5fb1402365ce5585b402e27dc7702e16a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html" anchor="a5fb1402365ce5585b402e27dc7702e16ab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html" anchor="a5fb1402365ce5585b402e27dc7702e16a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html" anchor="a5fb1402365ce5585b402e27dc7702e16abb7f5ae6220c9828e5ec91faf054197c">X1</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html" anchor="a5fb1402365ce5585b402e27dc7702e16a54105bddbfe3f639d49cbe8f5182c958">X2</enumvalue>
    </member>
    <member kind="function">
      <type>Button</type>
      <name>button</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html</anchorfile>
      <anchor>a47b7f5fb0ed1148796c709c403f47377</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html</anchorfile>
      <anchor>ab5416fd274342b11709fd6016da6829c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>clickCount</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html</anchorfile>
      <anchor>a0f8be7fbac101499adbf0ebc07a5dd73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html</anchorfile>
      <anchor>ad38c8e8c232ab99ab932d482ab6fc7d3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::MouseMoveEvent</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html</filename>
    <base>Magnum::Platform::Sdl2Application::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html</anchorfile>
      <anchor>aa7dd5455a3f77a31d58523e8bafe6a08</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html" anchor="aa7dd5455a3f77a31d58523e8bafe6a08a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html" anchor="aa7dd5455a3f77a31d58523e8bafe6a08ab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html" anchor="aa7dd5455a3f77a31d58523e8bafe6a08a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html" anchor="aa7dd5455a3f77a31d58523e8bafe6a08abb7f5ae6220c9828e5ec91faf054197c">X1</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html" anchor="aa7dd5455a3f77a31d58523e8bafe6a08a54105bddbfe3f639d49cbe8f5182c958">X2</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Button &gt;</type>
      <name>Buttons</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a5f223a6ac627de0b9eafce6b38994601</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a7e6a8ff5c52de6b32326737cc127ff5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>relativePosition</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a24a4ca6c5d0decd21c3465df39733981</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Buttons</type>
      <name>buttons</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a7adede253ed60f20197b39a0d6729818</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a538119f2ca46ab7bbd19e7b6affe8a07</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::MouseScrollEvent</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseScrollEvent.html</filename>
    <base>Magnum::Platform::Sdl2Application::InputEvent</base>
    <member kind="function">
      <type>Vector2</type>
      <name>offset</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseScrollEvent.html</anchorfile>
      <anchor>a7e8c3fb8463efa0d848b709e9ab38985</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseScrollEvent.html</anchorfile>
      <anchor>a152384cce2de35de2bd79c165a646f00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseScrollEvent.html</anchorfile>
      <anchor>abf59deab23ca2c3fabc5863f8c152121</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::MultiGestureEvent</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiGestureEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>aa5f12716fe554a20d1eb3789b678c49c</anchor>
      <arglist>(const MultiGestureEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiGestureEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>a7854e6a2712694d48ce9d9d68eb6e238</anchor>
      <arglist>(MultiGestureEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MultiGestureEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>af369083009a73105f8465d573d94dffb</anchor>
      <arglist>(const MultiGestureEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MultiGestureEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>a5429398828cad52a7adde350d911c9ba</anchor>
      <arglist>(MultiGestureEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>ae9f7329f7fbd7e29eff8ced3b1960f4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>a2825c2a0534db701a2c3dbd757f95850</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>center</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>adaf16171d5a70f6e1f65519676696f9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>relativeRotation</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>a0a587b463997b4f5cacf3e553cd3af7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>relativeDistance</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>a757ba7c3ad2ea42041d216a0ebece75c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>fingerCount</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>a5cc6021435616529a4f6c020de71e56c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const SDL_Event &amp;</type>
      <name>event</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>a3b9150395d938d1e856b663619fa2285</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::TextEditingEvent</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>TextEditingEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</anchorfile>
      <anchor>ac94965b04b81348a5f04a2902ee3aace</anchor>
      <arglist>(const TextEditingEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextEditingEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</anchorfile>
      <anchor>ae1dfe307dff247d3effa82e4185972cf</anchor>
      <arglist>(TextEditingEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TextEditingEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</anchorfile>
      <anchor>a8f268a2248dee0b9a871a0586cd91760</anchor>
      <arglist>(const TextEditingEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TextEditingEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</anchorfile>
      <anchor>aa220d01ca2b47682d271f2f8e6e143b6</anchor>
      <arglist>(TextEditingEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</anchorfile>
      <anchor>a8b607afef8139ec772caffbdb169be60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</anchorfile>
      <anchor>af50ea4a191c6a3c97202457c41498449</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const char &gt;</type>
      <name>text</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</anchorfile>
      <anchor>af92ad158c3a421ede96727358cfe394a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>start</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</anchorfile>
      <anchor>aeafb60c5ff51e79263100ffb41ca2613</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</anchorfile>
      <anchor>aa1b30e0fcc28065d2c894fb5c20e2f8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const SDL_Event &amp;</type>
      <name>event</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</anchorfile>
      <anchor>ae282b1a5c6c509f459703b4c1300f325</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::TextInputEvent</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextInputEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>TextInputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextInputEvent.html</anchorfile>
      <anchor>a17fe6b90aa6650203f91f751b76c1616</anchor>
      <arglist>(const TextInputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextInputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextInputEvent.html</anchorfile>
      <anchor>a78eff0bbce14e4cddd6ffc9293b5df03</anchor>
      <arglist>(TextInputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TextInputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextInputEvent.html</anchorfile>
      <anchor>ab462b749f4ebcf563a0406e2ca3bb932</anchor>
      <arglist>(const TextInputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TextInputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextInputEvent.html</anchorfile>
      <anchor>af14980857be4f0b12360605133ce840f</anchor>
      <arglist>(TextInputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextInputEvent.html</anchorfile>
      <anchor>aec1991937eba485f3bd5fd907c3e3624</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextInputEvent.html</anchorfile>
      <anchor>ae8f318bc4391e661860ed202eff91386</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const char &gt;</type>
      <name>text</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextInputEvent.html</anchorfile>
      <anchor>a411fcd638ec4d8fbc67b488f5c36a7aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const SDL_Event &amp;</type>
      <name>event</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextInputEvent.html</anchorfile>
      <anchor>a6bf48077ef3cdecfeb26572f7f33b7c4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::ViewportEvent</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1ViewportEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>ViewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1ViewportEvent.html</anchorfile>
      <anchor>a1c2acfff56c3f45e6fe779f00d6bc9fe</anchor>
      <arglist>(const ViewportEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ViewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1ViewportEvent.html</anchorfile>
      <anchor>a8f6dead840631f65abc72805ed4fb00b</anchor>
      <arglist>(ViewportEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ViewportEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1ViewportEvent.html</anchorfile>
      <anchor>a775dcae59a5ac19cb29ca905798bb916</anchor>
      <arglist>(const ViewportEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ViewportEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1ViewportEvent.html</anchorfile>
      <anchor>afc442ac57f93cc1e58a7e131f0852f81</anchor>
      <arglist>(ViewportEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>windowSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1ViewportEvent.html</anchorfile>
      <anchor>a32e7fd3fa9e97da1e6dbe8e9dd8b1993</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>framebufferSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1ViewportEvent.html</anchorfile>
      <anchor>a32d7a940652076f585cadab9c1a8545a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>dpiScaling</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1ViewportEvent.html</anchorfile>
      <anchor>a95232053c70311464130a1797d17c180</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const SDL_Event &amp;</type>
      <name>event</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1ViewportEvent.html</anchorfile>
      <anchor>ad884026398321a36b1727ab6fdc745aa</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessCglApplication</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</filename>
    <class kind="struct">Magnum::Platform::WindowlessCglApplication::Arguments</class>
    <member kind="typedef">
      <type>WindowlessCglContext::Configuration</type>
      <name>Configuration</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>a813a4d8667074782ea4cf58006922600</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessCglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>a2191aafb32af4f3894a685d57af65e75</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessCglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>a7c0a4438ecd953ed9a1c07151d4e6b9c</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessCglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>a6fc2e1d200842961f859f2faff32272a</anchor>
      <arglist>(const WindowlessCglApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessCglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>aa2d31f8cde3b30c2ef4c5625f416f0c3</anchor>
      <arglist>(WindowlessCglApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessCglApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>ae8a0afc4e6c1767c9134c44f76d42880</anchor>
      <arglist>(const WindowlessCglApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessCglApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>a7913bfa163b49bd255ed193a22b62260</anchor>
      <arglist>(WindowlessCglApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>a86ea9d89395c9012fb2c51dfd5edcd28</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>a07afb18e09fb028abdfdb100bcd40f4d</anchor>
      <arglist>(const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreateContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>acb0a1a3f7d8dbcc39d178d6f4a4a2f43</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Platform_1_1WindowlessCglApplication" title="Bootstrap application">Platform-WindowlessCglApplication-bootstrap</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1WindowlessCglApplication" title="General usage">Platform-WindowlessCglApplication-usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::WindowlessCglApplication::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1WindowlessCglApplication_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessCglApplication_1_1Arguments.html</anchorfile>
      <anchor>ad4a42b501fe2091ef0b597997fb37099</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessCglApplication_1_1Arguments.html</anchorfile>
      <anchor>a36aba7e70b7c3fea13cbbd02a71af4e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessCglApplication_1_1Arguments.html</anchorfile>
      <anchor>a0021631b18f4fadc30f9e3394b320170</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessCglContext</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessCglContext.html</filename>
    <class kind="class">Magnum::Platform::WindowlessCglContext::Configuration</class>
    <member kind="function">
      <type></type>
      <name>WindowlessCglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglContext.html</anchorfile>
      <anchor>a9562916782301edec23766127bf4ec19</anchor>
      <arglist>(const Configuration &amp;configuration, GLContext *context=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessCglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglContext.html</anchorfile>
      <anchor>a526199ffb7273e26daa38392bb24724d</anchor>
      <arglist>(NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessCglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglContext.html</anchorfile>
      <anchor>a906031dec3e3880e7ba999ada9025550</anchor>
      <arglist>(const WindowlessCglContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessCglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglContext.html</anchorfile>
      <anchor>a847124a18ccdd928f5a2a7a09134797a</anchor>
      <arglist>(WindowlessCglContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WindowlessCglContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglContext.html</anchorfile>
      <anchor>a7e98bd05f2cc8411e6bc63a61f06e0cc</anchor>
      <arglist>(const WindowlessCglContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessCglContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglContext.html</anchorfile>
      <anchor>a4f2af20ddcc1fa01814c05295a1d2cbe</anchor>
      <arglist>(WindowlessCglContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WindowlessCglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglContext.html</anchorfile>
      <anchor>ad7ef5bddc65706eb7e7ef386095e9b5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCreated</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglContext.html</anchorfile>
      <anchor>a00f4feb4f95e081d5e8de5e84b7f92eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>makeCurrent</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglContext.html</anchorfile>
      <anchor>aa026bf363ab2233ca915bb2bc8db1a99</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessCglContext::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessCglContext_1_1Configuration.html</filename>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessEglApplication</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</filename>
    <class kind="struct">Magnum::Platform::WindowlessEglApplication::Arguments</class>
    <member kind="typedef">
      <type>WindowlessEglContext::Configuration</type>
      <name>Configuration</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>a428c1bfe41a293ed331331d0de2392d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>ac2cc667cd7bea6e05cde7da26a9d020f</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>ab678cd7284690ec54b2d971cedf12fe3</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>ac057147d0dfcbfbfe627304af939df0a</anchor>
      <arglist>(const WindowlessEglApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>a0b858d41108723e873490afb620015a6</anchor>
      <arglist>(WindowlessEglApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessEglApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>ae7402d648aee764db7154d83ac87a438</anchor>
      <arglist>(const WindowlessEglApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessEglApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>a0510988aa4c7ba06fbed2349694201ba</anchor>
      <arglist>(WindowlessEglApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>a248fd3bacdd697671c549cefa5ef3832</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>a72984bdf2c6dac2f0e68c469d28c46dc</anchor>
      <arglist>(const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreateContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>a9e023637c96818fc8bae26a0265f3b86</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Platform_1_1WindowlessEglApplication" title="Bootstrap application">Platform-WindowlessEglApplication-bootstrap</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1WindowlessEglApplication" title="Bootstrap application for Emscripten">Platform-WindowlessEglApplication-bootstrap-emscripten</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1WindowlessEglApplication" title="General usage">Platform-WindowlessEglApplication-usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::WindowlessEglApplication::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1WindowlessEglApplication_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessEglApplication_1_1Arguments.html</anchorfile>
      <anchor>ad7736f997a2781eddb3ab17de9e87019</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessEglApplication_1_1Arguments.html</anchorfile>
      <anchor>a0809b0cb33cbfb2af99f9411dcbf8259</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessEglApplication_1_1Arguments.html</anchorfile>
      <anchor>afaa841ebaa96a3252b5f77e6c3e8a81b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessEglContext</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessEglContext.html</filename>
    <class kind="class">Magnum::Platform::WindowlessEglContext::Configuration</class>
    <member kind="function">
      <type></type>
      <name>WindowlessEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext.html</anchorfile>
      <anchor>a9db59ed4af74055d680922ab84d977ce</anchor>
      <arglist>(const Configuration &amp;configuration, GLContext *context=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext.html</anchorfile>
      <anchor>ad5543d5a84f844e3190e8e7f1b0ca043</anchor>
      <arglist>(NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext.html</anchorfile>
      <anchor>a3285885bb6e6780e44f25fe9c8ff3999</anchor>
      <arglist>(const WindowlessEglContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext.html</anchorfile>
      <anchor>a97dd19135f367c72b9f59103a9727895</anchor>
      <arglist>(WindowlessEglContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WindowlessEglContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext.html</anchorfile>
      <anchor>a2607c1eff707c119a8b14e8ae26e6ad6</anchor>
      <arglist>(const WindowlessEglContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessEglContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext.html</anchorfile>
      <anchor>a5e66ccc4ebea2d776f33427f885ae76b</anchor>
      <arglist>(WindowlessEglContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WindowlessEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext.html</anchorfile>
      <anchor>ab96a6058a03733c6657e03ad139b83c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCreated</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext.html</anchorfile>
      <anchor>a825208e3fd02abe039e2027727b7ffa8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>makeCurrent</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext.html</anchorfile>
      <anchor>a47ef8bb6258d9dc60d52c2125de0a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessEglContext::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessEglContext_1_1Configuration.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext_1_1Configuration.html</anchorfile>
      <anchor>aa6e4dc0b822ebc5c3488170fbd170e1a</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1WindowlessEglContext_1_1Configuration.html" anchor="aa6e4dc0b822ebc5c3488170fbd170e1aa90b21fdee9b0f1e07fec562556052bab">ForwardCompatible</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1WindowlessEglContext_1_1Configuration.html" anchor="aa6e4dc0b822ebc5c3488170fbd170e1aaa603905470e2a5b8c13e96b579ef0dba">Debug</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext_1_1Configuration.html</anchorfile>
      <anchor>a9008f831919548647a1fe5e087b6657a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext_1_1Configuration.html</anchorfile>
      <anchor>ac9a5e4c6087d3569e7bfd64f2d4d6756</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext_1_1Configuration.html</anchorfile>
      <anchor>a9b4d1483075b7e45a23f781c65c73070</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>addFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext_1_1Configuration.html</anchorfile>
      <anchor>a1a020910c41dcc99b31b375e80e3fbe7</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>clearFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext_1_1Configuration.html</anchorfile>
      <anchor>aa5a1e8264a03e3e3100efabb4efff288</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessGlxApplication</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</filename>
    <class kind="struct">Magnum::Platform::WindowlessGlxApplication::Arguments</class>
    <member kind="typedef">
      <type>WindowlessGlxContext::Configuration</type>
      <name>Configuration</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>a2cf861642117601b928f9fa9e92a6999</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessGlxApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>ab0807c4ef03ef235a6a77570a4832890</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessGlxApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>a3d161bf8dbcf4c44c5cb2a4a9a7bfd30</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessGlxApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>af7a066ca26d4dc1bead3b5f72c9be80a</anchor>
      <arglist>(const WindowlessGlxApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessGlxApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>a9ff29722633201400bc56d7be9708f1c</anchor>
      <arglist>(WindowlessGlxApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessGlxApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>a738682711607e0a1a13098f2224ad930</anchor>
      <arglist>(const WindowlessGlxApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessGlxApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>ac4c8046dca69bc76c17178f39d6d354e</anchor>
      <arglist>(WindowlessGlxApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>a2e6bd6d97129a46192f86a79fa7e6698</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>aa93b3136a911a4f2fa91a104ba857dad</anchor>
      <arglist>(const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreateContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>a91443b4db4ce576c5ddbf534e08eab9f</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Platform_1_1WindowlessGlxApplication" title="Bootstrap application">Platform-WindowlessGlxApplication-bootstrap</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1WindowlessGlxApplication" title="General usage">Platform-WindowlessGlxApplication-usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::WindowlessGlxApplication::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1WindowlessGlxApplication_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessGlxApplication_1_1Arguments.html</anchorfile>
      <anchor>afb45829eabfce26d8a0eb91f53dc6558</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessGlxApplication_1_1Arguments.html</anchorfile>
      <anchor>a0b586e2c013454829832321777b66a46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessGlxApplication_1_1Arguments.html</anchorfile>
      <anchor>aac443fa259cfb1355c37256c2f2662d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessGlxContext</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</filename>
    <class kind="class">Magnum::Platform::WindowlessGlxContext::Configuration</class>
    <member kind="function">
      <type></type>
      <name>WindowlessGlxContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</anchorfile>
      <anchor>a11b058aedbd4a4564229557ba4829e56</anchor>
      <arglist>(const Configuration &amp;configuration, GLContext *context=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessGlxContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</anchorfile>
      <anchor>a2dbde18f8784e89f9073793191062fc1</anchor>
      <arglist>(NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessGlxContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</anchorfile>
      <anchor>ac5ebc9aaae4c14d73626f7901e78ae3b</anchor>
      <arglist>(const WindowlessGlxContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessGlxContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</anchorfile>
      <anchor>a1cc2a00bc29494ae282b2072e993eaf8</anchor>
      <arglist>(WindowlessGlxContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WindowlessGlxContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</anchorfile>
      <anchor>a88be6fc7a6f3e81c68c125466bf62c63</anchor>
      <arglist>(const WindowlessGlxContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessGlxContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</anchorfile>
      <anchor>ae32460940068326ed56cd93cd0a9959a</anchor>
      <arglist>(WindowlessGlxContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WindowlessGlxContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</anchorfile>
      <anchor>adaa8595f6382f26b83877fb61c20e5f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCreated</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</anchorfile>
      <anchor>aa1d5024965c6c02db55abe890acdcecc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>makeCurrent</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</anchorfile>
      <anchor>a8a7c8906d17f06e7138cb64ffcc6000f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessGlxContext::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessGlxContext_1_1Configuration.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext_1_1Configuration.html</anchorfile>
      <anchor>a20dbc9e0b4c6595a33c9fbb45c1fa31f</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1WindowlessGlxContext_1_1Configuration.html" anchor="a20dbc9e0b4c6595a33c9fbb45c1fa31fa90b21fdee9b0f1e07fec562556052bab">ForwardCompatible</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1WindowlessGlxContext_1_1Configuration.html" anchor="a20dbc9e0b4c6595a33c9fbb45c1fa31faa603905470e2a5b8c13e96b579ef0dba">Debug</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext_1_1Configuration.html</anchorfile>
      <anchor>a5dd923446990e3feeff013b60bfc4806</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext_1_1Configuration.html</anchorfile>
      <anchor>af6c393840d24db530b051139cdd17e71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext_1_1Configuration.html</anchorfile>
      <anchor>a3ee3937a22361d821c3fc9b541931ea0</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>addFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext_1_1Configuration.html</anchorfile>
      <anchor>ada5949c13227c7d89fd6205e8dffc9b4</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>clearFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext_1_1Configuration.html</anchorfile>
      <anchor>a383ff9c2e016567922aecfadd021cc95</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessIosApplication</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</filename>
    <class kind="struct">Magnum::Platform::WindowlessIosApplication::Arguments</class>
    <member kind="typedef">
      <type>WindowlessIosContext::Configuration</type>
      <name>Configuration</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>a1b15cd2528985a7306585ce5a09d2fba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessIosApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>ac4690c600a36c9dc770a756d020f5f7e</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessIosApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>a74da505407174f8dcaa2562f5d95f944</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessIosApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>afa857eca574f94b508aba7c3dc711a75</anchor>
      <arglist>(const WindowlessIosApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessIosApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>ab282ab731aaed8dc1fb409f31137f201</anchor>
      <arglist>(WindowlessIosApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessIosApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>a9d8da663b37f2b4c4e08971a580135c7</anchor>
      <arglist>(const WindowlessIosApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessIosApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>a630ae0c5ba68c8c5dd51684775c50a84</anchor>
      <arglist>(WindowlessIosApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>a8dc6e1987cdd379d9bb2eb21654becc2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>afca9d718f131c914c3be45fea40fbb9f</anchor>
      <arglist>(const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreateContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>a0b509ffbff615b30d85d67a5dddf5439</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Platform_1_1WindowlessIosApplication" title="Bootstrap application">Platform-WindowlessIosApplication-bootstrap</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1WindowlessIosApplication" title="General usage">Platform-WindowlessIosApplication-usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::WindowlessIosApplication::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1WindowlessIosApplication_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessIosApplication_1_1Arguments.html</anchorfile>
      <anchor>a1b0ab960dbc233b0aa897d2fd0d454a7</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessIosApplication_1_1Arguments.html</anchorfile>
      <anchor>acfa62220dc1ee408fd9adb275e8b8c5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessIosApplication_1_1Arguments.html</anchorfile>
      <anchor>a773d7ab5ba7202a39f1ffb4534364ff1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessIosContext</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessIosContext.html</filename>
    <class kind="class">Magnum::Platform::WindowlessIosContext::Configuration</class>
    <member kind="function">
      <type></type>
      <name>WindowlessIosContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosContext.html</anchorfile>
      <anchor>a0232758bbfc8b0099dbeb01291f752a1</anchor>
      <arglist>(const Configuration &amp;configuration, GLContext *context=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessIosContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosContext.html</anchorfile>
      <anchor>aba59533bfd54e0767e6c57a245b685a6</anchor>
      <arglist>(NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessIosContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosContext.html</anchorfile>
      <anchor>a8a210f1defafe46395d17d30c52d6f01</anchor>
      <arglist>(const WindowlessIosContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessIosContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosContext.html</anchorfile>
      <anchor>a505312584dd4854513522be2e9442150</anchor>
      <arglist>(WindowlessIosContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WindowlessIosContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosContext.html</anchorfile>
      <anchor>abcbf9ae00c0fa86fcbc4f4d89d5f092a</anchor>
      <arglist>(const WindowlessIosContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessIosContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosContext.html</anchorfile>
      <anchor>a7942dffe7bdaacc674df308b3c3867fd</anchor>
      <arglist>(WindowlessIosContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WindowlessIosContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosContext.html</anchorfile>
      <anchor>a18abca4ee3879a90c2395c4614e60644</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCreated</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosContext.html</anchorfile>
      <anchor>a0907af19fcdebda0de821d714d4b4fed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>makeCurrent</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosContext.html</anchorfile>
      <anchor>a62252c4e7b8d20baef75d15d4977d106</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessIosContext::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessIosContext_1_1Configuration.html</filename>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessWglApplication</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</filename>
    <class kind="struct">Magnum::Platform::WindowlessWglApplication::Arguments</class>
    <member kind="typedef">
      <type>WindowlessWglContext::Configuration</type>
      <name>Configuration</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>a749ebd05ffbf5e063074196efa1c8c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>a5a28493128d18880e9a41224f9755f3c</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>abcce35f3676ff09b1f630ef0e301915e</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>a179f40b70993d043816f06a42cdfb22e</anchor>
      <arglist>(const WindowlessWglApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>a464c4a613d5d3d0c22875ce85961122a</anchor>
      <arglist>(WindowlessWglApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessWglApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>a784d493cc00f7817515b876d4bc099c2</anchor>
      <arglist>(const WindowlessWglApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessWglApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>aec7c60abec550810adb2d46aa077c03d</anchor>
      <arglist>(WindowlessWglApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>a6a6d96f8022db194c043dc6825551723</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>a2f57ee44605db24c87cbcae3885d0cd4</anchor>
      <arglist>(const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreateContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>a18429f31ca98d129e85e20cf5bfbf544</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Platform_1_1WindowlessWglApplication" title="Bootstrap application">Platform-WindowlessWglApplication-bootstrap</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1WindowlessWglApplication" title="General usage">Platform-WindowlessWglApplication-usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::WindowlessWglApplication::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1WindowlessWglApplication_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessWglApplication_1_1Arguments.html</anchorfile>
      <anchor>a2becf6415cfe4927d5d5ae4f00f00078</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessWglApplication_1_1Arguments.html</anchorfile>
      <anchor>a9d343d4da5a4f03d56fa53ddb1e7d3d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessWglApplication_1_1Arguments.html</anchorfile>
      <anchor>adb8be39f1115bf1819cfd9082f7284a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessWglContext</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessWglContext.html</filename>
    <class kind="class">Magnum::Platform::WindowlessWglContext::Configuration</class>
    <member kind="function">
      <type></type>
      <name>WindowlessWglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext.html</anchorfile>
      <anchor>aae31f73a391b5fcd7987c00a7e27be22</anchor>
      <arglist>(const Configuration &amp;configuration, GLContext *context=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext.html</anchorfile>
      <anchor>afbb48451bf9fdbccfe87d57a6c16778d</anchor>
      <arglist>(NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext.html</anchorfile>
      <anchor>a2b85fef0d38f78e0b2073f08eadc0e8e</anchor>
      <arglist>(const WindowlessWglContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext.html</anchorfile>
      <anchor>abbdb8365e3a0c54d6af62b6a56103327</anchor>
      <arglist>(WindowlessWglContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WindowlessWglContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext.html</anchorfile>
      <anchor>a386ff19280c6ee249f856168f37844fa</anchor>
      <arglist>(const WindowlessWglContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessWglContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext.html</anchorfile>
      <anchor>add03b4fbd95703729fa66fc5ae666656</anchor>
      <arglist>(WindowlessWglContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WindowlessWglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext.html</anchorfile>
      <anchor>ac712252dae607d3ee6115493c7fd8989</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCreated</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext.html</anchorfile>
      <anchor>ac6670916a75f9b1148df3638fca68a2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>makeCurrent</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext.html</anchorfile>
      <anchor>a935c3dae4f7ad41b632f05c9831b6324</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessWglContext::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessWglContext_1_1Configuration.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext_1_1Configuration.html</anchorfile>
      <anchor>a5d5156eb3c5fbb51fe8b7aaf0f205a1e</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1WindowlessWglContext_1_1Configuration.html" anchor="a5d5156eb3c5fbb51fe8b7aaf0f205a1ea90b21fdee9b0f1e07fec562556052bab">ForwardCompatible</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1WindowlessWglContext_1_1Configuration.html" anchor="a5d5156eb3c5fbb51fe8b7aaf0f205a1eaa603905470e2a5b8c13e96b579ef0dba">Debug</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext_1_1Configuration.html</anchorfile>
      <anchor>aa42e08d5060849e7442a9deffaa94168</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext_1_1Configuration.html</anchorfile>
      <anchor>a2974e34e407aa010c18be5b83a2295d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext_1_1Configuration.html</anchorfile>
      <anchor>a9b1d1c0a2636905811a160975e461f9f</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>addFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext_1_1Configuration.html</anchorfile>
      <anchor>a2b8f1f32611c4e2f871e738bd60c5a7a</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>clearFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext_1_1Configuration.html</anchorfile>
      <anchor>aead1100b8f3a303e2573d9a655262dac</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessWindowsEglApplication</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</filename>
    <class kind="struct">Magnum::Platform::WindowlessWindowsEglApplication::Arguments</class>
    <member kind="typedef">
      <type>WindowlessWindowsEglContext::Configuration</type>
      <name>Configuration</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>ae921584b994f8520d814f514558bd9f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWindowsEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>aca7cf751001033002242b43e9da609b0</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWindowsEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>aa1a1ff4caabccec315b7fb9cc51d0e9c</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWindowsEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>afd2ce5cc3045248876ebc666359e29d6</anchor>
      <arglist>(const WindowlessWindowsEglApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWindowsEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>af6771c4c4153d655aa53956817860bef</anchor>
      <arglist>(WindowlessWindowsEglApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessWindowsEglApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>aa87e9b5f4978f7fe63ad5e5219bb0bc0</anchor>
      <arglist>(const WindowlessWindowsEglApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessWindowsEglApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>ab3a2795340cc55338b8e812ed818992e</anchor>
      <arglist>(WindowlessWindowsEglApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>a2bb730ce7287b37bac9157aa61d012f9</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>a0a2dbdd3056ab677440bcf30331d1a67</anchor>
      <arglist>(const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreateContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>a032e40a2e04cae4b468ad19dffbe9011</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication" title="Bootstrap application">Platform-WindowlessWindowsEglApplication-bootstrap</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication" title="General usage">Platform-WindowlessWindowsEglApplication-usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::WindowlessWindowsEglApplication::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1WindowlessWindowsEglApplication_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessWindowsEglApplication_1_1Arguments.html</anchorfile>
      <anchor>aeac4c49474dae84a7409f1be304b8f9f</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessWindowsEglApplication_1_1Arguments.html</anchorfile>
      <anchor>a7f881190e6e05b491ec8302f23fe9c3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessWindowsEglApplication_1_1Arguments.html</anchorfile>
      <anchor>a9545a5ca7a8a9bea0a6fdbd16597ec39</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessWindowsEglContext</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</filename>
    <class kind="class">Magnum::Platform::WindowlessWindowsEglContext::Configuration</class>
    <member kind="function">
      <type></type>
      <name>WindowlessWindowsEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</anchorfile>
      <anchor>a74b6d4164e7ac7afcbedad70301d6856</anchor>
      <arglist>(const Configuration &amp;configuration, GLContext *context=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWindowsEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</anchorfile>
      <anchor>a4c4156c0a46ea313670882cb4a487721</anchor>
      <arglist>(NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWindowsEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</anchorfile>
      <anchor>a52fb351ee6d7407968537584c1277a63</anchor>
      <arglist>(const WindowlessWindowsEglContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWindowsEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</anchorfile>
      <anchor>af9a270952ae256700335ca87f0929eb3</anchor>
      <arglist>(WindowlessWindowsEglContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WindowlessWindowsEglContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</anchorfile>
      <anchor>a6b4055f71d074473cd9772dd662bf0cd</anchor>
      <arglist>(const WindowlessWindowsEglContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessWindowsEglContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</anchorfile>
      <anchor>ab9b7e2a89f77602022a3740394039fcc</anchor>
      <arglist>(WindowlessWindowsEglContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WindowlessWindowsEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</anchorfile>
      <anchor>a498ecf1246e32f7839b8db566ce064a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCreated</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</anchorfile>
      <anchor>af7ef57bb405584ff451aff3de1948a94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>makeCurrent</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</anchorfile>
      <anchor>a2f9ba6668d9de469a34046f42caed601</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessWindowsEglContext::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext_1_1Configuration.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext_1_1Configuration.html</anchorfile>
      <anchor>a6e71606831c8ab217c747df35b76ffdb</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1WindowlessWindowsEglContext_1_1Configuration.html" anchor="a6e71606831c8ab217c747df35b76ffdbaa603905470e2a5b8c13e96b579ef0dba">Debug</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext_1_1Configuration.html</anchorfile>
      <anchor>aa357dcbe96009ec2fadb42adb0aa580d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext_1_1Configuration.html</anchorfile>
      <anchor>ac9e14aa03142e54d4a56f43e1267adf1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext_1_1Configuration.html</anchorfile>
      <anchor>a0104cc8d6c540fe501b80f09a6d8bf50</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>addFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext_1_1Configuration.html</anchorfile>
      <anchor>a0c73d59809390aca03a164323b3ba44f</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>clearFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext_1_1Configuration.html</anchorfile>
      <anchor>a94b6654134c881e583de8c1a0ceefb41</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::XEglApplication</name>
    <filename>classMagnum_1_1Platform_1_1XEglApplication.html</filename>
    <base>Magnum::Platform::AbstractXApplication</base>
    <member kind="function">
      <type></type>
      <name>XEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1XEglApplication.html</anchorfile>
      <anchor>ae70d30cd98967df5091283db9fb5856d</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration{}, const GLConfiguration &amp;glConfiguration=GLConfiguration{})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1XEglApplication.html</anchorfile>
      <anchor>ad2b5c9e06ed9df1c66288409e3074faf</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Platform_1_1XEglApplication" title="Bootstrap application">Platform-XEglApplication-bootstrap</docanchor>
    <docanchor file="classMagnum_1_1Platform_1_1XEglApplication" title="General usage">Platform-XEglApplication-usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>Magnum::Primitives::Capsule2D</name>
    <filename>structMagnum_1_1Primitives_1_1Capsule2D.html</filename>
    <member kind="function" static="yes">
      <type>static Trade::MeshData2D</type>
      <name>wireframe</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Capsule2D.html</anchorfile>
      <anchor>a2360cbaee6510cb6af1913dfa78515c1</anchor>
      <arglist>(UnsignedInt hemisphereRings, UnsignedInt cylinderRings, Float halfLength)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Primitives::Capsule3D</name>
    <filename>structMagnum_1_1Primitives_1_1Capsule3D.html</filename>
    <member kind="typedef">
      <type>CapsuleTextureCoords</type>
      <name>TextureCoords</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Capsule3D.html</anchorfile>
      <anchor>aebe417dcb763085cd61c0ac0e69606ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>solid</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Capsule3D.html</anchorfile>
      <anchor>abd3e76844cfd1ba90cf472773c637de4</anchor>
      <arglist>(UnsignedInt hemisphereRings, UnsignedInt cylinderRings, UnsignedInt segments, Float halfLength, CapsuleTextureCoords textureCoords=CapsuleTextureCoords::DontGenerate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>wireframe</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Capsule3D.html</anchorfile>
      <anchor>afbec88ee5b012a5611cd3c3a613eb149</anchor>
      <arglist>(UnsignedInt hemisphereRings, UnsignedInt cylinderRings, UnsignedInt segments, Float halfLength)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Primitives::Circle</name>
    <filename>structMagnum_1_1Primitives_1_1Circle.html</filename>
    <member kind="function" static="yes">
      <type>static Trade::MeshData2D</type>
      <name>solid</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Circle.html</anchorfile>
      <anchor>a9cb5722664064b3b0c891a574b0499c1</anchor>
      <arglist>(UnsignedInt segments)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData2D</type>
      <name>wireframe</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Circle.html</anchorfile>
      <anchor>aeb0e82b343995342206467d9046a190f</anchor>
      <arglist>(UnsignedInt segments)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Primitives::Crosshair2D</name>
    <filename>structMagnum_1_1Primitives_1_1Crosshair2D.html</filename>
    <member kind="function" static="yes">
      <type>static Trade::MeshData2D</type>
      <name>wireframe</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Crosshair2D.html</anchorfile>
      <anchor>aa9c5c92d11630d5477c07c366e878560</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Primitives::Crosshair3D</name>
    <filename>structMagnum_1_1Primitives_1_1Crosshair3D.html</filename>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>wireframe</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Crosshair3D.html</anchorfile>
      <anchor>ac7b7a54145387674871127693f344893</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Primitives::Cube</name>
    <filename>structMagnum_1_1Primitives_1_1Cube.html</filename>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>solid</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Cube.html</anchorfile>
      <anchor>a97f4f6361070b274adde84228e7b6983</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>solidStrip</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Cube.html</anchorfile>
      <anchor>a770d4d0c71a07b23dda5885eadc8a5f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>wireframe</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Cube.html</anchorfile>
      <anchor>a45ad646fea50b85d6b9e36485d6c0621</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Primitives::Cylinder</name>
    <filename>structMagnum_1_1Primitives_1_1Cylinder.html</filename>
    <member kind="typedef">
      <type>CylinderFlag</type>
      <name>Flag</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Cylinder.html</anchorfile>
      <anchor>a13efe372bebb59d949c585e75870c9a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CylinderFlags</type>
      <name>Flags</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Cylinder.html</anchorfile>
      <anchor>a24f0385913828c0ba97bbb242ed4c886</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>solid</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Cylinder.html</anchorfile>
      <anchor>adcfcbdaef1b07715da3477670d1a0c34</anchor>
      <arglist>(UnsignedInt rings, UnsignedInt segments, Float halfLength, CylinderFlags flags={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>wireframe</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Cylinder.html</anchorfile>
      <anchor>a33bc0d8c572498f84c1d561a1f92f956</anchor>
      <arglist>(UnsignedInt rings, UnsignedInt segments, Float halfLength)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Primitives::Icosphere</name>
    <filename>structMagnum_1_1Primitives_1_1Icosphere.html</filename>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>solid</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Icosphere.html</anchorfile>
      <anchor>a5ed215781bd64dd41d51adb024bd64b3</anchor>
      <arglist>(UnsignedInt subdivisions)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Primitives::Line2D</name>
    <filename>structMagnum_1_1Primitives_1_1Line2D.html</filename>
    <member kind="function" static="yes">
      <type>static Trade::MeshData2D</type>
      <name>wireframe</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Line2D.html</anchorfile>
      <anchor>a313ed20b33ae78462ed3b70e38a596dc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Primitives::Line3D</name>
    <filename>structMagnum_1_1Primitives_1_1Line3D.html</filename>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>wireframe</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Line3D.html</anchorfile>
      <anchor>af98d08b58ec13caaffe492486e669a4a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Primitives::Plane</name>
    <filename>structMagnum_1_1Primitives_1_1Plane.html</filename>
    <member kind="typedef">
      <type>PlaneTextureCoords</type>
      <name>TextureCoords</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Plane.html</anchorfile>
      <anchor>a25a8ac2a0a63aaf9d7de9399f39049e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>solid</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Plane.html</anchorfile>
      <anchor>a39a7b988884258906239fc1c4a32f1d0</anchor>
      <arglist>(PlaneTextureCoords textureCoords=PlaneTextureCoords::DontGenerate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>wireframe</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Plane.html</anchorfile>
      <anchor>a394711e33e1a309811c6c6c78415b6ba</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Primitives::Square</name>
    <filename>structMagnum_1_1Primitives_1_1Square.html</filename>
    <member kind="typedef">
      <type>SquareTextureCoords</type>
      <name>TextureCoords</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Square.html</anchorfile>
      <anchor>a45e2721fd8f218754143cfa4d6ae9597</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData2D</type>
      <name>solid</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Square.html</anchorfile>
      <anchor>aba728587e12847da3f1d829175cb1ae5</anchor>
      <arglist>(SquareTextureCoords textureCoords=SquareTextureCoords::DontGenerate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData2D</type>
      <name>wireframe</name>
      <anchorfile>structMagnum_1_1Primitives_1_1Square.html</anchorfile>
      <anchor>a87694714b2e07fd02951cc7f6c3e1409</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Primitives::UVSphere</name>
    <filename>structMagnum_1_1Primitives_1_1UVSphere.html</filename>
    <member kind="typedef">
      <type>UVSphereTextureCoords</type>
      <name>TextureCoords</name>
      <anchorfile>structMagnum_1_1Primitives_1_1UVSphere.html</anchorfile>
      <anchor>aecfd8e82e9ecaea69e17bbb9ad3d97c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>solid</name>
      <anchorfile>structMagnum_1_1Primitives_1_1UVSphere.html</anchorfile>
      <anchor>afc38f0212b5422ddfb926d37c48099c1</anchor>
      <arglist>(UnsignedInt rings, UnsignedInt segments, UVSphereTextureCoords textureCoords=UVSphereTextureCoords::DontGenerate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>wireframe</name>
      <anchorfile>structMagnum_1_1Primitives_1_1UVSphere.html</anchorfile>
      <anchor>a5d12bc3124f67b818cc3c83f37e518fd</anchor>
      <arglist>(UnsignedInt rings, UnsignedInt segments)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Resource</name>
    <filename>classMagnum_1_1Resource.html</filename>
    <templarg>T</templarg>
    <templarg>U</templarg>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ab6e1f1b111342c493675cdeee71559a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>aadfc7b76c1a904524f94b88bd3e4b9ec</anchor>
      <arglist>(const Resource&lt; T, U &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a28c9e646a89ef0e1b7aaf41bd2126a49</anchor>
      <arglist>(Resource&lt; T, U &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acaa03453bcac81107851500b0cbf2391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; T, U &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a8f59ed76d3e4eb888959dba5efb853bd</anchor>
      <arglist>(const Resource&lt; T, U &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; T, U &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac990bb8ae690e0a3b2df1126f7e9d064</anchor>
      <arglist>(Resource&lt; T, U &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a352d8300dd2f2b8d30d6095fe39f8082</anchor>
      <arglist>(const Resource&lt; T, U &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a97f234864749ac4ec196781707cf714b</anchor>
      <arglist>(const Resource&lt; V, W &gt; &amp;) const =delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ae14859fe7a66ce771eb7ba4fc95b8156</anchor>
      <arglist>(const Resource&lt; T, U &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acbfa5216decd74ddca0247d7d6528af6</anchor>
      <arglist>(const Resource&lt; V, W &gt; &amp;) const =delete</arglist>
    </member>
    <member kind="function">
      <type>ResourceKey</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b2fbf46f0f26789f94b189ef641e5bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ResourceState</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b5f26c073b9b9a03f2f66362c714e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a20a00427fdb3862f1f00adadb604d15c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator U *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac17914776e1ab6dc20cd7ee443ed301f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>U &amp;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac0cdc90f2971b9ecccb358d2c2454b76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>U *</type>
      <name>operator-&gt;</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a918bd916f8acbf70781b2f9af133e8b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::ResourceKey</name>
    <filename>classMagnum_1_1ResourceKey.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>ResourceKey</name>
      <anchorfile>classMagnum_1_1ResourceKey.html</anchorfile>
      <anchor>a80ebc35bcd0f0c9a4c9a1b9bd18df6bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourceKey</name>
      <anchorfile>classMagnum_1_1ResourceKey.html</anchorfile>
      <anchor>a961e553adec4bd564683393517ab1671</anchor>
      <arglist>(std::size_t key)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourceKey</name>
      <anchorfile>classMagnum_1_1ResourceKey.html</anchorfile>
      <anchor>afeb8048c13bd9fd802d14e48494bb48e</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ResourceKey</name>
      <anchorfile>classMagnum_1_1ResourceKey.html</anchorfile>
      <anchor>ae7bf1ef01ce0dba14fc692c4f582b5a4</anchor>
      <arglist>(const char(&amp;key)[size])</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1ResourceKey.html</anchorfile>
      <anchor>af79e3aa47905863e951ac3a2ea29e229</anchor>
      <arglist>(Debug &amp;debug, const ResourceKey &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::ResourceManager</name>
    <filename>classMagnum_1_1ResourceManager.html</filename>
    <templarg>Types</templarg>
    <member kind="function">
      <type></type>
      <name>ResourceManager</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a25d160783144c133eb877c8d6aa9f939</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourceManager</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>aa9c0647bafd7df3b3837b4813e1071fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>count</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a2f0908a8657f931ef3bc94d22a09f6d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; T, U &gt;</type>
      <name>get</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>ad1153b6b6c1189cb91004b0c4c61738a</anchor>
      <arglist>(ResourceKey key)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>referenceCount</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>aff36495d3c9da0cdadb82ba44224d982</anchor>
      <arglist>(ResourceKey key) const</arglist>
    </member>
    <member kind="function">
      <type>ResourceState</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a4deb8587d5cdbd1b056671003304272f</anchor>
      <arglist>(ResourceKey key) const</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>ac6c9c3c5bb05dc3a3b5554334fed9d83</anchor>
      <arglist>(ResourceKey key, T *data, ResourceDataState state, ResourcePolicy policy)</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>ab50d4926359443131d873811e75d555e</anchor>
      <arglist>(ResourceKey key, Containers::Pointer&lt; T &gt; &amp;&amp;data, ResourceDataState state, ResourcePolicy policy)</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a88eda953e109318ed301ccb91830a024</anchor>
      <arglist>(ResourceKey key, U &amp;&amp;data, ResourceDataState state, ResourcePolicy policy)</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a960eb341f146cebba3429f0cc32f4ea1</anchor>
      <arglist>(ResourceKey key, T *data)</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>afcca05c352f4270ce76c9d1e010ea277</anchor>
      <arglist>(ResourceKey key, Containers::Pointer&lt; T &gt; &amp;&amp;data)</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a5896cd6ca5bc762efd13aea200380da3</anchor>
      <arglist>(ResourceKey key, U &amp;&amp;data)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>fallback</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a099b0855d48836741bc8ada7e941df37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>fallback</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a5838649b6bec970ccc942a49f3aa4b37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>setFallback</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a3dddc7be574c010c93b36601640d6404</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>setFallback</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a70de658d50e34a588a06abd1c10099fd</anchor>
      <arglist>(Containers::Pointer&lt; T &gt; &amp;&amp;data)</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>setFallback</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a91a480b8e3bed251306918a2cb414682</anchor>
      <arglist>(U &amp;&amp;data)</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>free</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a55efbf88f3640274b675347eb6677c05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>free</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>abe46f13c5ea07ce85ffb820f1d9559c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a8abe4e44370beb2aea4efc9005981062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>ab875f4ef82a9ba033a2e508f92027166</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AbstractResourceLoader&lt; T &gt; *</type>
      <name>loader</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>aad7fe6159fca5a7f3293f3e618d5e1f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractResourceLoader&lt; T &gt; *</type>
      <name>loader</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a92dfdf14721ea5788598c1b9c4437f5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>setLoader</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a8d4ce90a9cf2dc1328721e418f8e0a31</anchor>
      <arglist>(AbstractResourceLoader&lt; T &gt; *loader)</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>setLoader</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a77f4fc71a8341b8b02716bcb43b324df</anchor>
      <arglist>(Containers::Pointer&lt; AbstractResourceLoader&lt; T &gt;&gt; &amp;&amp;loader)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ResourceManager&lt; Types... &gt; &amp;</type>
      <name>instance</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>ad3aaf3af1453af97dfd57b296bd70a90</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classMagnum_1_1ResourceManager" title="Usage">ResourceMananger-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractBasicTranslationRotation2D</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation2D.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractTranslation</base>
    <member kind="function">
      <type>AbstractBasicTranslationRotation2D&lt; T &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation2D.html</anchorfile>
      <anchor>a9ab46d798624ad339c327b16492fecba</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation2D&lt; T &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation2D.html</anchorfile>
      <anchor>aa5a76f29510aa14a150bad9b37568baa</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doRotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation2D.html</anchorfile>
      <anchor>aae4cee3694c1b570dd5bcc0bcac11c9f</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doRotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation2D.html</anchorfile>
      <anchor>a974eaaf0f1144de9c6229a52ee7f0a91</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractBasicTranslationRotation3D</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</filename>
    <templarg>T</templarg>
    <base>Magnum::SceneGraph::AbstractTranslation</base>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a0bd51880d3a81804056476390a0a6107</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a82e9eb5eef081b6c8456185c0f3a2cf9</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotateX</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a64f7281a7cf5a346bdd17c361462149a</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotateXLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>aa474a071ab087ea66f66e05534467af2</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotateY</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a173e0633663b8b735042b2937e12b0c3</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotateYLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad80f968e497178612267004c0873235b</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotateZ</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a3d8f9942fcba8fb49ea2ea7d928d6422</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotateZLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a82fe5b472338a31166abdbcd47e2bd5e</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doRotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad0a53ace7dace831a04645b506e38b3b</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doRotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad1fd68194dd06f6eca323ccc01356914</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateX</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad1c6934dbd6184e051cdf68ecc7bff9d</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateXLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ae178eb9da782ad4dd49dfae458919c65</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateY</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a5029eaa35ec05d318f49af5aa7226494</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateYLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a731255196c113375304ac8f668da2efe</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateZ</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a87ca173ab4afe918be59544ca749d41d</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateZLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>aa72727d90a1e236694992d65c6f88012</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractBasicTranslationRotationScaling2D</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling2D.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractBasicTranslationRotation2D</base>
    <member kind="function">
      <type>AbstractBasicTranslationRotationScaling2D&lt; T &gt; &amp;</type>
      <name>scale</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling2D.html</anchorfile>
      <anchor>a43306672971d960e742956eef3f88db5</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotationScaling2D&lt; T &gt; &amp;</type>
      <name>scaleLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling2D.html</anchorfile>
      <anchor>adc3c925300c7087c7f6c5b2f68fbcf46</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doScale</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling2D.html</anchorfile>
      <anchor>a4fececff7bd5b2960e9f92751059c285</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doScaleLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling2D.html</anchorfile>
      <anchor>aaa28c3d95dd34fba7870cd4c96e2cecd</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractBasicTranslationRotationScaling3D</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling3D.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractBasicTranslationRotation3D</base>
    <member kind="function">
      <type>AbstractBasicTranslationRotationScaling3D&lt; T &gt; &amp;</type>
      <name>scale</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling3D.html</anchorfile>
      <anchor>a6116f24ecd36d1630f5646701cc7022f</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotationScaling3D&lt; T &gt; &amp;</type>
      <name>scaleLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling3D.html</anchorfile>
      <anchor>a5ea5aad54eabe1046d34da359d37a0df</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doScale</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling3D.html</anchorfile>
      <anchor>a597453e2e3e4e65feac5e25ab2fbd3f6</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doScaleLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling3D.html</anchorfile>
      <anchor>ab2301eb63018f23885456685189f070e</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractFeature</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</filename>
    <templarg>dimensions</templarg>
    <templarg>T</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a1f34f30eee991b385368a2e2141362aaa45b8f069dab211723b626669099a0efe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>ae46f7c4e7782887a6f0adc7b595f9a62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a1f34f30eee991b385368a2e2141362aaa45b8f069dab211723b626669099a0efe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a78a530462af23b21680c6aa75685c252</anchor>
      <arglist>(AbstractObject&lt; dimensions, T &gt; &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>AbstractObject&lt; dimensions, T &gt; &amp;</type>
      <name>object</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>adc44a031112415d9cd010380fc670b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractObject&lt; dimensions, T &gt; &amp;</type>
      <name>object</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a237c9abc1cb4010dda511825b2d15125</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AbstractFeature&lt; dimensions, T &gt; *</type>
      <name>previousFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>abe61d4c55eda93fdb415a3734b9a45d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractFeature&lt; dimensions, T &gt; *</type>
      <name>previousFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a9d7fc26a0ac2e62103c0232f0c2c0071</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AbstractFeature&lt; dimensions, T &gt; *</type>
      <name>nextFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a1647868b435f6b609f26bccecf38194a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractFeature&lt; dimensions, T &gt; *</type>
      <name>nextFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a1180a9c4b4706e47abaaf4f52362e6dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CachedTransformations</type>
      <name>cachedTransformations</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a74f67c6af5da8d3c6100884780bb534b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setCachedTransformations</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a4b357ec06a582d0eef270eca88134a33</anchor>
      <arglist>(CachedTransformations transformations)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>markDirty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>af0c9721f8f2614db3364575d58695263</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>clean</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>ac7f9f08cd976bc728589cc5eb607b814</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, T &gt; &amp;absoluteTransformationMatrix)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>cleanInverted</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a38a4e3c18ff8a2636a533af17f6f79db</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, T &gt; &amp;invertedAbsoluteTransformationMatrix)</arglist>
    </member>
    <docanchor file="classMagnum_1_1SceneGraph_1_1AbstractFeature" title="Subclassing">SceneGraph-AbstractFeature-subclassing</docanchor>
    <docanchor file="classMagnum_1_1SceneGraph_1_1AbstractFeature" title="Caching transformations in features">SceneGraph-AbstractFeature-subclassing-caching</docanchor>
    <docanchor file="classMagnum_1_1SceneGraph_1_1AbstractFeature" title="Accessing object transformation">SceneGraph-AbstractFeature-subclassing-object-transformation</docanchor>
    <docanchor file="classMagnum_1_1SceneGraph_1_1AbstractFeature" title="Explicit template specializations">SceneGraph-AbstractFeature-explicit-specializations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractFeatureGroup</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractFeatureGroup.html</filename>
    <templarg>dimensions</templarg>
    <templarg>T</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeatureGroup.html</anchorfile>
      <anchor>a79bdcf1f63a1fa95bc27fb226f954833aa7627efe2cc08f214ba59acf0c1a23d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeatureGroup.html</anchorfile>
      <anchor>a767069973ed10529cccc040f4c6d3a59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeatureGroup.html</anchorfile>
      <anchor>a79bdcf1f63a1fa95bc27fb226f954833aa7627efe2cc08f214ba59acf0c1a23d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractGroupedFeature</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</filename>
    <templarg>dimensions</templarg>
    <templarg>Derived</templarg>
    <templarg>T</templarg>
    <base>Magnum::SceneGraph::AbstractFeature</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a2c0d4b144aea6e54c7a12fb0a8965827</anchor>
      <arglist>(AbstractObject&lt; dimensions, T &gt; &amp;object, FeatureGroup&lt; dimensions, Derived, T &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>ad05374ec9886805cd53d6f32f0a2dedd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Derived, T &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a670e9a5ed8e81ed9ea5b819e3af01ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FeatureGroup&lt; dimensions, Derived, T &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a3382ca1d30c0cc075a37c7c44908c9d0</anchor>
      <arglist>() const</arglist>
    </member>
    <docanchor file="classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature" title="Subclassing">SceneGraph-AbstractGroupedFeature-subclassing</docanchor>
    <docanchor file="classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature" title="Explicit template specializations">SceneGraph-AbstractGroupedFeature-explicit-specializations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractObject</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractObject.html</filename>
    <templarg>dimensions</templarg>
    <templarg>T</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ae011a6873ee3cb00dd0aa05b37130ba4a8882e03487645308e46eb0a564f50f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a3d90e3f9773b7715597c5f60a99110e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MatrixTypeFor&lt; dimensions, T &gt;</type>
      <name>MatrixType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aea88321960cf363a0b35952364d1ab3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractFeature&lt; dimensions, T &gt;</type>
      <name>FeatureType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ae8eb1f97426f2316226d1977ac762664</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ae011a6873ee3cb00dd0aa05b37130ba4a8882e03487645308e46eb0a564f50f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Containers::LinkedList&lt; AbstractFeature&lt; dimensions, T &gt; &gt; &amp;</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aa663eab19821dcb91e48d2f09eb4661f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Containers::LinkedList&lt; AbstractFeature&lt; dimensions, T &gt; &gt; &amp;</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ada1cac962d725dfe594d7acd26ef78e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>U &amp;</type>
      <name>addFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a1b700addb5404a8f121add73dbde0240</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>AbstractObject&lt; dimensions, T &gt; *</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aa456e847f56bd37b21307b7867e7498e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractObject&lt; dimensions, T &gt; *</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>afdfded55dadaa68a0c466393e1b265db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AbstractObject&lt; dimensions, T &gt; *</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ac52e5679ebdb34c4639dddeaad14be8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractObject&lt; dimensions, T &gt; *</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a71f3bf3cb4ebcbd5b7e84939d34b6209</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>transformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a0705e248f30dc70ebc1426d81e127771</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>absoluteTransformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ada530933bba90f902ed207ff12081b1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MatrixType &gt;</type>
      <name>transformationMatrices</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ac3c4223178480aac5c602c9f1fc459db</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; AbstractObject&lt; dimensions, T &gt;&gt;&gt; &amp;objects, const MatrixType &amp;initialTransformationMatrix=MatrixType()) const</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>transformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a0705e248f30dc70ebc1426d81e127771</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>absoluteTransformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ada530933bba90f902ed207ff12081b1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MatrixType &gt;</type>
      <name>transformationMatrices</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ac3c4223178480aac5c602c9f1fc459db</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; AbstractObject&lt; dimensions, T &gt;&gt;&gt; &amp;objects, const MatrixType &amp;initialTransformationMatrix=MatrixType()) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a399c159cbc2371cbefd806850874e1c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a5c3d16b95cb6955188cd710cd01faca5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClean</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aed9299e2b1248ad3fdd9e06c0b9297af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setClean</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a355409a5a8fb73443fbced50092462dd</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; AbstractObject&lt; dimensions, T &gt;&gt;&gt; &amp;objects)</arglist>
    </member>
    <docanchor file="classMagnum_1_1SceneGraph_1_1AbstractObject" title="Explicit template specializations">SceneGraph-AbstractObject-explicit-specializations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractTransformation</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractTransformation.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractTransformation.html</anchorfile>
      <anchor>a526a37d4e6de27c2f5f27b74ee8387cdaab4b51d27025c067bdbdc2a4868b829c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractTransformation.html</anchorfile>
      <anchor>a84e81e78a2f61e8a8b975e76e091555a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractTransformation.html</anchorfile>
      <anchor>a526a37d4e6de27c2f5f27b74ee8387cdaab4b51d27025c067bdbdc2a4868b829c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>AbstractTransformation&lt; dimensions, T &gt; &amp;</type>
      <name>resetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractTransformation.html</anchorfile>
      <anchor>af323d01b729d3f3302c427db2111f9b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doResetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractTransformation.html</anchorfile>
      <anchor>af5a594c7ccdfa4c2e402f6dc584a385f</anchor>
      <arglist>()=0</arglist>
    </member>
    <docanchor file="classMagnum_1_1SceneGraph_1_1AbstractTransformation" title="Explicit template specializations">SceneGraph-AbstractTransformation-explicit-specializations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractTranslation</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractTranslation.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractTransformation</base>
    <member kind="function">
      <type>AbstractTranslation&lt; dimensions, T, TranslationType &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractTranslation.html</anchorfile>
      <anchor>a7481034b7b3cd395f5646f6b16fcce91</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, TranslationType &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>AbstractTranslation&lt; dimensions, T, TranslationType &gt; &amp;</type>
      <name>translateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractTranslation.html</anchorfile>
      <anchor>a67e76d3cba00fcfa4b047a7ef1791962</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, TranslationType &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doTranslate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractTranslation.html</anchorfile>
      <anchor>a39a0126de16ebc08e95c07956bd1c29b</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, TranslationType &gt; &amp;vector)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doTranslateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractTranslation.html</anchorfile>
      <anchor>a7b56c5c9c96ac27e81690ded1f9393ad</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, TranslationType &gt; &amp;vector)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::Animable</name>
    <filename>classMagnum_1_1SceneGraph_1_1Animable.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <base>AbstractGroupedFeature&lt; dimensions, Animable&lt; dimensions, T &gt;, T &gt;</base>
    <member kind="function">
      <type></type>
      <name>Animable</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a7d7fd4c0a6f61fefa2269d2fb6e27d1c</anchor>
      <arglist>(AbstractObject&lt; dimensions, T &gt; &amp;object, AnimableGroup&lt; dimensions, T &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>duration</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>aef9ae39ddc5d81507b08f983a41479b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AnimationState</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a1ef4f164fb0a0beb2d4b6955526388a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Animable&lt; dimensions, T &gt; &amp;</type>
      <name>setState</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a7c5efe6e435f8abe07500ce28c4b3c36</anchor>
      <arglist>(AnimationState state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRepeated</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a7f62f96b6beec3d2457e7349c17914dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Animable&lt; dimensions, T &gt; &amp;</type>
      <name>setRepeated</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>ab6aac83f12fea72dd782703f93902d1b</anchor>
      <arglist>(bool repeated)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedShort</type>
      <name>repeatCount</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>aa6b3de7765e9c330d5fc47a43827902e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Animable&lt; dimensions, T &gt; &amp;</type>
      <name>setRepeatCount</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a950af073a374f57d6ea0af0710a7753a</anchor>
      <arglist>(UnsignedShort count)</arglist>
    </member>
    <member kind="function">
      <type>AnimableGroup&lt; dimensions, T &gt; *</type>
      <name>animables</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a1f37c33203ce12871ca892cf6617d3ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AnimableGroup&lt; dimensions, T &gt; *</type>
      <name>animables</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>ac484ef290dbe78d8c5f63bc429959e32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Animable&lt; dimensions, T &gt; &amp;</type>
      <name>setDuration</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>ac465e10841ccd88347e9d730d1b903a6</anchor>
      <arglist>(Float duration)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>animationStep</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a9c83d1b936d70b47e4e1f2b81ece2cdd</anchor>
      <arglist>(Float time, Float delta)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>animationStarted</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>aa1005df0f3f1b7c0214547979c82ed27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>animationPaused</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a754ee9cfe33464a59afcccff1f680f6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>animationResumed</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a80529c8da87527ea107a5c82aa07ec86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>animationStopped</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a6bf1c8d14d02afa5a9eaf6455c23a1de</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classMagnum_1_1SceneGraph_1_1Animable" title="Usage">SceneGraph-Animable-usage</docanchor>
    <docanchor file="classMagnum_1_1SceneGraph_1_1Animable" title="Using multiple animable groups to improve performance">SceneGraph-Animable-multiple-groups</docanchor>
    <docanchor file="classMagnum_1_1SceneGraph_1_1Animable" title="Explicit template specializations">SceneGraph-Animable-explicit-specializations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AnimableGroup</name>
    <filename>classMagnum_1_1SceneGraph_1_1AnimableGroup.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <base>FeatureGroup&lt; dimensions, Animable&lt; dimensions, T &gt;, T &gt;</base>
    <member kind="function">
      <type></type>
      <name>AnimableGroup</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AnimableGroup.html</anchorfile>
      <anchor>a769e8645f41c7bb136ddfd889d389067</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>runningCount</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AnimableGroup.html</anchorfile>
      <anchor>a6fa3f667af1983e05c9fb99816c72997</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>step</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AnimableGroup.html</anchorfile>
      <anchor>af1c3e99042cad19e93924fe200a86e27</anchor>
      <arglist>(Float time, Float delta)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::BasicDualComplexTransformation</name>
    <filename>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractBasicTranslationRotation2D</base>
    <member kind="typedef">
      <type>Math::DualComplex&lt; T &gt;</type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a79cad670c076f5b89d39751c90c94b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Math::DualComplex&lt; T &gt;</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a06d0d280f060197fa35283a481ae7265</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>setTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a9595d19a73b3625374776bcb16dacc64</anchor>
      <arglist>(const Math::DualComplex&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>resetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a0eaf68cb1f147502a935001fa80f3e33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>normalizeRotation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a78034af65a3ddd339a0eb2b7906f6ce3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a4de87f6bf273db3180f8c6241ba4d0de</anchor>
      <arglist>(const Math::DualComplex&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>transformLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>aa1164b15bedd818419143ea355b7a854</anchor>
      <arglist>(const Math::DualComplex&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a08ec9c6276d80337342c35535d872ba5</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>translateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a2d0e5fa93a88d8b0506496c5da6b8b87</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>aba3342519f0b88a1bf65d6e44d572b9d</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a3c31abaa8d562049cf005bc548742ff3</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::BasicDualQuaternionTransformation</name>
    <filename>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractBasicTranslationRotation3D</base>
    <member kind="typedef">
      <type>Math::DualQuaternion&lt; T &gt;</type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>a5aacd8b66cd89e0160451e11b0ae5171</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Math::DualQuaternion&lt; T &gt;</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>ae8461e9a5eec7838cbca55c65ad01551</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>setTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>a748d517b3494acf2069f5478f53ee3b0</anchor>
      <arglist>(const Math::DualQuaternion&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>resetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>ad014bf5367fe7f88601ba0a1bbdd6335</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>normalizeRotation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>a14ca67f0f63c00974183d3f0f0608c3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>a35412d742e9db7653b9e128da63a446a</anchor>
      <arglist>(const Math::DualQuaternion&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>transformLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>a43a495fb2a719914be464a399c4238bb</anchor>
      <arglist>(const Math::DualQuaternion&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>ac2340be3381261d094ea3d3006b04ac6</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>translateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>a7a7f99815420729dff23533c398229e1</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>a683bb4d12662351fff4c2d67fc548b9f</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>a28cf50b377ce64feaf4e05bc666ca690</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::BasicMatrixTransformation2D</name>
    <filename>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractBasicTranslationRotationScaling2D</base>
    <member kind="typedef">
      <type>Math::Matrix3&lt; T &gt;</type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a1041a31765f8d90d698422375d1071b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Math::Matrix3&lt; T &gt;</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>aefed82a720241613c3a36cb661344bdd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>setTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>ab8d3fcdeb00259c87c9027e01ac83a46</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a640e96c324594e55a3c9c40bb2ce4bdf</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>transformLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>aaae6f985bb2d55f6b13b2c354feb6fd6</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>resetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>adf39992f397c34eee4627624d20c989e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a2e2c47adc2d85329cf755a0e427660d7</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>translateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a4061d89a84663eb800eba21ef66db68d</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a238c61d484dfbbbcd3350521a7c6fde9</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a7282e1e796c83b7e70f67a845d279ad2</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>scale</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a6e174b011569a470b184ffe0158f262e</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>scaleLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a48ccef58faa19a2aa838fb33a20cfba1</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>reflect</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a8b50c8cb2763a93b3f9aed2260948dc0</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>reflectLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>ae95ee4a6de8f7784ad5c212bdb3b44e2</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;normal)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::BasicMatrixTransformation3D</name>
    <filename>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractBasicTranslationRotationScaling3D</base>
    <member kind="typedef">
      <type>Math::Matrix4&lt; T &gt;</type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a29f9a8ea1099bf2257ede6874ef327a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Math::Matrix4&lt; T &gt;</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>ae71202bb6a680701b32ab7268b849caf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>setTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a3b7fafd2d71d27708dd42686cd6206d4</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>resetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a705b15ca0d9ee1220ae1c84695d1ac99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a8a8966123f7e70a16527c2bbb3af8224</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>transformLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>ada1f6afa75f31923b99a14a1be8791d5</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>abe1ab302fb5780baa7c90d8aa1cae848</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>translateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a49911d49eccb1d70a6934c3e82599616</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>afb383ecce4b5e9b5c366fad546b39142</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a0a73dd495830c996149d6417b8212b60</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateX</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a286c8fca037067ccec9f1c7d7d7caf86</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateXLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a1bb27cb9fcdfc952d5e9044920fa4f3b</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateY</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>ab2ca9ce4095e88115747666cfe278bef</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateYLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>ad69b5c98901d77b14b1d02f0cc475c3d</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateZ</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>aea4efac356d1be3b9480884b1e2beda6</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateZLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>adef05f084bf4d154a0e27cd18dade2da</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>scale</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>aaa1fc94becd8b46f3ab3b101e200c48a</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>scaleLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>ac8d3d0962bfaf321416fda27f95d5fa5</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>reflect</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a0fa1449be9bb71e786f1d42b09305846</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>reflectLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a0296a5459a53c34b1bfec4ee8125d5aa</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;normal)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::BasicRigidMatrixTransformation2D</name>
    <filename>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractBasicTranslationRotation2D</base>
    <member kind="typedef">
      <type>Math::Matrix3&lt; T &gt;</type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a28c618a2c071347a0962ab8c99e5fbb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Math::Matrix3&lt; T &gt;</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a2f6c0d821422b9844187cc301530a3b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>setTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>ad572ebd6ce688430c684d1761273a76e</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>resetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a238893dc181bee1c24617aaa6ff185f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>normalizeRotation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a5225af161307a3b0e605d4b7abb7d5cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>aa0e70d85f08cfe851019f78119ad4011</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>transformLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a5b675c5c22adf37eee29bb97aa10fd1f</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a14db772bf69171e772930f177879fc36</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>translateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>ac09f7a34beb30048da61cdbbf2b3168f</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a6cd85be04dfbf6882cf2f5e36b3f06da</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a3f7c7f16e3b0c59e25385d7274e74a44</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>reflect</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a2b67fae00e9ee5467f0146f91b5ce702</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>reflectLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a0a1c6b0b726b120bf7f2b3604fe08037</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;normal)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::BasicRigidMatrixTransformation3D</name>
    <filename>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractBasicTranslationRotation3D</base>
    <member kind="typedef">
      <type>Math::Matrix4&lt; T &gt;</type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a9fdcfdb64f113a38294e85296345a727</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Math::Matrix4&lt; T &gt;</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>ab6961dec6268eeb4704a634240f72a21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>setTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a7efb1242d80a2a21a78441a9623bee51</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>resetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>aa87ddb4282b9bfccd1d911a67146f82d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>normalizeRotation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a3dc9965204248b90d639e7c5af12141c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>aced9862045891cc3606a2bdd74f96855</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>transformLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>ab7c2675c173d4c182fb2108d2102d1d8</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>aeb6af8a17804d1422e7a4146d95a9e35</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>translateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a09a1c0f14580fe120a8fb73fd8802b5f</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a677c947f7c876b3ddd0eb6defb6243ef</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a30a013a86c00592208e9bbc9d7c2fd81</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateX</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>af6608b12a65b944fe4948cf663588e97</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateXLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>af63d570d548d54932b7d13293d89df4b</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateY</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a6f1fe940110a8bd250df07419bbddb19</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateYLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a76e02938a8aee1cbaab20260edbf9c8c</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateZ</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>aa528a299a35da30970f524264d4e0598</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateZLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a4b22934d5276fc19eba6ff98bd6e183b</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>reflect</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a6d0099c75faaaffc132edc27f45c4dee</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>reflectLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a9bab33ce538ae9a73b5dd6fd3406e157</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;normal)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::BasicTranslationRotationScalingTransformation2D</name>
    <filename>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation2D.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractBasicTranslationRotationScaling2D</base>
    <member kind="typedef">
      <type>Math::Matrix3&lt; T &gt;</type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation2D.html</anchorfile>
      <anchor>aa047f815f79d9094a63108e9cd95490a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Math::Matrix3&lt; T &gt;</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation2D.html</anchorfile>
      <anchor>abb58965525579e859b9880fa6850a64f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>setTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation2D.html</anchorfile>
      <anchor>a5f51ff53c5a5751c3479c63d91f11a18</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Math::Vector2&lt; T &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation2D.html</anchorfile>
      <anchor>adad58fdb3c3098fef9a3d0aae3073ee5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>setTranslation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation2D.html</anchorfile>
      <anchor>a511bc6d22d993bfaa79ad21967002500</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;translation)</arglist>
    </member>
    <member kind="function">
      <type>Math::Complex&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation2D.html</anchorfile>
      <anchor>a7d54ab8dc221715e7edbc021aefb015c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>setRotation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation2D.html</anchorfile>
      <anchor>ac60537c4abf5fce3aa4e9c7c9ad6d472</anchor>
      <arglist>(const Math::Complex&lt; T &gt; &amp;rotation)</arglist>
    </member>
    <member kind="function">
      <type>Math::Vector2&lt; T &gt;</type>
      <name>scaling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation2D.html</anchorfile>
      <anchor>a61d5bb7d13a8b311d26067fafc65a675</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>setScaling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation2D.html</anchorfile>
      <anchor>a07a7c624d06f92feb20c9dee16218bd2</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;scaling)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>resetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation2D.html</anchorfile>
      <anchor>a339e874483ae6da818bac4b4005971ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation2D.html</anchorfile>
      <anchor>a9cc0897adf64813688477f1858868af0</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>translateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation2D.html</anchorfile>
      <anchor>a42afa962c42881e9fe5af4fce3b3ec7d</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation2D.html</anchorfile>
      <anchor>a9340362270fda93bf3975b98d1d47bc4</anchor>
      <arglist>(const Math::Complex&lt; T &gt; &amp;complex)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation2D.html</anchorfile>
      <anchor>a87ea1e4a14853e778b4f36bf749046c6</anchor>
      <arglist>(const Math::Complex&lt; T &gt; &amp;complex)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation2D.html</anchorfile>
      <anchor>a4013d336b8aaa742c327b72fdadc5433</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation2D.html</anchorfile>
      <anchor>aeebc17157bc3be44a05eff31dcff9a34</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>scale</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation2D.html</anchorfile>
      <anchor>a5deb01dcb921bc411e4665debeb63a3b</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>scaleLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation2D.html</anchorfile>
      <anchor>a1db18d51fd86a9d100cb53d1cc2f208c</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::BasicTranslationRotationScalingTransformation3D</name>
    <filename>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractBasicTranslationRotationScaling3D</base>
    <member kind="typedef">
      <type>Math::Matrix4&lt; T &gt;</type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>a050b7e67c2b7bdb3a84f01c9b8d58d8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Math::Matrix4&lt; T &gt;</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>a9a06b20a3f63e9f01d101ee608cffe68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>setTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>a925116fa69d223af27808d4011175f26</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Math::Vector3&lt; T &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>ab3bec9268fe166017960229631667850</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>setTranslation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>a47d1a28bd7ffc2d67b0a7a74f1391515</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;translation)</arglist>
    </member>
    <member kind="function">
      <type>Math::Quaternion&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>a6e28556aac4c623f16d03e342beed538</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>setRotation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>aa25ee3d520be7449a9cb45d53e079e1f</anchor>
      <arglist>(const Math::Quaternion&lt; T &gt; &amp;rotation)</arglist>
    </member>
    <member kind="function">
      <type>Math::Vector3&lt; T &gt;</type>
      <name>scaling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>af2a1f9c62ad68c322288e8d1b9069109</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>setScaling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>a6d8b2a42eec7c2237ca0c1aa458127e9</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;scaling)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>resetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>aebcbf12c7647544ec6e2778524a1e069</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>aeb63f1972ddd245d49990f180fa2a702</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>translateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>a998e5a0622c250d33c18099eeec78bf6</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>a1b2bb772286af3b215c0d6179fe9e61e</anchor>
      <arglist>(const Math::Quaternion&lt; T &gt; &amp;quaternion)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>a01861c7c81f80281c07323e4bb86b34d</anchor>
      <arglist>(const Math::Quaternion&lt; T &gt; &amp;quaternion)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>a1b6ea37c87641d99edb78cbe3dbe8d43</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>af00fac080dc9883f665b0dc3b84cee27</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateX</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>a04a06727eaccc70aa3f21fa851e067f0</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateXLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>aae9a80de3057998aaa20c3484e0de69b</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateY</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>a9d7a77cb28aa33d5b423f7b36ee09241</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateYLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>afad0d306c2039c1bdf984d1ffd9fe1e7</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateZ</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>a1d5091f8738a5dc7afdfe934e0db1bae</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateZLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>a6a383f0af8be45e9d1463475329b5c26</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>scale</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>a3b9bb68bffbbb1671e39f4fa6d14532b</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicTranslationRotationScalingTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>scaleLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicTranslationRotationScalingTransformation3D.html</anchorfile>
      <anchor>aae9a7900b3d7fd59426887ab9338a3d1</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::Camera</name>
    <filename>classMagnum_1_1SceneGraph_1_1Camera.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractFeature</base>
    <member kind="function">
      <type></type>
      <name>Camera</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>a578d010e143a0262ff5128bd7cb80973</anchor>
      <arglist>(AbstractObject&lt; dimensions, T &gt; &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>AspectRatioPolicy</type>
      <name>aspectRatioPolicy</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>a682976c928bcddcfb300a4cb6975a655</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Camera&lt; dimensions, T &gt; &amp;</type>
      <name>setAspectRatioPolicy</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>a98f200ca05c1e0a7fa06845b3510f8f2</anchor>
      <arglist>(AspectRatioPolicy policy)</arglist>
    </member>
    <member kind="function">
      <type>MatrixTypeFor&lt; dimensions, T &gt;</type>
      <name>cameraMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>aae8dcaa154588aeb050b5c865c8e7ae0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MatrixTypeFor&lt; dimensions, T &gt;</type>
      <name>projectionMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>a21f5b5c5f4aa7726a6343328e065aa43</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Camera&lt; dimensions, T &gt; &amp;</type>
      <name>setProjectionMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>aa49ddcf71071d54dd7134aaceb66738a</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Math::Vector2&lt; T &gt;</type>
      <name>projectionSize</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>a0ca663b274257b2554d539a00d7b2d98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>viewport</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>a1d7ca2c2f63396865136394aa96961f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setViewport</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>a28b1c826c81e11ebc40ff329f8f4eb33</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::pair&lt; std::reference_wrapper&lt; Drawable&lt; dimensions, T &gt; &gt;, MatrixTypeFor&lt; dimensions, T &gt; &gt; &gt;</type>
      <name>drawableTransformations</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>a9a17bb008136d9e03687f815a189cda2</anchor>
      <arglist>(DrawableGroup&lt; dimensions, T &gt; &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>a4fb306aae49309025b41ff298f5bacc0</anchor>
      <arglist>(DrawableGroup&lt; dimensions, T &gt; &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>a09546e57e1fc178f76cb49adb4b5a37e</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; std::reference_wrapper&lt; Drawable&lt; dimensions, T &gt;&gt;, MatrixTypeFor&lt; dimensions, T &gt;&gt;&gt; &amp;drawableTransformations)</arglist>
    </member>
    <docanchor file="classMagnum_1_1SceneGraph_1_1Camera" title="Explicit template specializations">SceneGraph-Camera-explicit-specializations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::Drawable</name>
    <filename>classMagnum_1_1SceneGraph_1_1Drawable.html</filename>
    <templarg>dimensions</templarg>
    <templarg>T</templarg>
    <base>AbstractGroupedFeature&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt;</base>
    <member kind="function">
      <type></type>
      <name>Drawable</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Drawable.html</anchorfile>
      <anchor>adaca26dbdfd13c56651a7287936bfea5</anchor>
      <arglist>(AbstractObject&lt; dimensions, T &gt; &amp;object, DrawableGroup&lt; dimensions, T &gt; *drawables=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>DrawableGroup&lt; dimensions, T &gt; *</type>
      <name>drawables</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Drawable.html</anchorfile>
      <anchor>a032ddbc32002122cc6af40eaa30136cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const DrawableGroup&lt; dimensions, T &gt; *</type>
      <name>drawables</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Drawable.html</anchorfile>
      <anchor>afa4ba6fd88b86f1131f28085c2db2b36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Drawable.html</anchorfile>
      <anchor>aca0d0a219aa4d7712316de55d67f2134</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, T &gt; &amp;transformationMatrix, Camera&lt; dimensions, T &gt; &amp;camera)=0</arglist>
    </member>
    <docanchor file="classMagnum_1_1SceneGraph_1_1Drawable" title="Subclassing">SceneGraph-Drawable-subclassing</docanchor>
    <docanchor file="classMagnum_1_1SceneGraph_1_1Drawable" title="Drawing the scene">SceneGraph-Drawable-usage</docanchor>
    <docanchor file="classMagnum_1_1SceneGraph_1_1Drawable" title="Using multiple inheritance">SceneGraph-Drawable-multiple-inheritance</docanchor>
    <docanchor file="classMagnum_1_1SceneGraph_1_1Drawable" title="Using multiple drawable groups to improve performance">SceneGraph-Drawable-multiple-groups</docanchor>
    <docanchor file="classMagnum_1_1SceneGraph_1_1Drawable" title="Custom draw order">SceneGraph-Drawable-draw-order</docanchor>
    <docanchor file="classMagnum_1_1SceneGraph_1_1Drawable" title="Explicit template specializations">SceneGraph-Drawable-explicit-specializations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::FeatureGroup</name>
    <filename>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</filename>
    <templarg>dimensions</templarg>
    <templarg>Feature</templarg>
    <templarg>T</templarg>
    <base>Magnum::SceneGraph::AbstractFeatureGroup</base>
    <member kind="function">
      <type></type>
      <name>~FeatureGroup</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a352fd0f8f6d4a53a5780773a16e00b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>aa55204b99b7ea4cf78170d8fa654ae51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>af34f1faeabbdf16a30bfddd3d4627076</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Feature &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2da5b140149a69381b8e252f606ed232</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const Feature &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>ab08e5838efde6a98aa9ca0e172765f87</anchor>
      <arglist>(std::size_t index) const</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Feature, T &gt; &amp;</type>
      <name>add</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2091e5d70dde6675b31a52527ce9513b</anchor>
      <arglist>(Feature &amp;feature)</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Feature, T &gt; &amp;</type>
      <name>remove</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a527ccb9c991144fc37fada509aaf4901</anchor>
      <arglist>(Feature &amp;feature)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::Object</name>
    <filename>classMagnum_1_1SceneGraph_1_1Object.html</filename>
    <templarg></templarg>
    <base>AbstractObject&lt; Transformation::Dimensions, Transformation::Type &gt;</base>
    <member kind="typedef">
      <type>MatrixTypeFor&lt; Transformation::Dimensions, typename Transformation::Type &gt;</type>
      <name>MatrixType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a2912dd8485a1cac4f265cd939319eaa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a0a7911ce5cf1e790f8b8643376ca615e</anchor>
      <arglist>(Object&lt; Transformation &gt; *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a1ecc75ce8d8270ba636ecfce35513211</anchor>
      <arglist>(const Object&lt; Transformation &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a7e398bd5e9157616c37682b290217657</anchor>
      <arglist>(Object&lt; Transformation &gt; &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Object</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a04b6e40a2b0d585d8a1db5d8939a40c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a77fcedb7ca6b4b8c9af8eaa8c550c457</anchor>
      <arglist>(const Object&lt; Transformation &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a4e7f44e5f9553c1288d24c710f09e339</anchor>
      <arglist>(Object&lt; Transformation &gt; &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Scene&lt; Transformation &gt; *</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>afebc7b5eddc9e2d40cd25fe7c02a4d6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Scene&lt; Transformation &gt; *</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a6c37a7d6e28cd6f085e3fe8d65817bee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; *</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a2fca1eacd2243f94a8af53ad72fadafa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Object&lt; Transformation &gt; *</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a019acade7fcaacfc613c46f44ebb4b8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; *</type>
      <name>previousSibling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>aeef8597223b64f748cf964a47bb6d0ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Object&lt; Transformation &gt; *</type>
      <name>previousSibling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a6e5d58f03888412f9c6d4acd1be93667</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; *</type>
      <name>nextSibling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a945fb696b260345f44bd9fc3e0683d37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Object&lt; Transformation &gt; *</type>
      <name>nextSibling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a978ceb31d3c11d36a11f15cf2c063e3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::LinkedList&lt; Object&lt; Transformation &gt; &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a7f66683bb5de999350c10c31c08e4879</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Containers::LinkedList&lt; Object&lt; Transformation &gt; &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>ae2fd87151961f8726fbaf093bf3ea1e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>addChild</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a89445e01a94a4b43c42b597ab8a84a45</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; &amp;</type>
      <name>setParent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>acdd0a4ffb79b30fab72acfb62a99695a</anchor>
      <arglist>(Object&lt; Transformation &gt; *parent)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; &amp;</type>
      <name>setParentKeepTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>accec48044b393db9a309a511ca320e36</anchor>
      <arglist>(Object&lt; Transformation &gt; *parent)</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>transformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a636c3f56fd458acd6750488fafd0b6d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>absoluteTransformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>ab9d2735033bfff6006bd85fb52850dd7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Transformation::DataType</type>
      <name>absoluteTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a3ed654555ab65825b92bdfe1f111c665</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MatrixType &gt;</type>
      <name>transformationMatrices</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a9d2c1fdb688ca94a4ac40c93d5eedbac</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; Object&lt; Transformation &gt;&gt;&gt; &amp;objects, const MatrixType &amp;initialTransformationMatrix=MatrixType()) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; typename Transformation::DataType &gt;</type>
      <name>transformations</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a263d6cb466ab4ea2d0d6e6799801af79</anchor>
      <arglist>(std::vector&lt; std::reference_wrapper&lt; Object&lt; Transformation &gt;&gt;&gt; objects, const typename Transformation::DataType &amp;initialTransformation=typename Transformation::DataType()) const</arglist>
    </member>
    <member kind="function">
      <type>Scene&lt; Transformation &gt; *</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>afebc7b5eddc9e2d40cd25fe7c02a4d6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Scene&lt; Transformation &gt; *</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a6c37a7d6e28cd6f085e3fe8d65817bee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; *</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a2fca1eacd2243f94a8af53ad72fadafa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Object&lt; Transformation &gt; *</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a019acade7fcaacfc613c46f44ebb4b8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; *</type>
      <name>previousSibling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>aeef8597223b64f748cf964a47bb6d0ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Object&lt; Transformation &gt; *</type>
      <name>previousSibling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a6e5d58f03888412f9c6d4acd1be93667</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; *</type>
      <name>nextSibling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a945fb696b260345f44bd9fc3e0683d37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Object&lt; Transformation &gt; *</type>
      <name>nextSibling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a978ceb31d3c11d36a11f15cf2c063e3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::LinkedList&lt; Object&lt; Transformation &gt; &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a7f66683bb5de999350c10c31c08e4879</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Containers::LinkedList&lt; Object&lt; Transformation &gt; &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>ae2fd87151961f8726fbaf093bf3ea1e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>addChild</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a89445e01a94a4b43c42b597ab8a84a45</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; &amp;</type>
      <name>setParent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>acdd0a4ffb79b30fab72acfb62a99695a</anchor>
      <arglist>(Object&lt; Transformation &gt; *parent)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; &amp;</type>
      <name>setParentKeepTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>accec48044b393db9a309a511ca320e36</anchor>
      <arglist>(Object&lt; Transformation &gt; *parent)</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>transformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a636c3f56fd458acd6750488fafd0b6d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>absoluteTransformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>ab9d2735033bfff6006bd85fb52850dd7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Transformation::DataType</type>
      <name>absoluteTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a3ed654555ab65825b92bdfe1f111c665</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MatrixType &gt;</type>
      <name>transformationMatrices</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a9d2c1fdb688ca94a4ac40c93d5eedbac</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; Object&lt; Transformation &gt;&gt;&gt; &amp;objects, const MatrixType &amp;initialTransformationMatrix=MatrixType()) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; typename Transformation::DataType &gt;</type>
      <name>transformations</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a263d6cb466ab4ea2d0d6e6799801af79</anchor>
      <arglist>(std::vector&lt; std::reference_wrapper&lt; Object&lt; Transformation &gt;&gt;&gt; objects, const typename Transformation::DataType &amp;initialTransformation=typename Transformation::DataType()) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>ae50c1feda8fc71545498b15b9c5c7078</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a58e943fd6339f2bc9b5016c5cbb5bae3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClean</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a553758bb91a137261a2058b773c1095b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setClean</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>adb0b04e0e2f800a907ac2af72c4df4c3</anchor>
      <arglist>(std::vector&lt; std::reference_wrapper&lt; Object&lt; Transformation &gt;&gt;&gt; objects)</arglist>
    </member>
    <docanchor file="classMagnum_1_1SceneGraph_1_1Object" title="Explicit template specializations">SceneGraph-Object-explicit-specializations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::Scene</name>
    <filename>classMagnum_1_1SceneGraph_1_1Scene.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::Object</base>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::TranslationTransformation</name>
    <filename>classMagnum_1_1SceneGraph_1_1TranslationTransformation.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractTranslation</base>
    <member kind="typedef">
      <type>VectorTypeFor&lt; dimensions, TranslationType &gt;</type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1TranslationTransformation.html</anchorfile>
      <anchor>a57ab43e8b10dc708823c10f961a5a04c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; dimensions, TranslationType &gt;</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1TranslationTransformation.html</anchorfile>
      <anchor>ad18b119c4a8478cf8236aa06084b8959</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; TranslationTransformation&lt; dimensions, T, TranslationType &gt; &gt; &amp;</type>
      <name>setTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1TranslationTransformation.html</anchorfile>
      <anchor>a91d46f02b1615ac8c3aed7d19cf7b71f</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, TranslationType &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; TranslationTransformation&lt; dimensions, T, TranslationType &gt; &gt; &amp;</type>
      <name>resetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1TranslationTransformation.html</anchorfile>
      <anchor>ad634731e981e97b7cb0e85f79ff7789e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; TranslationTransformation&lt; dimensions, T, TranslationType &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1TranslationTransformation.html</anchorfile>
      <anchor>a03d976e79ecea4beaf4223a87f45fc15</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, TranslationType &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; TranslationTransformation&lt; dimensions, T, TranslationType &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1TranslationTransformation.html</anchorfile>
      <anchor>a95aecf688d4eb8e2fb238ddb474de40a</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, TranslationType &gt; &amp;vector)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shaders::AbstractVector</name>
    <filename>classMagnum_1_1Shaders_1_1AbstractVector.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::GL::AbstractShaderProgram</base>
    <member kind="typedef">
      <type>Generic&lt; dimensions &gt;::Position</type>
      <name>Position</name>
      <anchorfile>classMagnum_1_1Shaders_1_1AbstractVector.html</anchorfile>
      <anchor>a7ed8ee8dbb4bcd63eb009f4c6b074148</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Generic&lt; dimensions &gt;::TextureCoordinates</type>
      <name>TextureCoordinates</name>
      <anchorfile>classMagnum_1_1Shaders_1_1AbstractVector.html</anchorfile>
      <anchor>ad54e673eebca055fcce82f214ba9f399</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractVector</name>
      <anchorfile>classMagnum_1_1Shaders_1_1AbstractVector.html</anchorfile>
      <anchor>acc61c54ab9292be16de31d1b128439a2</anchor>
      <arglist>(const AbstractVector&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractVector</name>
      <anchorfile>classMagnum_1_1Shaders_1_1AbstractVector.html</anchorfile>
      <anchor>ae460fe4c29da2ad2cf3b6cf16847dcb7</anchor>
      <arglist>(AbstractVector&lt; dimensions &gt; &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>AbstractVector&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Shaders_1_1AbstractVector.html</anchorfile>
      <anchor>af5f0751f08bd3a9a3b8f2a555d68ccee</anchor>
      <arglist>(const AbstractVector&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractVector&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Shaders_1_1AbstractVector.html</anchorfile>
      <anchor>a47c5013ad4c3191b8da8b263bc2c4a40</anchor>
      <arglist>(AbstractVector&lt; dimensions &gt; &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>AbstractVector&lt; dimensions &gt; &amp;</type>
      <name>bindVectorTexture</name>
      <anchorfile>classMagnum_1_1Shaders_1_1AbstractVector.html</anchorfile>
      <anchor>a11d11c851c03cfbb3e57dad5be279e89</anchor>
      <arglist>(GL::Texture2D &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>AbstractVector&lt; dimensions &gt; &amp;</type>
      <name>setVectorTexture</name>
      <anchorfile>classMagnum_1_1Shaders_1_1AbstractVector.html</anchorfile>
      <anchor>ab55798f8f1fcf8f3c92a09e392986cea</anchor>
      <arglist>(GL::Texture2D &amp;texture)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shaders::DistanceFieldVector</name>
    <filename>classMagnum_1_1Shaders_1_1DistanceFieldVector.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::Shaders::AbstractVector</base>
    <member kind="function">
      <type></type>
      <name>DistanceFieldVector</name>
      <anchorfile>classMagnum_1_1Shaders_1_1DistanceFieldVector.html</anchorfile>
      <anchor>a3edbb9ad8a0fba4d308502b0688f1fad</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DistanceFieldVector</name>
      <anchorfile>classMagnum_1_1Shaders_1_1DistanceFieldVector.html</anchorfile>
      <anchor>a75a65c1c166d52fac73fa81dabf7bf23</anchor>
      <arglist>(const DistanceFieldVector&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DistanceFieldVector</name>
      <anchorfile>classMagnum_1_1Shaders_1_1DistanceFieldVector.html</anchorfile>
      <anchor>ac94b1f82549895597df33fcba738493b</anchor>
      <arglist>(DistanceFieldVector&lt; dimensions &gt; &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>DistanceFieldVector&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Shaders_1_1DistanceFieldVector.html</anchorfile>
      <anchor>adfe2013ace381e138e53531ff38159a9</anchor>
      <arglist>(const DistanceFieldVector&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>DistanceFieldVector&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Shaders_1_1DistanceFieldVector.html</anchorfile>
      <anchor>a97f80639d104c90614d91b3b9025b5f8</anchor>
      <arglist>(DistanceFieldVector&lt; dimensions &gt; &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>DistanceFieldVector &amp;</type>
      <name>setTransformationProjectionMatrix</name>
      <anchorfile>classMagnum_1_1Shaders_1_1DistanceFieldVector.html</anchorfile>
      <anchor>a452aaab9cedfa695c2486fa9d16f4eb4</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>DistanceFieldVector &amp;</type>
      <name>setColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1DistanceFieldVector.html</anchorfile>
      <anchor>a1eb97a192b1286d558162628416e145e</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>DistanceFieldVector &amp;</type>
      <name>setOutlineColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1DistanceFieldVector.html</anchorfile>
      <anchor>a0d8337812d29ca7b8f1f1216ecc37b81</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>DistanceFieldVector &amp;</type>
      <name>setOutlineRange</name>
      <anchorfile>classMagnum_1_1Shaders_1_1DistanceFieldVector.html</anchorfile>
      <anchor>a10e77a528a252d166da016d23c499655</anchor>
      <arglist>(Float start, Float end)</arglist>
    </member>
    <member kind="function">
      <type>DistanceFieldVector &amp;</type>
      <name>setSmoothness</name>
      <anchorfile>classMagnum_1_1Shaders_1_1DistanceFieldVector.html</anchorfile>
      <anchor>a5aa7fe5ef127755b16f84273522a5053</anchor>
      <arglist>(Float value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Shaders_1_1DistanceFieldVector" title="Example usage">Shaders-DistanceFieldVector-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Shaders::Flat</name>
    <filename>classMagnum_1_1Shaders_1_1Flat.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::GL::AbstractShaderProgram</base>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>ac92274219308daf59c02257f197bce8e</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Shaders_1_1Flat.html" anchor="ac92274219308daf59c02257f197bce8ea727faf49bd334ad8c6692934ff652843">Textured</enumvalue>
      <enumvalue file="classMagnum_1_1Shaders_1_1Flat.html" anchor="ac92274219308daf59c02257f197bce8eabd68e2bb79d1a5e65ad8f0d202d14cbc">AlphaMask</enumvalue>
    </member>
    <member kind="typedef">
      <type>Generic&lt; dimensions &gt;::Position</type>
      <name>Position</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>af85f5f7ae3699a3a3b18d534674611af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Generic&lt; dimensions &gt;::TextureCoordinates</type>
      <name>TextureCoordinates</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>ad6c77fc99b083a7f052b56eda55360db</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>a4d2b0c2f37cf47089373e6f23906ee6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Flat</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>a0357eb935fa1eafb82f8eaf008294611</anchor>
      <arglist>(Flags flags={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Flat</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>adfd63e3952d139f3f2bd2f2ffd9e6119</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Flat</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>a53efb7291d8059cec04d5bb65085c01c</anchor>
      <arglist>(const Flat&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Flat</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>a7f10a0fffd90d5bab603676782f7d4a7</anchor>
      <arglist>(Flat&lt; dimensions &gt; &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>Flat&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>a4807def321411debd3097ab62a875468</anchor>
      <arglist>(const Flat&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Flat&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>ade821fc6cffba7c8e2d543ce4abdc8ae</anchor>
      <arglist>(Flat&lt; dimensions &gt; &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>af106a55cf49405e95359a2830d5f0491</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Flat&lt; dimensions &gt; &amp;</type>
      <name>setTransformationProjectionMatrix</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>a10ef3bf7a5372350de4b4a4937957fb7</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Flat&lt; dimensions &gt; &amp;</type>
      <name>setColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>a9aa404e5f57f34fc7d6dbcb33e480686</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Flat&lt; dimensions &gt; &amp;</type>
      <name>bindTexture</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>a392fb166ac3c090e08ff3f596f7f5d71</anchor>
      <arglist>(GL::Texture2D &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>Flat&lt; dimensions &gt; &amp;</type>
      <name>setAlphaMask</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>a0f5c98cae76eee5f3ff0bf6ab76c2206</anchor>
      <arglist>(Float mask)</arglist>
    </member>
    <member kind="function">
      <type>Flat&lt; dimensions &gt; &amp;</type>
      <name>setTexture</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>a1e3effc88492f4b5b5457d7bae57adbd</anchor>
      <arglist>(GL::Texture2D &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>a3f7f31121097f8e2bfdb3c9e71c850d0</anchor>
      <arglist>(Debug &amp;debug, Flat&lt; dimensions &gt;::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>a82744a2393047180b216c586a9a57ad6</anchor>
      <arglist>(Debug &amp;debug, Flat&lt; dimensions &gt;::Flags value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Shaders_1_1Flat" title="Example usage">Shaders-Flat-usage</docanchor>
    <docanchor file="classMagnum_1_1Shaders_1_1Flat" title="Colored mesh">Shaders-Flat-usage-colored</docanchor>
    <docanchor file="classMagnum_1_1Shaders_1_1Flat" title="Textured mesh">Shaders-Flat-usage-textured</docanchor>
    <docanchor file="classMagnum_1_1Shaders_1_1Flat" title="Alpha blending and masking">Shaders-Flat-usage-alpha</docanchor>
  </compound>
  <compound kind="struct">
    <name>Magnum::Shaders::Generic</name>
    <filename>structMagnum_1_1Shaders_1_1Generic.html</filename>
    <templarg>dimensions</templarg>
    <class kind="struct">Magnum::Shaders::Generic::Color</class>
    <member kind="typedef">
      <type>GL::Attribute&lt; 0, T &gt;</type>
      <name>Position</name>
      <anchorfile>structMagnum_1_1Shaders_1_1Generic.html</anchorfile>
      <anchor>a0b34d59533e59a9ef979b36e4195b620</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GL::Attribute&lt; 1, Vector2 &gt;</type>
      <name>TextureCoordinates</name>
      <anchorfile>structMagnum_1_1Shaders_1_1Generic.html</anchorfile>
      <anchor>af54bd15020acd497f0177ef1657ec9b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GL::Attribute&lt; 2, Vector3 &gt;</type>
      <name>Normal</name>
      <anchorfile>structMagnum_1_1Shaders_1_1Generic.html</anchorfile>
      <anchor>aea38112dd0811a7fba779dad662af52e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GL::Attribute&lt; 4, Vector3 &gt;</type>
      <name>Tangent</name>
      <anchorfile>structMagnum_1_1Shaders_1_1Generic.html</anchorfile>
      <anchor>a6029751a9d19ece30bfb0431a1322d25</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GL::Attribute&lt; 3, Magnum::Color3 &gt;</type>
      <name>Color3</name>
      <anchorfile>structMagnum_1_1Shaders_1_1Generic.html</anchorfile>
      <anchor>adad53073beefe8796f65dc39910c789b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GL::Attribute&lt; 3, Magnum::Color4 &gt;</type>
      <name>Color4</name>
      <anchorfile>structMagnum_1_1Shaders_1_1Generic.html</anchorfile>
      <anchor>af89a31d7dc576c2d467a3979d6ab93cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Shaders::Generic::Color</name>
    <filename>structMagnum_1_1Shaders_1_1Generic_1_1Color.html</filename>
    <base>Attribute&lt; 3, Magnum::Color4 &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Color</name>
      <anchorfile>structMagnum_1_1Shaders_1_1Generic_1_1Color.html</anchorfile>
      <anchor>af1bad5f588b87e5386788d44d487be50</anchor>
      <arglist>(Components components, DataType dataType=DataType::Float, DataOptions dataOptions={})</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color</name>
      <anchorfile>structMagnum_1_1Shaders_1_1Generic_1_1Color.html</anchorfile>
      <anchor>a1b92c978a4e64dd81a398bca63473f84</anchor>
      <arglist>(DataType dataType=DataType::Float, DataOptions dataOptions={})</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shaders::MeshVisualizer</name>
    <filename>classMagnum_1_1Shaders_1_1MeshVisualizer.html</filename>
    <base>Magnum::GL::AbstractShaderProgram</base>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>ac8113a549818d2c506153b29649f9925</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Shaders_1_1MeshVisualizer.html" anchor="ac8113a549818d2c506153b29649f9925a33e42d0f3b166a4c405127e4412fbef2">Wireframe</enumvalue>
      <enumvalue file="classMagnum_1_1Shaders_1_1MeshVisualizer.html" anchor="ac8113a549818d2c506153b29649f9925a699c77fffe844a5174d29336e2577bae">NoGeometryShader</enumvalue>
    </member>
    <member kind="typedef">
      <type>GL::Attribute&lt; 0, Vector3 &gt;</type>
      <name>Position</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>a26d17d191f64f63d3e42c69bd39b5667</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GL::Attribute&lt; 3, Float &gt;</type>
      <name>VertexIndex</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>a255b64a852f379a84a81352bf7db0d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>a5e06c6be5d9305dbba4b1e235fb2e275</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshVisualizer</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>ae042569e0da3b5772b20a84290ea816c</anchor>
      <arglist>(Flags flags={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshVisualizer</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>a2246d65c86a0a804c2408fa9812f37b6</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshVisualizer</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>ac8f7c8729a05cf4fa86ad266bfbeb3b3</anchor>
      <arglist>(const MeshVisualizer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshVisualizer</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>ac2c595b5be54c740de78394fef4b6114</anchor>
      <arglist>(MeshVisualizer &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>MeshVisualizer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>aeeeb3a18ac340928d40671a90c3b6cbf</anchor>
      <arglist>(const MeshVisualizer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MeshVisualizer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>a40d26eed60e991d79227a23827ba4feb</anchor>
      <arglist>(MeshVisualizer &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>ad760a25480715afa60aa67d0c2ec2442</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MeshVisualizer &amp;</type>
      <name>setTransformationProjectionMatrix</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>ad9111b59f7414ac406dbe5c374f116e2</anchor>
      <arglist>(const Matrix4 &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>MeshVisualizer &amp;</type>
      <name>setViewportSize</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>aa23eadd3a8433a12aee5b6e697bcf44f</anchor>
      <arglist>(const Vector2 &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>MeshVisualizer &amp;</type>
      <name>setColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>aba1315572a3f1d7d5340de0ec0d04a88</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>MeshVisualizer &amp;</type>
      <name>setWireframeColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>aefd18ec82211692f8d22dfb3a95308be</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>MeshVisualizer &amp;</type>
      <name>setWireframeWidth</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>a5c2dabc1f7497a562b5fabd8c4723bcb</anchor>
      <arglist>(Float width)</arglist>
    </member>
    <member kind="function">
      <type>MeshVisualizer &amp;</type>
      <name>setSmoothness</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>af4b28d82a4e5ef903c48ae37c4e572f3</anchor>
      <arglist>(Float smoothness)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>aae5f6840e7f2ec959aa81681626a4b72</anchor>
      <arglist>(Debug &amp;debug, MeshVisualizer::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>a0b86ff630e94bcf1d54d14c0f67df69a</anchor>
      <arglist>(Debug &amp;debug, MeshVisualizer::Flags value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Shaders_1_1MeshVisualizer" title="Wireframe visualization">Shaders-MeshVisualizer-wireframe</docanchor>
    <docanchor file="classMagnum_1_1Shaders_1_1MeshVisualizer" title="Example usage">Shaders-MeshVisualizer-usage</docanchor>
    <docanchor file="classMagnum_1_1Shaders_1_1MeshVisualizer" title="Wireframe visualization with geometry shader (desktop GL)">Shaders-MeshVisualizer-usage-wireframe-geom</docanchor>
    <docanchor file="classMagnum_1_1Shaders_1_1MeshVisualizer" title="Wireframe visualization without geometry shader on older hardware">Shaders-MeshVisualizer-usage-wireframe-no-geom-old</docanchor>
    <docanchor file="classMagnum_1_1Shaders_1_1MeshVisualizer" title="Wireframe visualization of indexed meshes without geometry shader">Shaders-MeshVisualizer-usage-wireframe-no-geom</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Shaders::Phong</name>
    <filename>classMagnum_1_1Shaders_1_1Phong.html</filename>
    <base>Magnum::GL::AbstractShaderProgram</base>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a4da0f5c674ff490db5e2d6196d2f042a</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Shaders_1_1Phong.html" anchor="a4da0f5c674ff490db5e2d6196d2f042aa3ae56a8ec764ef7cd26cdde384d85e19">AmbientTexture</enumvalue>
      <enumvalue file="classMagnum_1_1Shaders_1_1Phong.html" anchor="a4da0f5c674ff490db5e2d6196d2f042aae712876b5313699d4e38e6f70c7c725e">DiffuseTexture</enumvalue>
      <enumvalue file="classMagnum_1_1Shaders_1_1Phong.html" anchor="a4da0f5c674ff490db5e2d6196d2f042aa8f19fa0f2cc4078c09a89d31205980e7">SpecularTexture</enumvalue>
      <enumvalue file="classMagnum_1_1Shaders_1_1Phong.html" anchor="a4da0f5c674ff490db5e2d6196d2f042aab59103e987d5c0e6e17c6c184edf90b2">NormalTexture</enumvalue>
      <enumvalue file="classMagnum_1_1Shaders_1_1Phong.html" anchor="a4da0f5c674ff490db5e2d6196d2f042aabd68e2bb79d1a5e65ad8f0d202d14cbc">AlphaMask</enumvalue>
    </member>
    <member kind="typedef">
      <type>Generic3D::Position</type>
      <name>Position</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a548664c5da1eb08de9702d655592ffc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Generic3D::Normal</type>
      <name>Normal</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a11a7f5f6ae2526806b0d450115c7f061</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Generic3D::Tangent</type>
      <name>Tangent</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a586317cb103563aa471562addd077c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Generic3D::TextureCoordinates</type>
      <name>TextureCoordinates</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>aba490b5624404d36dcf5b084e3850ecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a7a30a4d1ec350bab0cd808f3a6232aee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Phong</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a4f395540e1b5e6b36282b1cb13a42a07</anchor>
      <arglist>(Flags flags={}, UnsignedInt lightCount=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Phong</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a04d906ed38124b388c69c1a4bbe7e039</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Phong</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a303c57e2af162c825b47a817b0b721aa</anchor>
      <arglist>(const Phong &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Phong</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>ae89becf2f95a29d6e36f89adc55ad370</anchor>
      <arglist>(Phong &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a8010902a7403f79b3ad05571f507837b</anchor>
      <arglist>(const Phong &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a4e5ffe0926753de0364b5c978f12f251</anchor>
      <arglist>(Phong &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a075f81df7531f117d2ed11080381f48d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>lightCount</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a65059687a76294d08dd21a8c33f80919</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setAmbientColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a921e59ee974ad8b7a88f02e625034a8e</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>bindAmbientTexture</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a547ec470ac9917bd491f93e8db6dbd63</anchor>
      <arglist>(GL::Texture2D &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setAmbientTexture</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>ae7ef3b3e946d4969bb68872952769db7</anchor>
      <arglist>(GL::Texture2D &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setDiffuseColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>abedde167897a2641e5a8b76678a4a571</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>bindDiffuseTexture</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a6e5e40b5af64780791229c52c0a81bcc</anchor>
      <arglist>(GL::Texture2D &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setDiffuseTexture</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a4a0b5af64c183de75b48a443eb6d1efe</anchor>
      <arglist>(GL::Texture2D &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>bindNormalTexture</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>ad10c1dc3c4e6e25d2717bd2a8cd212eb</anchor>
      <arglist>(GL::Texture2D &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setSpecularColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>afe123e87fd72431d3b68808f3f777b60</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>bindSpecularTexture</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a711e9573eef5e1813d1c72be50ecca43</anchor>
      <arglist>(GL::Texture2D &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setSpecularTexture</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a06b46f82e2adc1c90eb76e3509974e43</anchor>
      <arglist>(GL::Texture2D &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>bindTextures</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>af43d8fe2ba646020129ac8a6f8480969</anchor>
      <arglist>(GL::Texture2D *ambient, GL::Texture2D *diffuse, GL::Texture2D *specular, GL::Texture2D *normal=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setTextures</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a7552d138bcb3d449888331f9381daa74</anchor>
      <arglist>(GL::Texture2D *ambient, GL::Texture2D *diffuse, GL::Texture2D *specular)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setShininess</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>ac45369524750da1a6ea885c2748d36bd</anchor>
      <arglist>(Float shininess)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setAlphaMask</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a1be82bde15aea7291ae17d9ec98d8e96</anchor>
      <arglist>(Float mask)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setTransformationMatrix</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a4171a46839fee09fd841753aaa884308</anchor>
      <arglist>(const Matrix4 &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setNormalMatrix</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>ab73684777f297edf51d82be5c3cf7c4a</anchor>
      <arglist>(const Matrix3x3 &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setProjectionMatrix</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>aea9fb6a7163ece02909391831521c56a</anchor>
      <arglist>(const Matrix4 &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setLightPositions</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a34bd30ed556af2d37bd9831f64082f94</anchor>
      <arglist>(Containers::ArrayView&lt; const Vector3 &gt; lights)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setLightPositions</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a31cae554fc2b0f471f236c31f2b56642</anchor>
      <arglist>(std::initializer_list&lt; Vector3 &gt; lights)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setLightPosition</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>ace5f485820e0f1f81058912386bf1c79</anchor>
      <arglist>(UnsignedInt id, const Vector3 &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setLightPosition</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>ae886c816bf5735bd768b6fdd81c49181</anchor>
      <arglist>(const Vector3 &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setLightColors</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a0212f3c0174d659068927bc3f42a079b</anchor>
      <arglist>(Containers::ArrayView&lt; const Color4 &gt; colors)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setLightColors</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a42b57f27a32407c10d478887d1f2d5da</anchor>
      <arglist>(std::initializer_list&lt; Color4 &gt; colors)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setLightColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a562cf956c9b2d01fcc3db2f078cd6160</anchor>
      <arglist>(UnsignedInt id, const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setLightColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a686e3193ec87f31f1530c64d0a6c968a</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>aaeb06f4f4fc08f67f907deae8ac32fe7</anchor>
      <arglist>(Debug &amp;debug, Phong::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a36fe991011698eb9e0383292a05ebb17</anchor>
      <arglist>(Debug &amp;debug, Phong::Flags value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Shaders_1_1Phong" title="Example usage">Shaders-Phong-usage</docanchor>
    <docanchor file="classMagnum_1_1Shaders_1_1Phong" title="Colored mesh">Shaders-Phong-usage-colored</docanchor>
    <docanchor file="classMagnum_1_1Shaders_1_1Phong" title="Diffuse and specular texture">Shaders-Phong-usage-texture</docanchor>
    <docanchor file="classMagnum_1_1Shaders_1_1Phong" title="Alpha blending and masking">Shaders-Phong-usage-alpha</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Shaders::Vector</name>
    <filename>classMagnum_1_1Shaders_1_1Vector.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::Shaders::AbstractVector</base>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Vector.html</anchorfile>
      <anchor>a7df5ae55ea3ac9b1d565ffc239af8c41</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Vector.html</anchorfile>
      <anchor>a94f41b2980966d3b266f4407c91d1436</anchor>
      <arglist>(const Vector&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Vector.html</anchorfile>
      <anchor>adf258d65239107f31a09ca6aee3bad49</anchor>
      <arglist>(Vector&lt; dimensions &gt; &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Vector.html</anchorfile>
      <anchor>a46b575e431a507ca56dd2f67316d4fe9</anchor>
      <arglist>(const Vector&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Vector.html</anchorfile>
      <anchor>a262fb8889456ce51f1bc2ecc9e016113</anchor>
      <arglist>(Vector&lt; dimensions &gt; &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; dimensions &gt; &amp;</type>
      <name>setTransformationProjectionMatrix</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Vector.html</anchorfile>
      <anchor>ad37551ab3af99c78a91f62a876c1a23b</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; dimensions &gt; &amp;</type>
      <name>setBackgroundColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Vector.html</anchorfile>
      <anchor>a88cecdde532387d3dd4c42f9f059593d</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; dimensions &gt; &amp;</type>
      <name>setColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Vector.html</anchorfile>
      <anchor>a52fd15d7f47549bb3c4f07897205f40c</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Shaders_1_1Vector" title="Example usage">Shaders-Vector-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Shaders::VertexColor</name>
    <filename>classMagnum_1_1Shaders_1_1VertexColor.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::GL::AbstractShaderProgram</base>
    <member kind="typedef">
      <type>Generic&lt; dimensions &gt;::Position</type>
      <name>Position</name>
      <anchorfile>classMagnum_1_1Shaders_1_1VertexColor.html</anchorfile>
      <anchor>aacac664f88c41ccc12f9480d101b1300</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Generic&lt; dimensions &gt;::Color3</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Shaders_1_1VertexColor.html</anchorfile>
      <anchor>a1a8d3b5ca2816274679a2c6cbfd62885</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Generic&lt; dimensions &gt;::Color4</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Shaders_1_1VertexColor.html</anchorfile>
      <anchor>a3b6997c65f3b65b7c79ad461c2e968ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Generic&lt; dimensions &gt;::Color</type>
      <name>Color</name>
      <anchorfile>classMagnum_1_1Shaders_1_1VertexColor.html</anchorfile>
      <anchor>abb063fdf11ceb82e163b1f594e4eaf3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VertexColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1VertexColor.html</anchorfile>
      <anchor>ac4286dfbddff3a20c852fe06055f53f8</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VertexColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1VertexColor.html</anchorfile>
      <anchor>a0c0e54158e710070a764a5d00bce337f</anchor>
      <arglist>(const VertexColor&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VertexColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1VertexColor.html</anchorfile>
      <anchor>a456be829a015bec2612cba855db20338</anchor>
      <arglist>(VertexColor&lt; dimensions &gt; &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>VertexColor&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Shaders_1_1VertexColor.html</anchorfile>
      <anchor>afec5dfc6fb3e379acf0f61f7ef35431d</anchor>
      <arglist>(const VertexColor&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>VertexColor&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Shaders_1_1VertexColor.html</anchorfile>
      <anchor>a7daaaaec7da5a6e6f66e9b0e48c1d23e</anchor>
      <arglist>(VertexColor&lt; dimensions &gt; &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>VertexColor&lt; dimensions &gt; &amp;</type>
      <name>setTransformationProjectionMatrix</name>
      <anchorfile>classMagnum_1_1Shaders_1_1VertexColor.html</anchorfile>
      <anchor>ac680b3e05d8d10a65963a47188da75ec</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;matrix)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Shaders_1_1VertexColor" title="Example usage">Shaders-VertexColor-example</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::AbstractFont</name>
    <filename>classMagnum_1_1Text_1_1AbstractFont.html</filename>
    <base>Corrade::PluginManager::AbstractPlugin</base>
    <class kind="struct">Magnum::Text::AbstractFont::Metrics</class>
    <member kind="enumeration">
      <type></type>
      <name>Feature</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>ad71b70a7763ae6634e05a25ba83e4be3</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Text_1_1AbstractFont.html" anchor="ad71b70a7763ae6634e05a25ba83e4be3ad81dcb96c7ab3ee3608397d0b0a9071c">OpenData</enumvalue>
      <enumvalue file="classMagnum_1_1Text_1_1AbstractFont.html" anchor="ad71b70a7763ae6634e05a25ba83e4be3abc0472654189df29a514f8ed0ebd0fc6">FileCallback</enumvalue>
      <enumvalue file="classMagnum_1_1Text_1_1AbstractFont.html" anchor="ad71b70a7763ae6634e05a25ba83e4be3a1e1c1bd7f9cc7129802e1f00d2b171bd">MultiFile</enumvalue>
      <enumvalue file="classMagnum_1_1Text_1_1AbstractFont.html" anchor="ad71b70a7763ae6634e05a25ba83e4be3aa098f39d36d4fbcebceeb378e5757d64">PreparedGlyphCache</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Feature &gt;</type>
      <name>Features</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a120ce26cbfb3af46bf3bb905c1acb6b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractFont</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a28f329eccf0c71b92da793de73016d22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractFont</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>ab85948bc7006e978c088a75cd115ffd9</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <member kind="function">
      <type>Features</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>af137430f40a63ea40dd09195cb3e2072</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>fileCallback</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>af80bfac4e0fdf98b5f3d0cc6e7c80a82</anchor>
      <arglist>() const -&gt; Containers::Optional&lt; Containers::ArrayView&lt; const char &gt;&gt;(*)(const std::string &amp;, InputFileCallbackPolicy, void *)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>fileCallbackUserData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a5ee0ac3129566d189e10bae6b6c6ea8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileCallback</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>abdbe09755ba5076e2f474586b61b4e10</anchor>
      <arglist>(Containers::Optional&lt; Containers::ArrayView&lt; const char &gt;&gt;(*callback)(const std::string &amp;, InputFileCallbackPolicy, void *), void *userData=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileCallback</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a57c6d3221567645810973a9720223edf</anchor>
      <arglist>(Containers::Optional&lt; Containers::ArrayView&lt; const char &gt;&gt;(*callback)(const std::string &amp;, InputFileCallbackPolicy, T &amp;), T &amp;userData)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOpened</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>aecfe968e36bb48c83070c9fd02df6b59</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a8e8e2959d185c59166b199ce44ddb9b4</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data, Float size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>ae73eb778381acf053afb9ce6bc0862be</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; std::string, Containers::ArrayView&lt; const char &gt;&gt;&gt; &amp;data, Float size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openSingleData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a7b62d6d0746a782685d3b54c02037743</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data, Float size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openFile</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a37b5553ae614987d06dee99750ec0e6e</anchor>
      <arglist>(const std::string &amp;filename, Float size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a6440ddb04e0bcf8e285748ba891f4cb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>aafd8b6b48fb3004fa50ff43f778545e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>ascent</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>adf6513d19e5a6757c376ca31bc4d8562</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>descent</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a4faed74d35d5bb955b7cb3dbde6a910a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>lineHeight</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a3b2dd4ead66d4674b0898cf9d369aacc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>glyphId</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a4cd0e9f841aba7d30e01feebd28f8525</anchor>
      <arglist>(char32_t character)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>glyphAdvance</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>aae62cb07b01c8a3eeb436780c6d57094</anchor>
      <arglist>(UnsignedInt glyph)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillGlyphCache</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a73756c236e338a5c69e31d30df65bc3a</anchor>
      <arglist>(AbstractGlyphCache &amp;cache, const std::string &amp;characters)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Pointer&lt; AbstractGlyphCache &gt;</type>
      <name>createGlyphCache</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a4079f72a1400fa0e61476612e464b99c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::Pointer&lt; AbstractLayouter &gt;</type>
      <name>layout</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a64375d92db4269c3eb0bd250c213c94d</anchor>
      <arglist>(const AbstractGlyphCache &amp;cache, Float size, const std::string &amp;text)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>pluginInterface</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>ac9dc31a139d59b30a12572cc1e1cb568</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::string &gt;</type>
      <name>pluginSearchPaths</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a40370b4c0f73159af3a49fa2e40acece</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Metrics</type>
      <name>doOpenFile</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a0a7feb093b570d5a4f3fc17662a40aa0</anchor>
      <arglist>(const std::string &amp;filename, Float size)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual Features</type>
      <name>doFeatures</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a9bee9980bfcf4493ef4020cc56bb07e4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>doSetFileCallback</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a7af9adb178ba452909b482cd806f1449</anchor>
      <arglist>(Containers::Optional&lt; Containers::ArrayView&lt; const char &gt;&gt;(*callback)(const std::string &amp;, InputFileCallbackPolicy, void *), void *userData)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual bool</type>
      <name>doIsOpened</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>ad9c9b562f677085acd36ccb894e1b69e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Metrics</type>
      <name>doOpenData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a5f3f2fed5c7d02f00c7298deb799f68e</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data, Float size)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>doClose</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>afffb6f9ee12fd6e8cc5b0d48a8bd6ebe</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual UnsignedInt</type>
      <name>doGlyphId</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>af685f3636922415f3dd525f495dfdb4f</anchor>
      <arglist>(char32_t character)=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual Vector2</type>
      <name>doGlyphAdvance</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a5dc7491faa2ea0098a0ca13458950040</anchor>
      <arglist>(UnsignedInt glyph)=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>doFillGlyphCache</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>ac620ca3a322b9397bc73d8b1576f9462</anchor>
      <arglist>(AbstractGlyphCache &amp;cache, const std::u32string &amp;characters)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Pointer&lt; AbstractGlyphCache &gt;</type>
      <name>doCreateGlyphCache</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>ad9fb251abd40f7b02c7cafc366a0570d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual Containers::Pointer&lt; AbstractLayouter &gt;</type>
      <name>doLayout</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a4a39a55790c489c26706f90f895c721b</anchor>
      <arglist>(const AbstractGlyphCache &amp;cache, Float size, const std::string &amp;text)=0</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a7fa35f3ab0a4527b5e719d0dd5cf84ca</anchor>
      <arglist>(Debug &amp;debug, AbstractFont::Feature value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a93a05e290c110f57d63c674953393f44</anchor>
      <arglist>(Debug &amp;debug, AbstractFont::Features value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Text_1_1AbstractFont" title="Usage">Text-AbstractFont-usage</docanchor>
    <docanchor file="classMagnum_1_1Text_1_1AbstractFont" title="Loading data from memory, using file callbacks">Text-AbstractFont-usage-callbacks</docanchor>
    <docanchor file="classMagnum_1_1Text_1_1AbstractFont" title="Subclassing">Text-AbstractFont-subclassing</docanchor>
  </compound>
  <compound kind="struct">
    <name>Magnum::Text::AbstractFont::Metrics</name>
    <filename>structMagnum_1_1Text_1_1AbstractFont_1_1Metrics.html</filename>
    <member kind="variable">
      <type>Float</type>
      <name>size</name>
      <anchorfile>structMagnum_1_1Text_1_1AbstractFont_1_1Metrics.html</anchorfile>
      <anchor>a1b7fbfa4a0483fe44f6ab5740e307bc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Float</type>
      <name>ascent</name>
      <anchorfile>structMagnum_1_1Text_1_1AbstractFont_1_1Metrics.html</anchorfile>
      <anchor>a6989e8ff831585973ec38761a6e12039</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Float</type>
      <name>descent</name>
      <anchorfile>structMagnum_1_1Text_1_1AbstractFont_1_1Metrics.html</anchorfile>
      <anchor>a2455097997b899ec6306e03d530158ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Float</type>
      <name>lineHeight</name>
      <anchorfile>structMagnum_1_1Text_1_1AbstractFont_1_1Metrics.html</anchorfile>
      <anchor>a1207e6dcdb5235f18c72fc0efaad29c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::AbstractFontConverter</name>
    <filename>classMagnum_1_1Text_1_1AbstractFontConverter.html</filename>
    <base>Corrade::PluginManager::AbstractPlugin</base>
    <member kind="enumeration">
      <type></type>
      <name>Feature</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a637464b9217c59340802bd1a6b30956b</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Text_1_1AbstractFontConverter.html" anchor="a637464b9217c59340802bd1a6b30956ba5312b734e815ab6550e0c1913c98b206">ExportFont</enumvalue>
      <enumvalue file="classMagnum_1_1Text_1_1AbstractFontConverter.html" anchor="a637464b9217c59340802bd1a6b30956ba5b39e6b8ffe4fc664ffd7d8bd4fb60ef">ExportGlyphCache</enumvalue>
      <enumvalue file="classMagnum_1_1Text_1_1AbstractFontConverter.html" anchor="a637464b9217c59340802bd1a6b30956ba79fad4c396d9182bce56b04141e7e2dd">ImportGlyphCache</enumvalue>
      <enumvalue file="classMagnum_1_1Text_1_1AbstractFontConverter.html" anchor="a637464b9217c59340802bd1a6b30956ba641cdf6d783d9420d071be06b0307937">ConvertData</enumvalue>
      <enumvalue file="classMagnum_1_1Text_1_1AbstractFontConverter.html" anchor="a637464b9217c59340802bd1a6b30956ba1e1c1bd7f9cc7129802e1f00d2b171bd">MultiFile</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Feature &gt;</type>
      <name>Features</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>ad54227b86e6b2c8630d33b95d3c101ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractFontConverter</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>ac850151da0440b7f921347d451c4ad91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractFontConverter</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>aa7f41030cca50fbc7617918054ae4f0a</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <member kind="function">
      <type>Features</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a110125ce1ffbd9abdc8c70a48015c0e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::pair&lt; std::string, Containers::Array&lt; char &gt; &gt; &gt;</type>
      <name>exportFontToData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a7ee5f2d840e851b8057a335ef8ad98b0</anchor>
      <arglist>(AbstractFont &amp;font, AbstractGlyphCache &amp;cache, const std::string &amp;filename, const std::string &amp;characters) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>exportFontToSingleData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a6940861098aa28345c66688642f5be33</anchor>
      <arglist>(AbstractFont &amp;font, AbstractGlyphCache &amp;cache, const std::string &amp;characters) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exportFontToFile</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>ad53ccf65524005d18c8d777a358b4d54</anchor>
      <arglist>(AbstractFont &amp;font, AbstractGlyphCache &amp;cache, const std::string &amp;filename, const std::string &amp;characters) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::pair&lt; std::string, Containers::Array&lt; char &gt; &gt; &gt;</type>
      <name>exportGlyphCacheToData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>aa7d0a976dd309e1c7fd483d7b7254cd9</anchor>
      <arglist>(AbstractGlyphCache &amp;cache, const std::string &amp;filename) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>exportGlyphCacheToSingleData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>ad8e8c45a4006e39182ce86119f37398c</anchor>
      <arglist>(AbstractGlyphCache &amp;cache) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exportGlyphCacheToFile</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>aed8d8152c6fc8945e57613b148f8be67</anchor>
      <arglist>(AbstractGlyphCache &amp;cache, const std::string &amp;filename) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Pointer&lt; AbstractGlyphCache &gt;</type>
      <name>importGlyphCacheFromData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>af929f14bcc5165cf6b1a8767d27c2030</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; std::string, Containers::ArrayView&lt; const char &gt;&gt;&gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Pointer&lt; AbstractGlyphCache &gt;</type>
      <name>importGlyphCacheFromSingleData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>add0615ef8e18d41e91ece0f92f7b8783</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Pointer&lt; AbstractGlyphCache &gt;</type>
      <name>importGlyphCacheFromFile</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>ad92788bc58a677529addb16ad6f7362d</anchor>
      <arglist>(const std::string &amp;filename) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>pluginInterface</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a598e50e13287d19f2b40a2ca014dff5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::string &gt;</type>
      <name>pluginSearchPaths</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a80716f4bf38f44c16efb3ff6884c9da4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual Features</type>
      <name>doFeatures</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>ab32dd44b1e356be2ffb0ea6d4d8e4e1a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual std::vector&lt; std::pair&lt; std::string, Containers::Array&lt; char &gt; &gt; &gt;</type>
      <name>doExportFontToData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a5e6953aeb67c50426a2c51a96898d288</anchor>
      <arglist>(AbstractFont &amp;font, AbstractGlyphCache &amp;cache, const std::string &amp;filename, const std::u32string &amp;characters) const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Array&lt; char &gt;</type>
      <name>doExportFontToSingleData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a1cb277db308a1791b073c3bb96c59a01</anchor>
      <arglist>(AbstractFont &amp;font, AbstractGlyphCache &amp;cache, const std::u32string &amp;characters) const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual bool</type>
      <name>doExportFontToFile</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a3dafe20b733aa8f2e06fd6389b6723be</anchor>
      <arglist>(AbstractFont &amp;font, AbstractGlyphCache &amp;cache, const std::string &amp;filename, const std::u32string &amp;characters) const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual std::vector&lt; std::pair&lt; std::string, Containers::Array&lt; char &gt; &gt; &gt;</type>
      <name>doExportGlyphCacheToData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>ab4fd31934cd54935e196b2e93da9d182</anchor>
      <arglist>(AbstractGlyphCache &amp;cache, const std::string &amp;filename) const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Array&lt; char &gt;</type>
      <name>doExportGlyphCacheToSingleData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>abca694af3c3688f9ba5a867e53063ee2</anchor>
      <arglist>(AbstractGlyphCache &amp;cache) const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual bool</type>
      <name>doExportGlyphCacheToFile</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a1e33562a532e8d0821279baf371145ee</anchor>
      <arglist>(AbstractGlyphCache &amp;cache, const std::string &amp;filename) const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Pointer&lt; AbstractGlyphCache &gt;</type>
      <name>doImportGlyphCacheFromData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>abbe9cc1af5517c5d1be65c048e68b6ab</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; std::string, Containers::ArrayView&lt; const char &gt;&gt;&gt; &amp;data) const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Pointer&lt; AbstractGlyphCache &gt;</type>
      <name>doImportGlyphCacheFromSingleData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>ad881989e7fadb625bcb14755d5089282</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data) const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Pointer&lt; AbstractGlyphCache &gt;</type>
      <name>doImportGlyphCacheFromFile</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a1bb711251b240937920389faea2bd58a</anchor>
      <arglist>(const std::string &amp;filename) const</arglist>
    </member>
    <docanchor file="classMagnum_1_1Text_1_1AbstractFontConverter" title="Subclassing">Text-AbstractFontConverter-subclassing</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::AbstractGlyphCache</name>
    <filename>classMagnum_1_1Text_1_1AbstractGlyphCache.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractGlyphCache</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractGlyphCache.html</anchorfile>
      <anchor>a171cdfbd569ff69eedc902f37f029fbf</anchor>
      <arglist>(const Vector2i &amp;size, const Vector2i &amp;padding={})</arglist>
    </member>
    <member kind="function">
      <type>GlyphCacheFeatures</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractGlyphCache.html</anchorfile>
      <anchor>aa685877efe9cdc42482feed3676d7d72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>textureSize</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractGlyphCache.html</anchorfile>
      <anchor>a0118eb8e29541bdcd49e7881b0637517</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>padding</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractGlyphCache.html</anchorfile>
      <anchor>ab93773c81fc12197ae655b0527d5fa70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>glyphCount</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractGlyphCache.html</anchorfile>
      <anchor>a899ff63046c480bc5735a3ea6eca76b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Vector2i, Range2Di &gt;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractGlyphCache.html</anchorfile>
      <anchor>a3e967a50abce73bdf3530818c5a53247</anchor>
      <arglist>(UnsignedInt glyph) const</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; UnsignedInt, std::pair&lt; Vector2i, Range2Di &gt; &gt;::const_iterator</type>
      <name>begin</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractGlyphCache.html</anchorfile>
      <anchor>ab603a3036008092aae073616e4aae555</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; UnsignedInt, std::pair&lt; Vector2i, Range2Di &gt; &gt;::const_iterator</type>
      <name>end</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractGlyphCache.html</anchorfile>
      <anchor>a2f7b5385b3487cce0c30c9b0a04fb755</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Range2Di &gt;</type>
      <name>reserve</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractGlyphCache.html</anchorfile>
      <anchor>ac709e71f5eb98e37f3d1efb1440d63b8</anchor>
      <arglist>(const std::vector&lt; Vector2i &gt; &amp;sizes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractGlyphCache.html</anchorfile>
      <anchor>afe2becb2f0d80ba3171a62e16fa8e8be</anchor>
      <arglist>(UnsignedInt glyph, const Vector2i &amp;position, const Range2Di &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractGlyphCache.html</anchorfile>
      <anchor>a4fd5d9386327aa755f4e58d557ca8ae2</anchor>
      <arglist>(const Vector2i &amp;offset, const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image2D</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractGlyphCache.html</anchorfile>
      <anchor>a72376053597094035d7ea1e1924e7f59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual GlyphCacheFeatures</type>
      <name>doFeatures</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractGlyphCache.html</anchorfile>
      <anchor>a788bd5b1db6cfb1dfc6f14e879c9d855</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>doSetImage</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractGlyphCache.html</anchorfile>
      <anchor>a32f53d498c98652fc7b74476077c0d3c</anchor>
      <arglist>(const Vector2i &amp;offset, const ImageView2D &amp;image)=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Image2D</type>
      <name>doImage</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractGlyphCache.html</anchorfile>
      <anchor>afa2471091ed553e642ddbed3d9acd0b1</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classMagnum_1_1Text_1_1AbstractGlyphCache" title="Subclassing">Text-AbstractGlyphCache-subclassing</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::AbstractLayouter</name>
    <filename>classMagnum_1_1Text_1_1AbstractLayouter.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractLayouter</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractLayouter.html</anchorfile>
      <anchor>aa704467296e0dc39a4cc34f69d9fd72b</anchor>
      <arglist>(const AbstractLayouter &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractLayouter</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractLayouter.html</anchorfile>
      <anchor>a4769a9136e0d25a92d29947326368cab</anchor>
      <arglist>(AbstractLayouter &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractLayouter &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractLayouter.html</anchorfile>
      <anchor>a22b76894e43fac9c42e93ac808775cdc</anchor>
      <arglist>(const AbstractLayouter &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractLayouter &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractLayouter.html</anchorfile>
      <anchor>a9a0973fa19e04b350bdd0846039a2217</anchor>
      <arglist>(const AbstractLayouter &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>glyphCount</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractLayouter.html</anchorfile>
      <anchor>a0e403e6d84272446221ff6881cefe23b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Range2D, Range2D &gt;</type>
      <name>renderGlyph</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractLayouter.html</anchorfile>
      <anchor>aa81861c9484d8d4e4a973b150e784760</anchor>
      <arglist>(UnsignedInt i, Vector2 &amp;cursorPosition, Range2D &amp;rectangle)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AbstractLayouter</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractLayouter.html</anchorfile>
      <anchor>a9c8e4e4a056dd9de6c079b402ab0f394</anchor>
      <arglist>(UnsignedInt glyphCount)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual std::tuple&lt; Range2D, Range2D, Vector2 &gt;</type>
      <name>doRenderGlyph</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractLayouter.html</anchorfile>
      <anchor>a8270241cae0a79a88e3d1f368f2efa03</anchor>
      <arglist>(UnsignedInt i)=0</arglist>
    </member>
    <docanchor file="classMagnum_1_1Text_1_1AbstractLayouter" title="Subclassing">Text-AbstractLayouter-subclassing</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::AbstractRenderer</name>
    <filename>classMagnum_1_1Text_1_1AbstractRenderer.html</filename>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>capacity</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractRenderer.html</anchorfile>
      <anchor>a08bf597153b0a700ed0620fcd650d6c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Range2D</type>
      <name>rectangle</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractRenderer.html</anchorfile>
      <anchor>a22d13d8d7ed29ea33640fd8a00b19137</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GL::Buffer &amp;</type>
      <name>vertexBuffer</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractRenderer.html</anchorfile>
      <anchor>aa8798a5741938fd50fb5ec00ea11ef4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GL::Buffer &amp;</type>
      <name>indexBuffer</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractRenderer.html</anchorfile>
      <anchor>a3688bf4da5bc4f54069cd47ceac0414c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GL::Mesh &amp;</type>
      <name>mesh</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractRenderer.html</anchorfile>
      <anchor>ad2f66175984eff09613985972beb6ae5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractRenderer.html</anchorfile>
      <anchor>a1730154b16f3884ef10b29b7582a759b</anchor>
      <arglist>(UnsignedInt glyphCount, GL::BufferUsage vertexBufferUsage, GL::BufferUsage indexBufferUsage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractRenderer.html</anchorfile>
      <anchor>ab5dd57e04bdba8d6367223591d40df82</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::tuple&lt; std::vector&lt; Vector2 &gt;, std::vector&lt; Vector2 &gt;, std::vector&lt; UnsignedInt &gt;, Range2D &gt;</type>
      <name>render</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractRenderer.html</anchorfile>
      <anchor>a131f565d384788d27fe3b95e4a32dc56</anchor>
      <arglist>(AbstractFont &amp;font, const GlyphCache &amp;cache, Float size, const std::string &amp;text, Alignment alignment=Alignment::LineLeft)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::DistanceFieldGlyphCache</name>
    <filename>classMagnum_1_1Text_1_1DistanceFieldGlyphCache.html</filename>
    <base>Magnum::Text::GlyphCache</base>
    <member kind="function">
      <type></type>
      <name>DistanceFieldGlyphCache</name>
      <anchorfile>classMagnum_1_1Text_1_1DistanceFieldGlyphCache.html</anchorfile>
      <anchor>a280c9b4934da5b98f5204181eafbe94f</anchor>
      <arglist>(const Vector2i &amp;originalSize, const Vector2i &amp;size, UnsignedInt radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDistanceFieldImage</name>
      <anchorfile>classMagnum_1_1Text_1_1DistanceFieldGlyphCache.html</anchorfile>
      <anchor>ad6df87163895423be3c8648911c57750</anchor>
      <arglist>(const Vector2i &amp;offset, const ImageView2D &amp;image)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Text_1_1DistanceFieldGlyphCache" title="Usage">Text-DistanceFieldGlyphCache-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::FreeTypeFont</name>
    <filename>classMagnum_1_1Text_1_1FreeTypeFont.html</filename>
    <base>Magnum::Text::AbstractFont</base>
    <member kind="function">
      <type></type>
      <name>FreeTypeFont</name>
      <anchorfile>classMagnum_1_1Text_1_1FreeTypeFont.html</anchorfile>
      <anchor>a823dcb3b7f69d19dd263b16f11d7c9cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FreeTypeFont</name>
      <anchorfile>classMagnum_1_1Text_1_1FreeTypeFont.html</anchorfile>
      <anchor>a346e7920a2934496f09a31c9c168a4cc</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initialize</name>
      <anchorfile>classMagnum_1_1Text_1_1FreeTypeFont.html</anchorfile>
      <anchor>a7800427aedb17ac75d84b514178dbeca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>finalize</name>
      <anchorfile>classMagnum_1_1Text_1_1FreeTypeFont.html</anchorfile>
      <anchor>a2fafda4208fa70185ff40b194ffa5b71</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::GlyphCache</name>
    <filename>classMagnum_1_1Text_1_1GlyphCache.html</filename>
    <base>Magnum::Text::AbstractGlyphCache</base>
    <member kind="function">
      <type></type>
      <name>GlyphCache</name>
      <anchorfile>classMagnum_1_1Text_1_1GlyphCache.html</anchorfile>
      <anchor>ae073ebdb341fef58827d5fe89f81e6f9</anchor>
      <arglist>(GL::TextureFormat internalFormat, const Vector2i &amp;originalSize, const Vector2i &amp;size, const Vector2i &amp;padding)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlyphCache</name>
      <anchorfile>classMagnum_1_1Text_1_1GlyphCache.html</anchorfile>
      <anchor>ac95d40c1401ab00f2bd1bb007f101803</anchor>
      <arglist>(GL::TextureFormat internalFormat, const Vector2i &amp;size, const Vector2i &amp;padding={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlyphCache</name>
      <anchorfile>classMagnum_1_1Text_1_1GlyphCache.html</anchorfile>
      <anchor>aed7abcad8c8b4ac5689fcbe7c34c7f41</anchor>
      <arglist>(const Vector2i &amp;originalSize, const Vector2i &amp;size, const Vector2i &amp;padding)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlyphCache</name>
      <anchorfile>classMagnum_1_1Text_1_1GlyphCache.html</anchorfile>
      <anchor>a970e1950984c72f0a5a158220a1b98b9</anchor>
      <arglist>(const Vector2i &amp;size, const Vector2i &amp;padding={})</arglist>
    </member>
    <member kind="function">
      <type>GL::Texture2D &amp;</type>
      <name>texture</name>
      <anchorfile>classMagnum_1_1Text_1_1GlyphCache.html</anchorfile>
      <anchor>ad0f11975fb1c93bb2d18418ad263685b</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classMagnum_1_1Text_1_1GlyphCache" title="Usage">Text-GlyphCache-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::HarfBuzzFont</name>
    <filename>classMagnum_1_1Text_1_1HarfBuzzFont.html</filename>
    <base>Magnum::Text::FreeTypeFont</base>
    <member kind="function">
      <type></type>
      <name>HarfBuzzFont</name>
      <anchorfile>classMagnum_1_1Text_1_1HarfBuzzFont.html</anchorfile>
      <anchor>a65d6f9762c9ca9ada932c6e4b0a7fb28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HarfBuzzFont</name>
      <anchorfile>classMagnum_1_1Text_1_1HarfBuzzFont.html</anchorfile>
      <anchor>a7df91cb23ba94ed4c22d7407d5144baf</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initialize</name>
      <anchorfile>classMagnum_1_1Text_1_1HarfBuzzFont.html</anchorfile>
      <anchor>ab1ce7a6cab36cc84f180078a34d13199</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>finalize</name>
      <anchorfile>classMagnum_1_1Text_1_1HarfBuzzFont.html</anchorfile>
      <anchor>a03fed5130976beb19e8d1048ebf4ff05</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::MagnumFont</name>
    <filename>classMagnum_1_1Text_1_1MagnumFont.html</filename>
    <base>Magnum::Text::AbstractFont</base>
    <member kind="function">
      <type></type>
      <name>MagnumFont</name>
      <anchorfile>classMagnum_1_1Text_1_1MagnumFont.html</anchorfile>
      <anchor>ad8f0310db026c6e9d54e364522ca625e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MagnumFont</name>
      <anchorfile>classMagnum_1_1Text_1_1MagnumFont.html</anchorfile>
      <anchor>ace86604f64258c7f999f160693fcbbd4</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::MagnumFontConverter</name>
    <filename>classMagnum_1_1Text_1_1MagnumFontConverter.html</filename>
    <base>Magnum::Text::AbstractFontConverter</base>
    <member kind="function">
      <type></type>
      <name>MagnumFontConverter</name>
      <anchorfile>classMagnum_1_1Text_1_1MagnumFontConverter.html</anchorfile>
      <anchor>aa676e1a6641afbfce99aad0e4bb392d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MagnumFontConverter</name>
      <anchorfile>classMagnum_1_1Text_1_1MagnumFontConverter.html</anchorfile>
      <anchor>a17eb960fc50442d719db75bdbb8f356a</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::Renderer</name>
    <filename>classMagnum_1_1Text_1_1Renderer.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::Text::AbstractRenderer</base>
    <member kind="function">
      <type></type>
      <name>Renderer</name>
      <anchorfile>classMagnum_1_1Text_1_1Renderer.html</anchorfile>
      <anchor>a437215a93c163ccc4d8e7173c16be2e0</anchor>
      <arglist>(AbstractFont &amp;font, const GlyphCache &amp;cache, Float size, Alignment alignment=Alignment::LineLeft)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Renderer</name>
      <anchorfile>classMagnum_1_1Text_1_1Renderer.html</anchorfile>
      <anchor>a138c14dbfbbc0bcf9f3b0a7ae20fa160</anchor>
      <arglist>(AbstractFont &amp;, GlyphCache &amp;&amp;, Float, Alignment alignment=Alignment::LineLeft)=delete</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::tuple&lt; GL::Mesh, Range2D &gt;</type>
      <name>render</name>
      <anchorfile>classMagnum_1_1Text_1_1Renderer.html</anchorfile>
      <anchor>ac7fd60027bff467070c3b91d24205345</anchor>
      <arglist>(AbstractFont &amp;font, const GlyphCache &amp;cache, Float size, const std::string &amp;text, GL::Buffer &amp;vertexBuffer, GL::Buffer &amp;indexBuffer, GL::BufferUsage usage, Alignment alignment=Alignment::LineLeft)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Text_1_1Renderer" title="Usage">Text-Renderer-usage</docanchor>
    <docanchor file="classMagnum_1_1Text_1_1Renderer" title="Required OpenGL functionality">Text-Renderer-required-opengl-functionality</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::StbTrueTypeFont</name>
    <filename>classMagnum_1_1Text_1_1StbTrueTypeFont.html</filename>
    <base>Magnum::Text::AbstractFont</base>
    <member kind="function">
      <type></type>
      <name>StbTrueTypeFont</name>
      <anchorfile>classMagnum_1_1Text_1_1StbTrueTypeFont.html</anchorfile>
      <anchor>aafa04842a3a13522028155578b783586</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StbTrueTypeFont</name>
      <anchorfile>classMagnum_1_1Text_1_1StbTrueTypeFont.html</anchorfile>
      <anchor>ade72b8c6abd3eb50b4c963604cd083f2</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::TextureTools::DistanceField</name>
    <filename>classMagnum_1_1TextureTools_1_1DistanceField.html</filename>
    <member kind="function">
      <type></type>
      <name>DistanceField</name>
      <anchorfile>classMagnum_1_1TextureTools_1_1DistanceField.html</anchorfile>
      <anchor>a1ea97222223bdf40391dad9fcbe88a03</anchor>
      <arglist>(UnsignedInt radius)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>radius</name>
      <anchorfile>classMagnum_1_1TextureTools_1_1DistanceField.html</anchorfile>
      <anchor>a7339d08aae9df3fbf34333c6e7cfe2ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classMagnum_1_1TextureTools_1_1DistanceField.html</anchorfile>
      <anchor>a453ddb5ca0360cc76b585a1a2b0470c2</anchor>
      <arglist>(GL::Texture2D &amp;input, GL::Texture2D &amp;output, const Range2Di &amp;rectangle, const Vector2i &amp;imageSize={})</arglist>
    </member>
    <docanchor file="classMagnum_1_1TextureTools_1_1DistanceField" title="The algorithm">TextureTools-DistanceField-algorithm</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Timeline</name>
    <filename>classMagnum_1_1Timeline.html</filename>
    <member kind="function">
      <type></type>
      <name>Timeline</name>
      <anchorfile>classMagnum_1_1Timeline.html</anchorfile>
      <anchor>a3bf7cbdf0cd05d4c3e8b5843ed56aee9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classMagnum_1_1Timeline.html</anchorfile>
      <anchor>afcc3ceba48912fdce2449d92a1e3b921</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classMagnum_1_1Timeline.html</anchorfile>
      <anchor>a237bd6c9d3e560c707201b843053b262</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nextFrame</name>
      <anchorfile>classMagnum_1_1Timeline.html</anchorfile>
      <anchor>a1bf94298dde4d5831aaf8ccd8e95d2a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>previousFrameTime</name>
      <anchorfile>classMagnum_1_1Timeline.html</anchorfile>
      <anchor>a3b07f472aaf0b8e69d7cb64f5b8a7076</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>previousFrameDuration</name>
      <anchorfile>classMagnum_1_1Timeline.html</anchorfile>
      <anchor>a5507df98d26578280f7a5bd8d7ffd115</anchor>
      <arglist>() const</arglist>
    </member>
    <docanchor file="classMagnum_1_1Timeline" title="Basic usage">Timeline-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::AbstractImageConverter</name>
    <filename>classMagnum_1_1Trade_1_1AbstractImageConverter.html</filename>
    <base>AbstractManagingPlugin&lt; AbstractImageConverter &gt;</base>
    <member kind="enumeration">
      <type></type>
      <name>Feature</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a377661be4f6a62d73821d65b8d5639ca</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Trade_1_1AbstractImageConverter.html" anchor="a377661be4f6a62d73821d65b8d5639caaa80d02dad65b0cfc4a0058eb485ef56c">ConvertImage</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1AbstractImageConverter.html" anchor="a377661be4f6a62d73821d65b8d5639caa07014ae9269d95a43b744e180f0c6a74">ConvertCompressedImage</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1AbstractImageConverter.html" anchor="a377661be4f6a62d73821d65b8d5639caab6b304ffe386aa1ab926467f7e882cb2">ConvertFile</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1AbstractImageConverter.html" anchor="a377661be4f6a62d73821d65b8d5639caa0a80552a23eb22423e8099c94942ce31">ConvertCompressedFile</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1AbstractImageConverter.html" anchor="a377661be4f6a62d73821d65b8d5639caa641cdf6d783d9420d071be06b0307937">ConvertData</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1AbstractImageConverter.html" anchor="a377661be4f6a62d73821d65b8d5639caa8729fd26dea434864513769bf5710edf">ConvertCompressedData</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Feature &gt;</type>
      <name>Features</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a01e32895d7477a075b40f79592ced4f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>aef1408d1f2010dd849b2b8780f4cef28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a54313fd70fa61bf67e1f8a3c0a881afe</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImageConverter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>ac4eb779548d05236102f47e64459c3da</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <member kind="function">
      <type>Features</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a5c272f12f1d544aedce3bb81b86d1e9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Image2D &gt;</type>
      <name>exportToImage</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>aad8ffac3d3397d60bb2cc4c8008bbfd6</anchor>
      <arglist>(const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; CompressedImage2D &gt;</type>
      <name>exportToCompressedImage</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a3371017dc62509bdfbfcb980bd86da16</anchor>
      <arglist>(const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>exportToData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a9509b51ef2b7a51d2d8e593c31016a38</anchor>
      <arglist>(const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>exportToData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a208b22ab0b0c370446d993eeb6ded7e2</anchor>
      <arglist>(const CompressedImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>exportToData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>aae3555a40efa5ee77ef1165735c999b1</anchor>
      <arglist>(const ImageData2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exportToFile</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>afac254b7125157dc2918d5c923d39ba2</anchor>
      <arglist>(const ImageView2D &amp;image, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exportToFile</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>aeabea6dbcd5878f60a5eee9d5ee65314</anchor>
      <arglist>(const CompressedImageView2D &amp;image, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exportToFile</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>aa99625b1c31b988375d7988ec8769920</anchor>
      <arglist>(const ImageData2D &amp;image, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>pluginInterface</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a67a47c517cdec51e1427a7cbfbe629dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::string &gt;</type>
      <name>pluginSearchPaths</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>acee3dd111470ec4019a714e804cf7240</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual Features</type>
      <name>doFeatures</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a9a0e2dd753b2b7d5951e4594451cec7d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Optional&lt; Image2D &gt;</type>
      <name>doExportToImage</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a47e4ed0901980c96aaaf267c42670f4b</anchor>
      <arglist>(const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Optional&lt; CompressedImage2D &gt;</type>
      <name>doExportToCompressedImage</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a0538c3a79ff4d2185f0febfcf62b219f</anchor>
      <arglist>(const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Array&lt; char &gt;</type>
      <name>doExportToData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>af52cdbeb8a3b9747fea87118a95b91fd</anchor>
      <arglist>(const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Array&lt; char &gt;</type>
      <name>doExportToData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a05e6cf49dbb33a3fd491cea04d15d84c</anchor>
      <arglist>(const CompressedImageView2D &amp;image)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual bool</type>
      <name>doExportToFile</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a269ee4af8cd107083834c3ba6f47a22d</anchor>
      <arglist>(const ImageView2D &amp;image, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual bool</type>
      <name>doExportToFile</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a4f290b4c0c3e0dbf180ed577f88a5153</anchor>
      <arglist>(const CompressedImageView2D &amp;image, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>aa6323c59871ddc542da225e4566d99d7</anchor>
      <arglist>(Debug &amp;debug, AbstractImageConverter::Feature value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>af013d6d5cd121a77359f53e7d3ccbdf4</anchor>
      <arglist>(Debug &amp;debug, AbstractImageConverter::Features value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Trade_1_1AbstractImageConverter" title="Subclassing">Trade-AbstractImageConverter-subclassing</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::AbstractImporter</name>
    <filename>classMagnum_1_1Trade_1_1AbstractImporter.html</filename>
    <base>AbstractManagingPlugin&lt; AbstractImporter &gt;</base>
    <member kind="enumeration">
      <type></type>
      <name>Feature</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ae3781a6c337f96f6d1f6c3168f726e13</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Trade_1_1AbstractImporter.html" anchor="ae3781a6c337f96f6d1f6c3168f726e13ad81dcb96c7ab3ee3608397d0b0a9071c">OpenData</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1AbstractImporter.html" anchor="ae3781a6c337f96f6d1f6c3168f726e13afa62bfefa29c8d5dfd686505c6f2e639">OpenState</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1AbstractImporter.html" anchor="ae3781a6c337f96f6d1f6c3168f726e13abc0472654189df29a514f8ed0ebd0fc6">FileCallback</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Feature &gt;</type>
      <name>Features</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a2b30b5cea8a26ab12397d03751318629</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a6f1cd574bc7f48cd6537660630ee0042</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a24660089734a8c0c2eca55125e09fd80</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImporter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a9694fda2c05a05ddb88c8afd515acbfb</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <member kind="function">
      <type>Features</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a57d8137569aa113003d8b008e183450d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>fileCallback</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ae1cca1ddeba7a00d5fe5c9251b6f8b82</anchor>
      <arglist>() const -&gt; Containers::Optional&lt; Containers::ArrayView&lt; const char &gt;&gt;(*)(const std::string &amp;, InputFileCallbackPolicy, void *)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>fileCallbackUserData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aa9cdd5b548496d5bfda781a10888b1a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileCallback</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>adc2889e9ba4c89df2f0f559c94f44c3c</anchor>
      <arglist>(Containers::Optional&lt; Containers::ArrayView&lt; const char &gt;&gt;(*callback)(const std::string &amp;, InputFileCallbackPolicy, void *), void *userData=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileCallback</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aaf23e4e6817f4e8238bbec990c85b153</anchor>
      <arglist>(Containers::Optional&lt; Containers::ArrayView&lt; const char &gt;&gt;(*callback)(const std::string &amp;, InputFileCallbackPolicy, T &amp;), T &amp;userData)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOpened</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a4b28ba4754681b17a08dc3bedc7395e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a88703d241d03b605112b2163778529b2</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openState</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>af75dd6cdc3c7c067a488ec522ddaa895</anchor>
      <arglist>(const void *state, const std::string &amp;filePath={})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openFile</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a13c18ef288f97d163263f6834bc17b4b</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a31de60885596530f6be14ee900fb87a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a5f02f05ea26081d35ee8c18ede2b4b27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>defaultScene</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a653a979d687f7383fa5dce3ee42b3353</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>sceneCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a4b0957df0166b9d90732b842eeb66c8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sceneForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a05b01b95340f8b6697e303796a752fe2</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>sceneName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a5163471e0eb7a7a0d7b58b637b8803cb</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; SceneData &gt;</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a350cbc71f61e3517a5110875f13579e0</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>animationCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a256f7f55df95ce682f24ed3a093474e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>animationForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ad1acaa8e6d7f8f0843cc4b84897811df</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>animationName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a95069a1b9d08732cfee5f4bef8324df5</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; AnimationData &gt;</type>
      <name>animation</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a577b7585debb8ae836f0ec8b381b85d1</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>lightCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ac8631057db34cd1e8f2ac3524338c54d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>lightForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aee85a06de41c36b2e2077ca3783cf77d</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>lightName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a6cf4edf30d1c73b590e9336ac1c69778</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; LightData &gt;</type>
      <name>light</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>acdbaf8126a5815b46add74eb9341d8a3</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>cameraCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a1dbdd2722b49010a170d70c987ff2a75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>cameraForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a16b03a15550b3dcc83631b23231ac547</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>cameraName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a6bf0cbab98c07cca5773d6263836e683</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; CameraData &gt;</type>
      <name>camera</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a77c903a3d1e8aad82a2c02d57b12cd91</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>object2DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aa7835f3afd5ed1dfcc7c875d022b5b28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>object2DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a85d8d1d3f3dd07bb56f8edd765d7662e</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>object2DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>af43d3e700399c50e61deafa544c3ddf7</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Pointer&lt; ObjectData2D &gt;</type>
      <name>object2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a08375763dc0aa24619517abac91cfeb6</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>object3DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>acbb4bfbcee418a7cfb2c03d4f56b3068</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>object3DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a1b4342605e35f58fbc21ddebcb4354c8</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>object3DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aad66fe7c5fdb7f2df89cc03239850d85</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Pointer&lt; ObjectData3D &gt;</type>
      <name>object3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ae6b38b20045feb7a4406199137d1f73f</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>mesh2DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a59c6d16f37caf941c0f712dbba6a42ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>mesh2DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a1e779e94dcb531c65855b4384ba79501</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>mesh2DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ac3d401ab3f89c9b5145bdab54bb98a59</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; MeshData2D &gt;</type>
      <name>mesh2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a2542f73e0cdb07c3eb2b1a0daa527e6b</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>mesh3DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a481c02dfb7e5becb40200e70fe93509e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>mesh3DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>af658902947f60167c307888bd979ac1e</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>mesh3DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ab0fb173923f02758d48d6ece12c82fa6</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; MeshData3D &gt;</type>
      <name>mesh3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ae8b43371e8629753d78e790aa6e5e7c1</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>materialCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ac030c0b09f64a1a0690548822bfea942</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>materialForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aed2828f58a756382ecfb75b6ab916db7</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>materialName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a8debcd7acf0e5df6442249469b2e9197</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Pointer&lt; AbstractMaterialData &gt;</type>
      <name>material</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a30c0e2a568308617b85c78e07eec638f</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>textureCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ae1edfd616c71b877102511ab6e7e1911</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>textureForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a407887c17ecafef928ad848909b7fa2f</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>textureName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a8fa21f37de6ed0aff9aca0a94ae97bbb</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; TextureData &gt;</type>
      <name>texture</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a50547a48fd1820fba3d784a2f1d2b083</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>image1DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a774889655b65ab3f552eb3a730b4da00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>image1DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a7d6199856991922649280044db3040c7</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>image1DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a38b5b5ffe562c4b80ccb07f97410a743</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; ImageData1D &gt;</type>
      <name>image1D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ad307c5891854a51e41535682317fd5d6</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>image2DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a1df4f05a9725ffe132ee501e5b145d3a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>image2DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a5b5f1abe5ed1207416ff617e15697d78</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>image2DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aecb2ef7e26275c522c98f54c430f7e49</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; ImageData2D &gt;</type>
      <name>image2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ab5b6af6272c3ee61104f356cc907ea11</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>image3DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a9d89c040f7fb592584c15639a2ae45bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>image3DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a52f1c80a3ef341475d1d361caf31ecc7</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>image3DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a057aa1d46f7c4119293b251fe735e52f</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; ImageData3D &gt;</type>
      <name>image3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a5d52eccb836ed23e68e23dd6ba3f8ebd</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>pluginInterface</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a6335a92d634a97b00a44d0f67c27f855</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::string &gt;</type>
      <name>pluginSearchPaths</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aade6d746371810358571b3c09beb1f63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doOpenFile</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a4dc7985f5314efe23066efa95d0cf940</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual Features</type>
      <name>doFeatures</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a0a03024434b9d3c90414200748b4fc47</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>doSetFileCallback</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a7760d89ebbdb70d74e72089563b11daa</anchor>
      <arglist>(Containers::Optional&lt; Containers::ArrayView&lt; const char &gt;&gt;(*callback)(const std::string &amp;, InputFileCallbackPolicy, void *), void *userData)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual bool</type>
      <name>doIsOpened</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>adc391aeab4e9a6a30a0668c303b07478</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>doOpenData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a5c5914c94300963627e1369d2a7a30c6</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>doOpenState</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a77b566ded5ff22d6211673c1fa36c23a</anchor>
      <arglist>(const void *state, const std::string &amp;filePath)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>doClose</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>af7f93da08028936e6323056d4a74b475</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Int</type>
      <name>doDefaultScene</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ae0be906a1b594deb3c543abb65bed8e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doSceneCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a20c88accf3af1b883ae8161d9ce7f4d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Int</type>
      <name>doSceneForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a600e49599777b0c0d8126faf35dd2b97</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doSceneName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aed12d4c363c8fae868a97ff86199f1e4</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Optional&lt; SceneData &gt;</type>
      <name>doScene</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ae52ba64c6bc1f64cf573bbed25f2222d</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doAnimationCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a9634fbc586f5e6d88ae0352c78b7f6b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Int</type>
      <name>doAnimationForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>af441ead9e6c7eb62b4a36ee3c998235e</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doAnimationName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aa102fd06c6836a525e4e66eafa0730a5</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Optional&lt; AnimationData &gt;</type>
      <name>doAnimation</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ac05164b4ed972941c6f37c157755de13</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doLightCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ad776e33d098800d2e052d2b970846a70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Int</type>
      <name>doLightForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ad72342090821047cc32e5cdfdd23b9d1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doLightName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>af4bc51bc48939dea0fe40787b22cecd7</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Optional&lt; LightData &gt;</type>
      <name>doLight</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a6a63c97f51a4c518a61eb71aa0927934</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doCameraCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a57835b81c08a644dc10bb30ae818c2d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Int</type>
      <name>doCameraForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ae817145546b12e033725111ce99c38f6</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doCameraName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a767185c9bd0d75eeed8ae6493c1c712d</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Optional&lt; CameraData &gt;</type>
      <name>doCamera</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aebd65c47d087b672c2fce7a34e55c4c2</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doObject2DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a719897c36ffec71c057d358cd55c9e3a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Int</type>
      <name>doObject2DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a5fc98068a0ddc074eb55470902ab2003</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doObject2DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a0dbc9bdcf29844cd6aa841d44d32446a</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Pointer&lt; ObjectData2D &gt;</type>
      <name>doObject2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aa06ef39a256dfe043a8605172d782084</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doObject3DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a31d92548703e3cce78852b5852535a5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Int</type>
      <name>doObject3DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a4f67c17da866f07cabc0571766d5a3ba</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doObject3DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a16d54b2c25bd99ffb42dba28c8c02ad8</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Pointer&lt; ObjectData3D &gt;</type>
      <name>doObject3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ad337774f4ea81f06252becff06eb81ff</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doMesh2DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aa737ac499cc789f438f9db9f3ae1e4b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Int</type>
      <name>doMesh2DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a47eb6e7e6ff1c64a5bd2317b3ca6bc4a</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doMesh2DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aec24758acb34a524839dab0b4f0f033f</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Optional&lt; MeshData2D &gt;</type>
      <name>doMesh2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a3d6fc0af4571ce7806794f3724bb3469</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doMesh3DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a86ebad1210c0ae06d50e99c24365c871</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Int</type>
      <name>doMesh3DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a72558f96ceb8a82dc487cbb581e10ed0</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doMesh3DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a7b07da8ad9c2cff3b7124e91fa56eba0</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Optional&lt; MeshData3D &gt;</type>
      <name>doMesh3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a9fcd573489ce46d8f8c68b08cbfe2da3</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doMaterialCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a3d8c4f59c2feb432f971e8e74b846452</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Int</type>
      <name>doMaterialForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a38b0f2e43e530a99aad015f072c06be3</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doMaterialName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a234b39cccffbd3f975abdadb91c030fe</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Pointer&lt; AbstractMaterialData &gt;</type>
      <name>doMaterial</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a42000316aa333e9c1c7fe2fe986cc0b5</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doTextureCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a486e1fa6ba7ebf3ff4cbab811be5292a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Int</type>
      <name>doTextureForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ab2e2c9a171b173854b3daa8f1e33c1d8</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doTextureName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a65b8464916ad9ac0ae9cc1ea4b9b3fe5</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Optional&lt; TextureData &gt;</type>
      <name>doTexture</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a7b4b0b243dba7278f68be18a164941bd</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doImage1DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a1d7718a0dea328656f384d472fc6bd8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Int</type>
      <name>doImage1DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a18027b782794274425ab9b1acae54bc1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doImage1DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a1c3ce57e87d60eeef41d0925909cd1f1</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Optional&lt; ImageData1D &gt;</type>
      <name>doImage1D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ade69538fba52b35e2aab8c89919f7499</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doImage2DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a7d9ea820f226441f7bef5e0fecfadbf3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Int</type>
      <name>doImage2DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a857ac65c1ce046986359aeefc63d0072</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doImage2DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a661d738b8b7565a5a874ab13d1130ec2</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Optional&lt; ImageData2D &gt;</type>
      <name>doImage2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a314523e3b3f0136c265e7ea16e059812</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doImage3DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aa90827d3fd4db6dc40ab6a4fd76eabd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Int</type>
      <name>doImage3DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a620bf8b79f330c7a53cd2208753e1189</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doImage3DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a4522fb4e6a39b4ee38e6d3d749c3bcb3</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual Containers::Optional&lt; ImageData3D &gt;</type>
      <name>doImage3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a32379c2f00563b9c75d98eef22493792</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual const void *</type>
      <name>doImporterState</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a18e4eae0a61078047b30cd9b12d266a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aef6bc92c8398c94aa71feeb75a737fec</anchor>
      <arglist>(Debug &amp;debug, AbstractImporter::Feature value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a7386f1d4706115b60f840f45a26ed0f8</anchor>
      <arglist>(Debug &amp;debug, AbstractImporter::Features value)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>defaultScene</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a653a979d687f7383fa5dce3ee42b3353</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>sceneCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a4b0957df0166b9d90732b842eeb66c8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sceneForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a05b01b95340f8b6697e303796a752fe2</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>sceneName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a5163471e0eb7a7a0d7b58b637b8803cb</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; SceneData &gt;</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a350cbc71f61e3517a5110875f13579e0</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>animationCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a256f7f55df95ce682f24ed3a093474e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>animationForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ad1acaa8e6d7f8f0843cc4b84897811df</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>animationName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a95069a1b9d08732cfee5f4bef8324df5</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; AnimationData &gt;</type>
      <name>animation</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a577b7585debb8ae836f0ec8b381b85d1</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>lightCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ac8631057db34cd1e8f2ac3524338c54d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>lightForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aee85a06de41c36b2e2077ca3783cf77d</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>lightName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a6cf4edf30d1c73b590e9336ac1c69778</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; LightData &gt;</type>
      <name>light</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>acdbaf8126a5815b46add74eb9341d8a3</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>cameraCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a1dbdd2722b49010a170d70c987ff2a75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>cameraForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a16b03a15550b3dcc83631b23231ac547</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>cameraName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a6bf0cbab98c07cca5773d6263836e683</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; CameraData &gt;</type>
      <name>camera</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a77c903a3d1e8aad82a2c02d57b12cd91</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>object2DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aa7835f3afd5ed1dfcc7c875d022b5b28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>object2DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a85d8d1d3f3dd07bb56f8edd765d7662e</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>object2DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>af43d3e700399c50e61deafa544c3ddf7</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Pointer&lt; ObjectData2D &gt;</type>
      <name>object2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a08375763dc0aa24619517abac91cfeb6</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>object3DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>acbb4bfbcee418a7cfb2c03d4f56b3068</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>object3DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a1b4342605e35f58fbc21ddebcb4354c8</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>object3DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aad66fe7c5fdb7f2df89cc03239850d85</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Pointer&lt; ObjectData3D &gt;</type>
      <name>object3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ae6b38b20045feb7a4406199137d1f73f</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>mesh2DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a59c6d16f37caf941c0f712dbba6a42ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>mesh2DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a1e779e94dcb531c65855b4384ba79501</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>mesh2DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ac3d401ab3f89c9b5145bdab54bb98a59</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; MeshData2D &gt;</type>
      <name>mesh2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a2542f73e0cdb07c3eb2b1a0daa527e6b</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>mesh3DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a481c02dfb7e5becb40200e70fe93509e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>mesh3DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>af658902947f60167c307888bd979ac1e</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>mesh3DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ab0fb173923f02758d48d6ece12c82fa6</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; MeshData3D &gt;</type>
      <name>mesh3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ae8b43371e8629753d78e790aa6e5e7c1</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>materialCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ac030c0b09f64a1a0690548822bfea942</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>materialForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aed2828f58a756382ecfb75b6ab916db7</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>materialName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a8debcd7acf0e5df6442249469b2e9197</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Pointer&lt; AbstractMaterialData &gt;</type>
      <name>material</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a30c0e2a568308617b85c78e07eec638f</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>textureCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ae1edfd616c71b877102511ab6e7e1911</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>textureForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a407887c17ecafef928ad848909b7fa2f</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>textureName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a8fa21f37de6ed0aff9aca0a94ae97bbb</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; TextureData &gt;</type>
      <name>texture</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a50547a48fd1820fba3d784a2f1d2b083</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>image1DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a774889655b65ab3f552eb3a730b4da00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>image1DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a7d6199856991922649280044db3040c7</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>image1DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a38b5b5ffe562c4b80ccb07f97410a743</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; ImageData1D &gt;</type>
      <name>image1D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ad307c5891854a51e41535682317fd5d6</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>image2DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a1df4f05a9725ffe132ee501e5b145d3a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>image2DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a5b5f1abe5ed1207416ff617e15697d78</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>image2DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aecb2ef7e26275c522c98f54c430f7e49</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; ImageData2D &gt;</type>
      <name>image2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ab5b6af6272c3ee61104f356cc907ea11</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>image3DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a9d89c040f7fb592584c15639a2ae45bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>image3DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a52f1c80a3ef341475d1d361caf31ecc7</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>image3DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a057aa1d46f7c4119293b251fe735e52f</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; ImageData3D &gt;</type>
      <name>image3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a5d52eccb836ed23e68e23dd6ba3f8ebd</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Trade_1_1AbstractImporter" title="Usage">Trade-AbstractImporter-usage</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1AbstractImporter" title="Loading data from memory, using file callbacks">Trade-AbstractImporter-usage-callbacks</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1AbstractImporter" title="Internal importer state">Trade-AbstractImporter-usage-state</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1AbstractImporter" title="Polymorphic imported data types">Trade-AbstractImporter-usage-casting</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1AbstractImporter" title="Subclassing">Trade-AbstractImporter-subclassing</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::AbstractMaterialData</name>
    <filename>classMagnum_1_1Trade_1_1AbstractMaterialData.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>a08b31acfdb8b987a867d3fe3564feac3</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Trade_1_1AbstractMaterialData.html" anchor="a08b31acfdb8b987a867d3fe3564feac3a54c65daef485e12e23c450d276053134">DoubleSided</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>aad492b1010b6860efb5053a6b809b599</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractMaterialData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>ac58a5b200d333068e9d7131c21989e4d</anchor>
      <arglist>(const AbstractMaterialData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractMaterialData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>ad1bda0ae7aff1c2acf8d20e4a8d9adc9</anchor>
      <arglist>(AbstractMaterialData &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AbstractMaterialData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>a15751f4fb1c1c14cbe762432ec95ac88</anchor>
      <arglist>(const AbstractMaterialData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractMaterialData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>a3295d674e86515289be3816851bc64f1</anchor>
      <arglist>(AbstractMaterialData &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MaterialType</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>a2d73ed481197f71f746e34c97a648ad6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>a4d9b31b88a15acf163c199b2e09013ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MaterialAlphaMode</type>
      <name>alphaMode</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>a8bf801706b883c864e22c70802e79851</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>alphaMask</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>ae36d25a49d75efa984243aeb09245a56</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>a5f3ef27ecb2470d713a56f60785f5f70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AbstractMaterialData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>a25e3ebaff7a8f7a0fae0e1cb71b671cc</anchor>
      <arglist>(MaterialType type, Flags flags, MaterialAlphaMode alphaMode, Float alphaMask, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AbstractMaterialData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>ac664a62bfc41d7e78a977612958b6d55</anchor>
      <arglist>(MaterialType type, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>ad2a689e2ac87d05c71f37e313618dcea</anchor>
      <arglist>(Debug &amp;debug, AbstractMaterialData::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>a8e0480c58f2147b8bf9ea24e0f782563</anchor>
      <arglist>(Debug &amp;debug, AbstractMaterialData::Flags value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::AnimationData</name>
    <filename>classMagnum_1_1Trade_1_1AnimationData.html</filename>
    <member kind="function">
      <type></type>
      <name>AnimationData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>adbaef9acedb4fdb3b330f5781d4aa401</anchor>
      <arglist>(Containers::Array&lt; char &gt; &amp;&amp;data, Containers::Array&lt; AnimationTrackData &gt; &amp;&amp;tracks, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnimationData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>a5bf5844f235d5f510df64490ecff0904</anchor>
      <arglist>(Containers::Array&lt; char &gt; &amp;&amp;data, Containers::Array&lt; AnimationTrackData &gt; &amp;&amp;tracks, const Range1D &amp;duration, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnimationData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>a60fb4bc62ef6f9be311fd8be34881233</anchor>
      <arglist>(const AnimationData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnimationData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>a7ac32c2525994a4ee9fced99db005017</anchor>
      <arglist>(AnimationData &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AnimationData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>a85ab5cbd8ba9610f0bf6749b7640fdcd</anchor>
      <arglist>(const AnimationData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AnimationData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>a2537627a68cab4c515b632e7c674c8c9</anchor>
      <arglist>(AnimationData &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>a720a0696bd622535ce37bdc48f5de9d4</anchor>
      <arglist>() &amp;</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>a382abe2b08227d03fee7b9865bc12938</anchor>
      <arglist>() &amp;&amp;=delete</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>a1118419d20c10c3420e5d410646d4a2f</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>a0b759a68373752fb711ce201efb63b70</anchor>
      <arglist>() const &amp;&amp;=delete</arglist>
    </member>
    <member kind="function">
      <type>Range1D</type>
      <name>duration</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>a5875ae766b50cb614ca8f93c0bb061f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>trackCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>a02eccb50b29691771557df8d721dc061</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AnimationTrackType</type>
      <name>trackType</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>a1af57fda4b263209ace9510e76b7e8e1</anchor>
      <arglist>(UnsignedInt id) const</arglist>
    </member>
    <member kind="function">
      <type>AnimationTrackType</type>
      <name>trackResultType</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>ad2c07ec91dd41a575b267d27a349c96a</anchor>
      <arglist>(UnsignedInt id) const</arglist>
    </member>
    <member kind="function">
      <type>AnimationTrackTargetType</type>
      <name>trackTargetType</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>a0fc811cbaf73332cf02187e5375c95d1</anchor>
      <arglist>(UnsignedInt id) const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>trackTarget</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>a61d8c8e41006fdf9eeceadd8d1ff3e94</anchor>
      <arglist>(UnsignedInt id) const</arglist>
    </member>
    <member kind="function">
      <type>const Animation::TrackViewStorage&lt; Float &gt; &amp;</type>
      <name>track</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>a805e4f6f90f0baba5b2d0474dde62236</anchor>
      <arglist>(UnsignedInt id) const</arglist>
    </member>
    <member kind="function">
      <type>const Animation::TrackView&lt; Float, V, R &gt; &amp;</type>
      <name>track</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>a0cc5869581fe5f866b576149aa2d770d</anchor>
      <arglist>(UnsignedInt id) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>aa050817ae7d9dc63fa7a4e903825d01e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>a028bee0d06e90d3f981c9ad51abbddf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>animationInterpolatorFor</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationData.html</anchorfile>
      <anchor>aefc286373c2effb2be34c0b1bbad4db0</anchor>
      <arglist>(Animation::Interpolation interpolation) -&gt; R(*)(const V &amp;, const V &amp;, Float)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::AnimationTrackData</name>
    <filename>classMagnum_1_1Trade_1_1AnimationTrackData.html</filename>
    <member kind="function">
      <type></type>
      <name>AnimationTrackData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationTrackData.html</anchorfile>
      <anchor>a7e9241d8ab14e2e3940f1b96e41ba349</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnimationTrackData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationTrackData.html</anchorfile>
      <anchor>a8658746d19d13f7d6cb2ce997e877f11</anchor>
      <arglist>(AnimationTrackType type, AnimationTrackType resultType, AnimationTrackTargetType targetType, UnsignedInt target, Animation::TrackViewStorage&lt; Float &gt; view) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnimationTrackData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnimationTrackData.html</anchorfile>
      <anchor>a1ae995f307b9fafe3c3de8285f72fdfa</anchor>
      <arglist>(AnimationTrackType type, AnimationTrackTargetType targetType, UnsignedInt target, Animation::TrackViewStorage&lt; Float &gt; view) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::AnyImageConverter</name>
    <filename>classMagnum_1_1Trade_1_1AnyImageConverter.html</filename>
    <base>Magnum::Trade::AbstractImageConverter</base>
    <member kind="function">
      <type></type>
      <name>AnyImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnyImageConverter.html</anchorfile>
      <anchor>a82bbe222fe9adaa59760e55b00e5e179</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImageConverter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnyImageConverter.html</anchorfile>
      <anchor>a916cba19ff0623641bf62c193cce6adf</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::AnyImageImporter</name>
    <filename>classMagnum_1_1Trade_1_1AnyImageImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>AnyImageImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnyImageImporter.html</anchorfile>
      <anchor>aebbc3c60c0d33dd5d76b987b3fbc4457</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImporter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyImageImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnyImageImporter.html</anchorfile>
      <anchor>a0dd2480add7f6a02dd779df4f56b2248</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::AnySceneImporter</name>
    <filename>classMagnum_1_1Trade_1_1AnySceneImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>AnySceneImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnySceneImporter.html</anchorfile>
      <anchor>ae0d9c9c7425de10625fcac24e950c351</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImporter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnySceneImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnySceneImporter.html</anchorfile>
      <anchor>a5d5795ac52a8917cc26bc34ef2850758</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::AssimpImporter</name>
    <filename>classMagnum_1_1Trade_1_1AssimpImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>AssimpImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AssimpImporter.html</anchorfile>
      <anchor>a259f8aaa0fedaadd0308a3b9ba309367</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssimpImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AssimpImporter.html</anchorfile>
      <anchor>a5225da0123b4bce1278d65599341aea4</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImporter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssimpImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AssimpImporter.html</anchorfile>
      <anchor>a078f0599290d52608fd48f91fa57d9d1</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Trade_1_1AssimpImporter" title="Behavior and limitations">Trade-AssimpImporter-limitations</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1AssimpImporter" title="Material import">Trade-AssimpImporter-limitations-materials</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1AssimpImporter" title="Light import">Trade-AssimpImporter-limitations-lights</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1AssimpImporter" title="Camera import">Trade-AssimpImporter-limitations-cameras</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1AssimpImporter" title="Mesh import">Trade-AssimpImporter-limitations-meshes</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1AssimpImporter" title="Texture import">Trade-AssimpImporter-limitations-textures</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1AssimpImporter" title="Scene import">Trade-AssimpImporter-limitations-scene</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1AssimpImporter" title="Plugin-specific configuration">Trade-AssimpImporter-configuration</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1AssimpImporter" title="Access to internal importer state">Trade-AssimpImporter-state</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::CameraData</name>
    <filename>classMagnum_1_1Trade_1_1CameraData.html</filename>
    <member kind="function">
      <type></type>
      <name>CameraData</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>af29eafd2c7245ff504a41b5448b92bfe</anchor>
      <arglist>(CameraType type, Rad fov, Float aspectRatio, Float near, Float far, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CameraData</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>a18c8d935618cdf14be330ec36d7643d9</anchor>
      <arglist>(CameraType type, const Vector2 &amp;size, Float near, Float far, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CameraData</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>a0455298f3ab0a38f005b01d4d926ec04</anchor>
      <arglist>(Rad fov, Float near, Float far, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CameraData</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>a69bdaf3e21c8672999ffa0a87049c5ac</anchor>
      <arglist>(const CameraData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CameraData</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>a4c79557b9938d0f806136ed461aeb8aa</anchor>
      <arglist>(CameraData &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>CameraData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>a9f58f770a3d27549aa278ecf18c19336</anchor>
      <arglist>(const CameraData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CameraData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>a0acb09200053a28d7dde0f137e817fc2</anchor>
      <arglist>(CameraData &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>CameraType</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>afe9937ab142f15ecff3ef4f66dd7cf3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>ab3db12ec306f9c23e1d47e20753e725f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Rad</type>
      <name>fov</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>acf0e050ecbf96ead10de062b1167a3bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>aspectRatio</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>a52f205329d2c565639e8db727b477525</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>near</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>a838382569a71dbb681e15da9c80f3818</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>far</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>ab7b7ab2d44ba1e60e2a23c210e9a54ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>a368dc9684b08721871929079dea2bba6</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::DdsImporter</name>
    <filename>classMagnum_1_1Trade_1_1DdsImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>DdsImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1DdsImporter.html</anchorfile>
      <anchor>a3ba40c98db6490889656cf9e3a31a466</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DdsImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1DdsImporter.html</anchorfile>
      <anchor>a0bdec389c8ad7b20d94df86fb3788735</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::DevIlImageImporter</name>
    <filename>classMagnum_1_1Trade_1_1DevIlImageImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>DevIlImageImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1DevIlImageImporter.html</anchorfile>
      <anchor>a5341c6b983c12ee8deadeba37efa18ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DevIlImageImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1DevIlImageImporter.html</anchorfile>
      <anchor>a5275020342c39d76590fd705681bc820</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::ImageData</name>
    <filename>classMagnum_1_1Trade_1_1ImageData.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a005589f0dacc26f4a0ad6c44b2b9e40ba2a6a6de5208390ddfe99713c3a7e2a67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a005589f0dacc26f4a0ad6c44b2b9e40ba2a6a6de5208390ddfe99713c3a7e2a67</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageData</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>ae22e64c8e475212edc541b61d389eb33</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageData</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>ad790c14a63157b3c5bc705ecf4515155</anchor>
      <arglist>(PixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageData</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>acc14642db4d414336fde514d1f3c6117</anchor>
      <arglist>(PixelStorage storage, UnsignedInt format, UnsignedInt formatExtra, UnsignedInt pixelSize, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageData</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a8dca9acafcd6c798d19c2cfb823fe442</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, UnsignedInt formatExtra, UnsignedInt pixelSize, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageData</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>add46225f5911fc1a953ddf3c6fca1eaf</anchor>
      <arglist>(PixelStorage storage, T format, U formatExtra, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageData</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>afe82444fa520dfbc2904c1764d690810</anchor>
      <arglist>(PixelStorage storage, T format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageData</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a9306004289b3d6740850f89562b29f84</anchor>
      <arglist>(CompressedPixelStorage storage, CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageData</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>aebc48cc2e0f88aa68583ba77ce65e003</anchor>
      <arglist>(CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageData</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>abda88c326442d8140d3654481b8a8075</anchor>
      <arglist>(CompressedPixelStorage storage, T format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageData</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a812f426e3b69033e5065fd4efb5e6560</anchor>
      <arglist>(ImageData&lt; dimensions &gt; &amp;&amp;other, const void *importerState) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageData</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>aaa904369e1198463b383a98b6625e1ff</anchor>
      <arglist>(const ImageData&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageData</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>ac47cbef3c7561397e34758cbc602a9ea</anchor>
      <arglist>(ImageData&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ImageData&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>ae5e0988988912baa22521951260001b4</anchor>
      <arglist>(const ImageData&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ImageData&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>aa44c71fada8488bbe2721dd8fdb57284</anchor>
      <arglist>(ImageData&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCompressed</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>ad85b4d11a9e33185c22aa7e4795b6982</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BasicMutableImageView&lt; dimensions &gt;</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a3871c685425545013ea0628b399e2aa5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BasicImageView&lt; dimensions &gt;</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a85ae3fbd13e10ef04acd9e2f0cc3f5d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BasicMutableCompressedImageView&lt; dimensions &gt;</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>ac4696e0ce16244b6e6490db63914196c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BasicCompressedImageView&lt; dimensions &gt;</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>ae95cf4dde7f8ab81b85177f47791a8f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PixelStorage</type>
      <name>storage</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>adf99e13baadf5c419ac59c09a84a02cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PixelFormat</type>
      <name>format</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a145f0c9286f5a7efac771298f17907ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>formatExtra</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a11de41b4e263b194198b097b3ad9d2d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelStorage</type>
      <name>compressedStorage</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>ad12280a41746995b34dc4e52d542f64e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelFormat</type>
      <name>compressedFormat</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a9547dbdbf135c65c27ab5c36665d81f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>pixelSize</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>ac0805d964e4111b4abd1be95ef9ccbe4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a929d5bc9f8f98b3b1915b81f294beb94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; VectorTypeFor&lt; dimensions, std::size_t &gt;, VectorTypeFor&lt; dimensions, std::size_t &gt; &gt;</type>
      <name>dataProperties</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a109d082e2897dae10806b9cd86c45fef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a5a769482baf95369444cb354884b0d0d</anchor>
      <arglist>() &amp;</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a27683747ce4d8b9bcb4769c03c11b095</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a33a9e8bdfca8514ac2af4b70119e61ca</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a87537890e55b6d3c72be8c39a2623200</anchor>
      <arglist>() const &amp;&amp;=delete</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>adbf60195ea9cb248fa823c1adc702c11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a8a41da3d0f24de9fb870260831baf68b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView&lt; dimensions+1, char &gt;</type>
      <name>pixels</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a1ccfd90a59f65fd031c1ccf29e305ade</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView&lt; dimensions+1, const char &gt;</type>
      <name>pixels</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a9907ae9a6d970fba936da45192c8ef02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView&lt; dimensions, T &gt;</type>
      <name>pixels</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a0ed1f7f345fd252a21d77f5fcc9dfffc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView&lt; dimensions, const T &gt;</type>
      <name>pixels</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>ad0cbcf03fcf5b7ac14b3fbb8060fc8a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a85cf1643a5c7e3da9a44ddf0344f160f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a2c58cfb01de1d746421c91a9dab2a3aa</anchor>
      <arglist>() const</arglist>
    </member>
    <docanchor file="classMagnum_1_1Trade_1_1ImageData" title="Basic usage">Trade-ImageData-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::JpegImageConverter</name>
    <filename>classMagnum_1_1Trade_1_1JpegImageConverter.html</filename>
    <base>Magnum::Trade::AbstractImageConverter</base>
    <member kind="function">
      <type></type>
      <name>JpegImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1JpegImageConverter.html</anchorfile>
      <anchor>a595af8b10d921f3e0b696ae82322ca62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JpegImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1JpegImageConverter.html</anchorfile>
      <anchor>a91407c0bb83352ff2696953287f63e69</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, std::string plugin)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Trade_1_1JpegImageConverter" title="libJPEG implementations">Trade-JpegImageConverter-implementations</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1JpegImageConverter" title="Plugin-specific config">Trade-JpegImageConverter-configuration</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::JpegImporter</name>
    <filename>classMagnum_1_1Trade_1_1JpegImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>JpegImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1JpegImporter.html</anchorfile>
      <anchor>a51a922b0bb5a43b0624d5fc7c18b4011</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JpegImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1JpegImporter.html</anchorfile>
      <anchor>af91070f1cc313c219aab3dce4aa2f187</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Trade_1_1JpegImporter" title="libJPEG implementations">Trade-JpegImporter-implementations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::LightData</name>
    <filename>classMagnum_1_1Trade_1_1LightData.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>a9d1ceb04c31f72d53a98340b776a4573</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Trade_1_1LightData.html" anchor="a9d1ceb04c31f72d53a98340b776a4573ab10e24496ff8fec66189548a92a67045">Infinite</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1LightData.html" anchor="a9d1ceb04c31f72d53a98340b776a4573a2a3cd5946cfd317eb99c3d32e35e2d4c">Point</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1LightData.html" anchor="a9d1ceb04c31f72d53a98340b776a4573a6c9d6b8aea6f3d16847bdebe05878a2d">Spot</enumvalue>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>LightData</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>a6676394eab8ed9d3f62aebef74fb298b</anchor>
      <arglist>(Type type, const Color3 &amp;color, Float intensity, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LightData</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>a1dcddc91419dac0d7ecea21aa0ed4d21</anchor>
      <arglist>(const LightData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LightData</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>a98894d0817ca5f0125be4c20a2de68be</anchor>
      <arglist>(LightData &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>LightData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>ac601963c8c9f48e4809f04cd3756893a</anchor>
      <arglist>(const LightData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>LightData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>a67d52c77a5db331d10ad8d739056c4ba</anchor>
      <arglist>(LightData &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr Type</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>a6ee3ddeb13f7abaf440fac6a67f89762</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Color3</type>
      <name>color</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>a11bc5c7ee0c5b12bb4c6c915c28ef59d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>intensity</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>aa8b06dc0cfc3c17726092cf08b3704e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>a073d580760d6b5ad3b258e0806cbace0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>ab343d2a8322481146569fda9452d6992</anchor>
      <arglist>(Debug &amp;debug, LightData::Type value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::MeshData2D</name>
    <filename>classMagnum_1_1Trade_1_1MeshData2D.html</filename>
    <member kind="function">
      <type></type>
      <name>MeshData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a6205d3c06750aa5cc1f4bdadfe0934a3</anchor>
      <arglist>(MeshPrimitive primitive, std::vector&lt; UnsignedInt &gt; indices, std::vector&lt; std::vector&lt; Vector2 &gt;&gt; positions, std::vector&lt; std::vector&lt; Vector2 &gt;&gt; textureCoords2D, std::vector&lt; std::vector&lt; Color4 &gt;&gt; colors, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a02d004d955f299d15ad8b3bf12583d82</anchor>
      <arglist>(const MeshData2D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>ac3154cdc64002ea3b7913a652abbaab8</anchor>
      <arglist>(MeshData2D &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MeshData2D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>acc89711da9da350ca3a53ff82a6f9417</anchor>
      <arglist>(const MeshData2D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MeshData2D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>acb6705ef3ccc3ef856243cc88e2144e3</anchor>
      <arglist>(MeshData2D &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MeshPrimitive</type>
      <name>primitive</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a169bcc30651b6155cb0e53acdafa39c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIndexed</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>ae01521a59ca51578afe82e66b2a03fd6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>indices</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>ac82245373df0de57028bf9d5241af66d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>indices</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a4399d6523ca687350d242eda30ebd544</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>positionArrayCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a68d24fa017d6ba66cc3b08a270c7018b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Vector2 &gt; &amp;</type>
      <name>positions</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a4eb9b3a081b9d112c4be29b88fa0ad06</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Vector2 &gt; &amp;</type>
      <name>positions</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>ad9ed905d958372abf0ad0df2ebe7e2f1</anchor>
      <arglist>(UnsignedInt id) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasTextureCoords2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a5aaf7220837917b9891f96c88d57b528</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>textureCoords2DArrayCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>ae383b95f455eb8c94094cd440917e8bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Vector2 &gt; &amp;</type>
      <name>textureCoords2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a42004db929f797a9a7fe356e3a2ef0ed</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Vector2 &gt; &amp;</type>
      <name>textureCoords2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>ab9b8e1cba3297eeed55a8000525cf062</anchor>
      <arglist>(UnsignedInt id) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasColors</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a6a68d95106cb35d82ce349904557d91c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>colorArrayCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a795a3e1fe5850f14541dd3817f7031f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Color4 &gt; &amp;</type>
      <name>colors</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a14187a57ab4fcd0d5aa86136880402c7</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Color4 &gt; &amp;</type>
      <name>colors</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a2b964a06a93ae47a9f598828efaa9f49</anchor>
      <arglist>(UnsignedInt id) const</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a56b3d9bad8a9b7a6c3f7995eee3e1b2a</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::MeshData3D</name>
    <filename>classMagnum_1_1Trade_1_1MeshData3D.html</filename>
    <member kind="function">
      <type></type>
      <name>MeshData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>ada396a22db051ba3f2663c9f6fa133c4</anchor>
      <arglist>(MeshPrimitive primitive, std::vector&lt; UnsignedInt &gt; indices, std::vector&lt; std::vector&lt; Vector3 &gt;&gt; positions, std::vector&lt; std::vector&lt; Vector3 &gt;&gt; normals, std::vector&lt; std::vector&lt; Vector2 &gt;&gt; textureCoords2D, std::vector&lt; std::vector&lt; Color4 &gt;&gt; colors, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>abce0e734d14de13a406fe9d532714876</anchor>
      <arglist>(const MeshData3D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a23ece5529972243059d452aeb6aebb5b</anchor>
      <arglist>(MeshData3D &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MeshData3D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a4b3dd20efac3eb0c19070446c3da7442</anchor>
      <arglist>(const MeshData3D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MeshData3D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a633912144e5e2deb8ffe0a4a8cb83aaa</anchor>
      <arglist>(MeshData3D &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MeshPrimitive</type>
      <name>primitive</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a76663271dd07166f3f48e6a728637acd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIndexed</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>af9ecccfefb6dccaacbb73c14e22f2c47</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>indices</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>adcdfdfe2c727c996c6255e357a4d7329</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>indices</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a88d052aec5398c758ed2090c89813259</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>positionArrayCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>afd62837817f520cd4e638e0e1f1db87e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Vector3 &gt; &amp;</type>
      <name>positions</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a0d2b51293d1aeb7cfde9842548936fa5</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Vector3 &gt; &amp;</type>
      <name>positions</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a9fd770abb9b55c3f625b36c31ffafff4</anchor>
      <arglist>(UnsignedInt id) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNormals</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a4792e215cccb8555e6e02eb6083e9fb9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>normalArrayCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>aa09ac74253559bbf11eceb237709ea01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Vector3 &gt; &amp;</type>
      <name>normals</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a4a58685ceb458cbc2b109cd93d72be62</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Vector3 &gt; &amp;</type>
      <name>normals</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>aeb11e4832a38936b6d86865c5722fc2e</anchor>
      <arglist>(UnsignedInt id) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasTextureCoords2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a27b917cffde3f0ce362abcb24e8bc465</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>textureCoords2DArrayCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a196f64efd2f3b37f86d6badf7b7cc346</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Vector2 &gt; &amp;</type>
      <name>textureCoords2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a104c772a3c1ef89464cbc7606dde85c4</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Vector2 &gt; &amp;</type>
      <name>textureCoords2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>aca858e53b2061cde663d53c16ea303f2</anchor>
      <arglist>(UnsignedInt id) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasColors</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>afb7efd46c5f442bfc259a660f29caa3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>colorArrayCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a2f5242e8fd04ad2380b4234f0a7ab112</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Color4 &gt; &amp;</type>
      <name>colors</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>ad8052dd1c016f6e583fde87f3ab36341</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Color4 &gt; &amp;</type>
      <name>colors</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a3eaaf27c6123c92a4f74f3409d14ad45</anchor>
      <arglist>(UnsignedInt id) const</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a7ba5fb2b69dfcdd9ef62acc50b4940b7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::MeshObjectData2D</name>
    <filename>classMagnum_1_1Trade_1_1MeshObjectData2D.html</filename>
    <base>Magnum::Trade::ObjectData2D</base>
    <member kind="function">
      <type></type>
      <name>MeshObjectData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData2D.html</anchorfile>
      <anchor>a2f22f481fa3f3eb1ee37dd58c87f048d</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children, const Matrix3 &amp;transformation, UnsignedInt instance, Int material, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshObjectData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData2D.html</anchorfile>
      <anchor>a04b9163d2c2ccfbd0325ae1c76a340cf</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children, const Vector2 &amp;translation, const Complex &amp;rotation, const Vector2 &amp;scaling, UnsignedInt instance, Int material, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshObjectData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData2D.html</anchorfile>
      <anchor>a722b1a86629d737cf33e762ffe77648d</anchor>
      <arglist>(const MeshObjectData2D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshObjectData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData2D.html</anchorfile>
      <anchor>a25bda1516a6be978f2c5a76055ea3cd9</anchor>
      <arglist>(MeshObjectData2D &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>MeshObjectData2D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData2D.html</anchorfile>
      <anchor>aecbeb0985efd931ce8cd68dc414e879b</anchor>
      <arglist>(const MeshObjectData2D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MeshObjectData2D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData2D.html</anchorfile>
      <anchor>a2618adadb291021420e80059ca213d20</anchor>
      <arglist>(MeshObjectData2D &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>material</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData2D.html</anchorfile>
      <anchor>a686abb2ecbbc4c2270e19a20b3643da7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::MeshObjectData3D</name>
    <filename>classMagnum_1_1Trade_1_1MeshObjectData3D.html</filename>
    <base>Magnum::Trade::ObjectData3D</base>
    <member kind="function">
      <type></type>
      <name>MeshObjectData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData3D.html</anchorfile>
      <anchor>ab64e2b6875e9df89bfd5a748b3dffa91</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children, const Matrix4 &amp;transformation, UnsignedInt instance, Int material, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshObjectData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData3D.html</anchorfile>
      <anchor>a0156ff1cf654c8fff676f10d212d40cc</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children, const Vector3 &amp;translation, const Quaternion &amp;rotation, const Vector3 &amp;scaling, UnsignedInt instance, Int material, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshObjectData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData3D.html</anchorfile>
      <anchor>a6823439f9c0fea6048659efca8c75b1b</anchor>
      <arglist>(const MeshObjectData3D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshObjectData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData3D.html</anchorfile>
      <anchor>a349480878d7d4a14c1058e23460090c3</anchor>
      <arglist>(MeshObjectData3D &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>MeshObjectData3D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData3D.html</anchorfile>
      <anchor>a5be6b30771e9a9e29e5289c4ab7e37fa</anchor>
      <arglist>(const MeshObjectData3D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MeshObjectData3D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData3D.html</anchorfile>
      <anchor>a38135110ac8c85809234946756271696</anchor>
      <arglist>(MeshObjectData3D &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>material</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData3D.html</anchorfile>
      <anchor>a17438582639f7e96a2f090c01bff46a5</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::MiniExrImageConverter</name>
    <filename>classMagnum_1_1Trade_1_1MiniExrImageConverter.html</filename>
    <base>Magnum::Trade::AbstractImageConverter</base>
    <member kind="function">
      <type></type>
      <name>MiniExrImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1MiniExrImageConverter.html</anchorfile>
      <anchor>a7bc884ed573ad3df73a4132aeb577304</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MiniExrImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1MiniExrImageConverter.html</anchorfile>
      <anchor>ab70f9b4d4df668e371c5f58124ee3616</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::ObjectData2D</name>
    <filename>classMagnum_1_1Trade_1_1ObjectData2D.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjectData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>ad5da3673d5d955fa9b47e9e195ec0ac6</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children, const Matrix3 &amp;transformation, ObjectInstanceType2D instanceType, UnsignedInt instance, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>a64c908e05d56c4cb027f8bec591f3355</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children, const Vector2 &amp;translation, const Complex &amp;rotation, const Vector2 &amp;scaling, ObjectInstanceType2D instanceType, UnsignedInt instance, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>abd91e7c7f05b68638c6f27f6f881daf2</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children, const Matrix3 &amp;transformation, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>a04999f15ae28c20f1eb6ccd266ad8fe6</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children, const Vector2 &amp;translation, const Complex &amp;rotation, const Vector2 &amp;scaling, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>a725537c8f6826b3e6f9aec547ee92f24</anchor>
      <arglist>(const ObjectData2D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>af7e966dc0fc86cc93660e8620c2c33d0</anchor>
      <arglist>(ObjectData2D &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjectData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>a03185f270c3dc3981ac3c3c1d6f81aa3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ObjectData2D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>a37d163f72dfcc82d240fc4e7358e54a5</anchor>
      <arglist>(const ObjectData2D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ObjectData2D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>a869a2b62b435bd60f69d2e5a43a1de4b</anchor>
      <arglist>(ObjectData2D &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>acccf7212f3b6a0cdbfe43dd1051d0e00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>ac724e3db57d364bbb934a6a998ef27b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectFlags2D</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>ad3bc545e3b1a120ead36cbb363e69379</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>aaf0d1bfb458b8554e892869d36db0a28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>a491316274119ce356eaf4ec92db26c72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>scaling</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>a5180116c7c496e2c20c9ef597ebecbe0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>a48c7cdf4a1d6b63c4a964e4f3cbf42ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectInstanceType2D</type>
      <name>instanceType</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>ab712d38c86d96cf91a997e02d79dca8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>instance</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>aad517c83fad5477a3123711f5b92dbf6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>a60b381963bde17779e323052ce0a452e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::ObjectData3D</name>
    <filename>classMagnum_1_1Trade_1_1ObjectData3D.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjectData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>af4bb0aeb975603cf66256df95542e660</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children, const Matrix4 &amp;transformation, ObjectInstanceType3D instanceType, UnsignedInt instance, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>ab7adee62deef873c288b57c1ba999730</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children, const Vector3 &amp;translation, const Quaternion &amp;rotation, const Vector3 &amp;scaling, ObjectInstanceType3D instanceType, UnsignedInt instance, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>a429c03200788b916d9ec1db6b347f31a</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children, const Matrix4 &amp;transformation, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>a3e6cc0a44e86e3b3297444523b8458ec</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children, const Vector3 &amp;translation, const Quaternion &amp;rotation, const Vector3 &amp;scaling, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>a4207cec65afb303bab5d436b5177b7e8</anchor>
      <arglist>(const ObjectData3D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>af6cb5de6e909e03284c677ba6171154e</anchor>
      <arglist>(ObjectData3D &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjectData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>af34305970824e31579f393d7334f7d88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ObjectData3D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>ac8a3e48a182eb4b3d1908b70f1645899</anchor>
      <arglist>(const ObjectData3D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ObjectData3D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>a68a0d64673483570a8a875c896392938</anchor>
      <arglist>(ObjectData3D &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>a173fda98f2e5b46eb45b8bd80bff7227</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>adf931a72c5d5694be58f36d0fcd5d6ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectFlags3D</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>abbbbc84938faf52141ee2cdb08808b2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>a84e4ea47c7349cecfb6fa7d7bfc0c8bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>a8c38ccc40ff3157f7760f529693e31de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>scaling</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>a03b268a5d19c10543b24afd37acdbd7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix4</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>a2e7fb4bfe100b86645bd9534230f9d05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectInstanceType3D</type>
      <name>instanceType</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>adb75f355dab1507c830779745ddff4e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>instance</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>aff0635aae049fbaaba10e0565d170574</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>ad361d9dc479a142bb475d748a197eae3</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::ObjImporter</name>
    <filename>classMagnum_1_1Trade_1_1ObjImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>ObjImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjImporter.html</anchorfile>
      <anchor>a9e4d2725b98876ecea91ed06ed2bde96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjImporter.html</anchorfile>
      <anchor>a28e7782925186f7e48a7d24a89dbb3f8</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Trade_1_1ObjImporter" title="Behavior and limitations">Trade-ObjImporter-limitations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::OpenGexImporter</name>
    <filename>classMagnum_1_1Trade_1_1OpenGexImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>OpenGexImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1OpenGexImporter.html</anchorfile>
      <anchor>ac4e76996bd6c41b18d4d358adde8db05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OpenGexImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1OpenGexImporter.html</anchorfile>
      <anchor>adc2222e32fac0894eef1829e3930b9d2</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImporter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OpenGexImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1OpenGexImporter.html</anchorfile>
      <anchor>ae562ddc1ca25f7678031b4ef6a27d6a0</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <member kind="function">
      <type>const OpenDdl::Document *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1OpenGexImporter.html</anchorfile>
      <anchor>a7ce3d40d93e41410ef02a5654ac97705</anchor>
      <arglist>() const</arglist>
    </member>
    <docanchor file="classMagnum_1_1Trade_1_1OpenGexImporter" title="Behavior and limitations">Trade-OpenGexImporter-limitations</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1OpenGexImporter" title="Scene hierarchy import">Trade-OpenGexImporter-limitations-scenes</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1OpenGexImporter" title="Camera import">Trade-OpenGexImporter-limitations-camera</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1OpenGexImporter" title="Light import">Trade-OpenGexImporter-limitations-lights</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1OpenGexImporter" title="Mesh import">Trade-OpenGexImporter-limitations-meshes</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1OpenGexImporter" title="Material import">Trade-OpenGexImporter-limitations-materials</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1OpenGexImporter" title="Texture import">Trade-OpenGexImporter-limitations-textures</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1OpenGexImporter" title="Access to internal importer state">Trade-OpenGexImporter-state</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::PhongMaterialData</name>
    <filename>classMagnum_1_1Trade_1_1PhongMaterialData.html</filename>
    <base>Magnum::Trade::AbstractMaterialData</base>
    <member kind="enumvalue">
      <name>AmbientTextureID</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a43ad2953a2d22ea584c48282b8037b72a60525165e4b63ce3d6b958d7f57833fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DiffuseTextureID</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a43ad2953a2d22ea584c48282b8037b72a8ce0cffb8630f599dd0adb1c5e696b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SpecularTextureID</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a43ad2953a2d22ea584c48282b8037b72a3d470e854c71c4b6e4849c09a4d36f47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>ab82171ad1051df5b8afbb50b0e56ca43</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Trade_1_1PhongMaterialData.html" anchor="ab82171ad1051df5b8afbb50b0e56ca43a54c65daef485e12e23c450d276053134">DoubleSided</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1PhongMaterialData.html" anchor="ab82171ad1051df5b8afbb50b0e56ca43a3ae56a8ec764ef7cd26cdde384d85e19">AmbientTexture</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1PhongMaterialData.html" anchor="ab82171ad1051df5b8afbb50b0e56ca43ae712876b5313699d4e38e6f70c7c725e">DiffuseTexture</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1PhongMaterialData.html" anchor="ab82171ad1051df5b8afbb50b0e56ca43a8f19fa0f2cc4078c09a89d31205980e7">SpecularTexture</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>abe5616dfbd96d288a563c7b955fb80dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AmbientTextureID</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a43ad2953a2d22ea584c48282b8037b72a60525165e4b63ce3d6b958d7f57833fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DiffuseTextureID</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a43ad2953a2d22ea584c48282b8037b72a8ce0cffb8630f599dd0adb1c5e696b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SpecularTextureID</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a43ad2953a2d22ea584c48282b8037b72a3d470e854c71c4b6e4849c09a4d36f47</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PhongMaterialData</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a7198ed067ba29e6a7b3b7c90b2cf2b28</anchor>
      <arglist>(Flags flags, MaterialAlphaMode alphaMode, Float alphaMask, Float shininess, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PhongMaterialData</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>abe571a296a6a4a940a7169b272930989</anchor>
      <arglist>(Flags flags, Float shininess, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PhongMaterialData</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a1e670d8b4772d9c0f677c37762e4965f</anchor>
      <arglist>(const PhongMaterialData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PhongMaterialData</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a4e519f49e85251966541adf562d405ae</anchor>
      <arglist>(PhongMaterialData &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PhongMaterialData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>addb372273a69360aaf12594c5165bf3c</anchor>
      <arglist>(const PhongMaterialData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>PhongMaterialData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a4427b2acf3b2ffa452ed2285b3a4fa76</anchor>
      <arglist>(PhongMaterialData &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a678ab5f7d7a436d9c00752a9127f8540</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Color4 &amp;</type>
      <name>ambientColor</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a68514b4fc3405328bc0154154dbae533</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>ambientColor</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a724402f342b563722eafb3dd8ece98c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt &amp;</type>
      <name>ambientTexture</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a0da9570f0cce4085aa822a761bea9d14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>ambientTexture</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a07d083d6632bd1a96f9b6548ec2b1e5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Color4 &amp;</type>
      <name>diffuseColor</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a02d25e6f9fdcf6f5ef7c4445f26284a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>diffuseColor</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a2409c26e1a9b31691a7a5e1ee00795e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt &amp;</type>
      <name>diffuseTexture</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a5f14c94d710850395d149d0cb056fc99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>diffuseTexture</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>acac9aee77c3171f30e7b5653d6abffd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Color4 &amp;</type>
      <name>specularColor</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a61ebc4fb7df92958c1347f34dec8899d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>specularColor</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a4d9697437a4a946ee0aab43460fb7462</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt &amp;</type>
      <name>specularTexture</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>abc537e77b1f5454fb733d3c92f9bff6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>specularTexture</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a9e86df40ddb13cb83e528dd4c5d2891f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>shininess</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a96f72f03f9bfd56d6d44d53d0ec85764</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a2f0d64be467035ef498ce966facceffa</anchor>
      <arglist>(Debug &amp;debug, PhongMaterialData::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>aaecb00f2afaaa2795bfbf27e8e213564</anchor>
      <arglist>(Debug &amp;debug, PhongMaterialData::Flags value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::PngImageConverter</name>
    <filename>classMagnum_1_1Trade_1_1PngImageConverter.html</filename>
    <base>Magnum::Trade::AbstractImageConverter</base>
    <member kind="function">
      <type></type>
      <name>PngImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1PngImageConverter.html</anchorfile>
      <anchor>a40e24beede9e0b19520f5951c4a05f1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PngImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1PngImageConverter.html</anchorfile>
      <anchor>a5dfdb17ac581eae30b2f9fe5da481508</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::PngImporter</name>
    <filename>classMagnum_1_1Trade_1_1PngImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>PngImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1PngImporter.html</anchorfile>
      <anchor>aa4dfc44a15f47850b1c41608c6a228b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PngImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1PngImporter.html</anchorfile>
      <anchor>ab3dd63cbd09bc3c6a79312a7050df0e4</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Trade_1_1PngImporter" title="Behavior and limitations">Trade-PngImporter-limitations</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1PngImporter" title="Apple CgBI PNGs">Trade-PngImporter-limitations-cgbi</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::SceneData</name>
    <filename>classMagnum_1_1Trade_1_1SceneData.html</filename>
    <member kind="function">
      <type></type>
      <name>SceneData</name>
      <anchorfile>classMagnum_1_1Trade_1_1SceneData.html</anchorfile>
      <anchor>a0c582d6c2acc94b4e7e670933148941c</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children2D, std::vector&lt; UnsignedInt &gt; children3D, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SceneData</name>
      <anchorfile>classMagnum_1_1Trade_1_1SceneData.html</anchorfile>
      <anchor>a2156613e193b93a8ca297a42447db601</anchor>
      <arglist>(const SceneData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SceneData</name>
      <anchorfile>classMagnum_1_1Trade_1_1SceneData.html</anchorfile>
      <anchor>a7f1181e4143dc2afc4bd4a661ac560d5</anchor>
      <arglist>(SceneData &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SceneData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1SceneData.html</anchorfile>
      <anchor>add6c3c87c94b1584166c59f19b648075</anchor>
      <arglist>(const SceneData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>SceneData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1SceneData.html</anchorfile>
      <anchor>aba5008d1a3a51241b06513fb85d3404c</anchor>
      <arglist>(SceneData &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>children2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1SceneData.html</anchorfile>
      <anchor>a54ce991150895122783d65d3b4375ea4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>children3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1SceneData.html</anchorfile>
      <anchor>a522908e33d50b55c283e0574e6efe189</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1SceneData.html</anchorfile>
      <anchor>ac2f51ced83dc8bc65d09f8a20e0a3610</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::StanfordImporter</name>
    <filename>classMagnum_1_1Trade_1_1StanfordImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>StanfordImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1StanfordImporter.html</anchorfile>
      <anchor>a6fa64dd5dc0a257c039292509c624ec6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StanfordImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1StanfordImporter.html</anchorfile>
      <anchor>a05793db47f6296de0164a23746654725</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::StbImageConverter</name>
    <filename>classMagnum_1_1Trade_1_1StbImageConverter.html</filename>
    <base>Magnum::Trade::AbstractImageConverter</base>
    <member kind="enumeration">
      <type></type>
      <name>Format</name>
      <anchorfile>classMagnum_1_1Trade_1_1StbImageConverter.html</anchorfile>
      <anchor>a1cea7b044053b2cc098ffdd84f440c8c</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Trade_1_1StbImageConverter.html" anchor="a1cea7b044053b2cc098ffdd84f440c8ca021d8346462df53d4272607b0f41a8d8">Bmp</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1StbImageConverter.html" anchor="a1cea7b044053b2cc098ffdd84f440c8ca5023eac1d7fffa77b37c0e6797c97773">Jpeg</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1StbImageConverter.html" anchor="a1cea7b044053b2cc098ffdd84f440c8caf8a4be0d1aba40b00ba882376e50779c">Hdr</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1StbImageConverter.html" anchor="a1cea7b044053b2cc098ffdd84f440c8caf8fd4f1b5b05c6b1cc6a661141fd4f54">Png</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1StbImageConverter.html" anchor="a1cea7b044053b2cc098ffdd84f440c8ca38f4e5f66749f755f54ef67faa2058dc">Tga</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>StbImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1StbImageConverter.html</anchorfile>
      <anchor>a783ed719d0de86faa795fe5ceb6283d8</anchor>
      <arglist>(Format format)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StbImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1StbImageConverter.html</anchorfile>
      <anchor>ad359fe3bbb622866083ed069539fa23f</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Trade_1_1StbImageConverter" title="Plugin-specific configuration">Trade-StbImageConverter-configuration</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::StbImageImporter</name>
    <filename>classMagnum_1_1Trade_1_1StbImageImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>StbImageImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1StbImageImporter.html</anchorfile>
      <anchor>a12a0f8024022018157e171fb0a2a24b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StbImageImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1StbImageImporter.html</anchorfile>
      <anchor>adfd862eff86b731884f1dffc77a8facd</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Trade_1_1StbImageImporter" title="Behavior and limitations">Trade-StbImageImporter-limitations</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1StbImageImporter" title="Apple CgBI PNGs">Trade-StbImageImporter-limitations-cgbi</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::TextureData</name>
    <filename>classMagnum_1_1Trade_1_1TextureData.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a01347bdc3cd1a6d14933998090d91425</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Trade_1_1TextureData.html" anchor="a01347bdc3cd1a6d14933998090d91425adc7f989aa32631adaea4eb6a609b0de4">Texture1D</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1TextureData.html" anchor="a01347bdc3cd1a6d14933998090d91425aa6e2bae752d3bf4e34cb392bca789995">Texture2D</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1TextureData.html" anchor="a01347bdc3cd1a6d14933998090d91425a89c915587e16bcf8963be7cf41a0d9fd">Texture3D</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1TextureData.html" anchor="a01347bdc3cd1a6d14933998090d91425aa296104f0c61a9cf39f4824d05315e12">Cube</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>TextureData</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a5a74848dea0e3d1ea37b1360ade3a05d</anchor>
      <arglist>(Type type, SamplerFilter minificationFilter, SamplerFilter magnificationFilter, SamplerMipmap mipmapFilter, Array3D&lt; SamplerWrapping &gt; wrapping, UnsignedInt image, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextureData</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>aa22ff24104a9d5bff40c21b466b83db7</anchor>
      <arglist>(const TextureData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextureData</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a3248ff78ba97da7b3860365ae02017f8</anchor>
      <arglist>(TextureData &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>TextureData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a907f30225492bcbf68d9ddcff45ee16d</anchor>
      <arglist>(const TextureData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TextureData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>aac60bad6af35966aa6b2848a27f2b38e</anchor>
      <arglist>(TextureData &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a77016b33f2217f52de409471fac8816f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SamplerFilter</type>
      <name>minificationFilter</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>ac60e6b5e742e95e6ca8feb385d7a348d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SamplerFilter</type>
      <name>magnificationFilter</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a066d026e7c7a4057bf2a29193e3f58f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SamplerMipmap</type>
      <name>mipmapFilter</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>abd8b54136556088bc077436aa0f3def1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array3D&lt; SamplerWrapping &gt;</type>
      <name>wrapping</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a064850bf8c9bff0dfa63cf661c9cc0ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a40b825715f7191c6a803e9ff8db9663b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a68a2040ff951d6cfd1a978cf1bf18fa4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a5fb39c5f1a765358446a9ef3caa31682</anchor>
      <arglist>(Debug &amp;debug, TextureData::Type value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::TgaImageConverter</name>
    <filename>classMagnum_1_1Trade_1_1TgaImageConverter.html</filename>
    <base>Magnum::Trade::AbstractImageConverter</base>
    <member kind="function">
      <type></type>
      <name>TgaImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1TgaImageConverter.html</anchorfile>
      <anchor>aff6cbfa359ebb4ab3c7ca37da1d59aeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TgaImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1TgaImageConverter.html</anchorfile>
      <anchor>aaef2517042d9d4ebaf1b512e0a17ff70</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::TgaImporter</name>
    <filename>classMagnum_1_1Trade_1_1TgaImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>TgaImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1TgaImporter.html</anchorfile>
      <anchor>acfe78313e5acf5e2ce63edc087bedc44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TgaImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1TgaImporter.html</anchorfile>
      <anchor>ad5bd85df8e7646a71487ec8ff6ef9a89</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::TinyGltfImporter</name>
    <filename>classMagnum_1_1Trade_1_1TinyGltfImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>TinyGltfImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1TinyGltfImporter.html</anchorfile>
      <anchor>ab2ce0be2e2c79262362865285463bed3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TinyGltfImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1TinyGltfImporter.html</anchorfile>
      <anchor>a1f2fb9b0155a466a368256d32192ada0</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImporter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TinyGltfImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1TinyGltfImporter.html</anchorfile>
      <anchor>a4cb12cb12e7cf826fb70fcefd592e40d</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <member kind="function">
      <type>const tinygltf::Model *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1TinyGltfImporter.html</anchorfile>
      <anchor>a65fea67739ab651d3f6629db40b1048f</anchor>
      <arglist>() const</arglist>
    </member>
    <docanchor file="classMagnum_1_1Trade_1_1TinyGltfImporter" title="Behavior and limitations">Trade-TinyGltfImporter-limitations</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1TinyGltfImporter" title="Animation import">Trade-TinyGltfImporter-limitations-animation</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1TinyGltfImporter" title="Scene and object import">Trade-TinyGltfImporter-limitations-objects</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1TinyGltfImporter" title="Camera import">Trade-TinyGltfImporter-limitations-camera</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1TinyGltfImporter" title="Light import">Trade-TinyGltfImporter-limitations-lights</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1TinyGltfImporter" title="Mesh import">Trade-TinyGltfImporter-limitations-meshes</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1TinyGltfImporter" title="Material import">Trade-TinyGltfImporter-limitations-materials</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1TinyGltfImporter" title="Texture import">Trade-TinyGltfImporter-limitations-textures</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1TinyGltfImporter" title="Plugin-specific config">Trade-TinyGltfImporter-configuration</docanchor>
    <docanchor file="classMagnum_1_1Trade_1_1TinyGltfImporter" title="Access to internal importer state">Trade-TinyGltfImporter-state</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::AbstractPlane</name>
    <filename>classMagnum_1_1Ui_1_1AbstractPlane.html</filename>
    <base protection="private">LinkedListItem&lt; AbstractPlane, AbstractUserInterface &gt;</base>
    <member kind="typedef">
      <type>PlaneFlag</type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a3d20d4a4de7c712c767d7949ca79c054</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PlaneFlags</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a97723d0cf8a3f137a9b0ff12145f8460</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractPlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a1cd2aad88f535870f8fce43fd18c4d5f</anchor>
      <arglist>(AbstractUserInterface &amp;ui, const Anchor &amp;anchor, const Range2D &amp;padding, const Vector2 &amp;margin)</arglist>
    </member>
    <member kind="function">
      <type>AbstractUserInterface &amp;</type>
      <name>ui</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a5dfa75c99b10b3c388e9649d70eebad5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractUserInterface &amp;</type>
      <name>ui</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a11678ff01677a546b51bc7a704fe191c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Range2D</type>
      <name>rect</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a4b53c66ecd19d7efd21e21f54e777f58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Range2D</type>
      <name>padding</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>ac5d4be869557c493142ae5d9d6294250</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>margin</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>af90552eadd85c83bebe5a5c91eefb029</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PlaneFlags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a57822e063e849dd41bf563b225d703b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AbstractPlane *</type>
      <name>previousActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a240c78a3086c504a5c6ce0c0ae7c6062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractPlane *</type>
      <name>previousActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>ab554c5cc58e19d287fdaf2aa42e726c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AbstractPlane *</type>
      <name>nextActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>ab4e74d5c0611ea1f55d4d2bb902952b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractPlane *</type>
      <name>nextActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a9b58a6c63d6019d6525929ef2bd8ebb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>activate</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a79c67701947303af216d251a1eff6e6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hide</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a6eb8c3f394c4981c4e02427d40bfdc54</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::AbstractUiShader</name>
    <filename>classMagnum_1_1Ui_1_1AbstractUiShader.html</filename>
    <base>Magnum::GL::AbstractShaderProgram</base>
    <member kind="function">
      <type>AbstractUiShader &amp;</type>
      <name>setTransformationProjectionMatrix</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractUiShader.html</anchorfile>
      <anchor>ae325c20907c5301821472e50ed78809a</anchor>
      <arglist>(const Matrix3 &amp;matrix)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::AbstractUserInterface</name>
    <filename>classMagnum_1_1Ui_1_1AbstractUserInterface.html</filename>
    <base protection="private">LinkedList&lt; AbstractPlane &gt;</base>
    <member kind="function">
      <type></type>
      <name>AbstractUserInterface</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractUserInterface.html</anchorfile>
      <anchor>a152db9d2c0f7bc834ac60aac5121171a</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;windowSize)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractUserInterface.html</anchorfile>
      <anchor>afe9342975e213a85a13e3973bd5fbafe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>coordinateScaling</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractUserInterface.html</anchorfile>
      <anchor>a26ab3097a73215d4ab18f2644a83cab0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AbstractPlane *</type>
      <name>activePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractUserInterface.html</anchorfile>
      <anchor>a6727b8cc09e0158ef48314e4608194b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractPlane *</type>
      <name>activePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractUserInterface.html</anchorfile>
      <anchor>ab43d51997c0c47f3104fd23d881ebf0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handleMoveEvent</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractUserInterface.html</anchorfile>
      <anchor>abd9c725ce32b0a9da964b3bf62824541</anchor>
      <arglist>(const Vector2i &amp;screenPosition)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handlePressEvent</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractUserInterface.html</anchorfile>
      <anchor>a1eeb34cc255306f4a3e3213217a8d95f</anchor>
      <arglist>(const Vector2i &amp;screenPosition)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handleReleaseEvent</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractUserInterface.html</anchorfile>
      <anchor>adc1d10e9c1a750ab8d764cc23d753dd9</anchor>
      <arglist>(const Vector2i &amp;screenPosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>relayout</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractUserInterface.html</anchorfile>
      <anchor>a53ef4af6887d9901c720f116fc49734d</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;windowSize)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::Anchor</name>
    <filename>classMagnum_1_1Ui_1_1Anchor.html</filename>
    <member kind="function">
      <type></type>
      <name>Anchor</name>
      <anchorfile>classMagnum_1_1Ui_1_1Anchor.html</anchorfile>
      <anchor>a465094f9180d12ed3d04f962a673bed1</anchor>
      <arglist>(Snaps snaps, const Range2D &amp;rect)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Anchor</name>
      <anchorfile>classMagnum_1_1Ui_1_1Anchor.html</anchorfile>
      <anchor>a28661db2fb9e2f49a8a988c1ced9e64a</anchor>
      <arglist>(Snaps snaps, const Vector2 &amp;size={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Anchor</name>
      <anchorfile>classMagnum_1_1Ui_1_1Anchor.html</anchorfile>
      <anchor>a20510497b32788a815947150663ee571</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Anchor</name>
      <anchorfile>classMagnum_1_1Ui_1_1Anchor.html</anchorfile>
      <anchor>a85c8a549f0a7f2cf5c69dccadeba1a97</anchor>
      <arglist>(Snaps snaps, const Widget &amp;widget, const Range2D &amp;rect)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Anchor</name>
      <anchorfile>classMagnum_1_1Ui_1_1Anchor.html</anchorfile>
      <anchor>aafb58c8db86923ee742499755d074aeb</anchor>
      <arglist>(Snaps snaps, const Widget &amp;widget, const Vector2 &amp;size={})</arglist>
    </member>
    <member kind="function">
      <type>Range2D</type>
      <name>rect</name>
      <anchorfile>classMagnum_1_1Ui_1_1Anchor.html</anchorfile>
      <anchor>a5ff95ef16db5c88a85e9036ab67aa71b</anchor>
      <arglist>(const AbstractPlane &amp;plane) const</arglist>
    </member>
    <member kind="function">
      <type>Range2D</type>
      <name>rect</name>
      <anchorfile>classMagnum_1_1Ui_1_1Anchor.html</anchorfile>
      <anchor>a2bf57ddf3ebd2fc4678b6a26f0fe4b74</anchor>
      <arglist>(const AbstractUserInterface &amp;ui) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::BasicGLLayer</name>
    <filename>classMagnum_1_1Ui_1_1BasicGLLayer.html</filename>
    <templarg>VertexData</templarg>
    <base>Magnum::Ui::BasicLayer</base>
    <member kind="function">
      <type>GL::Buffer &amp;</type>
      <name>buffer</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>a8909cc4283c1464cd68e3a202350d474</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GL::Mesh &amp;</type>
      <name>mesh</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>aa5a9084051e3df1791d8d935b57b7590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>aa9844639f981d566b44e7fd9a560ad8f</anchor>
      <arglist>(std::size_t elementCapacity, std::size_t dataCapacity, GL::BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>ae0cb956dbed82c1fc7cabcd67d31a35e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>a4a3a47a9d5f8fd9e235b646066fd11e7</anchor>
      <arglist>(AbstractUiShader &amp;shader)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::BasicInstancedGLLayer</name>
    <filename>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</filename>
    <templarg>InstanceData</templarg>
    <base>Magnum::Ui::BasicInstancedLayer</base>
    <member kind="function">
      <type>GL::Buffer &amp;</type>
      <name>buffer</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>a72d87e65a5c18662cbf4d11fd0af7078</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GL::Mesh &amp;</type>
      <name>mesh</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>a15e7f29b757f9b6f07f75b2afaa6b8cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>a225ebf8b6c117d77a82a9ac6407b852a</anchor>
      <arglist>(std::size_t capacity, GL::BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>ab44ea3d731a8fef5d8b23a968263ff4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>a32c8efb389dbe7b2113590a76ae5f143</anchor>
      <arglist>(AbstractUiShader &amp;shader)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::BasicInstancedLayer</name>
    <filename>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>std::size_t</type>
      <name>capacity</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</anchorfile>
      <anchor>a66196a7924734a1d10574cdd2c05aa26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</anchorfile>
      <anchor>ad89983fc4ff82fbc6ece9e1e70133bcd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const InstanceData &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</anchorfile>
      <anchor>affb01f4d6c885fc641001168c94e6fb0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Math::Range1D&lt; std::size_t &gt;</type>
      <name>modified</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</anchorfile>
      <anchor>a5fdd738b0509f13a410a4c0f680ab63f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetModified</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</anchorfile>
      <anchor>a0689ea8bca9c3267aadc007982431368</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</anchorfile>
      <anchor>a7a0bbd28d2664d0458e1aeb8962cfbfa</anchor>
      <arglist>(std::size_t capacity)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>addElement</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</anchorfile>
      <anchor>ab8a109ea532589e0e40a9aa35429ce9d</anchor>
      <arglist>(const InstanceData &amp;instanceData)</arglist>
    </member>
    <member kind="function">
      <type>InstanceData &amp;</type>
      <name>modifyElement</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</anchorfile>
      <anchor>af3d9c54328b06285254aeabef9458671</anchor>
      <arglist>(std::size_t id)</arglist>
    </member>
    <member kind="function">
      <type>const InstanceData &amp;</type>
      <name>elementData</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</anchorfile>
      <anchor>a6c5a42017f022b642c1fc0f4d33113e2</anchor>
      <arglist>(std::size_t id) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::BasicLayer</name>
    <filename>classMagnum_1_1Ui_1_1BasicLayer.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>std::size_t</type>
      <name>capacity</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a61176e8e7d8e5dfbaf23dc9624088df0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>elementCapacity</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>ae257cc71ec674d6a282c0cc6380c51f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a964677d58bebd36ffbc0489f08522163</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>elementCount</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a980d1feb5aec294ac57d55c8aae11882</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>indexCount</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a483e961dbaa6facef499e2079b637c27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const VertexData &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>adf9a89afb620fe1ea065bb13aa1c6e13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Math::Range1D&lt; std::size_t &gt;</type>
      <name>modified</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a39f59389e71d04af6614651ed8f972a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetModified</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>abf45ac94af5df0998c25a2ab7ba1ab21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a932f31f6e0477feafdac33c1e0369dfb</anchor>
      <arglist>(std::size_t elementCapacity, std::size_t dataCapacity)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>addElement</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a8f4e982919911c8efd5b930db1b09411</anchor>
      <arglist>(Containers::ArrayView&lt; const VertexData &gt; data, std::size_t indexCount)</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; VertexData &gt;</type>
      <name>modifyElement</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a9e398ef767c71e00bff0c0b0aa9cf4b6</anchor>
      <arglist>(std::size_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>elementSize</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a770a808e9645ef0731f290d950e6e2b2</anchor>
      <arglist>(std::size_t id) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const VertexData &gt;</type>
      <name>elementData</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a506a8199cfda50a1b102e9f27ebbff3a</anchor>
      <arglist>(std::size_t id) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::BasicPlane</name>
    <filename>classMagnum_1_1Ui_1_1BasicPlane.html</filename>
    <templarg>Layers</templarg>
    <base>Magnum::Ui::AbstractPlane</base>
    <member kind="function">
      <type></type>
      <name>BasicPlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>a6aef36d42b333694ed945998019e6a72</anchor>
      <arglist>(BasicUserInterface&lt; Layers... &gt; &amp;ui, const Anchor &amp;anchor, const Range2D &amp;padding, const Vector2 &amp;margin, Layers &amp;... layers)</arglist>
    </member>
    <member kind="function">
      <type>BasicUserInterface&lt; Layers... &gt; &amp;</type>
      <name>ui</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>ac37549266429d56219fe2d06b86d4402</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BasicUserInterface&lt; Layers... &gt; &amp;</type>
      <name>ui</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>ac272fa0a8b3b56009ed08c03a989821c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BasicPlane&lt; Layers... &gt; *</type>
      <name>previousActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>aae0d2e027c159d7fa0aa86f716a97bc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BasicPlane&lt; Layers... &gt; *</type>
      <name>previousActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>ae95870677da416b9f390b30e61178c7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BasicPlane&lt; Layers... &gt; *</type>
      <name>nextActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>a95bc95e91201688786836544dd21bee0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BasicPlane&lt; Layers... &gt; *</type>
      <name>nextActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>a301c36b5d2b7b1b5db3fde69f5bb4820</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>a7ba55309488e42143106e09c6ec3655a</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classMagnum_1_1Ui_1_1BasicPlane" title="Plane hierarchy">Ui-BasicPlane-hierarchy</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::BasicUserInterface</name>
    <filename>classMagnum_1_1Ui_1_1BasicUserInterface.html</filename>
    <templarg>Layers</templarg>
    <base>Magnum::Ui::AbstractUserInterface</base>
    <member kind="function">
      <type></type>
      <name>BasicUserInterface</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicUserInterface.html</anchorfile>
      <anchor>a43c705722531f419107bda4147fe3906</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;windowSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicUserInterface.html</anchorfile>
      <anchor>a96b8eb29dd07c4a1b04c771513f852ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicUserInterface.html</anchorfile>
      <anchor>a9f6ce47411b19f87a3706cf08301d51c</anchor>
      <arglist>(const Containers::StaticArray&lt; sizeof...(Layers), Containers::Reference&lt; AbstractUiShader &gt;&gt; &amp;shaders)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::Button</name>
    <filename>classMagnum_1_1Ui_1_1Button.html</filename>
    <base>Magnum::Ui::Widget</base>
    <base>Corrade::Interconnect::Emitter</base>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>a6a64bdf5fb4800738a41be15494c7431</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const std::string &amp;text, std::size_t capacity=0, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>a23bc366dd1c907502cf1f6b52148fcd8</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const std::string &amp;text, Style style)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>a7befdc65b1c07c8604069f7297c5319c</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const char(&amp;text)[size], std::size_t capacity=0, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>a53086ff3e092136e0013e6d5476c9752</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const char(&amp;text)[size], Style style)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>adef91afed0ad4f19e767f2e6e67d5b82</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, Containers::ArrayView&lt; const char &gt; text, std::size_t capacity=0, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>a12bf5a32384ec9602d3bdd15fca2dc7c</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, Containers::ArrayView&lt; const char &gt; text, Style style)</arglist>
    </member>
    <member kind="function">
      <type>Button &amp;</type>
      <name>setStyle</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>a4d08f8775ff14581cb702cc14dadfa08</anchor>
      <arglist>(Style style)</arglist>
    </member>
    <member kind="function">
      <type>Button &amp;</type>
      <name>setText</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>a6891d6097b167a7bf4d5b8bbf9dd555f</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Button &amp;</type>
      <name>setText</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>aed645a1d8cb9a63f0c3a6c3d6f53373b</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; text)</arglist>
    </member>
    <member kind="function">
      <type>Button &amp;</type>
      <name>setText</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>a714f758d26812fb406df407d6a4766e2</anchor>
      <arglist>(const char(&amp;text)[size])</arglist>
    </member>
    <member kind="function">
      <type>Signal</type>
      <name>tapped</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>adb362d95ca1f537dd2c1628ff61be509</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classMagnum_1_1Ui_1_1Button" title="Styling">Ui-Button-styling</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::Input</name>
    <filename>classMagnum_1_1Ui_1_1Input.html</filename>
    <base>Magnum::Ui::Widget</base>
    <base>Corrade::Interconnect::Emitter</base>
    <member kind="function">
      <type></type>
      <name>Input</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>a983475f7f7fed85d10dac4ba7ebe3864</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, std::string value, std::size_t maxValueSize, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Input</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>a1aa94e29a51c72bec50cb186d6aefa29</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, std::size_t maxValueSize, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type>Input &amp;</type>
      <name>setStyle</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>a64f1bfe618c3026d269f744a4c5bbd1d</anchor>
      <arglist>(Style style)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>maxValueSize</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>adc0d9a4c0ca7c141e897bda9cc3be7f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>value</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>a8162fc57c281dd724ed115d546195bbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Input &amp;</type>
      <name>setValue</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>ace163bfc843f768fe28e4cb1ba639692</anchor>
      <arglist>(const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Input &amp;</type>
      <name>setValue</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>a330f1425ed6bda2a24e4eae75df4ff6a</anchor>
      <arglist>(std::string &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Input &amp;</type>
      <name>setValue</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>ad9fa975db22b6c4c53be4513ed444398</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>Input &amp;</type>
      <name>setValue</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>ae165fcad293eb4944105b5bac204b15b</anchor>
      <arglist>(const char(&amp;value)[size])</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handleKeyPress</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>af78602131162b91bf24b9016eadec77d</anchor>
      <arglist>(KeyEvent &amp;keyEvent)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handleTextInput</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>aa56f3b212d26124728a61c9ae66ac924</anchor>
      <arglist>(TextInputEvent &amp;textInputEvent)</arglist>
    </member>
    <member kind="function">
      <type>Signal</type>
      <name>focused</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>aa690e3fa629be6195286459df40b6f97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal</type>
      <name>blurred</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>ac3f3140b89d32decc8ef166f9fef655c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal</type>
      <name>valueChanged</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>a99de355cbc4c060933b458547d896b43</anchor>
      <arglist>(const std::string &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::Label</name>
    <filename>classMagnum_1_1Ui_1_1Label.html</filename>
    <base>Magnum::Ui::Widget</base>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>a87668bd975cdf7c5c23c807a1e330e41</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const std::string &amp;text, Text::Alignment alignment, std::size_t capacity=0, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>a2583f18b31e4acfb9e074ae12f59f577</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const std::string &amp;text, Text::Alignment alignment, Style style)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>ab05a1513626a4948164ff1ab6f6bcca4</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const char(&amp;text)[size], Text::Alignment alignment, std::size_t capacity=0, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>ae1c291a794ba82f45bc2aac8fa015a1e</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const char(&amp;text)[size], Text::Alignment alignment, Style style)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>af2364501609e130bdab6d6010e6107f2</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, Containers::ArrayView&lt; const char &gt; text, Text::Alignment alignment, std::size_t capacity=0, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>a7a29f0cf1b6c942257460d412855d482</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, Containers::ArrayView&lt; const char &gt; text, Text::Alignment alignment, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type>Label &amp;</type>
      <name>setStyle</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>abf64d9627711000b95e1577b85e297f8</anchor>
      <arglist>(Style style)</arglist>
    </member>
    <member kind="function">
      <type>Label &amp;</type>
      <name>setText</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>abdd84f64e7ae22adff7c764faf2c6ac8</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Label &amp;</type>
      <name>setText</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>a23eb77e4eb34e2910accf7c8df91932d</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; text)</arglist>
    </member>
    <member kind="function">
      <type>Label &amp;</type>
      <name>setText</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>a2b86dd9734b6b123b3c5fae10edc2b84</anchor>
      <arglist>(const char(&amp;text)[size])</arglist>
    </member>
    <docanchor file="classMagnum_1_1Ui_1_1Label" title="Styling">Ui-Label-styling</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::Modal</name>
    <filename>classMagnum_1_1Ui_1_1Modal.html</filename>
    <base>Magnum::Ui::Widget</base>
    <member kind="function">
      <type></type>
      <name>Modal</name>
      <anchorfile>classMagnum_1_1Ui_1_1Modal.html</anchorfile>
      <anchor>aa8423e5553e547e742d3e01ab6c12a7a</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type>Modal &amp;</type>
      <name>setStyle</name>
      <anchorfile>classMagnum_1_1Ui_1_1Modal.html</anchorfile>
      <anchor>ac4c5781726254310a5760e71ed8e402d</anchor>
      <arglist>(Style style)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Ui_1_1Modal" title="Styling">Ui-Modal-styling</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::Plane</name>
    <filename>classMagnum_1_1Ui_1_1Plane.html</filename>
    <base>BasicPlane&lt; Implementation::QuadLayer, Implementation::QuadLayer, Implementation::TextLayer &gt;</base>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>classMagnum_1_1Ui_1_1Plane.html</anchorfile>
      <anchor>a3f9f63932fb216cd58520999b8da6301</anchor>
      <arglist>(UserInterface &amp;ui, const Anchor &amp;anchor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>classMagnum_1_1Ui_1_1Plane.html</anchorfile>
      <anchor>a9a18470c7e7871e8553ad89cf2b057a2</anchor>
      <arglist>(UserInterface &amp;ui, const Anchor &amp;anchor, std::size_t backgroundCapacity, std::size_t foregroundCapacity, std::size_t textCapacity)</arglist>
    </member>
    <member kind="function">
      <type>UserInterface &amp;</type>
      <name>ui</name>
      <anchorfile>classMagnum_1_1Ui_1_1Plane.html</anchorfile>
      <anchor>ae47685664562bbdb7f2ab50523e53c50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const UserInterface &amp;</type>
      <name>ui</name>
      <anchorfile>classMagnum_1_1Ui_1_1Plane.html</anchorfile>
      <anchor>adfb145a3e9031bd3139b43b4c4c11286</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Plane *</type>
      <name>previousActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1Plane.html</anchorfile>
      <anchor>ac17bb705f566d11a43d65acba18460a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Plane *</type>
      <name>previousActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1Plane.html</anchorfile>
      <anchor>ab3f3f36f7e0ab0077aea1a0eab61e30c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classMagnum_1_1Ui_1_1Plane.html</anchorfile>
      <anchor>a0d1da51ff17444f89f54dd4dbbd81fb8</anchor>
      <arglist>(std::size_t backgroundCapacity, std::size_t foregroundCapacity, std::size_t textCapacity)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::StyleConfiguration</name>
    <filename>classMagnum_1_1Ui_1_1StyleConfiguration.html</filename>
    <member kind="function">
      <type></type>
      <name>StyleConfiguration</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>ae4d79560759412d3d1aa7f1c2018de18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>fontSize</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a045f60e9157c844ce7fa87d453e882b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setFontSize</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a8386138da026c18efbd1905dd76b5f79</anchor>
      <arglist>(Float size)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>borderWidth</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>adb5f37dd8e1c8691e79351e23dd38e29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setBorderWidth</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>ac8dd70c0ae4f9e8a8c4d60897e9a9baa</anchor>
      <arglist>(Float width)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>cornerRadius</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>ad8e78dc2963c5cca879b240ce0559f80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setCornerRadius</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a3344275765f740511df73778b2a6951f</anchor>
      <arglist>(Float radius)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>cornerSmoothnessIn</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a56324ee84fd5eb9a0cb782337a3a1fd8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setCornerSmoothnessIn</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>acfd0b5717e9100b2086ea22c64b35ec4</anchor>
      <arglist>(Float smoothness)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>cornerSmoothnessOut</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>afed007d4cf88b0190eaf226fe454ff87</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setCornerSmoothnessOut</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>af0e914a29af3745524a52ba2e88acd67</anchor>
      <arglist>(Float smoothness)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>padding</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a1c44dde702442f50d402b2e5c54153c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setPadding</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a8ef151e2440d687c4d383f2252549725</anchor>
      <arglist>(const Vector2 &amp;padding)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>margin</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a9ba45e04c7df1ed11503ede612270449</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setMargin</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a7634997ba6d841c7813273251774176f</anchor>
      <arglist>(const Vector2 &amp;margin)</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>backgroundColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a8c6234ce93a688fbbc84f4500a9cc26e</anchor>
      <arglist>(Type type, Style style, State state) const</arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setBackgroundColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a0f3a1da1645f220b70d430726ff94ad0</anchor>
      <arglist>(Type type, Style style, State state, const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>topFillColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>abfba6a5d4205030134b289bfb5007365</anchor>
      <arglist>(Type type, Style style, State state) const</arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setTopFillColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>aba0fb9a7f850e69aa009bd85b1157c8f</anchor>
      <arglist>(Type type, Style style, State state, const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>bottomFillColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a3f0bd2ef1c2ac308959723d2e8ace2df</anchor>
      <arglist>(Type type, Style style, State state) const</arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setBottomFillColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a8f492e5d1a7395cc96bc60f79c2bc07d</anchor>
      <arglist>(Type type, Style style, State state, const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>borderColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>aa54624da2a5cb5f3b0ab4699f5a93221</anchor>
      <arglist>(Type type, Style style, State state) const</arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a41d0b2375980023d6546dfb3b9bc818a</anchor>
      <arglist>(Type type, Style style, State state, const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>textColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a8e9d1a0d372c6938c1da5494fa1c95d5</anchor>
      <arglist>(Type type, Style style, State state) const</arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setTextColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a46eaeffe232dea57f451602afef08cbf</anchor>
      <arglist>(Type type, Style style, State state, const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a9bbfeeb737f9054791c074132bb48d71</anchor>
      <arglist>(GL::Buffer &amp;backgroundUniforms, GL::Buffer &amp;foregroundUniforms, GL::Buffer &amp;textUniforms) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::UserInterface</name>
    <filename>classMagnum_1_1Ui_1_1UserInterface.html</filename>
    <base>BasicUserInterface&lt; Implementation::QuadLayer, Implementation::QuadLayer, Implementation::TextLayer &gt;</base>
    <base>Corrade::Interconnect::Emitter</base>
    <member kind="function">
      <type></type>
      <name>UserInterface</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>ae6c73d3e6d685b90224faccc33d218db</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;windowSize, const Vector2i &amp;framebufferSize, const std::string &amp;extraGlyphs={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UserInterface</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a4397516f23bb89a22cac49ecd26b681f</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;windowSize, const std::string &amp;extraGlyphs={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UserInterface</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a6a3a41361d5fe8b0d7ed362c20c66899</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;windowSize, const Vector2i &amp;framebufferSize, const StyleConfiguration &amp;styleConfiguration, const std::string &amp;extraGlyphs={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UserInterface</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>aa4a63ed0b66ffa8605d4bdeb1117c347</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;windowSize, const StyleConfiguration &amp;styleConfiguration, const std::string &amp;extraGlyphs={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UserInterface</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a1261ee94b60f73de4cf26f766a8346f2</anchor>
      <arglist>(PluginManager::Manager&lt; Text::AbstractFont &gt; &amp;fontManager, const Vector2 &amp;size, const Vector2i &amp;windowSize, const Vector2i &amp;framebufferSize, const std::string &amp;extraGlyphs={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UserInterface</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a0a8207ee316c9fbf11d3bdc3d7001e6a</anchor>
      <arglist>(PluginManager::Manager&lt; Text::AbstractFont &gt; &amp;fontManager, const Vector2 &amp;size, const Vector2i &amp;windowSize, const Vector2i &amp;framebufferSize, const StyleConfiguration &amp;styleConfiguration, const std::string &amp;extraGlyphs={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UserInterface</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>ae3d9a6630a7c98837354f397bf2c1c22</anchor>
      <arglist>(PluginManager::Manager&lt; Text::AbstractFont &gt; &amp;fontManager, const Vector2 &amp;size, const Vector2i &amp;windowSize, const StyleConfiguration &amp;styleConfiguration, const std::string &amp;extraGlyphs={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UserInterface</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>ac484778f2cf7a0592dc48de5f878e075</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;windowSize, const Vector2i &amp;framebufferSize, Text::AbstractFont &amp;font, Text::GlyphCache &amp;glyphCache, const StyleConfiguration &amp;styleConfiguration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UserInterface</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a1356dc2f8b0fbe763cc3d92d2582d729</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;windowSize, Text::AbstractFont &amp;font, Text::GlyphCache &amp;glyphCache, const StyleConfiguration &amp;styleConfiguration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UserInterface</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a43a2ceeaa33a82068abdf69ce3edb544</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;screenSize, Text::AbstractFont &amp;font, const StyleConfiguration &amp;styleConfiguration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UserInterface</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a6906ddd0571d5750bc39de19ff9184b1</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;screenSize, Text::AbstractFont &amp;font)</arglist>
    </member>
    <member kind="function">
      <type>Plane *</type>
      <name>activePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>ad9b16b9ab800d97ebdb88623b50c9a59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Plane *</type>
      <name>activePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a0c663ef3174634013694cc95d585d4b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const StyleConfiguration &amp;</type>
      <name>styleConfiguration</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a28f42cdcf854d8d717ad1115c57e5ef7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyleConfiguration</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>ab28f5abee373399300163215a1d0bde9</anchor>
      <arglist>(const StyleConfiguration &amp;configuration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>relayout</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a3d879034104d9fd3a42f8cecba7f193b</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;windowSize, const Vector2i &amp;framebufferSize)</arglist>
    </member>
    <member kind="function">
      <type>Text::AbstractFont &amp;</type>
      <name>font</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>aa0560b1c15e1fd691e39b1ab16e6510a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Text::AbstractFont &amp;</type>
      <name>font</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>addf4b32aa58a122336d0d790e4bf6f95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Text::GlyphCache &amp;</type>
      <name>glyphCache</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>ac228dff08f11912b06a55d3405e9f139</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Text::GlyphCache &amp;</type>
      <name>glyphCache</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a763b634ab57f5a37e558783b71a1c553</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Input *</type>
      <name>focusedInputWidget</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a74e3585f78486b5306dabf3349eb1254</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a266d12187043ca4236b75c37bc913720</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal</type>
      <name>inputWidgetFocused</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a57f14bb3b23fd194904886cce2504873</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal</type>
      <name>inputWidgetBlurred</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a8bd58c7540403b91b3b953512bac43ab</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classMagnum_1_1Ui_1_1UserInterface" title="DPI awareness">Ui-UserInterface-dpi</docanchor>
    <docanchor file="classMagnum_1_1Ui_1_1UserInterface" title="Font plugins">Ui-UserInterface-fonts</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::ValidatedInput</name>
    <filename>classMagnum_1_1Ui_1_1ValidatedInput.html</filename>
    <base>Magnum::Ui::Input</base>
    <base>Corrade::Interconnect::Receiver</base>
    <member kind="function">
      <type></type>
      <name>ValidatedInput</name>
      <anchorfile>classMagnum_1_1Ui_1_1ValidatedInput.html</anchorfile>
      <anchor>a372a4d687e1ebafec15ba0b0c6a41828</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const std::regex &amp;validator, std::string value, std::size_t maxValueSize, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValidatedInput</name>
      <anchorfile>classMagnum_1_1Ui_1_1ValidatedInput.html</anchorfile>
      <anchor>a832456abf49e7485d9bcbb5f2fff9672</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, std::regex &amp;&amp;validator, std::string value, std::size_t maxValueSize, Style style=Style::Default)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValidatedInput</name>
      <anchorfile>classMagnum_1_1Ui_1_1ValidatedInput.html</anchorfile>
      <anchor>a1ee0082fa9a6fa101991f2f8bd0dfb0f</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const std::regex &amp;validator, std::size_t maxValueSize, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValidatedInput</name>
      <anchorfile>classMagnum_1_1Ui_1_1ValidatedInput.html</anchorfile>
      <anchor>a1b1478c2f977f4771c725580cb3df16a</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, std::regex &amp;&amp;validator, std::size_t maxValueSize, Style style=Style::Default)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classMagnum_1_1Ui_1_1ValidatedInput.html</anchorfile>
      <anchor>a7fd6f16ea9fa8d75117324fc3129ba5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>allValid</name>
      <anchorfile>classMagnum_1_1Ui_1_1ValidatedInput.html</anchorfile>
      <anchor>a087a952b439f4e53ee3155718ded6839</anchor>
      <arglist>(std::initializer_list&lt; Containers::Reference&lt; const ValidatedInput &gt;&gt; inputs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::Widget</name>
    <filename>classMagnum_1_1Ui_1_1Widget.html</filename>
    <member kind="function">
      <type></type>
      <name>Widget</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>ad13d3e4bd32a41134c41cddec5ff466a</anchor>
      <arglist>(AbstractPlane &amp;plane, const Anchor &amp;anchor, const Range2D &amp;padding={})</arglist>
    </member>
    <member kind="function">
      <type>Range2D</type>
      <name>rect</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>aa1c9d4ea43f9f98e9cf8b3f9ee91b35d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Range2D</type>
      <name>padding</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a2b2df53fb426cebad1beff59afd26da2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WidgetFlags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a1567f3349d77b571647aedfb8bd7d0c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Widget &amp;</type>
      <name>disable</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>ab1464bfa2fe3235bd467efc5575be4c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget &amp;</type>
      <name>enable</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a11f74d189816803d973a8d56577e7e13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget &amp;</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>ace0a12d0bf2813eef117259d25e47a9b</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>Widget &amp;</type>
      <name>hide</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>ac1ce3c2636b34e11e05020261c4f8ea7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget &amp;</type>
      <name>show</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a8aa3942cfb5a6dfd74e214a3597e1f02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget &amp;</type>
      <name>setVisible</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>af6ba36a4ff6982a91fafd9537fd008d0</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>disable</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>abc738eb369f374220bfffc101dac19a1</anchor>
      <arglist>(std::initializer_list&lt; Containers::Reference&lt; Widget &gt;&gt; widgets)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>enable</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a1ab3eaa2479561cf64f4eed9a6e83c21</anchor>
      <arglist>(std::initializer_list&lt; Containers::Reference&lt; Widget &gt;&gt; widgets)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>ac4bfb95313f66167b4bc3e18aa6c9b19</anchor>
      <arglist>(bool enabled, std::initializer_list&lt; Containers::Reference&lt; Widget &gt;&gt; widgets)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>hide</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a47f4652ea49a00cccc7be0941aa99632</anchor>
      <arglist>(std::initializer_list&lt; Containers::Reference&lt; Widget &gt;&gt; widgets)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>show</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a4f797b73ad576aedb933181059a877f8</anchor>
      <arglist>(std::initializer_list&lt; Containers::Reference&lt; Widget &gt;&gt; widgets)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setVisible</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a4407d637e62e18e97ea2f8ca46f9c3c2</anchor>
      <arglist>(bool visible, std::initializer_list&lt; Containers::Reference&lt; Widget &gt;&gt; widgets)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>AbstractPlane &amp;</type>
      <name>plane</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>acfc2f862cc100abe9f6acd5f582d00b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const AbstractPlane &amp;</type>
      <name>plane</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a35a7b10aec3e431298efe6e0c354a0f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a21729423f6deaf7f54707a07da0d0391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>hoverEvent</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>ac3d19334858e9ddda48391994bc642ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>pressEvent</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a7af7e6b61f671cab8953f69e2e19ae7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>releaseEvent</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>ae9ec3b38a91bfb4e0f3539011bce1989</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>focusEvent</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>aa0cbaff23dc3b2159ac96f768f92c03b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>blurEvent</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>afdaa4ec9086b73244eb522995c89dde0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Matrix3&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Matrix3.html</filename>
    <base>Magnum::Math::Matrix</base>
    <member kind="function">
      <type>Vector2&lt; Float &gt; &amp;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a05ed7ce765c5c0a3cdbda15b8d5355da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Float &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a3f550c18324b821611216a5d5258fba5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt;</type>
      <name>scaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a209d7d42968509e593f0f234f3f9587d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix2x2&lt; Float &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a01b3f4c9267cf2fce150e5fbb0f6daae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ae7e4f50af7d17071f51dae94942274bf</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a0a33c9739acf1728ec121cc28a148d32</anchor>
      <arglist>(IdentityInitT, Float value=Float {1}) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a84877a6cfca61b877cc156b1343eb163</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a07a3083c64e4336cfd5c6f23bf034846</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a046b4514311f06a092081949f702d41a</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;first, const Vector3&lt; Float &gt; &amp;second, const Vector3&lt; Float &gt; &amp;third) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ab7ab26d8c749e484e2759d9c47d70217</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a606b8212d38868a43dc068bacae061ca</anchor>
      <arglist>(const RectangularMatrix&lt; 3, 3, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a460014a92e0ad60f5e4cd617f87839e3</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a3871500c9f5914f84fe8274ebb933df0</anchor>
      <arglist>(const RectangularMatrix&lt; otherSize, otherSize, Float &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a8d13e6f0adec507471b69f23ac88ec4c</anchor>
      <arglist>(const RectangularMatrix&lt; 3, 3, Float &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRigidTransformation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a1cb3f693edd867f2b91dcdcad8f43254</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Matrix2x2&lt; Float &gt;</type>
      <name>rotationScaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a9722ddc83126061ed5eee55585ef75cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix2x2&lt; Float &gt;</type>
      <name>rotationShear</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ad7cb356c1d7ef6ced8a18a16a029de47</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix2x2&lt; Float &gt;</type>
      <name>rotationNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ac0477da30ba0e23a2580ca5418c5cb86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt;</type>
      <name>scalingSquared</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a21c33135a73d0fbc23a614dac4cf0b8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>uniformScalingSquared</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>af193c63d86b751829033f71c6b15cc61</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>uniformScaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a95485a2a36a8dd90f236212f656b8e4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt; &amp;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ad166d31fcb12797eb258230b47ca80f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Float &gt;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a3e6c48760f53cb76ce13c6f7036b50fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt; &amp;</type>
      <name>up</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>aeb8a324e5abe64f09bc888e4bc58e114</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Float &gt;</type>
      <name>up</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a1ee9224d13dfdc31ec06f90b4243cdde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3&lt; Float &gt;</type>
      <name>invertedRigid</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a7c1b9bcef51ab3bfe2b4f6fd28c1bcb0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt;</type>
      <name>transformVector</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a430850a00a6fad971a6135d49e533e95</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt;</type>
      <name>transformPoint</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a71796f21f0f69b86066add1cf7bff8a9</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; Float &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ae22c375a0af7fac1a22cb8bbc5bba1c1</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; Float &gt;</type>
      <name>scaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a8d1392224570b254702baeaadfa79692</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix3&lt; Float &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a51a3dddeb726e7679cbaa2190d1e889c</anchor>
      <arglist>(Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix3&lt; Float &gt;</type>
      <name>reflection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a4c517f1a78c5300fc9c207496ea867e2</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;normal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; Float &gt;</type>
      <name>shearingX</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a5a10fe4eb0b05f0fae43797642ad8570</anchor>
      <arglist>(Float amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; Float &gt;</type>
      <name>shearingY</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a791d5ea6cff14636c10374826668749c</anchor>
      <arglist>(Float amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix3&lt; Float &gt;</type>
      <name>projection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a8a782bf6187750b0f4bc763623ee3857</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; Float &gt;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a04ab2a75059c8016904ad30f5ed7d89c</anchor>
      <arglist>(const Matrix2x2&lt; Float &gt; &amp;rotationScaling, const Vector2&lt; Float &gt; &amp;translation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Matrix4&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Matrix4.html</filename>
    <base>Magnum::Math::Matrix</base>
    <member kind="function">
      <type>Vector3&lt; Float &gt; &amp;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a9a2876c4f7d3f3af31defa3af839f8ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; Float &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a37629bf0ecaa2eeb5a667d084186715f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt;</type>
      <name>scaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a8b753daaa0faa7dc9e840cb593e36462</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3x3&lt; Float &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a0dd749ed64b8da222898122f0b0df8ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ab52f256b38c1eb82dbc531bd2ab19f57</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a8077a9f1b2fe83e42066ee74dcdf98dc</anchor>
      <arglist>(IdentityInitT, Float value=Float {1}) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a07a734e23014fa82b969228965f4aea2</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a8640c92bd243d3ff10ce37af5cc1e908</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>abf0b673faa0db9089a403c9c45ede727</anchor>
      <arglist>(const Vector4&lt; Float &gt; &amp;first, const Vector4&lt; Float &gt; &amp;second, const Vector4&lt; Float &gt; &amp;third, const Vector4&lt; Float &gt; &amp;fourth) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ac633e90736fe4d196813d1ab30ed2c47</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ac4240b374984e79fee6a98c00848b6d0</anchor>
      <arglist>(const RectangularMatrix&lt; 4, 4, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a6448feda6260b10d8269e562bea39eb2</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a13cf9f97bcb982e0d05fbc81256c8b95</anchor>
      <arglist>(const RectangularMatrix&lt; otherSize, otherSize, Float &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a826e3c118fb9be8590d2ba0ff32997c8</anchor>
      <arglist>(const RectangularMatrix&lt; 4, 4, Float &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRigidTransformation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a439990b227184bfb3115bb86e37888e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Matrix3x3&lt; Float &gt;</type>
      <name>rotationScaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ac63b78267d15cb3325ec451f1fe2af21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3x3&lt; Float &gt;</type>
      <name>rotationShear</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>af4bfef89c8f44e214af28a9cb8ece87f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3x3&lt; Float &gt;</type>
      <name>rotationNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a6c4703ebb92c1f2af55d1c39c71dcb4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt;</type>
      <name>scalingSquared</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>adefd2d431fcce1532a7851c71c164163</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>uniformScalingSquared</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ab39268f1c1cb33237ebfb4e59ebaaa42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>uniformScaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>aff4872f95ade6a9571ccbaf8e5ac03b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt; &amp;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a01d3d5de521bddf5b4a91fbcc24adad4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; Float &gt;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>adf2acff169ef524f799d97ab1ab5d341</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt; &amp;</type>
      <name>up</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a91a49eeea70603cb4446f21abc7e4bf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; Float &gt;</type>
      <name>up</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ae182bdf767ace0ae90afda6dbf596308</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt; &amp;</type>
      <name>backward</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>abbb01409dd273bb1f0f00b4d251d096f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; Float &gt;</type>
      <name>backward</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a28d0030e6bed530f53b5ec0e8c36796f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix4&lt; Float &gt;</type>
      <name>invertedRigid</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a60c0aefaad71d6a0658c2db7637f690b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt;</type>
      <name>transformVector</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a950213df0114f0eb91800ab4f79972e9</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt;</type>
      <name>transformPoint</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ace937774e16d8e3a32518d23dcf3369c</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; Float &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a45c6efa069510006c721f6668c1085aa</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; Float &gt;</type>
      <name>scaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>af7be765c3968058eaa46212573d08f51</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; Float &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a33c92542c8fa696eccb4ab1a988b197e</anchor>
      <arglist>(Rad&lt; Float &gt; angle, const Vector3&lt; Float &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; Float &gt;</type>
      <name>rotationX</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>af13627059189e2a41972bc050fc64380</anchor>
      <arglist>(Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; Float &gt;</type>
      <name>rotationY</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>afb3faf19d351e69287e62a9a1b5a58d9</anchor>
      <arglist>(Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; Float &gt;</type>
      <name>rotationZ</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a4233c4525af0e29ca99f036b48ecd4cb</anchor>
      <arglist>(Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; Float &gt;</type>
      <name>reflection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ac873401ad2ba0868ab7d6ee0bafc1a0d</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;normal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; Float &gt;</type>
      <name>shearingXY</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>aaf0d40fe677b13ce587cd60fc770a503</anchor>
      <arglist>(Float amountX, Float amountY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; Float &gt;</type>
      <name>shearingXZ</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>af45de8e18101c8d5c3a207d2528cd966</anchor>
      <arglist>(Float amountX, Float amountZ)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; Float &gt;</type>
      <name>shearingYZ</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a39ca88e718fab9bf21d22aa6a633deb3</anchor>
      <arglist>(Float amountY, Float amountZ)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; Float &gt;</type>
      <name>orthographicProjection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a41a7c41a0f1c450758fa0e91c31f9bf6</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;size, Float near, Float far)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; Float &gt;</type>
      <name>perspectiveProjection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>aeed8f8ff2daedc28b7e3638e8e4ded47</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;size, Float near, Float far)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; Float &gt;</type>
      <name>perspectiveProjection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a6475b3ef155c9142b890c8133504ae9b</anchor>
      <arglist>(Rad&lt; Float &gt; fov, Float aspectRatio, Float near, Float far)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; Float &gt;</type>
      <name>perspectiveProjection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ac9e1d8b17f47c17213a20ab26a53f3b5</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;bottomLeft, const Vector2&lt; Float &gt; &amp;topRight, Float near, Float far)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; Float &gt;</type>
      <name>lookAt</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a568407217908849afa90cfe99ccf54a7</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;eye, const Vector3&lt; Float &gt; &amp;target, const Vector3&lt; Float &gt; &amp;up)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; Float &gt;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a557b7e93cc1cf9f0efc3bd972dfa8db5</anchor>
      <arglist>(const Matrix3x3&lt; Float &gt; &amp;rotationScaling, const Vector3&lt; Float &gt; &amp;translation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Quaternion&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Quaternion.html</filename>
    <member kind="typedef">
      <type>Float</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ad8794a36ca3182cf7759ce5563dd2b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a7b74640bc04651a9f8c755bf0debed1c</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a564619a4909c7eeb0250bc84589541e0</anchor>
      <arglist>(IdentityInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a087d50f5ec2dbfee5b98d071723a467e</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a6a9d3810094b75dc70d1523f3d1026d7</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a721460f866326e5d476cf5691637a872</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;vector, Float scalar) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ac062b38ffc6436c59cc92f3dfbebf96c</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;vector) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a9e99bc7d5af3164714cc89fed50d7d41</anchor>
      <arglist>(const Quaternion&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>aa6b2a61b3a9910aa83480acfa6de23ac</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ab174407328d03d9386fa98b7db21b8f9</anchor>
      <arglist>(const Quaternion&lt; Float &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ac6679a64cf8a8e45f78375ae05866a42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a85d7aa31fc378b439f1f467a7fae5b93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a4d42af40ee815758cb267848c3b2bdf0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a3dc38e6999d684c5893ec0353bba2e36</anchor>
      <arglist>(const Quaternion&lt; Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a260acd4122d8300a21b511560590ac87</anchor>
      <arglist>(const Quaternion&lt; Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>aaeaeee6c8659236ce26687050ab8bd19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt; &amp;</type>
      <name>vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a17b554622c5a61e7db2faf3774ef8b44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector3&lt; Float &gt;</type>
      <name>vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a95bdbf800eb279249bd0784b8c6234bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>scalar</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a14feb0ad2c46ed29835680e978cf90df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>scalar</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ad95b83c37e4e4d4613b486b15edf3929</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; Float &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ae8e09c06b590ce0c8676f83ed771d395</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt;</type>
      <name>axis</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>aef03833a4e10d0d350b943b9554f7b25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3x3&lt; Float &gt;</type>
      <name>toMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a29ce9f54ae56cfd640e085caf957f6b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>afa68cb15d04ef08a87eb5dea405b3754</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ab31dbb0b1957393b21db0025f08b0fff</anchor>
      <arglist>(const Quaternion&lt; Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>af978cb442efcd8cdc60926804931fdee</anchor>
      <arglist>(const Quaternion&lt; Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>adc12b36273b20e6aeadbd88fa17803a7</anchor>
      <arglist>(const Quaternion&lt; Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a3a15af5b5aa430c3cae4e8c19893e2d5</anchor>
      <arglist>(const Quaternion&lt; Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a99cd732a650d7ffd53c44eeee9909989</anchor>
      <arglist>(Float scalar)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a1ff55e79fc0f1ce08565b2bb4a8994f7</anchor>
      <arglist>(Float scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ac1da5af64ecfeecc32900b52e4b55f88</anchor>
      <arglist>(const Quaternion&lt; Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ac3e12b812a058b938eef2857fcf32379</anchor>
      <arglist>(Float scalar)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ab251087c1f9c0a36b9c6d89a7533b68b</anchor>
      <arglist>(Float scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a9a79faf30b78e114a87404f0dff005bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a4f07f8fac1e663050e09b40fccad74cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a9048c42e840280ea86f7d37cbe269d3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt;</type>
      <name>conjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a728e308bf68b9f1c612ef0c6890d256d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt;</type>
      <name>inverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a9a2bde72652a78c175b4c6fa8931ea1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt;</type>
      <name>invertedNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a9971664bf49d564b7836fafc5931f71f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt;</type>
      <name>transformVector</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a790d6cad5ad57b90b00d5612b8f85222</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt;</type>
      <name>transformVectorNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a6cb28a56b2ce9d3d3d886d069522ed8f</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quaternion&lt; Float &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>accba70d55affe884d8086110a130475a</anchor>
      <arglist>(Rad&lt; Float &gt; angle, const Vector3&lt; Float &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quaternion&lt; Float &gt;</type>
      <name>fromMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>aae9f73fca12e7b81ff5b45bdb34cc039</anchor>
      <arglist>(const Matrix3x3&lt; Float &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; Float &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a77252a59dcbaf44761edc9213f0e5927</anchor>
      <arglist>(const Quaternion&lt; Float &gt; &amp;normalizedA, const Quaternion&lt; Float &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a6104723d69f728da05794bdfd10eedc9</anchor>
      <arglist>(Float scalar, const Quaternion&lt; Float &gt; &amp;quaternion)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ad46afcb9966fa5007b579ff41442abaa</anchor>
      <arglist>(Float scalar, const Quaternion&lt; Float &gt; &amp;quaternion)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a24a478c9463275d440061899c3630a32</anchor>
      <arglist>(const Quaternion&lt; Float &gt; &amp;a, const Quaternion&lt; Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt;</type>
      <name>lerp</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a702539c58371af1c8635c2bc60e3e0a5</anchor>
      <arglist>(const Quaternion&lt; Float &gt; &amp;normalizedA, const Quaternion&lt; Float &gt; &amp;normalizedB, Float t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt;</type>
      <name>lerpShortestPath</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a7af2a318a3c70abee764adfa3b5a3a02</anchor>
      <arglist>(const Quaternion&lt; Float &gt; &amp;normalizedA, const Quaternion&lt; Float &gt; &amp;normalizedB, Float t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt;</type>
      <name>slerp</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>aa52d32b2fcb66f28a4330fb39fa50589</anchor>
      <arglist>(const Quaternion&lt; Float &gt; &amp;normalizedA, const Quaternion&lt; Float &gt; &amp;normalizedB, Float t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; Float &gt;</type>
      <name>slerpShortestPath</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a0d790000a3656bf3b1bad2098ec00ea0</anchor>
      <arglist>(const Quaternion&lt; Float &gt; &amp;normalizedA, const Quaternion&lt; Float &gt; &amp;normalizedB, Float t)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a03f030af72160303a9934d7a9af40f37</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Quaternion&lt; Float &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rad&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Rad.html</filename>
    <base>Unit&lt; Rad, Float &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a72936fdcd7fcf088fa89a1e73d3779a9</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a36917ffee1793b2991ccc32d2ef9ebea</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a0ffa51c6c54c775284fbcdf896e49350</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a3103647d758537197096e0eeda87aa8a</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a259baea5e418004734ee1d8d47293648</anchor>
      <arglist>(Unit&lt; Math::Rad, U &gt; value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a808735c8f585f24db7e764b231d0f5c2</anchor>
      <arglist>(Unit&lt; Math::Rad, Float &gt; value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a6666a48047298ac78dda704a21be4dd5</anchor>
      <arglist>(Unit&lt; Deg, Float &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Rad&lt; Double &gt;</type>
      <name>operator&quot;&quot;_rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>aaf0bfb135a94f2bfd98cae7acc20a495</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Rad&lt; Float &gt;</type>
      <name>operator&quot;&quot;_radf</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a143288fa3c5bea5542c6ab59798d4013</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a577c8c280a0b3753ef06a23b5b496a3a</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Unit&lt; Rad, Float &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Range2D&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Range2D.html</filename>
    <base>Range&lt; 2, Float &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a8e5fa029f93091756be5ac1ab4659ce9</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ad6fbfb66b109a075ec04f9c1714901f0</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>aba01c4477be2625eeac588c1291012f1</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a29a5b08d68619e6f88d1ebcc71a14d7d</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;min, const Vector2&lt; Float &gt; &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>abf4ff365167312845528c8c29d9fa13b</anchor>
      <arglist>(const Range2D&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac6fff4886595aa98843ea4b0143953dc</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac6b2efabb797a86e2695ae5c52345ad8</anchor>
      <arglist>(const Range&lt; 2, Float &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt; &amp;</type>
      <name>bottomLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a72523c0c53c0c1eb52b2bf4ee20ef655</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Float &gt;</type>
      <name>bottomLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>aad0afb0a3c99b351bd28f821389dcd3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Float &gt;</type>
      <name>bottomRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a60456f7c398d53b1b1e225298f07f421</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Float &gt;</type>
      <name>topLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a4d853da0c896ca113bce1f984e0ca070</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt; &amp;</type>
      <name>topRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>af722c06c6594f0c95dd8e226ada01e4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Float &gt;</type>
      <name>topRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a3eff9b525a63168ef4cef378e692291a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>left</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ab0045c3d9efc537479a7e1a3b62a3d31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>left</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a5f099e84b0b9d36415b39468eb1ac95c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a6dd0190fea1c0ca659b08761d7de8d21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a5796dd1cb50687b3c2ca1a7456ba0f6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>bottom</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>add87a538ca7568b55d86377b16192226</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>bottom</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ab5c52e6efa2407b70155fded40a28905</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>top</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a304ac9d040df205686a08ec706ccc51a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>top</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a029fc35b1654114396d56c38c6ffc5a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Range&lt; 1, Float &gt;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac3c3a467504221db21594193752cea5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Range&lt; 1, Float &gt;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a1537da527c80dfbec801d645ac972171</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>sizeX</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a073eae95552ee758f592ef235863939d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>sizeY</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a8dc36ba53543299f1bb1a9a32da266cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>centerX</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a84b2f466fd99dc9c01acb4cd315e0efa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>centerY</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a7330d482350accc43b8b8a6c61b937db</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Range2D&lt; Int &gt;</name>
    <filename>classMagnum_1_1Math_1_1Range2D.html</filename>
    <base>Range&lt; 2, Int &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a8e5fa029f93091756be5ac1ab4659ce9</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ad6fbfb66b109a075ec04f9c1714901f0</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>aba01c4477be2625eeac588c1291012f1</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a29a5b08d68619e6f88d1ebcc71a14d7d</anchor>
      <arglist>(const Vector2&lt; Int &gt; &amp;min, const Vector2&lt; Int &gt; &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>abf4ff365167312845528c8c29d9fa13b</anchor>
      <arglist>(const Range2D&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac6fff4886595aa98843ea4b0143953dc</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac6b2efabb797a86e2695ae5c52345ad8</anchor>
      <arglist>(const Range&lt; 2, Int &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Int &gt; &amp;</type>
      <name>bottomLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a72523c0c53c0c1eb52b2bf4ee20ef655</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Int &gt;</type>
      <name>bottomLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>aad0afb0a3c99b351bd28f821389dcd3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Int &gt;</type>
      <name>bottomRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a60456f7c398d53b1b1e225298f07f421</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Int &gt;</type>
      <name>topLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a4d853da0c896ca113bce1f984e0ca070</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Int &gt; &amp;</type>
      <name>topRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>af722c06c6594f0c95dd8e226ada01e4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Int &gt;</type>
      <name>topRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a3eff9b525a63168ef4cef378e692291a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>left</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ab0045c3d9efc537479a7e1a3b62a3d31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>left</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a5f099e84b0b9d36415b39468eb1ac95c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a6dd0190fea1c0ca659b08761d7de8d21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a5796dd1cb50687b3c2ca1a7456ba0f6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>bottom</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>add87a538ca7568b55d86377b16192226</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>bottom</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ab5c52e6efa2407b70155fded40a28905</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>top</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a304ac9d040df205686a08ec706ccc51a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>top</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a029fc35b1654114396d56c38c6ffc5a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Range&lt; 1, Int &gt;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac3c3a467504221db21594193752cea5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Range&lt; 1, Int &gt;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a1537da527c80dfbec801d645ac972171</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sizeX</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a073eae95552ee758f592ef235863939d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sizeY</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a8dc36ba53543299f1bb1a9a32da266cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>centerX</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a84b2f466fd99dc9c01acb4cd315e0efa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>centerY</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a7330d482350accc43b8b8a6c61b937db</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Range&lt; 2, Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Range.html</filename>
    <member kind="typedef">
      <type>Implementation::RangeTraits&lt; dimensions, Float &gt;::Type</type>
      <name>VectorType</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9b67475211cb779b753bf6e7c4a0a71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a650845bc19f8fe4c1574f97b003c873b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a8e8e55738263e64c8fb90e99c15df06d</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a37cf32f96975f2252d535476aee0a0b0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>adbcdfa9101feecf1ff90ba5c246997eb</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a271043537801b6a2e51cae80246d6cea</anchor>
      <arglist>(const std::pair&lt; VectorType, VectorType &gt; &amp;minmax) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aa67b6d337c31f7a65ef86936c7c890ad</anchor>
      <arglist>(const std::pair&lt; Vector&lt; dimensions, Float &gt;, Vector&lt; dimensions, Float &gt;&gt; &amp;minmax) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a42d6842532079884d60019890d0de09d</anchor>
      <arglist>(const Range&lt; dimensions, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2060f88e1d0f1efe96068ca5341260c9</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af98d7db502faa0044a758c879c9d2972</anchor>
      <arglist>(const Range&lt; dimensions, Float &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6ecf2d8ffea88084f853e01f362ffd08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a40a9a2b4f00284deb1552cdaefc76620</anchor>
      <arglist>(const Range&lt; dimensions, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af0b9970e905186f2b6f0ab75742f65d3</anchor>
      <arglist>(const Range&lt; dimensions, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2715cd7abca4c9c0ede4d3227507495f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a62582bc30f7bdbb674bd9eb636c8f7aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad4919361a2086212fac96da0221e4dcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2a2efabf1737ae8669c6cb2e018ee9a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ae792027e5ae23ebd90d55f6447746b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad2d637d3bde56c518b6394c45852b4ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3c59a148364abf99ed0fbdd742ad0c30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>center</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aef0a43bdd3b998eb4abeccfb69901108</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Float &gt;</type>
      <name>translated</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a383e5039e9be5cd9ee2b01bcb1a59dff</anchor>
      <arglist>(const VectorType &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Float &gt;</type>
      <name>padded</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a96e089200f2f516864f30be32fd928d9</anchor>
      <arglist>(const VectorType &amp;padding) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Float &gt;</type>
      <name>scaled</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3dde95deae8eb49866d5fa20d697b7f4</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Float &gt;</type>
      <name>scaledFromCenter</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aa2f8a673876848215327b4d63b255d24</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a533a85506cc4477abdae31e6de91a5d0</anchor>
      <arglist>(const VectorType &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ac662b1902428c419d6fae43d25bbacb1</anchor>
      <arglist>(const Range&lt; dimensions, Float &gt; &amp;b) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, Float &gt;</type>
      <name>fromSize</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6c72f85612084d91d80c5c95905b2e32</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, Float &gt;</type>
      <name>fromCenter</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aaa5a16a5eeebaf324ee9849e7744f2db</anchor>
      <arglist>(const VectorType &amp;center, const VectorType &amp;halfSize)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Float &gt;</type>
      <name>join</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ab1a605df6c5b25fe493c1ee83e2ae6d6</anchor>
      <arglist>(const Range&lt; dimensions, Float &gt; &amp;a, const Range&lt; dimensions, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Float &gt;</type>
      <name>intersect</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a4cf6ac31a2f0a80774021f83cd397426</anchor>
      <arglist>(const Range&lt; dimensions, Float &gt; &amp;a, const Range&lt; dimensions, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a21df4e4922ea49e428d71f6fe56e7b63</anchor>
      <arglist>(const Range&lt; dimensions, Float &gt; &amp;a, const Range&lt; dimensions, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a1f3385fec96840d6f57368596e7b8fe5</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Range&lt; dimensions, Float &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Range&lt; 2, Int &gt;</name>
    <filename>classMagnum_1_1Math_1_1Range.html</filename>
    <member kind="typedef">
      <type>Implementation::RangeTraits&lt; dimensions, Int &gt;::Type</type>
      <name>VectorType</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9b67475211cb779b753bf6e7c4a0a71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a650845bc19f8fe4c1574f97b003c873b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a8e8e55738263e64c8fb90e99c15df06d</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a37cf32f96975f2252d535476aee0a0b0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>adbcdfa9101feecf1ff90ba5c246997eb</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a271043537801b6a2e51cae80246d6cea</anchor>
      <arglist>(const std::pair&lt; VectorType, VectorType &gt; &amp;minmax) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aa67b6d337c31f7a65ef86936c7c890ad</anchor>
      <arglist>(const std::pair&lt; Vector&lt; dimensions, Int &gt;, Vector&lt; dimensions, Int &gt;&gt; &amp;minmax) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a42d6842532079884d60019890d0de09d</anchor>
      <arglist>(const Range&lt; dimensions, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2060f88e1d0f1efe96068ca5341260c9</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af98d7db502faa0044a758c879c9d2972</anchor>
      <arglist>(const Range&lt; dimensions, Int &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6ecf2d8ffea88084f853e01f362ffd08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a40a9a2b4f00284deb1552cdaefc76620</anchor>
      <arglist>(const Range&lt; dimensions, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af0b9970e905186f2b6f0ab75742f65d3</anchor>
      <arglist>(const Range&lt; dimensions, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Int *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2715cd7abca4c9c0ede4d3227507495f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Int *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a62582bc30f7bdbb674bd9eb636c8f7aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad4919361a2086212fac96da0221e4dcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2a2efabf1737ae8669c6cb2e018ee9a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ae792027e5ae23ebd90d55f6447746b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad2d637d3bde56c518b6394c45852b4ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3c59a148364abf99ed0fbdd742ad0c30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>center</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aef0a43bdd3b998eb4abeccfb69901108</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Int &gt;</type>
      <name>translated</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a383e5039e9be5cd9ee2b01bcb1a59dff</anchor>
      <arglist>(const VectorType &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Int &gt;</type>
      <name>padded</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a96e089200f2f516864f30be32fd928d9</anchor>
      <arglist>(const VectorType &amp;padding) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Int &gt;</type>
      <name>scaled</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3dde95deae8eb49866d5fa20d697b7f4</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Int &gt;</type>
      <name>scaledFromCenter</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aa2f8a673876848215327b4d63b255d24</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a533a85506cc4477abdae31e6de91a5d0</anchor>
      <arglist>(const VectorType &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ac662b1902428c419d6fae43d25bbacb1</anchor>
      <arglist>(const Range&lt; dimensions, Int &gt; &amp;b) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, Int &gt;</type>
      <name>fromSize</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6c72f85612084d91d80c5c95905b2e32</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, Int &gt;</type>
      <name>fromCenter</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aaa5a16a5eeebaf324ee9849e7744f2db</anchor>
      <arglist>(const VectorType &amp;center, const VectorType &amp;halfSize)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Int &gt;</type>
      <name>join</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ab1a605df6c5b25fe493c1ee83e2ae6d6</anchor>
      <arglist>(const Range&lt; dimensions, Int &gt; &amp;a, const Range&lt; dimensions, Int &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Int &gt;</type>
      <name>intersect</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a4cf6ac31a2f0a80774021f83cd397426</anchor>
      <arglist>(const Range&lt; dimensions, Int &gt; &amp;a, const Range&lt; dimensions, Int &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a21df4e4922ea49e428d71f6fe56e7b63</anchor>
      <arglist>(const Range&lt; dimensions, Int &gt; &amp;a, const Range&lt; dimensions, Int &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a1f3385fec96840d6f57368596e7b8fe5</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Range&lt; dimensions, Int &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Range&lt; 2, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1Range.html</filename>
    <member kind="typedef">
      <type>Implementation::RangeTraits&lt; dimensions, T &gt;::Type</type>
      <name>VectorType</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9b67475211cb779b753bf6e7c4a0a71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a650845bc19f8fe4c1574f97b003c873b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a8e8e55738263e64c8fb90e99c15df06d</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a37cf32f96975f2252d535476aee0a0b0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>adbcdfa9101feecf1ff90ba5c246997eb</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a271043537801b6a2e51cae80246d6cea</anchor>
      <arglist>(const std::pair&lt; VectorType, VectorType &gt; &amp;minmax) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aa67b6d337c31f7a65ef86936c7c890ad</anchor>
      <arglist>(const std::pair&lt; Vector&lt; dimensions, T &gt;, Vector&lt; dimensions, T &gt;&gt; &amp;minmax) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a42d6842532079884d60019890d0de09d</anchor>
      <arglist>(const Range&lt; dimensions, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2060f88e1d0f1efe96068ca5341260c9</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af98d7db502faa0044a758c879c9d2972</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6ecf2d8ffea88084f853e01f362ffd08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a40a9a2b4f00284deb1552cdaefc76620</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af0b9970e905186f2b6f0ab75742f65d3</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2715cd7abca4c9c0ede4d3227507495f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a62582bc30f7bdbb674bd9eb636c8f7aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad4919361a2086212fac96da0221e4dcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2a2efabf1737ae8669c6cb2e018ee9a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ae792027e5ae23ebd90d55f6447746b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad2d637d3bde56c518b6394c45852b4ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3c59a148364abf99ed0fbdd742ad0c30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>center</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aef0a43bdd3b998eb4abeccfb69901108</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>translated</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a383e5039e9be5cd9ee2b01bcb1a59dff</anchor>
      <arglist>(const VectorType &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>padded</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a96e089200f2f516864f30be32fd928d9</anchor>
      <arglist>(const VectorType &amp;padding) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>scaled</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3dde95deae8eb49866d5fa20d697b7f4</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>scaledFromCenter</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aa2f8a673876848215327b4d63b255d24</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a533a85506cc4477abdae31e6de91a5d0</anchor>
      <arglist>(const VectorType &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ac662b1902428c419d6fae43d25bbacb1</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;b) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, T &gt;</type>
      <name>fromSize</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6c72f85612084d91d80c5c95905b2e32</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, T &gt;</type>
      <name>fromCenter</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aaa5a16a5eeebaf324ee9849e7744f2db</anchor>
      <arglist>(const VectorType &amp;center, const VectorType &amp;halfSize)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>join</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ab1a605df6c5b25fe493c1ee83e2ae6d6</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>intersect</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a4cf6ac31a2f0a80774021f83cd397426</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a21df4e4922ea49e428d71f6fe56e7b63</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a1f3385fec96840d6f57368596e7b8fe5</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Range&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Range&lt; 3, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1Range.html</filename>
    <member kind="typedef">
      <type>Implementation::RangeTraits&lt; dimensions, T &gt;::Type</type>
      <name>VectorType</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9b67475211cb779b753bf6e7c4a0a71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a650845bc19f8fe4c1574f97b003c873b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a8e8e55738263e64c8fb90e99c15df06d</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a37cf32f96975f2252d535476aee0a0b0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>adbcdfa9101feecf1ff90ba5c246997eb</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a271043537801b6a2e51cae80246d6cea</anchor>
      <arglist>(const std::pair&lt; VectorType, VectorType &gt; &amp;minmax) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aa67b6d337c31f7a65ef86936c7c890ad</anchor>
      <arglist>(const std::pair&lt; Vector&lt; dimensions, T &gt;, Vector&lt; dimensions, T &gt;&gt; &amp;minmax) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a42d6842532079884d60019890d0de09d</anchor>
      <arglist>(const Range&lt; dimensions, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2060f88e1d0f1efe96068ca5341260c9</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af98d7db502faa0044a758c879c9d2972</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6ecf2d8ffea88084f853e01f362ffd08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a40a9a2b4f00284deb1552cdaefc76620</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af0b9970e905186f2b6f0ab75742f65d3</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2715cd7abca4c9c0ede4d3227507495f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a62582bc30f7bdbb674bd9eb636c8f7aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad4919361a2086212fac96da0221e4dcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2a2efabf1737ae8669c6cb2e018ee9a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ae792027e5ae23ebd90d55f6447746b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad2d637d3bde56c518b6394c45852b4ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3c59a148364abf99ed0fbdd742ad0c30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>center</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aef0a43bdd3b998eb4abeccfb69901108</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>translated</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a383e5039e9be5cd9ee2b01bcb1a59dff</anchor>
      <arglist>(const VectorType &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>padded</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a96e089200f2f516864f30be32fd928d9</anchor>
      <arglist>(const VectorType &amp;padding) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>scaled</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3dde95deae8eb49866d5fa20d697b7f4</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>scaledFromCenter</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aa2f8a673876848215327b4d63b255d24</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a533a85506cc4477abdae31e6de91a5d0</anchor>
      <arglist>(const VectorType &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ac662b1902428c419d6fae43d25bbacb1</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;b) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, T &gt;</type>
      <name>fromSize</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6c72f85612084d91d80c5c95905b2e32</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, T &gt;</type>
      <name>fromCenter</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aaa5a16a5eeebaf324ee9849e7744f2db</anchor>
      <arglist>(const VectorType &amp;center, const VectorType &amp;halfSize)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>join</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ab1a605df6c5b25fe493c1ee83e2ae6d6</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>intersect</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a4cf6ac31a2f0a80774021f83cd397426</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a21df4e4922ea49e428d71f6fe56e7b63</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a1f3385fec96840d6f57368596e7b8fe5</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Range&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Range&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Range.html</filename>
    <member kind="typedef">
      <type>Implementation::RangeTraits&lt; dimensions, T &gt;::Type</type>
      <name>VectorType</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9b67475211cb779b753bf6e7c4a0a71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a650845bc19f8fe4c1574f97b003c873b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a8e8e55738263e64c8fb90e99c15df06d</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a37cf32f96975f2252d535476aee0a0b0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>adbcdfa9101feecf1ff90ba5c246997eb</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a271043537801b6a2e51cae80246d6cea</anchor>
      <arglist>(const std::pair&lt; VectorType, VectorType &gt; &amp;minmax) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aa67b6d337c31f7a65ef86936c7c890ad</anchor>
      <arglist>(const std::pair&lt; Vector&lt; dimensions, T &gt;, Vector&lt; dimensions, T &gt;&gt; &amp;minmax) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a42d6842532079884d60019890d0de09d</anchor>
      <arglist>(const Range&lt; dimensions, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2060f88e1d0f1efe96068ca5341260c9</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af98d7db502faa0044a758c879c9d2972</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6ecf2d8ffea88084f853e01f362ffd08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a40a9a2b4f00284deb1552cdaefc76620</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af0b9970e905186f2b6f0ab75742f65d3</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2715cd7abca4c9c0ede4d3227507495f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a62582bc30f7bdbb674bd9eb636c8f7aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad4919361a2086212fac96da0221e4dcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2a2efabf1737ae8669c6cb2e018ee9a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ae792027e5ae23ebd90d55f6447746b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad2d637d3bde56c518b6394c45852b4ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3c59a148364abf99ed0fbdd742ad0c30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>center</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aef0a43bdd3b998eb4abeccfb69901108</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>translated</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a383e5039e9be5cd9ee2b01bcb1a59dff</anchor>
      <arglist>(const VectorType &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>padded</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a96e089200f2f516864f30be32fd928d9</anchor>
      <arglist>(const VectorType &amp;padding) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>scaled</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3dde95deae8eb49866d5fa20d697b7f4</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>scaledFromCenter</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aa2f8a673876848215327b4d63b255d24</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a533a85506cc4477abdae31e6de91a5d0</anchor>
      <arglist>(const VectorType &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ac662b1902428c419d6fae43d25bbacb1</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;b) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, T &gt;</type>
      <name>fromSize</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6c72f85612084d91d80c5c95905b2e32</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, T &gt;</type>
      <name>fromCenter</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aaa5a16a5eeebaf324ee9849e7744f2db</anchor>
      <arglist>(const VectorType &amp;center, const VectorType &amp;halfSize)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>join</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ab1a605df6c5b25fe493c1ee83e2ae6d6</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>intersect</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a4cf6ac31a2f0a80774021f83cd397426</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a21df4e4922ea49e428d71f6fe56e7b63</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a1f3385fec96840d6f57368596e7b8fe5</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Range&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Range&lt; K &gt;</name>
    <filename>classMagnum_1_1Math_1_1Range.html</filename>
    <member kind="typedef">
      <type>Implementation::RangeTraits&lt; dimensions, T &gt;::Type</type>
      <name>VectorType</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9b67475211cb779b753bf6e7c4a0a71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a650845bc19f8fe4c1574f97b003c873b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a8e8e55738263e64c8fb90e99c15df06d</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a37cf32f96975f2252d535476aee0a0b0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>adbcdfa9101feecf1ff90ba5c246997eb</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a271043537801b6a2e51cae80246d6cea</anchor>
      <arglist>(const std::pair&lt; VectorType, VectorType &gt; &amp;minmax) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aa67b6d337c31f7a65ef86936c7c890ad</anchor>
      <arglist>(const std::pair&lt; Vector&lt; dimensions, T &gt;, Vector&lt; dimensions, T &gt;&gt; &amp;minmax) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a42d6842532079884d60019890d0de09d</anchor>
      <arglist>(const Range&lt; dimensions, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2060f88e1d0f1efe96068ca5341260c9</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af98d7db502faa0044a758c879c9d2972</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6ecf2d8ffea88084f853e01f362ffd08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a40a9a2b4f00284deb1552cdaefc76620</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af0b9970e905186f2b6f0ab75742f65d3</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2715cd7abca4c9c0ede4d3227507495f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a62582bc30f7bdbb674bd9eb636c8f7aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad4919361a2086212fac96da0221e4dcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2a2efabf1737ae8669c6cb2e018ee9a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ae792027e5ae23ebd90d55f6447746b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad2d637d3bde56c518b6394c45852b4ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3c59a148364abf99ed0fbdd742ad0c30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>center</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aef0a43bdd3b998eb4abeccfb69901108</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>translated</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a383e5039e9be5cd9ee2b01bcb1a59dff</anchor>
      <arglist>(const VectorType &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>padded</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a96e089200f2f516864f30be32fd928d9</anchor>
      <arglist>(const VectorType &amp;padding) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>scaled</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3dde95deae8eb49866d5fa20d697b7f4</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>scaledFromCenter</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aa2f8a673876848215327b4d63b255d24</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a533a85506cc4477abdae31e6de91a5d0</anchor>
      <arglist>(const VectorType &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ac662b1902428c419d6fae43d25bbacb1</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;b) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, T &gt;</type>
      <name>fromSize</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6c72f85612084d91d80c5c95905b2e32</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, T &gt;</type>
      <name>fromCenter</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aaa5a16a5eeebaf324ee9849e7744f2db</anchor>
      <arglist>(const VectorType &amp;center, const VectorType &amp;halfSize)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>join</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ab1a605df6c5b25fe493c1ee83e2ae6d6</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>intersect</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a4cf6ac31a2f0a80774021f83cd397426</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a21df4e4922ea49e428d71f6fe56e7b63</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a1f3385fec96840d6f57368596e7b8fe5</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Range&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Range&lt; std::size_t &gt;</name>
    <filename>classMagnum_1_1Math_1_1Range.html</filename>
    <member kind="typedef">
      <type>Implementation::RangeTraits&lt; dimensions, T &gt;::Type</type>
      <name>VectorType</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9b67475211cb779b753bf6e7c4a0a71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a650845bc19f8fe4c1574f97b003c873b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a8e8e55738263e64c8fb90e99c15df06d</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a37cf32f96975f2252d535476aee0a0b0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>adbcdfa9101feecf1ff90ba5c246997eb</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a271043537801b6a2e51cae80246d6cea</anchor>
      <arglist>(const std::pair&lt; VectorType, VectorType &gt; &amp;minmax) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aa67b6d337c31f7a65ef86936c7c890ad</anchor>
      <arglist>(const std::pair&lt; Vector&lt; dimensions, T &gt;, Vector&lt; dimensions, T &gt;&gt; &amp;minmax) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a42d6842532079884d60019890d0de09d</anchor>
      <arglist>(const Range&lt; dimensions, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2060f88e1d0f1efe96068ca5341260c9</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af98d7db502faa0044a758c879c9d2972</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6ecf2d8ffea88084f853e01f362ffd08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a40a9a2b4f00284deb1552cdaefc76620</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af0b9970e905186f2b6f0ab75742f65d3</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2715cd7abca4c9c0ede4d3227507495f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a62582bc30f7bdbb674bd9eb636c8f7aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad4919361a2086212fac96da0221e4dcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2a2efabf1737ae8669c6cb2e018ee9a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ae792027e5ae23ebd90d55f6447746b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad2d637d3bde56c518b6394c45852b4ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3c59a148364abf99ed0fbdd742ad0c30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>center</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aef0a43bdd3b998eb4abeccfb69901108</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>translated</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a383e5039e9be5cd9ee2b01bcb1a59dff</anchor>
      <arglist>(const VectorType &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>padded</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a96e089200f2f516864f30be32fd928d9</anchor>
      <arglist>(const VectorType &amp;padding) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>scaled</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3dde95deae8eb49866d5fa20d697b7f4</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>scaledFromCenter</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aa2f8a673876848215327b4d63b255d24</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a533a85506cc4477abdae31e6de91a5d0</anchor>
      <arglist>(const VectorType &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ac662b1902428c419d6fae43d25bbacb1</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;b) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, T &gt;</type>
      <name>fromSize</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6c72f85612084d91d80c5c95905b2e32</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, T &gt;</type>
      <name>fromCenter</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aaa5a16a5eeebaf324ee9849e7744f2db</anchor>
      <arglist>(const VectorType &amp;center, const VectorType &amp;halfSize)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>join</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ab1a605df6c5b25fe493c1ee83e2ae6d6</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>intersect</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a4cf6ac31a2f0a80774021f83cd397426</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a21df4e4922ea49e428d71f6fe56e7b63</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a1f3385fec96840d6f57368596e7b8fe5</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Range&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RectangularMatrix&lt; size, size, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1RectangularMatrix.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a518fcd0815a9c2b24b429ffc6a9ef5a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Cols</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a027df728dac126bd0156a17e4fc2b15fab1d8e57eaa8f76414d64eec51b2c69a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Rows</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a027df728dac126bd0156a17e4fc2b15fad1257f2c47ba6de49124e584aa29fa5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DiagonalSize</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a027df728dac126bd0156a17e4fc2b15faf08ebca5bb2c2fbf4d0a2340cbd5b46a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ae4553743a264bc6e0a66a8776ae14da8</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a6009f95ed2cba70259e3cc748d229069</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a04fb3ef57a300c528475d4f77c190b1b</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aa4d25ccbf54d4e83ce99173d83afeb00</anchor>
      <arglist>(const Vector&lt; rows, T &gt; &amp;first, const U &amp;... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a04b9085c6de3a53567f36b45c4eb9225</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a5df773bcf7827a2c23cfc477f73306ca</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a3ecfd82db21760be18d560777edc67a5</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a66735ff7cfdf23ff7fc8c8fca466f8e3</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a92d9f16dd53e8c60f912212381270688</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a18852de01a97e7f65398097520364288</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a882b199d2b7f18abe3980bb08568326b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; rows, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a9bc7bd15bebd143c7eab6dda01b8c647</anchor>
      <arglist>(std::size_t col)</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector&lt; rows, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>accdb25c48a591f75f9c18304c8b08e57</anchor>
      <arglist>(std::size_t col) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; cols, T &gt;</type>
      <name>row</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a5e8632dd419c545421991bbe0660b0cf</anchor>
      <arglist>(std::size_t row) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRow</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>afa7d894585174e509984a83ab9e9538a</anchor>
      <arglist>(std::size_t row, const Vector&lt; cols, T &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a83317c37a9493d65c5b2834407fdec5f</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ac381f262a7665b382f73c32925e47378</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; cols *rows &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a1d00a6644290cafdcf8ea02ae10a1d36</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; cols *rows &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ac0825c48cca576f6425a133504b4fb66</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; cols *rows &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>adfc9e199cd6cc8e67ada273443b138fd</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; cols *rows &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ae1ee073595f293a7d014f0b655170db4</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a45f356ab8240e14486bf84f622059b5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a6798090ca6e9bbb52303f499db5c1af3</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>adf84e802e22d8196d542bcf8530097a5</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ac0645c43273fe88f6795e9653994f083</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aa15b9de3a8dcc459b1a40d30b1cba635</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aff9cc62672a8d760f43d9caa25f95854</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ad493e29f21cce9cdf014c97eda1e8b37</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; size, rows, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ad5b68758852e6c871f89c522067406e3</anchor>
      <arglist>(const RectangularMatrix&lt; size, cols, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; rows, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a577f6efb443b111eb0cd508e3c617dbc</anchor>
      <arglist>(const Vector&lt; cols, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a15a877951dbfc7804a0b883b6aae60da</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a01f0e65957dc0fe3c9c0bdebab7dbc42</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; rows, cols, T &gt;</type>
      <name>transposed</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a5b808dc2358fd7caa4cb15b254a97ca0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>flippedCols</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a2dc8438bd21f0cfd724b96f0c87c1b70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>flippedRows</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>add503da27438282a1eb47cee1f929e5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; DiagonalSize, T &gt;</type>
      <name>diagonal</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a7c799b9741575c1919e61d9f38a52228</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; rows *cols, T &gt;</type>
      <name>toVector</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a7a1eebc345f4d1768e1c707cb3d0b15d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aedde7d7c746be363bf845ebce7496274</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a482af1168480ab08df88d4529a71fa2b</anchor>
      <arglist>(const T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>fromVector</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aaf45a111900971de89b0448ffafa29c6</anchor>
      <arglist>(const Vector&lt; cols *rows, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>fromDiagonal</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a2b5423dcaab476595937428092187123</anchor>
      <arglist>(const Vector&lt; DiagonalSize, T &gt; &amp;diagonal) noexcept</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a857a83c191f7e2b43540231bd31f6ca9</anchor>
      <arglist>(T scalar, const RectangularMatrix&lt; cols, rows, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aaed1e091d5eeb50532741f90c39639e9</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;vector, const RectangularMatrix&lt; cols, 1, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ab8a19b385a4f0fd3f5ba1bbeb18e4ccf</anchor>
      <arglist>(T scalar, const RectangularMatrix&lt; cols, rows, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a2b4c9a90c6ef57998d88efe24b223a07</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Magnum::Math::RectangularMatrix&lt; cols, rows, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Resource&lt; Magnum::DebugTools::ForceRendererOptions &gt;</name>
    <filename>classMagnum_1_1Resource.html</filename>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ab6e1f1b111342c493675cdeee71559a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>aadfc7b76c1a904524f94b88bd3e4b9ec</anchor>
      <arglist>(const Resource&lt; Magnum::DebugTools::ForceRendererOptions, Magnum::DebugTools::ForceRendererOptions &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a28c9e646a89ef0e1b7aaf41bd2126a49</anchor>
      <arglist>(Resource&lt; Magnum::DebugTools::ForceRendererOptions, Magnum::DebugTools::ForceRendererOptions &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acaa03453bcac81107851500b0cbf2391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::DebugTools::ForceRendererOptions, Magnum::DebugTools::ForceRendererOptions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a8f59ed76d3e4eb888959dba5efb853bd</anchor>
      <arglist>(const Resource&lt; Magnum::DebugTools::ForceRendererOptions, Magnum::DebugTools::ForceRendererOptions &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::DebugTools::ForceRendererOptions, Magnum::DebugTools::ForceRendererOptions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac990bb8ae690e0a3b2df1126f7e9d064</anchor>
      <arglist>(Resource&lt; Magnum::DebugTools::ForceRendererOptions, Magnum::DebugTools::ForceRendererOptions &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a352d8300dd2f2b8d30d6095fe39f8082</anchor>
      <arglist>(const Resource&lt; Magnum::DebugTools::ForceRendererOptions, Magnum::DebugTools::ForceRendererOptions &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a97f234864749ac4ec196781707cf714b</anchor>
      <arglist>(const Resource&lt; V, W &gt; &amp;) const=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ae14859fe7a66ce771eb7ba4fc95b8156</anchor>
      <arglist>(const Resource&lt; Magnum::DebugTools::ForceRendererOptions, Magnum::DebugTools::ForceRendererOptions &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acbfa5216decd74ddca0247d7d6528af6</anchor>
      <arglist>(const Resource&lt; V, W &gt; &amp;) const=delete</arglist>
    </member>
    <member kind="function">
      <type>ResourceKey</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b2fbf46f0f26789f94b189ef641e5bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ResourceState</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b5f26c073b9b9a03f2f66362c714e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a20a00427fdb3862f1f00adadb604d15c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Magnum::DebugTools::ForceRendererOptions *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac17914776e1ab6dc20cd7ee443ed301f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::DebugTools::ForceRendererOptions &amp;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac0cdc90f2971b9ecccb358d2c2454b76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::DebugTools::ForceRendererOptions *</type>
      <name>operator-&gt;</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a918bd916f8acbf70781b2f9af133e8b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Resource&lt; Magnum::DebugTools::ObjectRendererOptions &gt;</name>
    <filename>classMagnum_1_1Resource.html</filename>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ab6e1f1b111342c493675cdeee71559a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>aadfc7b76c1a904524f94b88bd3e4b9ec</anchor>
      <arglist>(const Resource&lt; Magnum::DebugTools::ObjectRendererOptions, Magnum::DebugTools::ObjectRendererOptions &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a28c9e646a89ef0e1b7aaf41bd2126a49</anchor>
      <arglist>(Resource&lt; Magnum::DebugTools::ObjectRendererOptions, Magnum::DebugTools::ObjectRendererOptions &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acaa03453bcac81107851500b0cbf2391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::DebugTools::ObjectRendererOptions, Magnum::DebugTools::ObjectRendererOptions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a8f59ed76d3e4eb888959dba5efb853bd</anchor>
      <arglist>(const Resource&lt; Magnum::DebugTools::ObjectRendererOptions, Magnum::DebugTools::ObjectRendererOptions &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::DebugTools::ObjectRendererOptions, Magnum::DebugTools::ObjectRendererOptions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac990bb8ae690e0a3b2df1126f7e9d064</anchor>
      <arglist>(Resource&lt; Magnum::DebugTools::ObjectRendererOptions, Magnum::DebugTools::ObjectRendererOptions &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a352d8300dd2f2b8d30d6095fe39f8082</anchor>
      <arglist>(const Resource&lt; Magnum::DebugTools::ObjectRendererOptions, Magnum::DebugTools::ObjectRendererOptions &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a97f234864749ac4ec196781707cf714b</anchor>
      <arglist>(const Resource&lt; V, W &gt; &amp;) const=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ae14859fe7a66ce771eb7ba4fc95b8156</anchor>
      <arglist>(const Resource&lt; Magnum::DebugTools::ObjectRendererOptions, Magnum::DebugTools::ObjectRendererOptions &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acbfa5216decd74ddca0247d7d6528af6</anchor>
      <arglist>(const Resource&lt; V, W &gt; &amp;) const=delete</arglist>
    </member>
    <member kind="function">
      <type>ResourceKey</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b2fbf46f0f26789f94b189ef641e5bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ResourceState</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b5f26c073b9b9a03f2f66362c714e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a20a00427fdb3862f1f00adadb604d15c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Magnum::DebugTools::ObjectRendererOptions *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac17914776e1ab6dc20cd7ee443ed301f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::DebugTools::ObjectRendererOptions &amp;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac0cdc90f2971b9ecccb358d2c2454b76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::DebugTools::ObjectRendererOptions *</type>
      <name>operator-&gt;</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a918bd916f8acbf70781b2f9af133e8b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Resource&lt; Magnum::GL::AbstractShaderProgram, Magnum::Shaders::Flat&lt; dimensions &gt; &gt;</name>
    <filename>classMagnum_1_1Resource.html</filename>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ab6e1f1b111342c493675cdeee71559a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>aadfc7b76c1a904524f94b88bd3e4b9ec</anchor>
      <arglist>(const Resource&lt; Magnum::GL::AbstractShaderProgram, Magnum::Shaders::Flat&lt; dimensions &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a28c9e646a89ef0e1b7aaf41bd2126a49</anchor>
      <arglist>(Resource&lt; Magnum::GL::AbstractShaderProgram, Magnum::Shaders::Flat&lt; dimensions &gt; &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acaa03453bcac81107851500b0cbf2391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::GL::AbstractShaderProgram, Magnum::Shaders::Flat&lt; dimensions &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a8f59ed76d3e4eb888959dba5efb853bd</anchor>
      <arglist>(const Resource&lt; Magnum::GL::AbstractShaderProgram, Magnum::Shaders::Flat&lt; dimensions &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::GL::AbstractShaderProgram, Magnum::Shaders::Flat&lt; dimensions &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac990bb8ae690e0a3b2df1126f7e9d064</anchor>
      <arglist>(Resource&lt; Magnum::GL::AbstractShaderProgram, Magnum::Shaders::Flat&lt; dimensions &gt; &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a352d8300dd2f2b8d30d6095fe39f8082</anchor>
      <arglist>(const Resource&lt; Magnum::GL::AbstractShaderProgram, Magnum::Shaders::Flat&lt; dimensions &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a97f234864749ac4ec196781707cf714b</anchor>
      <arglist>(const Resource&lt; V, W &gt; &amp;) const=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ae14859fe7a66ce771eb7ba4fc95b8156</anchor>
      <arglist>(const Resource&lt; Magnum::GL::AbstractShaderProgram, Magnum::Shaders::Flat&lt; dimensions &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acbfa5216decd74ddca0247d7d6528af6</anchor>
      <arglist>(const Resource&lt; V, W &gt; &amp;) const=delete</arglist>
    </member>
    <member kind="function">
      <type>ResourceKey</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b2fbf46f0f26789f94b189ef641e5bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ResourceState</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b5f26c073b9b9a03f2f66362c714e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a20a00427fdb3862f1f00adadb604d15c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Magnum::Shaders::Flat&lt; dimensions &gt; *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac17914776e1ab6dc20cd7ee443ed301f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::Shaders::Flat&lt; dimensions &gt; &amp;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac0cdc90f2971b9ecccb358d2c2454b76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::Shaders::Flat&lt; dimensions &gt; *</type>
      <name>operator-&gt;</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a918bd916f8acbf70781b2f9af133e8b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Resource&lt; Magnum::GL::AbstractShaderProgram, Magnum::Shaders::VertexColor&lt; dimensions &gt; &gt;</name>
    <filename>classMagnum_1_1Resource.html</filename>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ab6e1f1b111342c493675cdeee71559a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>aadfc7b76c1a904524f94b88bd3e4b9ec</anchor>
      <arglist>(const Resource&lt; Magnum::GL::AbstractShaderProgram, Magnum::Shaders::VertexColor&lt; dimensions &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a28c9e646a89ef0e1b7aaf41bd2126a49</anchor>
      <arglist>(Resource&lt; Magnum::GL::AbstractShaderProgram, Magnum::Shaders::VertexColor&lt; dimensions &gt; &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acaa03453bcac81107851500b0cbf2391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::GL::AbstractShaderProgram, Magnum::Shaders::VertexColor&lt; dimensions &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a8f59ed76d3e4eb888959dba5efb853bd</anchor>
      <arglist>(const Resource&lt; Magnum::GL::AbstractShaderProgram, Magnum::Shaders::VertexColor&lt; dimensions &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::GL::AbstractShaderProgram, Magnum::Shaders::VertexColor&lt; dimensions &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac990bb8ae690e0a3b2df1126f7e9d064</anchor>
      <arglist>(Resource&lt; Magnum::GL::AbstractShaderProgram, Magnum::Shaders::VertexColor&lt; dimensions &gt; &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a352d8300dd2f2b8d30d6095fe39f8082</anchor>
      <arglist>(const Resource&lt; Magnum::GL::AbstractShaderProgram, Magnum::Shaders::VertexColor&lt; dimensions &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a97f234864749ac4ec196781707cf714b</anchor>
      <arglist>(const Resource&lt; V, W &gt; &amp;) const=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ae14859fe7a66ce771eb7ba4fc95b8156</anchor>
      <arglist>(const Resource&lt; Magnum::GL::AbstractShaderProgram, Magnum::Shaders::VertexColor&lt; dimensions &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acbfa5216decd74ddca0247d7d6528af6</anchor>
      <arglist>(const Resource&lt; V, W &gt; &amp;) const=delete</arglist>
    </member>
    <member kind="function">
      <type>ResourceKey</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b2fbf46f0f26789f94b189ef641e5bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ResourceState</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b5f26c073b9b9a03f2f66362c714e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a20a00427fdb3862f1f00adadb604d15c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Magnum::Shaders::VertexColor&lt; dimensions &gt; *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac17914776e1ab6dc20cd7ee443ed301f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::Shaders::VertexColor&lt; dimensions &gt; &amp;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac0cdc90f2971b9ecccb358d2c2454b76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::Shaders::VertexColor&lt; dimensions &gt; *</type>
      <name>operator-&gt;</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a918bd916f8acbf70781b2f9af133e8b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Resource&lt; Magnum::GL::Mesh &gt;</name>
    <filename>classMagnum_1_1Resource.html</filename>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ab6e1f1b111342c493675cdeee71559a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>aadfc7b76c1a904524f94b88bd3e4b9ec</anchor>
      <arglist>(const Resource&lt; Magnum::GL::Mesh, Magnum::GL::Mesh &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a28c9e646a89ef0e1b7aaf41bd2126a49</anchor>
      <arglist>(Resource&lt; Magnum::GL::Mesh, Magnum::GL::Mesh &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acaa03453bcac81107851500b0cbf2391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::GL::Mesh, Magnum::GL::Mesh &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a8f59ed76d3e4eb888959dba5efb853bd</anchor>
      <arglist>(const Resource&lt; Magnum::GL::Mesh, Magnum::GL::Mesh &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::GL::Mesh, Magnum::GL::Mesh &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac990bb8ae690e0a3b2df1126f7e9d064</anchor>
      <arglist>(Resource&lt; Magnum::GL::Mesh, Magnum::GL::Mesh &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a352d8300dd2f2b8d30d6095fe39f8082</anchor>
      <arglist>(const Resource&lt; Magnum::GL::Mesh, Magnum::GL::Mesh &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a97f234864749ac4ec196781707cf714b</anchor>
      <arglist>(const Resource&lt; V, W &gt; &amp;) const=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ae14859fe7a66ce771eb7ba4fc95b8156</anchor>
      <arglist>(const Resource&lt; Magnum::GL::Mesh, Magnum::GL::Mesh &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acbfa5216decd74ddca0247d7d6528af6</anchor>
      <arglist>(const Resource&lt; V, W &gt; &amp;) const=delete</arglist>
    </member>
    <member kind="function">
      <type>ResourceKey</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b2fbf46f0f26789f94b189ef641e5bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ResourceState</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b5f26c073b9b9a03f2f66362c714e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a20a00427fdb3862f1f00adadb604d15c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Magnum::GL::Mesh *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac17914776e1ab6dc20cd7ee443ed301f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::GL::Mesh &amp;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac0cdc90f2971b9ecccb358d2c2454b76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::GL::Mesh *</type>
      <name>operator-&gt;</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a918bd916f8acbf70781b2f9af133e8b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourceManager&lt; Magnum::Implementation::ResourceManagerLocalInstance, GL::AbstractShaderProgram, GL::Buffer, GL::Mesh, GL::MeshView, DebugTools::ForceRendererOptions, DebugTools::ObjectRendererOptions &gt;</name>
    <filename>classMagnum_1_1ResourceManager.html</filename>
  </compound>
  <compound kind="struct">
    <name>std::hash&lt; Magnum::ResourceKey &gt;</name>
    <filename>structstd_1_1hash_3_01Magnum_1_1ResourceKey_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>TrackViewStorage&lt; Float &gt;</name>
    <filename>classMagnum_1_1Animation_1_1TrackViewStorage.html</filename>
    <member kind="typedef">
      <type>Float</type>
      <name>KeyType</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackViewStorage.html</anchorfile>
      <anchor>a7c68777368b76eda068933cc6c91428f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Interpolation</type>
      <name>interpolation</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackViewStorage.html</anchorfile>
      <anchor>acd998f4426d31750f4a6c384113d4e04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Extrapolation</type>
      <name>before</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackViewStorage.html</anchorfile>
      <anchor>a54e624ea4ed50af52fe6a15c97ac593e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Extrapolation</type>
      <name>after</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackViewStorage.html</anchorfile>
      <anchor>a9077f3fcbf9fa011b66f09ece66866e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Math::Range1D&lt; Float &gt;</type>
      <name>duration</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackViewStorage.html</anchorfile>
      <anchor>a046c780edffd3d47dc3c098d47e5967a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackViewStorage.html</anchorfile>
      <anchor>aca871b9428242d0c3230c4ad3cac6d6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView1D&lt; const Float &gt;</type>
      <name>keys</name>
      <anchorfile>classMagnum_1_1Animation_1_1TrackViewStorage.html</anchorfile>
      <anchor>a4bebdbeccc416c77fd91af564dd4f57f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Unit&lt; Deg, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1Unit.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ab2e8497e07678a07d34a06afa2f626e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a618525f8bcc09d925e2ad4df434088d7</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a92df661b8b5708e9163143120ef8c146</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aae41c717c1a7e3d87249b094e2e7a2cc</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a12be119a79e2633d6a63bc8725d6254e</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ad3433bd988806231e5912b8f9c97cd12</anchor>
      <arglist>(Unit&lt; Deg, U &gt; value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aef1230eb1f0f105cc5fa361252fd82ba</anchor>
      <arglist>(const Unit&lt; Deg, T &gt; &amp;other) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator T</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ad3daaa7512ba4921a3ce45a5834ebccd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a893631dd50266c6c2220a10be32141c8</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ae16bd77a7b2792454325f9a8dcba2408</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a16cd8c8a1097cb629abec4cd41cd29bc</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a94d88d9b634f4fb6db87f26cd06edc10</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>add731be31fd911fc4a312eb3f32fa636</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>abc5312ce70aa7e355e7725a4d041a90a</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Deg, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aa97419bbdb20717a9fe338e433b2c980</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Deg, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a83f44ad7991944e5dfa013998851bfc6</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Deg, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aacb4f2522bf1dd729c588e7f58cbdd84</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Deg, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>abb2ad665f946a3f4758f69f9da742eab</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Deg, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a331d372da95342b27e44314083b288d6</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Deg, T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a2ce61d9c75694b1a19429804e7e9e025</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Deg, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a43ea20c0de684591365881acb649e6b8</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Deg, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a0f6cf00382251fa20c2b3a2a1c5b4424</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Deg, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a35f89b0c0646977e2cc741542c88bfac</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a9210ee22ce427d36f4a6c9d4f56cd1d2</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Deg, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a5a4b711ccc9f18f9dbee94995c3520f4</anchor>
      <arglist>(typename std::common_type&lt; T &gt;::type number, const Unit&lt; Deg, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Unit&lt; Rad, Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Unit.html</filename>
    <member kind="typedef">
      <type>Float</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ab2e8497e07678a07d34a06afa2f626e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a618525f8bcc09d925e2ad4df434088d7</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a92df661b8b5708e9163143120ef8c146</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aae41c717c1a7e3d87249b094e2e7a2cc</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a12be119a79e2633d6a63bc8725d6254e</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ad3433bd988806231e5912b8f9c97cd12</anchor>
      <arglist>(Unit&lt; Rad, U &gt; value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aef1230eb1f0f105cc5fa361252fd82ba</anchor>
      <arglist>(const Unit&lt; Rad, Float &gt; &amp;other) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator Float</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ad3daaa7512ba4921a3ce45a5834ebccd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a893631dd50266c6c2220a10be32141c8</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ae16bd77a7b2792454325f9a8dcba2408</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a16cd8c8a1097cb629abec4cd41cd29bc</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a94d88d9b634f4fb6db87f26cd06edc10</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>add731be31fd911fc4a312eb3f32fa636</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>abc5312ce70aa7e355e7725a4d041a90a</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aa97419bbdb20717a9fe338e433b2c980</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a83f44ad7991944e5dfa013998851bfc6</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Rad, Float &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aacb4f2522bf1dd729c588e7f58cbdd84</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, Float &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>abb2ad665f946a3f4758f69f9da742eab</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Rad, Float &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a331d372da95342b27e44314083b288d6</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Rad, Float &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a2ce61d9c75694b1a19429804e7e9e025</anchor>
      <arglist>(Float number)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, Float &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a43ea20c0de684591365881acb649e6b8</anchor>
      <arglist>(Float number) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Rad, Float &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a0f6cf00382251fa20c2b3a2a1c5b4424</anchor>
      <arglist>(Float number)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a35f89b0c0646977e2cc741542c88bfac</anchor>
      <arglist>(Float number) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a9210ee22ce427d36f4a6c9d4f56cd1d2</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, Float &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a5a4b711ccc9f18f9dbee94995c3520f4</anchor>
      <arglist>(typename std::common_type&lt; Float &gt;::type number, const Unit&lt; Rad, Float &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Unit&lt; Rad, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1Unit.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ab2e8497e07678a07d34a06afa2f626e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a618525f8bcc09d925e2ad4df434088d7</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a92df661b8b5708e9163143120ef8c146</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aae41c717c1a7e3d87249b094e2e7a2cc</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a12be119a79e2633d6a63bc8725d6254e</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ad3433bd988806231e5912b8f9c97cd12</anchor>
      <arglist>(Unit&lt; Rad, U &gt; value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aef1230eb1f0f105cc5fa361252fd82ba</anchor>
      <arglist>(const Unit&lt; Rad, T &gt; &amp;other) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator T</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ad3daaa7512ba4921a3ce45a5834ebccd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a893631dd50266c6c2220a10be32141c8</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ae16bd77a7b2792454325f9a8dcba2408</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a16cd8c8a1097cb629abec4cd41cd29bc</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a94d88d9b634f4fb6db87f26cd06edc10</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>add731be31fd911fc4a312eb3f32fa636</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>abc5312ce70aa7e355e7725a4d041a90a</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aa97419bbdb20717a9fe338e433b2c980</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a83f44ad7991944e5dfa013998851bfc6</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Rad, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aacb4f2522bf1dd729c588e7f58cbdd84</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>abb2ad665f946a3f4758f69f9da742eab</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Rad, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a331d372da95342b27e44314083b288d6</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Rad, T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a2ce61d9c75694b1a19429804e7e9e025</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a43ea20c0de684591365881acb649e6b8</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Rad, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a0f6cf00382251fa20c2b3a2a1c5b4424</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a35f89b0c0646977e2cc741542c88bfac</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a9210ee22ce427d36f4a6c9d4f56cd1d2</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a5a4b711ccc9f18f9dbee94995c3520f4</anchor>
      <arglist>(typename std::common_type&lt; T &gt;::type number, const Unit&lt; Rad, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector2&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector2.html</filename>
    <base>Vector&lt; 2, Float &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a8ee62c69a2005bbd1b0e3f5c89b52c4f</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>aeec1dd75eec65d056b6e418527181895</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae39d10df93e68e4d0415ada257e826de</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a594b5a10001b0a5626011490aee1b553</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>abc9c7d99a718e2280028cd40cbfcb2c6</anchor>
      <arglist>(Float x, Float y) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a271e60cacd2cf82cdccc2c6be2d1d832</anchor>
      <arglist>(const Vector&lt; 2, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae15a00d470ae74d85596deb6ba5ee32c</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a4f5d0735664c9600830a6cefbdac221c</anchor>
      <arglist>(const Vector&lt; 2, Float &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a4d5125c64aec36d08023c2e82f6acbdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ad0287e9d975c15c118e8bb3872c2c948</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a65a74d0a2d9ab8ffa032c2085b2ebc7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a9b87fa8e49850e7c5469bdb7a025386e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt;</type>
      <name>perpendicular</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ac4bf17cef48a5b842092595e1d7a3881</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>aspectRatio</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a4f097e00b03c17ffe212da2c8371d614</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; Float &gt;</type>
      <name>xAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a90795a3ca77e0df1017cdbcb9552e3f5</anchor>
      <arglist>(Float length=Float(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; Float &gt;</type>
      <name>yAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae842e564c385b5c6d7a3bf6a7710798a</anchor>
      <arglist>(Float length=Float(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; Float &gt;</type>
      <name>xScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a0ea3ef7c48c5c304f8ca2304138ead91</anchor>
      <arglist>(Float scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; Float &gt;</type>
      <name>yScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae24066f2e0ad888faeaa839149068586</anchor>
      <arglist>(Float scale)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector2&lt; Int &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector2.html</filename>
    <base>Vector&lt; 2, Int &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a8ee62c69a2005bbd1b0e3f5c89b52c4f</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>aeec1dd75eec65d056b6e418527181895</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae39d10df93e68e4d0415ada257e826de</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a594b5a10001b0a5626011490aee1b553</anchor>
      <arglist>(Int value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>abc9c7d99a718e2280028cd40cbfcb2c6</anchor>
      <arglist>(Int x, Int y) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a271e60cacd2cf82cdccc2c6be2d1d832</anchor>
      <arglist>(const Vector&lt; 2, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae15a00d470ae74d85596deb6ba5ee32c</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a4f5d0735664c9600830a6cefbdac221c</anchor>
      <arglist>(const Vector&lt; 2, Int &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a4d5125c64aec36d08023c2e82f6acbdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ad0287e9d975c15c118e8bb3872c2c948</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a65a74d0a2d9ab8ffa032c2085b2ebc7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a9b87fa8e49850e7c5469bdb7a025386e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Int &gt;</type>
      <name>perpendicular</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ac4bf17cef48a5b842092595e1d7a3881</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>aspectRatio</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a4f097e00b03c17ffe212da2c8371d614</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; Int &gt;</type>
      <name>xAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a90795a3ca77e0df1017cdbcb9552e3f5</anchor>
      <arglist>(Int length=Int(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; Int &gt;</type>
      <name>yAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae842e564c385b5c6d7a3bf6a7710798a</anchor>
      <arglist>(Int length=Int(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; Int &gt;</type>
      <name>xScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a0ea3ef7c48c5c304f8ca2304138ead91</anchor>
      <arglist>(Int scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; Int &gt;</type>
      <name>yScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae24066f2e0ad888faeaa839149068586</anchor>
      <arglist>(Int scale)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector3&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector3.html</filename>
    <base>Vector&lt; 3, Float &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a694547ad274e9d0655f8b34899f8f2d8</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a96ab187a56a28a976f424efa2cbe6a62</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a68b81fc43343ea75bb6bd4c705aea7e0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a61a987b9bd7ae821f95fbe67d4d3a60b</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ae802b9e422b70b200a70b7c8f40625dc</anchor>
      <arglist>(Float x, Float y, Float z) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a75ef10a3f27446ff9bd02b1dd1b5f58d</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;xy, Float z) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a779b7e5a6262b2cfd9577414dc63c716</anchor>
      <arglist>(const Vector&lt; 3, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a058879e4b043bcd45e4387f5051619cb</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a25e3da8ce96c645cf2a782305a2b12a5</anchor>
      <arglist>(const Vector&lt; 3, Float &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a30c538699bff804fb2fb205e1e30d207</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ace9c68d6dab4c075e153afde40e743c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ae51e27f72cf5db9142a8761a4dce56fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>adc79d0b323fc3f415833bcf29edeb406</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a194609d99092b9f3443208f355c685ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>aa460c7193ffbf871888912b3007a4cbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a4b90a303fe009795f5a48214da862be9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ae11cceab1684739b42ee4ccba460c307</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a5635d89362bf6559fb014d0ecabc6813</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a46a00528415633e71c90790d172ca86f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a240568b4069ed8aabd9eb7bba3d4a8d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a0d8c76bd32ec83265fe53d535664b172</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt; &amp;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>aedf182498210bb6999346591599ffb44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector2&lt; Float &gt;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a286fe8f7831d2948b0f741f206b43ac5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Float &gt;</type>
      <name>xAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a922be261842df8d174cdcfe1e1eb72da</anchor>
      <arglist>(Float length=Float(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Float &gt;</type>
      <name>yAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a49a18966ee5980786f9e42162febf82f</anchor>
      <arglist>(Float length=Float(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Float &gt;</type>
      <name>zAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a9476a5845a4b28caa36c8cb75298f0db</anchor>
      <arglist>(Float length=Float(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Float &gt;</type>
      <name>xScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a2272fdcf3efb0aa0ea7c79e1927c5b91</anchor>
      <arglist>(Float scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Float &gt;</type>
      <name>yScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a84688a819f616d059d472e92c6f80f54</anchor>
      <arglist>(Float scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Float &gt;</type>
      <name>zScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ada1b75b4ea58dfe1771d0593e8c2e071</anchor>
      <arglist>(Float scale)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector3&lt; Int &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector3.html</filename>
    <base>Vector&lt; 3, Int &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a694547ad274e9d0655f8b34899f8f2d8</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a96ab187a56a28a976f424efa2cbe6a62</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a68b81fc43343ea75bb6bd4c705aea7e0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a61a987b9bd7ae821f95fbe67d4d3a60b</anchor>
      <arglist>(Int value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ae802b9e422b70b200a70b7c8f40625dc</anchor>
      <arglist>(Int x, Int y, Int z) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a75ef10a3f27446ff9bd02b1dd1b5f58d</anchor>
      <arglist>(const Vector2&lt; Int &gt; &amp;xy, Int z) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a779b7e5a6262b2cfd9577414dc63c716</anchor>
      <arglist>(const Vector&lt; 3, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a058879e4b043bcd45e4387f5051619cb</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a25e3da8ce96c645cf2a782305a2b12a5</anchor>
      <arglist>(const Vector&lt; 3, Int &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a30c538699bff804fb2fb205e1e30d207</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ace9c68d6dab4c075e153afde40e743c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ae51e27f72cf5db9142a8761a4dce56fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>adc79d0b323fc3f415833bcf29edeb406</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a194609d99092b9f3443208f355c685ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>aa460c7193ffbf871888912b3007a4cbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a4b90a303fe009795f5a48214da862be9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ae11cceab1684739b42ee4ccba460c307</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a5635d89362bf6559fb014d0ecabc6813</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a46a00528415633e71c90790d172ca86f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a240568b4069ed8aabd9eb7bba3d4a8d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a0d8c76bd32ec83265fe53d535664b172</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Int &gt; &amp;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>aedf182498210bb6999346591599ffb44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector2&lt; Int &gt;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a286fe8f7831d2948b0f741f206b43ac5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Int &gt;</type>
      <name>xAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a922be261842df8d174cdcfe1e1eb72da</anchor>
      <arglist>(Int length=Int(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Int &gt;</type>
      <name>yAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a49a18966ee5980786f9e42162febf82f</anchor>
      <arglist>(Int length=Int(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Int &gt;</type>
      <name>zAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a9476a5845a4b28caa36c8cb75298f0db</anchor>
      <arglist>(Int length=Int(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Int &gt;</type>
      <name>xScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a2272fdcf3efb0aa0ea7c79e1927c5b91</anchor>
      <arglist>(Int scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Int &gt;</type>
      <name>yScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a84688a819f616d059d472e92c6f80f54</anchor>
      <arglist>(Int scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Int &gt;</type>
      <name>zScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ada1b75b4ea58dfe1771d0593e8c2e071</anchor>
      <arglist>(Int scale)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector4&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector4.html</filename>
    <base>Vector&lt; 4, Float &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aa42da5920b0c7b9a22c231a7ce2023ec</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ad203bf8fe5464c2139ec449e945b4ad2</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ae6892ff7c3ed4626ea99b73f29bc9235</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ac311a28a30f9ce485a2a61f18c4c801b</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a71c9a0ed0b5b185672501fca3c51a98c</anchor>
      <arglist>(Float x, Float y, Float z, Float w) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aff20895adccd77f096e8a454533312a6</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;xyz, Float w) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ab00c86b71d9bb66d4216b31b3b5b86cf</anchor>
      <arglist>(const Vector&lt; 4, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a485318584ef67c13775b2885efb31671</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a99ad9f8b03a4a5db2bafdd38d0bf820b</anchor>
      <arglist>(const Vector&lt; 4, Float &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a44cc44ad96da15bf040b711fc433c68e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a4d4bab019c30ecf7a79634db10495158</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a36379d5ad3bf107bae1350b79053162b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>acb3a125702bba6fef33cfffa1440e012</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a2ca432de620e30419826ab63d01dc11e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ae2bd9cc7971d3e77354f1db850808f0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>w</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a7d629f87754fb6f3c588594c4bf23f6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>w</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aa69d10f9fad88eb586f1818c7881cb3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a63f020a0b0efecc40b7e77a6a5c8faab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a0173103ea7d789ab2459d86490953f84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a0a4427077479ae52b3d208e15c0e915f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ad9e718ad972f7fc0dc8b15a38e805c9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aa6d70fccd810e231fe5b8917d2ce0ab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aceb19be42664241069c5ea8329f82f96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>a</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ac18be154bdf0d5a6c52f6dbcd1a33139</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>a</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ae710faf1d4c0d9e70bbcf952e24d3e94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt; &amp;</type>
      <name>xyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a22aae9d118103c82fb5411b8c5616d62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector3&lt; Float &gt;</type>
      <name>xyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ae271cab96f56a4f2ef444c57f26f7a77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt; &amp;</type>
      <name>rgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aa731470df39b494e1c65f6d12a2551fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector3&lt; Float &gt;</type>
      <name>rgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a59678977b93bc7372db7de5d4b1255dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt; &amp;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a3325cd512caa0c56c49bb74a022dc965</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector2&lt; Float &gt;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>af2662a6b8a9433c118be6fa0f57d1955</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector4&lt; Float &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a2ffd1bba90fe992a80655bb192075d4c</anchor>
      <arglist>(const Vector&lt; otherSize, Float &gt; &amp;a, Float xyz, Float w)</arglist>
    </member>
    <member kind="function">
      <type>Vector4&lt; Float &gt;</type>
      <name>planeEquation</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a0c975a8c8c6bbff31a943561f9adf681</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;p0, const Vector3&lt; Float &gt; &amp;p1, const Vector3&lt; Float &gt; &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>Vector4&lt; Float &gt;</type>
      <name>planeEquation</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>adcb3b9fbc37a6d26d5330b1e5c84d143</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;normal, const Vector3&lt; Float &gt; &amp;point)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector4&lt; Int &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector4.html</filename>
    <base>Vector&lt; 4, Int &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aa42da5920b0c7b9a22c231a7ce2023ec</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ad203bf8fe5464c2139ec449e945b4ad2</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ae6892ff7c3ed4626ea99b73f29bc9235</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ac311a28a30f9ce485a2a61f18c4c801b</anchor>
      <arglist>(Int value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a71c9a0ed0b5b185672501fca3c51a98c</anchor>
      <arglist>(Int x, Int y, Int z, Int w) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aff20895adccd77f096e8a454533312a6</anchor>
      <arglist>(const Vector3&lt; Int &gt; &amp;xyz, Int w) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ab00c86b71d9bb66d4216b31b3b5b86cf</anchor>
      <arglist>(const Vector&lt; 4, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a485318584ef67c13775b2885efb31671</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a99ad9f8b03a4a5db2bafdd38d0bf820b</anchor>
      <arglist>(const Vector&lt; 4, Int &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a44cc44ad96da15bf040b711fc433c68e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a4d4bab019c30ecf7a79634db10495158</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a36379d5ad3bf107bae1350b79053162b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>acb3a125702bba6fef33cfffa1440e012</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a2ca432de620e30419826ab63d01dc11e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ae2bd9cc7971d3e77354f1db850808f0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>w</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a7d629f87754fb6f3c588594c4bf23f6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>w</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aa69d10f9fad88eb586f1818c7881cb3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a63f020a0b0efecc40b7e77a6a5c8faab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a0173103ea7d789ab2459d86490953f84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a0a4427077479ae52b3d208e15c0e915f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ad9e718ad972f7fc0dc8b15a38e805c9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aa6d70fccd810e231fe5b8917d2ce0ab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aceb19be42664241069c5ea8329f82f96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>a</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ac18be154bdf0d5a6c52f6dbcd1a33139</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>a</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ae710faf1d4c0d9e70bbcf952e24d3e94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Int &gt; &amp;</type>
      <name>xyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a22aae9d118103c82fb5411b8c5616d62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector3&lt; Int &gt;</type>
      <name>xyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ae271cab96f56a4f2ef444c57f26f7a77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Int &gt; &amp;</type>
      <name>rgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aa731470df39b494e1c65f6d12a2551fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector3&lt; Int &gt;</type>
      <name>rgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a59678977b93bc7372db7de5d4b1255dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Int &gt; &amp;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a3325cd512caa0c56c49bb74a022dc965</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector2&lt; Int &gt;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>af2662a6b8a9433c118be6fa0f57d1955</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector4&lt; Int &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a2ffd1bba90fe992a80655bb192075d4c</anchor>
      <arglist>(const Vector&lt; otherSize, Int &gt; &amp;a, Int xyz, Int w)</arglist>
    </member>
    <member kind="function">
      <type>Vector4&lt; Int &gt;</type>
      <name>planeEquation</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a0c975a8c8c6bbff31a943561f9adf681</anchor>
      <arglist>(const Vector3&lt; Int &gt; &amp;p0, const Vector3&lt; Int &gt; &amp;p1, const Vector3&lt; Int &gt; &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>Vector4&lt; Int &gt;</type>
      <name>planeEquation</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>adcb3b9fbc37a6d26d5330b1e5c84d143</anchor>
      <arglist>(const Vector3&lt; Int &gt; &amp;normal, const Vector3&lt; Int &gt; &amp;point)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; 2, Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>Float</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0634d37e5a1519ace4b803e06ecb43cfa2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c134c9f5cdb4e5c6886d8c73f2b57d1</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac3524040cfdd9709bdb56242e5efd882</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a153841d1ca03ab3811d3bf43f381d782</anchor>
      <arglist>(Float first, U... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b4c806af871f8861814bb6eeff4395f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad1ef6a051bb081ff81c5a4070cb4fdf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6fede358bde75530578036f5144f295e</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab905b0efb03cf6e09395d1e9251f3860</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af75dd213f994f154cd693056b94426e2</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9f5051aa0ceaa935da2ea1c86ee9763f</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a84a88da37683e57a59ab30e73e737e51</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a190de3ad0b3fc8688348a45b3bb68588</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7137a5c0dd802f5f587c0166251ec271</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae3d83b814def0dc539ef92f268d06ef6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e1dcc1ee8a2bf7bae0ac4cbe507eb16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91edf5e7b6b815bf5a46c87b0cc34753</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dcb5089b460ab47a0a3d9b06c3f43fc</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b9157115c3f38190ab01ae9a43bc64c</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2b7f88740a354041a7874b67b45a7068</anchor>
      <arglist>(Float scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfd197a1ed9b9ba2a7b8b6f3e2ffd57e</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af48972b84492b789e790bbc4bbc91008</anchor>
      <arglist>(Float scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfc51e8b830e24a036c5fd533226306d</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ece942a9d2413efa3a80d203a0fb0f2</anchor>
      <arglist>(Float scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a997212fb25ecc5086fdc40bee98f5a54</anchor>
      <arglist>(Float scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0c4ee399d5519dce001580496d7725be</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ff59211affc895b3fce601521204cba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aacb3f8fb6e72a6320ee1d54573b984e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa36b88833846a6273d615c9dd5162ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abf62db06660ed3400c2c821650685d18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18a0d90b9d68f689f78dfbae207baf14</anchor>
      <arglist>(Float length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a56a53e47640fa101a07b09829a690fa9</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1d7fcd5a855055ff6a3f8211ec2acfbf</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, Float &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1f04a8aab1c8e61ab927b72d27b36fbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ace6841f09c905a8d28d1717ac9297738</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abad4faef8f2d96d9f911a00762506ee4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a25b77344cc1f8d3c330f77584660791b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a86a9ba7941653ed31447ad09cb855f50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Float, Float &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a981118d0b1a6101c6b8df136dc08a5f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, Float &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(Float *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, Float &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const Float *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, Float &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, Float &gt; &amp;a, Float value=Float(0))</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae51db32d9dd90d4afdedcf008e15a5fb</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2802be457dc38a0090c13074a45e5d23</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1ea63308ee1f0174b602004293189a5b</anchor>
      <arglist>(Float scalar, const Vector&lt; size, Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e4baf5c1f33fe5db74b29835e356654</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa947967a1311fcc5edbb52332b418e46</anchor>
      <arglist>(FloatingPoint scalar, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa21a302814733abb0d4d59de87421001</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac2100f59a9660445d7df3b703daafff</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a320e28a1b95546d77d2603fa5da088cf</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a740e684ba6af1944fe621ab15600e738</anchor>
      <arglist>(Float scalar, const Vector&lt; size, Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af26b82bbc46d722b34979df93bd7c344</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;a, const Vector&lt; size, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>equal</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5b9f7afdebb621e14931b9199bb57920</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;a, const Vector&lt; size, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>notEqual</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9c34112dad523fa92071f5cad7f01d3c</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;a, const Vector&lt; size, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; FloatingPoint &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aee8c44413ae416ea25a03146bf8a5484</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;normalizedA, const Vector&lt; size, FloatingPoint &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator &amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af62ef89cd21a0f1f3e860f5e1a50a68e</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, Float &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; 2, Int &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>Int</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0634d37e5a1519ace4b803e06ecb43cfa2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c134c9f5cdb4e5c6886d8c73f2b57d1</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac3524040cfdd9709bdb56242e5efd882</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a153841d1ca03ab3811d3bf43f381d782</anchor>
      <arglist>(Int first, U... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(Int value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b4c806af871f8861814bb6eeff4395f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Int *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad1ef6a051bb081ff81c5a4070cb4fdf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6fede358bde75530578036f5144f295e</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab905b0efb03cf6e09395d1e9251f3860</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af75dd213f994f154cd693056b94426e2</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9f5051aa0ceaa935da2ea1c86ee9763f</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a84a88da37683e57a59ab30e73e737e51</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a190de3ad0b3fc8688348a45b3bb68588</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7137a5c0dd802f5f587c0166251ec271</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae3d83b814def0dc539ef92f268d06ef6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e1dcc1ee8a2bf7bae0ac4cbe507eb16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91edf5e7b6b815bf5a46c87b0cc34753</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dcb5089b460ab47a0a3d9b06c3f43fc</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b9157115c3f38190ab01ae9a43bc64c</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2b7f88740a354041a7874b67b45a7068</anchor>
      <arglist>(Int scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfd197a1ed9b9ba2a7b8b6f3e2ffd57e</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af48972b84492b789e790bbc4bbc91008</anchor>
      <arglist>(Int scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfc51e8b830e24a036c5fd533226306d</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ece942a9d2413efa3a80d203a0fb0f2</anchor>
      <arglist>(Int scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a997212fb25ecc5086fdc40bee98f5a54</anchor>
      <arglist>(Int scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0c4ee399d5519dce001580496d7725be</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ff59211affc895b3fce601521204cba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aacb3f8fb6e72a6320ee1d54573b984e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa36b88833846a6273d615c9dd5162ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abf62db06660ed3400c2c821650685d18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18a0d90b9d68f689f78dfbae207baf14</anchor>
      <arglist>(Int length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a56a53e47640fa101a07b09829a690fa9</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1d7fcd5a855055ff6a3f8211ec2acfbf</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, Int &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1f04a8aab1c8e61ab927b72d27b36fbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ace6841f09c905a8d28d1717ac9297738</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abad4faef8f2d96d9f911a00762506ee4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a25b77344cc1f8d3c330f77584660791b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a86a9ba7941653ed31447ad09cb855f50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Int, Int &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a981118d0b1a6101c6b8df136dc08a5f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, Int &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(Int *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, Int &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const Int *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, Int &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, Int &gt; &amp;a, Int value=Int(0))</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae51db32d9dd90d4afdedcf008e15a5fb</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2802be457dc38a0090c13074a45e5d23</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1ea63308ee1f0174b602004293189a5b</anchor>
      <arglist>(Int scalar, const Vector&lt; size, Int &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e4baf5c1f33fe5db74b29835e356654</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa947967a1311fcc5edbb52332b418e46</anchor>
      <arglist>(FloatingPoint scalar, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa21a302814733abb0d4d59de87421001</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac2100f59a9660445d7df3b703daafff</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a320e28a1b95546d77d2603fa5da088cf</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a740e684ba6af1944fe621ab15600e738</anchor>
      <arglist>(Int scalar, const Vector&lt; size, Int &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af26b82bbc46d722b34979df93bd7c344</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;a, const Vector&lt; size, Int &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>equal</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5b9f7afdebb621e14931b9199bb57920</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;a, const Vector&lt; size, Int &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>notEqual</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9c34112dad523fa92071f5cad7f01d3c</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;a, const Vector&lt; size, Int &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; FloatingPoint &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aee8c44413ae416ea25a03146bf8a5484</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;normalizedA, const Vector&lt; size, FloatingPoint &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator &amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af62ef89cd21a0f1f3e860f5e1a50a68e</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, Int &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; 2, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0634d37e5a1519ace4b803e06ecb43cfa2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c134c9f5cdb4e5c6886d8c73f2b57d1</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac3524040cfdd9709bdb56242e5efd882</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a153841d1ca03ab3811d3bf43f381d782</anchor>
      <arglist>(T first, U... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b4c806af871f8861814bb6eeff4395f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad1ef6a051bb081ff81c5a4070cb4fdf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6fede358bde75530578036f5144f295e</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab905b0efb03cf6e09395d1e9251f3860</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af75dd213f994f154cd693056b94426e2</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9f5051aa0ceaa935da2ea1c86ee9763f</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a84a88da37683e57a59ab30e73e737e51</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a190de3ad0b3fc8688348a45b3bb68588</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7137a5c0dd802f5f587c0166251ec271</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae3d83b814def0dc539ef92f268d06ef6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e1dcc1ee8a2bf7bae0ac4cbe507eb16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91edf5e7b6b815bf5a46c87b0cc34753</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dcb5089b460ab47a0a3d9b06c3f43fc</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b9157115c3f38190ab01ae9a43bc64c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2b7f88740a354041a7874b67b45a7068</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfd197a1ed9b9ba2a7b8b6f3e2ffd57e</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af48972b84492b789e790bbc4bbc91008</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfc51e8b830e24a036c5fd533226306d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ece942a9d2413efa3a80d203a0fb0f2</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a997212fb25ecc5086fdc40bee98f5a54</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0c4ee399d5519dce001580496d7725be</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ff59211affc895b3fce601521204cba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aacb3f8fb6e72a6320ee1d54573b984e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa36b88833846a6273d615c9dd5162ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abf62db06660ed3400c2c821650685d18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18a0d90b9d68f689f78dfbae207baf14</anchor>
      <arglist>(T length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a56a53e47640fa101a07b09829a690fa9</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1d7fcd5a855055ff6a3f8211ec2acfbf</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, T &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1f04a8aab1c8e61ab927b72d27b36fbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ace6841f09c905a8d28d1717ac9297738</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abad4faef8f2d96d9f911a00762506ee4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a25b77344cc1f8d3c330f77584660791b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a86a9ba7941653ed31447ad09cb855f50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a981118d0b1a6101c6b8df136dc08a5f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, T &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, T &gt; &amp;a, T value=T(0))</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae51db32d9dd90d4afdedcf008e15a5fb</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2802be457dc38a0090c13074a45e5d23</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1ea63308ee1f0174b602004293189a5b</anchor>
      <arglist>(T scalar, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e4baf5c1f33fe5db74b29835e356654</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa947967a1311fcc5edbb52332b418e46</anchor>
      <arglist>(FloatingPoint scalar, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa21a302814733abb0d4d59de87421001</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac2100f59a9660445d7df3b703daafff</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a320e28a1b95546d77d2603fa5da088cf</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a740e684ba6af1944fe621ab15600e738</anchor>
      <arglist>(T scalar, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af26b82bbc46d722b34979df93bd7c344</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>equal</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5b9f7afdebb621e14931b9199bb57920</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>notEqual</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9c34112dad523fa92071f5cad7f01d3c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; FloatingPoint &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aee8c44413ae416ea25a03146bf8a5484</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;normalizedA, const Vector&lt; size, FloatingPoint &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator &amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af62ef89cd21a0f1f3e860f5e1a50a68e</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; 3, Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>Float</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0634d37e5a1519ace4b803e06ecb43cfa2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c134c9f5cdb4e5c6886d8c73f2b57d1</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac3524040cfdd9709bdb56242e5efd882</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a153841d1ca03ab3811d3bf43f381d782</anchor>
      <arglist>(Float first, U... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b4c806af871f8861814bb6eeff4395f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad1ef6a051bb081ff81c5a4070cb4fdf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6fede358bde75530578036f5144f295e</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab905b0efb03cf6e09395d1e9251f3860</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af75dd213f994f154cd693056b94426e2</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9f5051aa0ceaa935da2ea1c86ee9763f</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a84a88da37683e57a59ab30e73e737e51</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a190de3ad0b3fc8688348a45b3bb68588</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7137a5c0dd802f5f587c0166251ec271</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae3d83b814def0dc539ef92f268d06ef6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e1dcc1ee8a2bf7bae0ac4cbe507eb16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91edf5e7b6b815bf5a46c87b0cc34753</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dcb5089b460ab47a0a3d9b06c3f43fc</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b9157115c3f38190ab01ae9a43bc64c</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2b7f88740a354041a7874b67b45a7068</anchor>
      <arglist>(Float scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfd197a1ed9b9ba2a7b8b6f3e2ffd57e</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af48972b84492b789e790bbc4bbc91008</anchor>
      <arglist>(Float scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfc51e8b830e24a036c5fd533226306d</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ece942a9d2413efa3a80d203a0fb0f2</anchor>
      <arglist>(Float scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a997212fb25ecc5086fdc40bee98f5a54</anchor>
      <arglist>(Float scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0c4ee399d5519dce001580496d7725be</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ff59211affc895b3fce601521204cba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aacb3f8fb6e72a6320ee1d54573b984e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa36b88833846a6273d615c9dd5162ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abf62db06660ed3400c2c821650685d18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18a0d90b9d68f689f78dfbae207baf14</anchor>
      <arglist>(Float length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a56a53e47640fa101a07b09829a690fa9</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1d7fcd5a855055ff6a3f8211ec2acfbf</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, Float &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1f04a8aab1c8e61ab927b72d27b36fbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ace6841f09c905a8d28d1717ac9297738</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abad4faef8f2d96d9f911a00762506ee4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a25b77344cc1f8d3c330f77584660791b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a86a9ba7941653ed31447ad09cb855f50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Float, Float &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a981118d0b1a6101c6b8df136dc08a5f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, Float &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(Float *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, Float &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const Float *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, Float &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, Float &gt; &amp;a, Float value=Float(0))</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae51db32d9dd90d4afdedcf008e15a5fb</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2802be457dc38a0090c13074a45e5d23</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1ea63308ee1f0174b602004293189a5b</anchor>
      <arglist>(Float scalar, const Vector&lt; size, Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e4baf5c1f33fe5db74b29835e356654</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa947967a1311fcc5edbb52332b418e46</anchor>
      <arglist>(FloatingPoint scalar, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa21a302814733abb0d4d59de87421001</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac2100f59a9660445d7df3b703daafff</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a320e28a1b95546d77d2603fa5da088cf</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a740e684ba6af1944fe621ab15600e738</anchor>
      <arglist>(Float scalar, const Vector&lt; size, Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af26b82bbc46d722b34979df93bd7c344</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;a, const Vector&lt; size, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>equal</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5b9f7afdebb621e14931b9199bb57920</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;a, const Vector&lt; size, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>notEqual</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9c34112dad523fa92071f5cad7f01d3c</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;a, const Vector&lt; size, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; FloatingPoint &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aee8c44413ae416ea25a03146bf8a5484</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;normalizedA, const Vector&lt; size, FloatingPoint &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator &amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af62ef89cd21a0f1f3e860f5e1a50a68e</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, Float &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; 3, Int &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>Int</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0634d37e5a1519ace4b803e06ecb43cfa2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c134c9f5cdb4e5c6886d8c73f2b57d1</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac3524040cfdd9709bdb56242e5efd882</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a153841d1ca03ab3811d3bf43f381d782</anchor>
      <arglist>(Int first, U... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(Int value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b4c806af871f8861814bb6eeff4395f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Int *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad1ef6a051bb081ff81c5a4070cb4fdf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6fede358bde75530578036f5144f295e</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab905b0efb03cf6e09395d1e9251f3860</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af75dd213f994f154cd693056b94426e2</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9f5051aa0ceaa935da2ea1c86ee9763f</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a84a88da37683e57a59ab30e73e737e51</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a190de3ad0b3fc8688348a45b3bb68588</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7137a5c0dd802f5f587c0166251ec271</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae3d83b814def0dc539ef92f268d06ef6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e1dcc1ee8a2bf7bae0ac4cbe507eb16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91edf5e7b6b815bf5a46c87b0cc34753</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dcb5089b460ab47a0a3d9b06c3f43fc</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b9157115c3f38190ab01ae9a43bc64c</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2b7f88740a354041a7874b67b45a7068</anchor>
      <arglist>(Int scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfd197a1ed9b9ba2a7b8b6f3e2ffd57e</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af48972b84492b789e790bbc4bbc91008</anchor>
      <arglist>(Int scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfc51e8b830e24a036c5fd533226306d</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ece942a9d2413efa3a80d203a0fb0f2</anchor>
      <arglist>(Int scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a997212fb25ecc5086fdc40bee98f5a54</anchor>
      <arglist>(Int scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0c4ee399d5519dce001580496d7725be</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ff59211affc895b3fce601521204cba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aacb3f8fb6e72a6320ee1d54573b984e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa36b88833846a6273d615c9dd5162ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abf62db06660ed3400c2c821650685d18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18a0d90b9d68f689f78dfbae207baf14</anchor>
      <arglist>(Int length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a56a53e47640fa101a07b09829a690fa9</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1d7fcd5a855055ff6a3f8211ec2acfbf</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, Int &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1f04a8aab1c8e61ab927b72d27b36fbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ace6841f09c905a8d28d1717ac9297738</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abad4faef8f2d96d9f911a00762506ee4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a25b77344cc1f8d3c330f77584660791b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a86a9ba7941653ed31447ad09cb855f50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Int, Int &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a981118d0b1a6101c6b8df136dc08a5f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, Int &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(Int *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, Int &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const Int *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, Int &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, Int &gt; &amp;a, Int value=Int(0))</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae51db32d9dd90d4afdedcf008e15a5fb</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2802be457dc38a0090c13074a45e5d23</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1ea63308ee1f0174b602004293189a5b</anchor>
      <arglist>(Int scalar, const Vector&lt; size, Int &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e4baf5c1f33fe5db74b29835e356654</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa947967a1311fcc5edbb52332b418e46</anchor>
      <arglist>(FloatingPoint scalar, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa21a302814733abb0d4d59de87421001</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac2100f59a9660445d7df3b703daafff</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a320e28a1b95546d77d2603fa5da088cf</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a740e684ba6af1944fe621ab15600e738</anchor>
      <arglist>(Int scalar, const Vector&lt; size, Int &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af26b82bbc46d722b34979df93bd7c344</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;a, const Vector&lt; size, Int &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>equal</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5b9f7afdebb621e14931b9199bb57920</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;a, const Vector&lt; size, Int &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>notEqual</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9c34112dad523fa92071f5cad7f01d3c</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;a, const Vector&lt; size, Int &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; FloatingPoint &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aee8c44413ae416ea25a03146bf8a5484</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;normalizedA, const Vector&lt; size, FloatingPoint &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator &amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af62ef89cd21a0f1f3e860f5e1a50a68e</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, Int &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; 3, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0634d37e5a1519ace4b803e06ecb43cfa2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c134c9f5cdb4e5c6886d8c73f2b57d1</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac3524040cfdd9709bdb56242e5efd882</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a153841d1ca03ab3811d3bf43f381d782</anchor>
      <arglist>(T first, U... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b4c806af871f8861814bb6eeff4395f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad1ef6a051bb081ff81c5a4070cb4fdf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6fede358bde75530578036f5144f295e</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab905b0efb03cf6e09395d1e9251f3860</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af75dd213f994f154cd693056b94426e2</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9f5051aa0ceaa935da2ea1c86ee9763f</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a84a88da37683e57a59ab30e73e737e51</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a190de3ad0b3fc8688348a45b3bb68588</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7137a5c0dd802f5f587c0166251ec271</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae3d83b814def0dc539ef92f268d06ef6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e1dcc1ee8a2bf7bae0ac4cbe507eb16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91edf5e7b6b815bf5a46c87b0cc34753</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dcb5089b460ab47a0a3d9b06c3f43fc</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b9157115c3f38190ab01ae9a43bc64c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2b7f88740a354041a7874b67b45a7068</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfd197a1ed9b9ba2a7b8b6f3e2ffd57e</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af48972b84492b789e790bbc4bbc91008</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfc51e8b830e24a036c5fd533226306d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ece942a9d2413efa3a80d203a0fb0f2</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a997212fb25ecc5086fdc40bee98f5a54</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0c4ee399d5519dce001580496d7725be</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ff59211affc895b3fce601521204cba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aacb3f8fb6e72a6320ee1d54573b984e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa36b88833846a6273d615c9dd5162ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abf62db06660ed3400c2c821650685d18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18a0d90b9d68f689f78dfbae207baf14</anchor>
      <arglist>(T length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a56a53e47640fa101a07b09829a690fa9</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1d7fcd5a855055ff6a3f8211ec2acfbf</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, T &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1f04a8aab1c8e61ab927b72d27b36fbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ace6841f09c905a8d28d1717ac9297738</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abad4faef8f2d96d9f911a00762506ee4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a25b77344cc1f8d3c330f77584660791b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a86a9ba7941653ed31447ad09cb855f50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a981118d0b1a6101c6b8df136dc08a5f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, T &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, T &gt; &amp;a, T value=T(0))</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae51db32d9dd90d4afdedcf008e15a5fb</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2802be457dc38a0090c13074a45e5d23</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1ea63308ee1f0174b602004293189a5b</anchor>
      <arglist>(T scalar, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e4baf5c1f33fe5db74b29835e356654</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa947967a1311fcc5edbb52332b418e46</anchor>
      <arglist>(FloatingPoint scalar, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa21a302814733abb0d4d59de87421001</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac2100f59a9660445d7df3b703daafff</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a320e28a1b95546d77d2603fa5da088cf</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a740e684ba6af1944fe621ab15600e738</anchor>
      <arglist>(T scalar, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af26b82bbc46d722b34979df93bd7c344</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>equal</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5b9f7afdebb621e14931b9199bb57920</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>notEqual</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9c34112dad523fa92071f5cad7f01d3c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; FloatingPoint &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aee8c44413ae416ea25a03146bf8a5484</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;normalizedA, const Vector&lt; size, FloatingPoint &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator &amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af62ef89cd21a0f1f3e860f5e1a50a68e</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; 4, Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>Float</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0634d37e5a1519ace4b803e06ecb43cfa2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c134c9f5cdb4e5c6886d8c73f2b57d1</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac3524040cfdd9709bdb56242e5efd882</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a153841d1ca03ab3811d3bf43f381d782</anchor>
      <arglist>(Float first, U... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b4c806af871f8861814bb6eeff4395f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad1ef6a051bb081ff81c5a4070cb4fdf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6fede358bde75530578036f5144f295e</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab905b0efb03cf6e09395d1e9251f3860</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af75dd213f994f154cd693056b94426e2</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9f5051aa0ceaa935da2ea1c86ee9763f</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a84a88da37683e57a59ab30e73e737e51</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a190de3ad0b3fc8688348a45b3bb68588</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7137a5c0dd802f5f587c0166251ec271</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae3d83b814def0dc539ef92f268d06ef6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e1dcc1ee8a2bf7bae0ac4cbe507eb16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91edf5e7b6b815bf5a46c87b0cc34753</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dcb5089b460ab47a0a3d9b06c3f43fc</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b9157115c3f38190ab01ae9a43bc64c</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2b7f88740a354041a7874b67b45a7068</anchor>
      <arglist>(Float scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfd197a1ed9b9ba2a7b8b6f3e2ffd57e</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af48972b84492b789e790bbc4bbc91008</anchor>
      <arglist>(Float scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfc51e8b830e24a036c5fd533226306d</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ece942a9d2413efa3a80d203a0fb0f2</anchor>
      <arglist>(Float scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a997212fb25ecc5086fdc40bee98f5a54</anchor>
      <arglist>(Float scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0c4ee399d5519dce001580496d7725be</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ff59211affc895b3fce601521204cba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aacb3f8fb6e72a6320ee1d54573b984e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa36b88833846a6273d615c9dd5162ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abf62db06660ed3400c2c821650685d18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18a0d90b9d68f689f78dfbae207baf14</anchor>
      <arglist>(Float length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a56a53e47640fa101a07b09829a690fa9</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1d7fcd5a855055ff6a3f8211ec2acfbf</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, Float &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1f04a8aab1c8e61ab927b72d27b36fbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ace6841f09c905a8d28d1717ac9297738</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abad4faef8f2d96d9f911a00762506ee4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a25b77344cc1f8d3c330f77584660791b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a86a9ba7941653ed31447ad09cb855f50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Float, Float &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a981118d0b1a6101c6b8df136dc08a5f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, Float &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(Float *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, Float &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const Float *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, Float &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, Float &gt; &amp;a, Float value=Float(0))</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae51db32d9dd90d4afdedcf008e15a5fb</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2802be457dc38a0090c13074a45e5d23</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1ea63308ee1f0174b602004293189a5b</anchor>
      <arglist>(Float scalar, const Vector&lt; size, Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e4baf5c1f33fe5db74b29835e356654</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa947967a1311fcc5edbb52332b418e46</anchor>
      <arglist>(FloatingPoint scalar, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa21a302814733abb0d4d59de87421001</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac2100f59a9660445d7df3b703daafff</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a320e28a1b95546d77d2603fa5da088cf</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a740e684ba6af1944fe621ab15600e738</anchor>
      <arglist>(Float scalar, const Vector&lt; size, Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af26b82bbc46d722b34979df93bd7c344</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;a, const Vector&lt; size, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>equal</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5b9f7afdebb621e14931b9199bb57920</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;a, const Vector&lt; size, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>notEqual</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9c34112dad523fa92071f5cad7f01d3c</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;a, const Vector&lt; size, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; FloatingPoint &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aee8c44413ae416ea25a03146bf8a5484</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;normalizedA, const Vector&lt; size, FloatingPoint &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator &amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af62ef89cd21a0f1f3e860f5e1a50a68e</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, Float &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; 4, Int &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>Int</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0634d37e5a1519ace4b803e06ecb43cfa2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c134c9f5cdb4e5c6886d8c73f2b57d1</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac3524040cfdd9709bdb56242e5efd882</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a153841d1ca03ab3811d3bf43f381d782</anchor>
      <arglist>(Int first, U... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(Int value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b4c806af871f8861814bb6eeff4395f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Int *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad1ef6a051bb081ff81c5a4070cb4fdf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6fede358bde75530578036f5144f295e</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab905b0efb03cf6e09395d1e9251f3860</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af75dd213f994f154cd693056b94426e2</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9f5051aa0ceaa935da2ea1c86ee9763f</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a84a88da37683e57a59ab30e73e737e51</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a190de3ad0b3fc8688348a45b3bb68588</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7137a5c0dd802f5f587c0166251ec271</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae3d83b814def0dc539ef92f268d06ef6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e1dcc1ee8a2bf7bae0ac4cbe507eb16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91edf5e7b6b815bf5a46c87b0cc34753</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dcb5089b460ab47a0a3d9b06c3f43fc</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b9157115c3f38190ab01ae9a43bc64c</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2b7f88740a354041a7874b67b45a7068</anchor>
      <arglist>(Int scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfd197a1ed9b9ba2a7b8b6f3e2ffd57e</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af48972b84492b789e790bbc4bbc91008</anchor>
      <arglist>(Int scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfc51e8b830e24a036c5fd533226306d</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ece942a9d2413efa3a80d203a0fb0f2</anchor>
      <arglist>(Int scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a997212fb25ecc5086fdc40bee98f5a54</anchor>
      <arglist>(Int scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0c4ee399d5519dce001580496d7725be</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ff59211affc895b3fce601521204cba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aacb3f8fb6e72a6320ee1d54573b984e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa36b88833846a6273d615c9dd5162ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abf62db06660ed3400c2c821650685d18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18a0d90b9d68f689f78dfbae207baf14</anchor>
      <arglist>(Int length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a56a53e47640fa101a07b09829a690fa9</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1d7fcd5a855055ff6a3f8211ec2acfbf</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, Int &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1f04a8aab1c8e61ab927b72d27b36fbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ace6841f09c905a8d28d1717ac9297738</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abad4faef8f2d96d9f911a00762506ee4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a25b77344cc1f8d3c330f77584660791b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a86a9ba7941653ed31447ad09cb855f50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Int, Int &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a981118d0b1a6101c6b8df136dc08a5f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, Int &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(Int *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, Int &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const Int *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, Int &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, Int &gt; &amp;a, Int value=Int(0))</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae51db32d9dd90d4afdedcf008e15a5fb</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2802be457dc38a0090c13074a45e5d23</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1ea63308ee1f0174b602004293189a5b</anchor>
      <arglist>(Int scalar, const Vector&lt; size, Int &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e4baf5c1f33fe5db74b29835e356654</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa947967a1311fcc5edbb52332b418e46</anchor>
      <arglist>(FloatingPoint scalar, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa21a302814733abb0d4d59de87421001</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac2100f59a9660445d7df3b703daafff</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a320e28a1b95546d77d2603fa5da088cf</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a740e684ba6af1944fe621ab15600e738</anchor>
      <arglist>(Int scalar, const Vector&lt; size, Int &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af26b82bbc46d722b34979df93bd7c344</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;a, const Vector&lt; size, Int &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>equal</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5b9f7afdebb621e14931b9199bb57920</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;a, const Vector&lt; size, Int &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>notEqual</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9c34112dad523fa92071f5cad7f01d3c</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;a, const Vector&lt; size, Int &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; FloatingPoint &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aee8c44413ae416ea25a03146bf8a5484</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;normalizedA, const Vector&lt; size, FloatingPoint &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator &amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af62ef89cd21a0f1f3e860f5e1a50a68e</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, Int &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; 4, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0634d37e5a1519ace4b803e06ecb43cfa2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c134c9f5cdb4e5c6886d8c73f2b57d1</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac3524040cfdd9709bdb56242e5efd882</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a153841d1ca03ab3811d3bf43f381d782</anchor>
      <arglist>(T first, U... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b4c806af871f8861814bb6eeff4395f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad1ef6a051bb081ff81c5a4070cb4fdf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6fede358bde75530578036f5144f295e</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab905b0efb03cf6e09395d1e9251f3860</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af75dd213f994f154cd693056b94426e2</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9f5051aa0ceaa935da2ea1c86ee9763f</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a84a88da37683e57a59ab30e73e737e51</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a190de3ad0b3fc8688348a45b3bb68588</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7137a5c0dd802f5f587c0166251ec271</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae3d83b814def0dc539ef92f268d06ef6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e1dcc1ee8a2bf7bae0ac4cbe507eb16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91edf5e7b6b815bf5a46c87b0cc34753</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dcb5089b460ab47a0a3d9b06c3f43fc</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b9157115c3f38190ab01ae9a43bc64c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2b7f88740a354041a7874b67b45a7068</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfd197a1ed9b9ba2a7b8b6f3e2ffd57e</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af48972b84492b789e790bbc4bbc91008</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfc51e8b830e24a036c5fd533226306d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ece942a9d2413efa3a80d203a0fb0f2</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a997212fb25ecc5086fdc40bee98f5a54</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0c4ee399d5519dce001580496d7725be</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ff59211affc895b3fce601521204cba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aacb3f8fb6e72a6320ee1d54573b984e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa36b88833846a6273d615c9dd5162ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abf62db06660ed3400c2c821650685d18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18a0d90b9d68f689f78dfbae207baf14</anchor>
      <arglist>(T length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a56a53e47640fa101a07b09829a690fa9</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1d7fcd5a855055ff6a3f8211ec2acfbf</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, T &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1f04a8aab1c8e61ab927b72d27b36fbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ace6841f09c905a8d28d1717ac9297738</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abad4faef8f2d96d9f911a00762506ee4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a25b77344cc1f8d3c330f77584660791b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a86a9ba7941653ed31447ad09cb855f50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a981118d0b1a6101c6b8df136dc08a5f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, T &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, T &gt; &amp;a, T value=T(0))</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae51db32d9dd90d4afdedcf008e15a5fb</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2802be457dc38a0090c13074a45e5d23</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1ea63308ee1f0174b602004293189a5b</anchor>
      <arglist>(T scalar, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e4baf5c1f33fe5db74b29835e356654</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa947967a1311fcc5edbb52332b418e46</anchor>
      <arglist>(FloatingPoint scalar, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa21a302814733abb0d4d59de87421001</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac2100f59a9660445d7df3b703daafff</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a320e28a1b95546d77d2603fa5da088cf</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a740e684ba6af1944fe621ab15600e738</anchor>
      <arglist>(T scalar, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af26b82bbc46d722b34979df93bd7c344</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>equal</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5b9f7afdebb621e14931b9199bb57920</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>notEqual</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9c34112dad523fa92071f5cad7f01d3c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; FloatingPoint &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aee8c44413ae416ea25a03146bf8a5484</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;normalizedA, const Vector&lt; size, FloatingPoint &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator &amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af62ef89cd21a0f1f3e860f5e1a50a68e</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; Dimensions, std::int32_t &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>std::int32_t</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0634d37e5a1519ace4b803e06ecb43cfa2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c134c9f5cdb4e5c6886d8c73f2b57d1</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac3524040cfdd9709bdb56242e5efd882</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a153841d1ca03ab3811d3bf43f381d782</anchor>
      <arglist>(std::int32_t first, U... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(std::int32_t value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b4c806af871f8861814bb6eeff4395f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const std::int32_t *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad1ef6a051bb081ff81c5a4070cb4fdf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::int32_t</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6fede358bde75530578036f5144f295e</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab905b0efb03cf6e09395d1e9251f3860</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af75dd213f994f154cd693056b94426e2</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9f5051aa0ceaa935da2ea1c86ee9763f</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a84a88da37683e57a59ab30e73e737e51</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a190de3ad0b3fc8688348a45b3bb68588</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7137a5c0dd802f5f587c0166251ec271</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae3d83b814def0dc539ef92f268d06ef6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e1dcc1ee8a2bf7bae0ac4cbe507eb16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91edf5e7b6b815bf5a46c87b0cc34753</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dcb5089b460ab47a0a3d9b06c3f43fc</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b9157115c3f38190ab01ae9a43bc64c</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2b7f88740a354041a7874b67b45a7068</anchor>
      <arglist>(std::int32_t scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfd197a1ed9b9ba2a7b8b6f3e2ffd57e</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af48972b84492b789e790bbc4bbc91008</anchor>
      <arglist>(std::int32_t scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfc51e8b830e24a036c5fd533226306d</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ece942a9d2413efa3a80d203a0fb0f2</anchor>
      <arglist>(std::int32_t scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a997212fb25ecc5086fdc40bee98f5a54</anchor>
      <arglist>(std::int32_t scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0c4ee399d5519dce001580496d7725be</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ff59211affc895b3fce601521204cba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aacb3f8fb6e72a6320ee1d54573b984e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa36b88833846a6273d615c9dd5162ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abf62db06660ed3400c2c821650685d18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18a0d90b9d68f689f78dfbae207baf14</anchor>
      <arglist>(std::int32_t length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a56a53e47640fa101a07b09829a690fa9</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1d7fcd5a855055ff6a3f8211ec2acfbf</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, std::int32_t &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1f04a8aab1c8e61ab927b72d27b36fbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ace6841f09c905a8d28d1717ac9297738</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abad4faef8f2d96d9f911a00762506ee4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a25b77344cc1f8d3c330f77584660791b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a86a9ba7941653ed31447ad09cb855f50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::int32_t, std::int32_t &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a981118d0b1a6101c6b8df136dc08a5f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, std::int32_t &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(std::int32_t *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, std::int32_t &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const std::int32_t *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, std::int32_t &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, std::int32_t &gt; &amp;a, std::int32_t value=std::int32_t(0))</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae51db32d9dd90d4afdedcf008e15a5fb</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2802be457dc38a0090c13074a45e5d23</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1ea63308ee1f0174b602004293189a5b</anchor>
      <arglist>(std::int32_t scalar, const Vector&lt; size, std::int32_t &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e4baf5c1f33fe5db74b29835e356654</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa947967a1311fcc5edbb52332b418e46</anchor>
      <arglist>(FloatingPoint scalar, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa21a302814733abb0d4d59de87421001</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac2100f59a9660445d7df3b703daafff</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a320e28a1b95546d77d2603fa5da088cf</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a740e684ba6af1944fe621ab15600e738</anchor>
      <arglist>(std::int32_t scalar, const Vector&lt; size, std::int32_t &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af26b82bbc46d722b34979df93bd7c344</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;a, const Vector&lt; size, std::int32_t &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>equal</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5b9f7afdebb621e14931b9199bb57920</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;a, const Vector&lt; size, std::int32_t &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>notEqual</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9c34112dad523fa92071f5cad7f01d3c</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;a, const Vector&lt; size, std::int32_t &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; FloatingPoint &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aee8c44413ae416ea25a03146bf8a5484</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;normalizedA, const Vector&lt; size, FloatingPoint &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator &amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af62ef89cd21a0f1f3e860f5e1a50a68e</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, std::int32_t &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; dimensions, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0634d37e5a1519ace4b803e06ecb43cfa2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c134c9f5cdb4e5c6886d8c73f2b57d1</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac3524040cfdd9709bdb56242e5efd882</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a153841d1ca03ab3811d3bf43f381d782</anchor>
      <arglist>(T first, U... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b4c806af871f8861814bb6eeff4395f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad1ef6a051bb081ff81c5a4070cb4fdf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6fede358bde75530578036f5144f295e</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab905b0efb03cf6e09395d1e9251f3860</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af75dd213f994f154cd693056b94426e2</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9f5051aa0ceaa935da2ea1c86ee9763f</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a84a88da37683e57a59ab30e73e737e51</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a190de3ad0b3fc8688348a45b3bb68588</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7137a5c0dd802f5f587c0166251ec271</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae3d83b814def0dc539ef92f268d06ef6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e1dcc1ee8a2bf7bae0ac4cbe507eb16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91edf5e7b6b815bf5a46c87b0cc34753</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dcb5089b460ab47a0a3d9b06c3f43fc</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b9157115c3f38190ab01ae9a43bc64c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2b7f88740a354041a7874b67b45a7068</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfd197a1ed9b9ba2a7b8b6f3e2ffd57e</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af48972b84492b789e790bbc4bbc91008</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfc51e8b830e24a036c5fd533226306d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ece942a9d2413efa3a80d203a0fb0f2</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a997212fb25ecc5086fdc40bee98f5a54</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0c4ee399d5519dce001580496d7725be</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ff59211affc895b3fce601521204cba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aacb3f8fb6e72a6320ee1d54573b984e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa36b88833846a6273d615c9dd5162ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abf62db06660ed3400c2c821650685d18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18a0d90b9d68f689f78dfbae207baf14</anchor>
      <arglist>(T length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a56a53e47640fa101a07b09829a690fa9</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1d7fcd5a855055ff6a3f8211ec2acfbf</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, T &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1f04a8aab1c8e61ab927b72d27b36fbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ace6841f09c905a8d28d1717ac9297738</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abad4faef8f2d96d9f911a00762506ee4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a25b77344cc1f8d3c330f77584660791b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a86a9ba7941653ed31447ad09cb855f50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a981118d0b1a6101c6b8df136dc08a5f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, T &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, T &gt; &amp;a, T value=T(0))</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae51db32d9dd90d4afdedcf008e15a5fb</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2802be457dc38a0090c13074a45e5d23</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1ea63308ee1f0174b602004293189a5b</anchor>
      <arglist>(T scalar, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e4baf5c1f33fe5db74b29835e356654</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa947967a1311fcc5edbb52332b418e46</anchor>
      <arglist>(FloatingPoint scalar, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa21a302814733abb0d4d59de87421001</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac2100f59a9660445d7df3b703daafff</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a320e28a1b95546d77d2603fa5da088cf</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a740e684ba6af1944fe621ab15600e738</anchor>
      <arglist>(T scalar, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af26b82bbc46d722b34979df93bd7c344</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>equal</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5b9f7afdebb621e14931b9199bb57920</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>notEqual</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9c34112dad523fa92071f5cad7f01d3c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; FloatingPoint &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aee8c44413ae416ea25a03146bf8a5484</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;normalizedA, const Vector&lt; size, FloatingPoint &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator &amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af62ef89cd21a0f1f3e860f5e1a50a68e</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; rows, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0634d37e5a1519ace4b803e06ecb43cfa2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c134c9f5cdb4e5c6886d8c73f2b57d1</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac3524040cfdd9709bdb56242e5efd882</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a153841d1ca03ab3811d3bf43f381d782</anchor>
      <arglist>(T first, U... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b4c806af871f8861814bb6eeff4395f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad1ef6a051bb081ff81c5a4070cb4fdf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6fede358bde75530578036f5144f295e</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab905b0efb03cf6e09395d1e9251f3860</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af75dd213f994f154cd693056b94426e2</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9f5051aa0ceaa935da2ea1c86ee9763f</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a84a88da37683e57a59ab30e73e737e51</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a190de3ad0b3fc8688348a45b3bb68588</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7137a5c0dd802f5f587c0166251ec271</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae3d83b814def0dc539ef92f268d06ef6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e1dcc1ee8a2bf7bae0ac4cbe507eb16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91edf5e7b6b815bf5a46c87b0cc34753</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dcb5089b460ab47a0a3d9b06c3f43fc</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4b9157115c3f38190ab01ae9a43bc64c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2b7f88740a354041a7874b67b45a7068</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfd197a1ed9b9ba2a7b8b6f3e2ffd57e</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af48972b84492b789e790bbc4bbc91008</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abfc51e8b830e24a036c5fd533226306d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ece942a9d2413efa3a80d203a0fb0f2</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a997212fb25ecc5086fdc40bee98f5a54</anchor>
      <arglist>(T scalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0c4ee399d5519dce001580496d7725be</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ff59211affc895b3fce601521204cba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aacb3f8fb6e72a6320ee1d54573b984e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa36b88833846a6273d615c9dd5162ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abf62db06660ed3400c2c821650685d18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18a0d90b9d68f689f78dfbae207baf14</anchor>
      <arglist>(T length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a56a53e47640fa101a07b09829a690fa9</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1d7fcd5a855055ff6a3f8211ec2acfbf</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, T &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1f04a8aab1c8e61ab927b72d27b36fbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ace6841f09c905a8d28d1717ac9297738</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abad4faef8f2d96d9f911a00762506ee4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a25b77344cc1f8d3c330f77584660791b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a86a9ba7941653ed31447ad09cb855f50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a981118d0b1a6101c6b8df136dc08a5f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, T &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, T &gt; &amp;a, T value=T(0))</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae51db32d9dd90d4afdedcf008e15a5fb</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator *=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2802be457dc38a0090c13074a45e5d23</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1ea63308ee1f0174b602004293189a5b</anchor>
      <arglist>(T scalar, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5e4baf5c1f33fe5db74b29835e356654</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa947967a1311fcc5edbb52332b418e46</anchor>
      <arglist>(FloatingPoint scalar, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa21a302814733abb0d4d59de87421001</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator *</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac2100f59a9660445d7df3b703daafff</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a320e28a1b95546d77d2603fa5da088cf</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a740e684ba6af1944fe621ab15600e738</anchor>
      <arglist>(T scalar, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af26b82bbc46d722b34979df93bd7c344</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>equal</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5b9f7afdebb621e14931b9199bb57920</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>notEqual</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a9c34112dad523fa92071f5cad7f01d3c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; FloatingPoint &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aee8c44413ae416ea25a03146bf8a5484</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;normalizedA, const Vector&lt; size, FloatingPoint &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator &amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af62ef89cd21a0f1f3e860f5e1a50a68e</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>glm</name>
    <filename>namespaceglm.html</filename>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a43ad475150aa58183fd943518f570598</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tquat&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a990d160f10118373a348bd734493ebed</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tdualquat&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a30cf76751007173e49ff7cef42b136d9</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tvec2&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>ac533b80b1781dd4253f50af3ed78ef97</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tvec3&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a8e3d489cd56144ef2af7f9a5014c0ba4</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tvec4&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a2dc0b50009622e8e6f20dcfb0a596ca9</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tmat2x2&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a394b9a3f3df5771911903561dc800552</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tmat2x3&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a56b110ab8d7db8c7614b78403b636da7</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tmat2x4&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a62df7705d08190731d4b201369932477</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tmat3x2&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a0763b838f503260ebdd45cec6a7ebde9</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tmat3x3&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a66fe19ca0dbba500bb364631ff5875eb</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tmat3x4&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a63467965b6a89cd527945ed0f2f6b66c</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tmat4x2&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>a4e9ba698fa6151dc9455d013c2bcbb2c</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tmat4x3&lt; T, q &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceglm.html</anchorfile>
      <anchor>ac095fd8f379413589eb48db128b4de06</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const tmat4x4&lt; T, q &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum</name>
    <filename>namespaceMagnum.html</filename>
    <namespace>Magnum::Animation</namespace>
    <namespace>Magnum::Audio</namespace>
    <namespace>Magnum::BulletIntegration</namespace>
    <namespace>Magnum::DartIntegration</namespace>
    <namespace>Magnum::DebugTools</namespace>
    <namespace>Magnum::EigenIntegration</namespace>
    <namespace>Magnum::GL</namespace>
    <namespace>Magnum::GlmIntegration</namespace>
    <namespace>Magnum::ImGuiIntegration</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <namespace>Magnum::OpenDdl</namespace>
    <namespace>Magnum::OvrIntegration</namespace>
    <namespace>Magnum::Platform</namespace>
    <namespace>Magnum::Primitives</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <namespace>Magnum::Shaders</namespace>
    <namespace>Magnum::Text</namespace>
    <namespace>Magnum::TextureTools</namespace>
    <namespace>Magnum::Trade</namespace>
    <namespace>Magnum::Ui</namespace>
    <namespace>Magnum::Vk</namespace>
    <class kind="class">Magnum::AbstractResourceLoader</class>
    <class kind="class">Magnum::Array</class>
    <class kind="class">Magnum::Array1D</class>
    <class kind="class">Magnum::Array2D</class>
    <class kind="class">Magnum::Array3D</class>
    <class kind="class">Magnum::CompressedImage</class>
    <class kind="class">Magnum::CompressedImageView</class>
    <class kind="class">Magnum::CompressedPixelStorage</class>
    <class kind="struct">Magnum::DimensionTraits</class>
    <class kind="class">Magnum::Image</class>
    <class kind="class">Magnum::ImageView</class>
    <class kind="struct">Magnum::NoCreateT</class>
    <class kind="class">Magnum::PixelStorage</class>
    <class kind="class">Magnum::Resource</class>
    <class kind="class">Magnum::ResourceKey</class>
    <class kind="class">Magnum::ResourceManager</class>
    <class kind="class">Magnum::Timeline</class>
    <member kind="typedef">
      <type>typename DimensionTraits&lt; dimensions, T &gt;::VectorType</type>
      <name>VectorTypeFor</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a022aba204e515fbaa051f9ec7274b20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename DimensionTraits&lt; dimensions, T &gt;::RangeType</type>
      <name>RangeTypeFor</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3a90a71567e8cb1174697e8607d7f854</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename DimensionTraits&lt; dimensions, T &gt;::MatrixType</type>
      <name>MatrixTypeFor</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a66bd8e5ed82475aaa74ae683a28875d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Image&lt; 1 &gt;</type>
      <name>Image1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae1b8a158cc31e09cbe1fba24fec2fa9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Image&lt; 2 &gt;</type>
      <name>Image2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a99b46de11af429ac8c1af52f59602cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Image&lt; 3 &gt;</type>
      <name>Image3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2388ee336623bf115b28b756a445931b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImage&lt; 1 &gt;</type>
      <name>CompressedImage1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae48c7bfe2c52754baf1d435592b79702</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImage&lt; 2 &gt;</type>
      <name>CompressedImage2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af2d28d2e31d7e620320c124c1e636207</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImage&lt; 3 &gt;</type>
      <name>CompressedImage3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0dddd7f6782f6c0047f712e4d50f938d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageView&lt; dimensions, const char &gt;</type>
      <name>BasicImageView</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a876e8ce27cf7df9fb6201f81406ae250</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicImageView&lt; 1 &gt;</type>
      <name>ImageView1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad6cbc90385cec67f103dae61d9d3bbd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicImageView&lt; 2 &gt;</type>
      <name>ImageView2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab6bcfc56373c89f9655b9f87f2566ca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicImageView&lt; 3 &gt;</type>
      <name>ImageView3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aedaaa1cbb49a03bbb3cafc132d42584e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageView&lt; dimensions, char &gt;</type>
      <name>BasicMutableImageView</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af62f11692685ea6c74d752ff71ecf54b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicMutableImageView&lt; 1 &gt;</type>
      <name>MutableImageView1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae0490cb632c2db81a8fb038fce48ae60</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicMutableImageView&lt; 2 &gt;</type>
      <name>MutableImageView2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac8d2058eea925905bfe83f7d5db93c54</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicMutableImageView&lt; 3 &gt;</type>
      <name>MutableImageView3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0eb96702168beb80f3e12301cb621019</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImageView&lt; dimensions, const char &gt;</type>
      <name>BasicCompressedImageView</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2138d3f22fed7afa0e2a705437071631</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicCompressedImageView&lt; 1 &gt;</type>
      <name>CompressedImageView1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a60316e5a48cf52d44eabdb0c9656c41b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicCompressedImageView&lt; 2 &gt;</type>
      <name>CompressedImageView2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aa65c2f90270d256799d0ad88f51b3c0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicCompressedImageView&lt; 3 &gt;</type>
      <name>CompressedImageView3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaaf1c516639176324b0c113d80f73cbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImageView&lt; dimensions, char &gt;</type>
      <name>BasicMutableCompressedImageView</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a35a9f731843c8c10ca97bac072bc4bfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicMutableCompressedImageView&lt; 1 &gt;</type>
      <name>MutableCompressedImageView1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a87ab485cce4fc929265a79edb4b2f8ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicMutableCompressedImageView&lt; 2 &gt;</type>
      <name>MutableCompressedImageView2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a84c876f73db1161bf43e6ea2d8f2670e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicMutableCompressedImageView&lt; 3 &gt;</type>
      <name>MutableCompressedImageView3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a993dd48773615e001f154221079614d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint8_t</type>
      <name>UnsignedByte</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a07cf9231dbda5f296cc205ab7ecb770f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int8_t</type>
      <name>Byte</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3326c49ec1ed9b0bb5e292c1ad81f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint16_t</type>
      <name>UnsignedShort</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a909e88e5e85c567e854bedac5ef40abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int16_t</type>
      <name>Short</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8a61fb6a9a4bb99d17c5501a668927f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>UnsignedInt</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8d47f9ac6d7ced811b3d355990a3732b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int32_t</type>
      <name>Int</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aee42530d46e85ad0d60312c3526f4c50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint64_t</type>
      <name>UnsignedLong</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a864ee326698465e20b52c19fd7044ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int64_t</type>
      <name>Long</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aadaf2d260758705587a825d8c8907a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>Float</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a232af7e6fd9b88195fbc59fcec2155cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Half</type>
      <name>Half</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae9ad232db78b650420d4a56d3d67f0e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::BoolVector&lt; 2 &gt;</type>
      <name>BoolVector2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>afc5f5955d48bb8a4edbf20309fce63dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::BoolVector&lt; 3 &gt;</type>
      <name>BoolVector3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a339fdabda899980a33990aa2e3c8a98a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::BoolVector&lt; 4 &gt;</type>
      <name>BoolVector4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a931bd102da709344ae82507d5a4f1f84</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Float &gt;</type>
      <name>Vector2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a867c5cc7c779e5f990bcfb4457eb81e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Float &gt;</type>
      <name>Vector3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6949fa86a0af6ed632c90d4223baeb59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Float &gt;</type>
      <name>Vector4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3f4cac6ff006e4e32682ebb2b117d7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; UnsignedInt &gt;</type>
      <name>Vector2ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4506781bc0ae351534004ec20d64cf2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; UnsignedInt &gt;</type>
      <name>Vector3ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a26df486c6774622c92b881350d4876a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; UnsignedInt &gt;</type>
      <name>Vector4ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aeabe8282965e92504504ce4eae543187</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Int &gt;</type>
      <name>Vector2i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae3ac51b4e18ff95be7dd874c1cc861f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Int &gt;</type>
      <name>Vector3i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a053340a86ab63e587ab3773ff1265784</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Int &gt;</type>
      <name>Vector4i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9e0f4dfa754bf25f9a9f39f84ae8f396</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color3&lt; Float &gt;</type>
      <name>Color3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a99bf0ab337b9ed6ff6ccfd8ea147a900</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color4&lt; Float &gt;</type>
      <name>Color4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5cb8f674ed695b93b434b44bd7c96805</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::ColorHsv&lt; Float &gt;</type>
      <name>ColorHsv</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3f2e0a0f0f64660057e1af647fd34456</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color3&lt; UnsignedByte &gt;</type>
      <name>Color3ub</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>afde3a07a49799b474c74f186f01cbc25</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color4&lt; UnsignedByte &gt;</type>
      <name>Color4ub</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1444bc0c8960f51e682cc718331c3c5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3&lt; Float &gt;</type>
      <name>Matrix3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7abac7ed657a50f2964d6b2c4a1f7677</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4&lt; Float &gt;</type>
      <name>Matrix4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a28cfaaad41fdc6b258092278ba4569d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x2&lt; Float &gt;</type>
      <name>Matrix2x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae1523b3078a9f2b0f6dd83daded9e970</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x3&lt; Float &gt;</type>
      <name>Matrix3x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7ee135be46a327f352d01287579e2acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x4&lt; Float &gt;</type>
      <name>Matrix4x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1beb3e75007fb50638fe5b25d513a688</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x3&lt; Float &gt;</type>
      <name>Matrix2x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3dced70ba66525d9bbb6b44e6227188</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x2&lt; Float &gt;</type>
      <name>Matrix3x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a689baccbb9256e282d2d68e3486dcc80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x4&lt; Float &gt;</type>
      <name>Matrix2x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7533874fc2ef4af1118a1727d56ec7e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x2&lt; Float &gt;</type>
      <name>Matrix4x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4b275037a57059729521813d5eff5afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x4&lt; Float &gt;</type>
      <name>Matrix3x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a007726fb14fe464a51d3f53970216df6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x3&lt; Float &gt;</type>
      <name>Matrix4x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a15f5e8da966dbdb9ec0c47e6de9ccf3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier2D&lt; Float &gt;</type>
      <name>QuadraticBezier2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aa076ea30523705e63fd29aa9a44a7924</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier3D&lt; Float &gt;</type>
      <name>QuadraticBezier3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aab522cde6ba1d070df7ea26749f2faf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier2D&lt; Float &gt;</type>
      <name>CubicBezier2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1deead2c643a2b9b053540b9c70202bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier3D&lt; Float &gt;</type>
      <name>CubicBezier3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1153a483856bb774602a3df94c7d53b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite1D&lt; Float &gt;</type>
      <name>CubicHermite1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4738e9771b61423499b9014b6b536e72</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite2D&lt; Float &gt;</type>
      <name>CubicHermite2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a225783dfa380bf6181feeda9c180ddfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite3D&lt; Float &gt;</type>
      <name>CubicHermite3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>adda2e9cca02ac9a5d1d42c4d487cc307</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermiteComplex&lt; Float &gt;</type>
      <name>CubicHermiteComplex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7e03d1307660bcc946569b18bcdee630</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermiteQuaternion&lt; Float &gt;</type>
      <name>CubicHermiteQuaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab5feff3497a6175e9e08a39443c91575</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Complex&lt; Float &gt;</type>
      <name>Complex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af8f959fbcda212df03f4db0c0b4d8e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualComplex&lt; Float &gt;</type>
      <name>DualComplex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a301eadaf85af10586dd8fee8a5c7f268</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Quaternion&lt; Float &gt;</type>
      <name>Quaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2e3f956058db79a46099bd104b08eeb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualQuaternion&lt; Float &gt;</type>
      <name>DualQuaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad64bf8f226da3f14dc0e88e2b5a6c251</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Constants&lt; Float &gt;</type>
      <name>Constants</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6c070a7b75b28d88915aa17af9b78c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Deg&lt; Float &gt;</type>
      <name>Deg</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a35aafd6ffb9da9a9e7b3805141ecbbb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Rad&lt; Float &gt;</type>
      <name>Rad</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0471754d0b583682b2dd2cf4d99077af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Float &gt;</type>
      <name>Range1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad4ec1efaa47da1a4b7815950683fb225</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Float &gt;</type>
      <name>Range2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a08b469227b1a8989c2c151d3a8899642</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Float &gt;</type>
      <name>Range3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7fbce9c90d2709f47e0d5f094f183208</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Int &gt;</type>
      <name>Range1Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a78544ddd221d110240d3da598b3450c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Int &gt;</type>
      <name>Range2Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aca08a3fe2d57fd40fce6d3d577b43e86</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Int &gt;</type>
      <name>Range3Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a055e641c454b6bfacd44c309c2c7aeb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Frustum&lt; Float &gt;</type>
      <name>Frustum</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aadbcb06e48ab10daaa2f6272b731194c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Double</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5f4cc6ae4658e5eee79148cf4738f789</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Double &gt;</type>
      <name>Vector2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaff377299fc19849bfed2a64fa80ff7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Double &gt;</type>
      <name>Vector3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a12999896f6eeea0c53b82f97886f32c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Double &gt;</type>
      <name>Vector4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7767801c66c95405c9c1ae3108f676d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3&lt; Double &gt;</type>
      <name>Matrix3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad1a28945c4fe29ad91e5da1244c5669e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4&lt; Double &gt;</type>
      <name>Matrix4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>addbaa6dd74e1967ef70a15e7bfaaabb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x2&lt; Double &gt;</type>
      <name>Matrix2x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac8b90a55a3ff885b42009b9f46cbc054</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x3&lt; Double &gt;</type>
      <name>Matrix3x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a44a1a23ecbda7c6343c052535481f16e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x4&lt; Double &gt;</type>
      <name>Matrix4x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aae9dc931fa1c545f2990891779fb665d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x3&lt; Double &gt;</type>
      <name>Matrix2x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae72831cf88f37efaf38129138d02a2b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x2&lt; Double &gt;</type>
      <name>Matrix3x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4e89a28c7b25d548658560d5651c8d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x4&lt; Double &gt;</type>
      <name>Matrix2x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4a2863ef1337008849345c9b8720dc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x2&lt; Double &gt;</type>
      <name>Matrix4x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a502dadb2e648b9cb785124d8e57613ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x4&lt; Double &gt;</type>
      <name>Matrix3x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3a80fad794621611bf170e5bb818135d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x3&lt; Double &gt;</type>
      <name>Matrix4x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a55e335c75732e3a13b400a3a8837d16a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier2D&lt; Float &gt;</type>
      <name>QuadraticBezier2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a28635f12b30809607b32ba90282735a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier3D&lt; Float &gt;</type>
      <name>QuadraticBezier3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7a1745348e3df1b36f543a9fb143520f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier2D&lt; Float &gt;</type>
      <name>CubicBezier2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5b4862b5ded9c45b0eaa23c143147e5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier3D&lt; Float &gt;</type>
      <name>CubicBezier3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a85efadd97b72b331eee0912da21a433b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite1D&lt; Double &gt;</type>
      <name>CubicHermite1Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a40cd0c5d0d941d7615d42225cad30f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite2D&lt; Double &gt;</type>
      <name>CubicHermite2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>add99a1908b03c3462d7e8bf06b0e7bf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite3D&lt; Double &gt;</type>
      <name>CubicHermite3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7fcfec87b22846699f11b2acdb462626</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermiteComplex&lt; Double &gt;</type>
      <name>CubicHermiteComplexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7f85116469a79165fe7305b477eb811a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermiteQuaternion&lt; Double &gt;</type>
      <name>CubicHermiteQuaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1a32c05ec0f998d2116a23be2cb38e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Complex&lt; Double &gt;</type>
      <name>Complexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a39c00aecf9014a896daa67ce80f588c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualComplex&lt; Double &gt;</type>
      <name>DualComplexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af5caf88b9b32ea8f5839e1033b75f8fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Quaternion&lt; Double &gt;</type>
      <name>Quaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a98a0b80388b8500611f9ac50ee5090d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualQuaternion&lt; Double &gt;</type>
      <name>DualQuaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3389caa75ddcc24e1c17b1e47928451</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Constants&lt; Double &gt;</type>
      <name>Constantsd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4b861df9ed0195727ce15b9499318c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Deg&lt; Double &gt;</type>
      <name>Degd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>abb6b2ed24bc5511b4d98fa6cdc446c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Rad&lt; Double &gt;</type>
      <name>Radd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a576be96b2eb268a0c84b7d8fbb5edf23</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Double &gt;</type>
      <name>Range1Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad0ade5e31406fc3dd7b85fb634c4a865</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Double &gt;</type>
      <name>Range2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac7dcda0b7320b7377e0bdabe6a2d4649</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Double &gt;</type>
      <name>Range3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af69768f0c458043b7a6a030340456e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Frustum&lt; Double &gt;</type>
      <name>Frustumd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaa52550cff11cf462303a5268fd42089</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InputFileCallbackPolicy</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad1e6da3c6e20d9bc3d488f0126c5c21d</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="ad1e6da3c6e20d9bc3d488f0126c5c21da21a5bcd08cdd088335d18f69f74653cb">LoadTemporary</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad1e6da3c6e20d9bc3d488f0126c5c21da3abc4c0a3801b18b2ac7bd4f661c1f46">LoadPermanent</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad1e6da3c6e20d9bc3d488f0126c5c21daec8db16682dce388085f20c20903b0cf">LoadPernament</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad1e6da3c6e20d9bc3d488f0126c5c21dad3d2e617335f08df83599665eef8a418">Close</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MeshPrimitive</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a52379a327f55566ec9aa4c72eaacbc0f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a52379a327f55566ec9aa4c72eaacbc0fa75dd5f1160a3f02b6fae89c54361a1b3">Points</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a52379a327f55566ec9aa4c72eaacbc0faa0b0293a2db49f5f93c15a62e095c819">Lines</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a52379a327f55566ec9aa4c72eaacbc0fa2ba065d2b3004087cc8f111bf56f134b">LineLoop</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a52379a327f55566ec9aa4c72eaacbc0fae7f9e73b8edd21f420a63b3ace5768a2">LineStrip</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a52379a327f55566ec9aa4c72eaacbc0fa7ca66fdfaad3eb33fc65d7490178f856">Triangles</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a52379a327f55566ec9aa4c72eaacbc0fa1da0b9ead8b051940a89214bae22831c">TriangleStrip</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a52379a327f55566ec9aa4c72eaacbc0fa18d58fde618e4a30e2dfdc122e693047">TriangleFan</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MeshIndexType</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0e8c9116ac182d4d2bf5f37b28bc39dc</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a0e8c9116ac182d4d2bf5f37b28bc39dca8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0e8c9116ac182d4d2bf5f37b28bc39dcaeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0e8c9116ac182d4d2bf5f37b28bc39dcac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PixelFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0f3e774f6adcfb4b7d06df036c378c24</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a38502c4c445d4185bded1a03050f4e65">R8Unorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a1923c3304921d5d85f077a0fa96035e5">RG8Unorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a7f99e709f9536b7ed7efd6cc5202b1c5">RGB8Unorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ada510a01104cbfe4b683ae77a78e763b">RGBA8Unorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ae24128a61e28847e5cae93e146f3c396">R8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a0c1bc4554d3ca92e8ed03fde8fb668fc">RG8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a0ed70c0ecaf24c9abe9b121dd6fbc7be">RGB8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a77b2290184a281692c88cea55f7e4709">RGBA8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a477722a31a67b4a8f4bdb09e796e343b">R8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a65264dd5d010ab021cbec10f07f97ed5">RG8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24afc5e2f0963f0ce3529e8aee36d827bbd">RGB8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24aeb843f86a572765b9be8a71bd9563bea">RGBA8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a1ab8b9cd2509e2ccf930739d6d29ff35">R8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24af16a55975b8a8daa365e5b3cb116a001">RG8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a57a36f0c89bfa81cdd9a69e2ad2df08b">RGB8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ab99d001604e415e4ea7f107daaffd6dd">RGBA8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24abac1d498c5af33e368fe3bd1b13ebc6b">R16Unorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ad3a87f305a0581a21d7cc9ee12af4570">RG16Unorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ad39fb9fb684c35901a56b89557b04d7b">RGB16Unorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a799c97a5ddc9ad29e7fc311ff76c3eb3">RGBA16Unorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a3be85f3a039758c6edb91c91b7af98d2">R16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a7e7693eb3b20e62d8af832c2fe116559">RG16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a31fe77f7173ed54fdc96a4f752083205">RGB16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a825f61116ed1837ab9125c3e1921d860">RGBA16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ac13d06830e39e268be15adfae07d9eb0">R16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a4475a780df31a86ece088a8aac082b12">RG16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24adfb1f628557b0014586b94400f06777b">RGB16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ae418a751a46186248578aecf3f30a26c">RGBA16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a3bf53b9d9aca5ddf22161b4c9d362f3f">R16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24af0c6bc16df3d36b62adc241a797148de">RG16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24aff7632ef49d4bbe6b35050ac957a04c8">RGB16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a3d8d82a913260a439bf38ed05d6d2f46">RGBA16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a2c102dbf18ef5770d3beb5385661c1c2">R32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ac16ead63f9b07b5c97635edac05412cd">RG32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ae240d3e394b6a7cfa467efe512e96bb4">RGB32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ac050956335d883e2f6ed07cc6b0c90d8">RGBA32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a88996871eb63291d92c2f9d83219648a">R32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a56014c7d6ebfadbff4d0d4d3c20a0243">RG32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a8305c7f5432d31774cceb858c966b22e">RGB32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a9f87275b4130dd118085dd75ee6a7ac1">RGBA32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a8dfbaada0d68227f5c299c2aa637df68">R16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ad28539b874a2bc4c5d40f49b375af474">RG16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a25cd126670bd567a899c64c4e6e8ca7d">RGB16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24aa29d843695056f9c171a9eb702d6910a">RGBA16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24aca70b53fb0610461a2327973614a76ce">R32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ab968b93cd3c34fc9583050ce7e267394">RG32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24ad8936cc7055546f79128b9dbfb8c8bbb">RGB32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0f3e774f6adcfb4b7d06df036c378c24a703a7a81e586669c930e3dcaf3e8c428">RGBA32F</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CompressedPixelFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6aa5c7abd3ed7e272d99436adf5131e0</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a6aa5c7abd3ed7e272d99436adf5131e0af53704a814d5ac59a0da8e6cfb810686">Bc1RGBUnorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a6aa5c7abd3ed7e272d99436adf5131e0a7e444ac8255d7a9fea6946bad447bd2f">Bc1RGBAUnorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a6aa5c7abd3ed7e272d99436adf5131e0a38ed31f589a9300614a3367af7308434">Bc2RGBAUnorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a6aa5c7abd3ed7e272d99436adf5131e0aae2fbdf1f86d5b9b719f51dfae8e995f">Bc3RGBAUnorm</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResourceState</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a63e2340ca72c0086308a26c86b3268df</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa5111e24c1ecc6266ce0de4b4dc42033b">NotLoaded</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa98029ed1c91fd6f14761ede80f916190">NotLoadedFallback</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa16bfbf9c462762cf1cba4134ec53c504">Loading</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa9d6fb043e63f3ff15df0d888f364b433">LoadingFallback</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa38c300f4fc9ce8a77aad4a30de05cad8">NotFound</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa58aa9ef9ce68a0381bf3acacd95b27d9">NotFoundFallback</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfad924522d30d6615e9f71e91504364a9d">Mutable</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfabeae421a14a34f831c113f61323d1ab3">Final</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResourceDataState</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3dfce2e738ef695a502966dcfaa2d615</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a3dfce2e738ef695a502966dcfaa2d615a16bfbf9c462762cf1cba4134ec53c504">Loading</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a3dfce2e738ef695a502966dcfaa2d615a38c300f4fc9ce8a77aad4a30de05cad8">NotFound</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a3dfce2e738ef695a502966dcfaa2d615ad924522d30d6615e9f71e91504364a9d">Mutable</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a3dfce2e738ef695a502966dcfaa2d615abeae421a14a34f831c113f61323d1ab3">Final</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResourcePolicy</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aabe552f4e54e32a9706638e6423af077</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="aabe552f4e54e32a9706638e6423af077abad08a863dfd6ade28fd8ef69b15005a">Resident</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aabe552f4e54e32a9706638e6423af077ae1ba155a9f2e8c3be94020eef32a0301">Manual</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aabe552f4e54e32a9706638e6423af077a3dbff95bbc40eaab0fb54197ff7f56c6">ReferenceCounted</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SamplerFilter</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab7e48b045f33e73835c9e25477f2f211</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="ab7e48b045f33e73835c9e25477f2f211a60494f02d440f316319dd0fad40ad007">Nearest</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ab7e48b045f33e73835c9e25477f2f211a32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SamplerMipmap</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5b996fa37d96d43ab2f0df30b8309223</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a5b996fa37d96d43ab2f0df30b8309223a095a1b43effec73955e31e790438de49">Base</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a5b996fa37d96d43ab2f0df30b8309223a60494f02d440f316319dd0fad40ad007">Nearest</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a5b996fa37d96d43ab2f0df30b8309223a32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SamplerWrapping</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a81aecbedbcb819aa682a40af45873512</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a81aecbedbcb819aa682a40af45873512a7020426cfb0a204051be4b3053d2acc8">Repeat</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a81aecbedbcb819aa682a40af45873512a12ce4a5977988214a6b098b8cb0bf695">MirroredRepeat</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a81aecbedbcb819aa682a40af45873512a74556551231333c36debc3d373261134">ClampToEdge</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a81aecbedbcb819aa682a40af45873512afb07f88f6f11cc5ab9c951290716f147">ClampToBorder</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a81aecbedbcb819aa682a40af45873512a01f488e80fc32761aecfbeb3d1c8f26b">MirrorClampToEdge</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2c022de6a506d510afb76bef6f382f10</anchor>
      <arglist>(Debug &amp;debug, const Array&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0006f1ddb183ade30e6696eae4d9e41e</anchor>
      <arglist>(Debug &amp;debug, const Array1D&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0fd13dadee773ce45ed6ab0a7cfe1630</anchor>
      <arglist>(Debug &amp;debug, const Array2D&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac95c370506ed1052ae50af8d3ab81fd1</anchor>
      <arglist>(Debug &amp;debug, const Array3D&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9f1425b2c32a25dda5169157fe875a33</anchor>
      <arglist>(Debug &amp;debug, InputFileCallbackPolicy value)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>meshIndexTypeSize</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7c835932cf5a5fdfa38be434566ab3bc</anchor>
      <arglist>(MeshIndexType type)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a58c54ddbe369385b333026e6a47c9d8f</anchor>
      <arglist>(Debug &amp;debug, MeshPrimitive value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7c16aaec84343295414d8c3468f091f2</anchor>
      <arglist>(Debug &amp;debug, MeshIndexType value)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>pixelSize</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0b7bf2313cad99f16b84cd0614938273</anchor>
      <arglist>(PixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae2509f72eca955fc87ec575528155148</anchor>
      <arglist>(Debug &amp;debug, PixelFormat value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isPixelFormatImplementationSpecific</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a244398943d1850b1280c78f3ae7b53c1</anchor>
      <arglist>(PixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>constexpr PixelFormat</type>
      <name>pixelFormatWrap</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad07c2fb70a87d650973ae8ebad2f8375</anchor>
      <arglist>(T implementationSpecific)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>pixelFormatUnwrap</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aa2041e9d6b5c3bf33327a4a0f1697227</anchor>
      <arglist>(PixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0c50432f4e10cb29a6cce20876fbb13a</anchor>
      <arglist>(Debug &amp;debug, CompressedPixelFormat value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isCompressedPixelFormatImplementationSpecific</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a631c7f11b72573ab9ca2aa955edd0387</anchor>
      <arglist>(CompressedPixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>constexpr CompressedPixelFormat</type>
      <name>compressedPixelFormatWrap</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aada7d03605ff434eee0438021e170e72</anchor>
      <arglist>(T implementationSpecific)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>compressedPixelFormatUnwrap</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>abf18f1f8da6d30c3f64f1b4c65dfa53f</anchor>
      <arglist>(CompressedPixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9758329b50e17519e09b1fad67363cf7</anchor>
      <arglist>(Debug &amp;debug, ResourceState value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af79e3aa47905863e951ac3a2ea29e229</anchor>
      <arglist>(Debug &amp;debug, const ResourceKey &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4c376efe76339da5ead03d817f3f8267</anchor>
      <arglist>(Debug &amp;debug, SamplerFilter value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0dfa3b86ec5e7ecadc76935dcf5f7482</anchor>
      <arglist>(Debug &amp;debug, SamplerMipmap value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a90ea80228405d6e8e13bf551bf55662d</anchor>
      <arglist>(Debug &amp;debug, SamplerWrapping value)</arglist>
    </member>
    <member kind="variable">
      <type>constexpr NoCreateT</type>
      <name>NoCreate</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae03d3fce3586ce1ff1e881f795bcd4a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint8_t</type>
      <name>UnsignedByte</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a07cf9231dbda5f296cc205ab7ecb770f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int8_t</type>
      <name>Byte</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3326c49ec1ed9b0bb5e292c1ad81f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint16_t</type>
      <name>UnsignedShort</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a909e88e5e85c567e854bedac5ef40abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int16_t</type>
      <name>Short</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8a61fb6a9a4bb99d17c5501a668927f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>UnsignedInt</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8d47f9ac6d7ced811b3d355990a3732b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int32_t</type>
      <name>Int</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aee42530d46e85ad0d60312c3526f4c50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint64_t</type>
      <name>UnsignedLong</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a864ee326698465e20b52c19fd7044ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int64_t</type>
      <name>Long</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aadaf2d260758705587a825d8c8907a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>Float</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a232af7e6fd9b88195fbc59fcec2155cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Half</type>
      <name>Half</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae9ad232db78b650420d4a56d3d67f0e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::BoolVector&lt; 2 &gt;</type>
      <name>BoolVector2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>afc5f5955d48bb8a4edbf20309fce63dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::BoolVector&lt; 3 &gt;</type>
      <name>BoolVector3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a339fdabda899980a33990aa2e3c8a98a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::BoolVector&lt; 4 &gt;</type>
      <name>BoolVector4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a931bd102da709344ae82507d5a4f1f84</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Float &gt;</type>
      <name>Vector2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a867c5cc7c779e5f990bcfb4457eb81e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Float &gt;</type>
      <name>Vector3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6949fa86a0af6ed632c90d4223baeb59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Float &gt;</type>
      <name>Vector4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3f4cac6ff006e4e32682ebb2b117d7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; UnsignedInt &gt;</type>
      <name>Vector2ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4506781bc0ae351534004ec20d64cf2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; UnsignedInt &gt;</type>
      <name>Vector3ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a26df486c6774622c92b881350d4876a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; UnsignedInt &gt;</type>
      <name>Vector4ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aeabe8282965e92504504ce4eae543187</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Int &gt;</type>
      <name>Vector2i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae3ac51b4e18ff95be7dd874c1cc861f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Int &gt;</type>
      <name>Vector3i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a053340a86ab63e587ab3773ff1265784</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Int &gt;</type>
      <name>Vector4i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9e0f4dfa754bf25f9a9f39f84ae8f396</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color3&lt; Float &gt;</type>
      <name>Color3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a99bf0ab337b9ed6ff6ccfd8ea147a900</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color4&lt; Float &gt;</type>
      <name>Color4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5cb8f674ed695b93b434b44bd7c96805</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::ColorHsv&lt; Float &gt;</type>
      <name>ColorHsv</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3f2e0a0f0f64660057e1af647fd34456</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color3&lt; UnsignedByte &gt;</type>
      <name>Color3ub</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>afde3a07a49799b474c74f186f01cbc25</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color4&lt; UnsignedByte &gt;</type>
      <name>Color4ub</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1444bc0c8960f51e682cc718331c3c5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3&lt; Float &gt;</type>
      <name>Matrix3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7abac7ed657a50f2964d6b2c4a1f7677</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4&lt; Float &gt;</type>
      <name>Matrix4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a28cfaaad41fdc6b258092278ba4569d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x2&lt; Float &gt;</type>
      <name>Matrix2x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae1523b3078a9f2b0f6dd83daded9e970</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x3&lt; Float &gt;</type>
      <name>Matrix3x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7ee135be46a327f352d01287579e2acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x4&lt; Float &gt;</type>
      <name>Matrix4x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1beb3e75007fb50638fe5b25d513a688</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x3&lt; Float &gt;</type>
      <name>Matrix2x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3dced70ba66525d9bbb6b44e6227188</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x2&lt; Float &gt;</type>
      <name>Matrix3x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a689baccbb9256e282d2d68e3486dcc80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x4&lt; Float &gt;</type>
      <name>Matrix2x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7533874fc2ef4af1118a1727d56ec7e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x2&lt; Float &gt;</type>
      <name>Matrix4x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4b275037a57059729521813d5eff5afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x4&lt; Float &gt;</type>
      <name>Matrix3x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a007726fb14fe464a51d3f53970216df6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x3&lt; Float &gt;</type>
      <name>Matrix4x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a15f5e8da966dbdb9ec0c47e6de9ccf3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier2D&lt; Float &gt;</type>
      <name>QuadraticBezier2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aa076ea30523705e63fd29aa9a44a7924</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier3D&lt; Float &gt;</type>
      <name>QuadraticBezier3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aab522cde6ba1d070df7ea26749f2faf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier2D&lt; Float &gt;</type>
      <name>CubicBezier2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1deead2c643a2b9b053540b9c70202bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier3D&lt; Float &gt;</type>
      <name>CubicBezier3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1153a483856bb774602a3df94c7d53b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite1D&lt; Float &gt;</type>
      <name>CubicHermite1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4738e9771b61423499b9014b6b536e72</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite2D&lt; Float &gt;</type>
      <name>CubicHermite2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a225783dfa380bf6181feeda9c180ddfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite3D&lt; Float &gt;</type>
      <name>CubicHermite3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>adda2e9cca02ac9a5d1d42c4d487cc307</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermiteComplex&lt; Float &gt;</type>
      <name>CubicHermiteComplex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7e03d1307660bcc946569b18bcdee630</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermiteQuaternion&lt; Float &gt;</type>
      <name>CubicHermiteQuaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab5feff3497a6175e9e08a39443c91575</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Complex&lt; Float &gt;</type>
      <name>Complex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af8f959fbcda212df03f4db0c0b4d8e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualComplex&lt; Float &gt;</type>
      <name>DualComplex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a301eadaf85af10586dd8fee8a5c7f268</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Quaternion&lt; Float &gt;</type>
      <name>Quaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2e3f956058db79a46099bd104b08eeb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualQuaternion&lt; Float &gt;</type>
      <name>DualQuaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad64bf8f226da3f14dc0e88e2b5a6c251</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Constants&lt; Float &gt;</type>
      <name>Constants</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6c070a7b75b28d88915aa17af9b78c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Deg&lt; Float &gt;</type>
      <name>Deg</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a35aafd6ffb9da9a9e7b3805141ecbbb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Rad&lt; Float &gt;</type>
      <name>Rad</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0471754d0b583682b2dd2cf4d99077af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Float &gt;</type>
      <name>Range1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad4ec1efaa47da1a4b7815950683fb225</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Float &gt;</type>
      <name>Range2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a08b469227b1a8989c2c151d3a8899642</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Float &gt;</type>
      <name>Range3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7fbce9c90d2709f47e0d5f094f183208</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Int &gt;</type>
      <name>Range1Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a78544ddd221d110240d3da598b3450c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Int &gt;</type>
      <name>Range2Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aca08a3fe2d57fd40fce6d3d577b43e86</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Int &gt;</type>
      <name>Range3Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a055e641c454b6bfacd44c309c2c7aeb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Frustum&lt; Float &gt;</type>
      <name>Frustum</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aadbcb06e48ab10daaa2f6272b731194c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Double</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5f4cc6ae4658e5eee79148cf4738f789</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Double &gt;</type>
      <name>Vector2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaff377299fc19849bfed2a64fa80ff7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Double &gt;</type>
      <name>Vector3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a12999896f6eeea0c53b82f97886f32c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Double &gt;</type>
      <name>Vector4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7767801c66c95405c9c1ae3108f676d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3&lt; Double &gt;</type>
      <name>Matrix3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad1a28945c4fe29ad91e5da1244c5669e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4&lt; Double &gt;</type>
      <name>Matrix4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>addbaa6dd74e1967ef70a15e7bfaaabb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x2&lt; Double &gt;</type>
      <name>Matrix2x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac8b90a55a3ff885b42009b9f46cbc054</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x3&lt; Double &gt;</type>
      <name>Matrix3x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a44a1a23ecbda7c6343c052535481f16e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x4&lt; Double &gt;</type>
      <name>Matrix4x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aae9dc931fa1c545f2990891779fb665d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x3&lt; Double &gt;</type>
      <name>Matrix2x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae72831cf88f37efaf38129138d02a2b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x2&lt; Double &gt;</type>
      <name>Matrix3x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4e89a28c7b25d548658560d5651c8d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x4&lt; Double &gt;</type>
      <name>Matrix2x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4a2863ef1337008849345c9b8720dc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x2&lt; Double &gt;</type>
      <name>Matrix4x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a502dadb2e648b9cb785124d8e57613ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x4&lt; Double &gt;</type>
      <name>Matrix3x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3a80fad794621611bf170e5bb818135d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x3&lt; Double &gt;</type>
      <name>Matrix4x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a55e335c75732e3a13b400a3a8837d16a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier2D&lt; Float &gt;</type>
      <name>QuadraticBezier2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a28635f12b30809607b32ba90282735a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier3D&lt; Float &gt;</type>
      <name>QuadraticBezier3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7a1745348e3df1b36f543a9fb143520f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier2D&lt; Float &gt;</type>
      <name>CubicBezier2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5b4862b5ded9c45b0eaa23c143147e5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier3D&lt; Float &gt;</type>
      <name>CubicBezier3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a85efadd97b72b331eee0912da21a433b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite1D&lt; Double &gt;</type>
      <name>CubicHermite1Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a40cd0c5d0d941d7615d42225cad30f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite2D&lt; Double &gt;</type>
      <name>CubicHermite2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>add99a1908b03c3462d7e8bf06b0e7bf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermite3D&lt; Double &gt;</type>
      <name>CubicHermite3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7fcfec87b22846699f11b2acdb462626</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermiteComplex&lt; Double &gt;</type>
      <name>CubicHermiteComplexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7f85116469a79165fe7305b477eb811a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicHermiteQuaternion&lt; Double &gt;</type>
      <name>CubicHermiteQuaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1a32c05ec0f998d2116a23be2cb38e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Complex&lt; Double &gt;</type>
      <name>Complexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a39c00aecf9014a896daa67ce80f588c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualComplex&lt; Double &gt;</type>
      <name>DualComplexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af5caf88b9b32ea8f5839e1033b75f8fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Quaternion&lt; Double &gt;</type>
      <name>Quaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a98a0b80388b8500611f9ac50ee5090d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualQuaternion&lt; Double &gt;</type>
      <name>DualQuaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3389caa75ddcc24e1c17b1e47928451</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Constants&lt; Double &gt;</type>
      <name>Constantsd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4b861df9ed0195727ce15b9499318c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Deg&lt; Double &gt;</type>
      <name>Degd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>abb6b2ed24bc5511b4d98fa6cdc446c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Rad&lt; Double &gt;</type>
      <name>Radd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a576be96b2eb268a0c84b7d8fbb5edf23</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Double &gt;</type>
      <name>Range1Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad0ade5e31406fc3dd7b85fb634c4a865</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Double &gt;</type>
      <name>Range2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac7dcda0b7320b7377e0bdabe6a2d4649</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Double &gt;</type>
      <name>Range3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af69768f0c458043b7a6a030340456e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Frustum&lt; Double &gt;</type>
      <name>Frustumd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaa52550cff11cf462303a5268fd42089</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Animation</name>
    <filename>namespaceMagnum_1_1Animation.html</filename>
    <namespace>Magnum::Animation::Easing</namespace>
    <class kind="class">Magnum::Animation::Player</class>
    <class kind="class">Magnum::Animation::Track</class>
    <class kind="class">Magnum::Animation::TrackView</class>
    <class kind="class">Magnum::Animation::TrackViewStorage</class>
    <member kind="typedef">
      <type>typename Implementation::ResultTraits&lt; V &gt;::Type</type>
      <name>ResultOf</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>ac8b8482a5c46bec4b7b1253ade2e0348</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Interpolation</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a18879dd1e299ab5c0b00e17a44d60625</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a18879dd1e299ab5c0b00e17a44d60625acb17869fe51048b5a5c4c6106551a255">Constant</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a18879dd1e299ab5c0b00e17a44d60625a32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a18879dd1e299ab5c0b00e17a44d60625a4cff6afc4963881749f7742fbb4d1392">Spline</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a18879dd1e299ab5c0b00e17a44d60625a90589c47f06eb971d548591f23c285af">Custom</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Extrapolation</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a0a6fd70d79a26dbdf4289251d3977903</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a0a6fd70d79a26dbdf4289251d3977903a94e6a82e363b2f395cbe9321cbc445e7">Extrapolated</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a0a6fd70d79a26dbdf4289251d3977903acb17869fe51048b5a5c4c6106551a255">Constant</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a0a6fd70d79a26dbdf4289251d3977903ac5c553b84166a5bf8154c0ce83f8b362">DefaultConstructed</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a0391132e8d759e91d3e88f97da8deaad</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a0391132e8d759e91d3e88f97da8deaadac9dbb2b7c84159b632d71e512eba8428">Playing</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a0391132e8d759e91d3e88f97da8deaadae99180abf47a8b3a856e0bcb2656990a">Paused</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Animation.html" anchor="a0391132e8d759e91d3e88f97da8deaadac23e2b09ebe6bf4cb5e2a9abe85c0be2">Stopped</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>ab49c5174f0e3c112295a3ba401b5e486</anchor>
      <arglist>(Debug &amp;debug, Interpolation value)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>interpolatorFor</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a06c344537adcb2abe4f4a6ce5f397dba</anchor>
      <arglist>(Interpolation interpolation) -&gt; R(*)(const V &amp;, const V &amp;, Float)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a2cb37d9efc18c050da0af1a5ccf6dbb9</anchor>
      <arglist>(Debug &amp;debug, Extrapolation value)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>interpolate</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>af41a638940b3dad82022e00207a86b9d</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const K &gt; &amp;keys, const Containers::StridedArrayView1D&lt; const V &gt; &amp;values, Extrapolation before, Extrapolation after, R(*interpolator)(const V &amp;, const V &amp;, Float), K frame, std::size_t &amp;hint)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>interpolateStrict</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a428c4d01d812c2c8159044c6e8da987e</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const K &gt; &amp;keys, const Containers::StridedArrayView1D&lt; const V &gt; &amp;values, R(*interpolator)(const V &amp;, const V &amp;, Float), K frame, std::size_t &amp;hint)</arglist>
    </member>
    <member kind="function">
      <type>constexpr auto</type>
      <name>ease</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a63b471cb7d35b67e01df0ee86f6c6caf</anchor>
      <arglist>() -&gt; ResultOf&lt; V &gt;(*)(const V &amp;, const V &amp;, Float)</arglist>
    </member>
    <member kind="function">
      <type>constexpr auto</type>
      <name>easeClamped</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>aa4247b1e3b3f2a4de250eaab8fb37b15</anchor>
      <arglist>() -&gt; ResultOf&lt; V &gt;(*)(const V &amp;, const V &amp;, Float)</arglist>
    </member>
    <member kind="function">
      <type>constexpr auto</type>
      <name>unpack</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a7a500985f318cff6760fdf1bb0780c23</anchor>
      <arglist>() -&gt; ResultOf&lt; V &gt;(*)(const V &amp;, const V &amp;, Float)</arglist>
    </member>
    <member kind="function">
      <type>constexpr auto</type>
      <name>unpackEase</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a762d89c96a152330e2955aa914a8633a</anchor>
      <arglist>() -&gt; ResultOf&lt; V &gt;(*)(const V &amp;, const V &amp;, Float)</arglist>
    </member>
    <member kind="function">
      <type>constexpr auto</type>
      <name>unpackEaseClamped</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a824130187e19fff65d1b3ad9682afa05</anchor>
      <arglist>() -&gt; ResultOf&lt; V &gt;(*)(const V &amp;, const V &amp;, Float)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Animation.html</anchorfile>
      <anchor>a05625e61374928e843f733ab4ceeb9cc</anchor>
      <arglist>(Debug &amp;debug, State value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Animation::Easing</name>
    <filename>namespaceMagnum_1_1Animation_1_1Easing.html</filename>
    <member kind="function">
      <type>Float</type>
      <name>linear</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a5b0d6d16818389f891baf711dc8bfedd</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>step</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a9754e41fef3a305471bfe5fe20799e97</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>smoothstep</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a20b4ad4811c2b1508ec11dc85f20203d</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>smootherstep</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a5786fe164126351b83ce986f0442be33</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>quadraticIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a42447d664f17e9bd1fd237b604ea46ea</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>quadraticOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>adcf17c38a919a5c1ba4d10c7a145f85f</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>quadraticInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a1ab2d81d7e5c4f3361d155787b5f8bdb</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>cubicIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a71ee0ffe55a4d852ad099588da305afa</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>cubicOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a502125c065d3afa8efa527d3d2594a23</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>cubicInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a6f3d5eace4ebf9fe93f9089b8791e996</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>quarticIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a5a6ab8141e07283706ac7138fae5be16</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>quarticOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a723cd8306fedf44e234f738ad58b3b1f</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>quarticInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>ab4cec4b92eff9cd1c69286edb98d9ac3</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>quinticIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a10a74b0bca42119b94f5e1222d357bb4</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>quinticOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>ab37a718ef836a1aadc2cf840ffde71b6</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>quinticInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a29ef8bef9d9f33e778bfa8e3bbddfc2b</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>sineIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a1690363458094e85a31374a8d8ee1969</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>sineOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>aa64c9a52df2aab5fe740a55aafe63937</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>sineInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a97eb3c79c640a48b38a534c94850e116</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>circularIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a98320037cdebd47067f3f3190def913c</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>circularOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>ad87a830d9bb66142f92eb970095373f6</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>circularInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a2a82c9138d9ddc82010a29d49003b198</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>exponentialIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>af857c717460c4524ecbbdd7a11c74dc1</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>exponentialOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>ae4b7be5563f6298cb4c9e4dabf753ab8</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>exponentialInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a80f1980eab08cacfb2b0f55a67230535</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>elasticIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>ae5b7bd6fe5593ba28f8dda179adfdd47</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>elasticOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>ad247322493066688fbb042c965af4166</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>elasticInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a9df1887a4dc149e0df411b42332e4d86</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>backIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>ac7e43a3372a93da80cdc5580deab470a</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>backOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a404e31a0be7ec55867cd23c6c3ac69d8</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>backInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a1d95c24c71a7f2114a54924a98c14d90</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>bounceIn</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a6ae6d7e8e814e09da00036e67e29cbaa</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>bounceOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>acc0514727e73fd90ee32b173145d46ff</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>bounceInOut</name>
      <anchorfile>namespaceMagnum_1_1Animation_1_1Easing.html</anchorfile>
      <anchor>a1f22da78c238201979e94c4936c8b860</anchor>
      <arglist>(Float t)</arglist>
    </member>
    <docanchor file="namespaceMagnum_1_1Animation_1_1Easing" title="Equations">Animation-Easing-equations</docanchor>
    <docanchor file="namespaceMagnum_1_1Animation_1_1Easing" title="References">Animation-Easing-references</docanchor>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Audio</name>
    <filename>namespaceMagnum_1_1Audio.html</filename>
    <namespace>Magnum::Audio::Extensions</namespace>
    <class kind="class">Magnum::Audio::AbstractImporter</class>
    <class kind="class">Magnum::Audio::AnyImporter</class>
    <class kind="class">Magnum::Audio::Buffer</class>
    <class kind="class">Magnum::Audio::Context</class>
    <class kind="class">Magnum::Audio::DrFlacImporter</class>
    <class kind="class">Magnum::Audio::DrMp3Importer</class>
    <class kind="class">Magnum::Audio::DrWavImporter</class>
    <class kind="class">Magnum::Audio::Extension</class>
    <class kind="class">Magnum::Audio::Faad2Importer</class>
    <class kind="class">Magnum::Audio::Listener</class>
    <class kind="class">Magnum::Audio::Playable</class>
    <class kind="class">Magnum::Audio::PlayableGroup</class>
    <class kind="class">Magnum::Audio::Renderer</class>
    <class kind="class">Magnum::Audio::Source</class>
    <class kind="class">Magnum::Audio::StbVorbisImporter</class>
    <class kind="class">Magnum::Audio::WavImporter</class>
    <member kind="typedef">
      <type>Listener&lt; 2 &gt;</type>
      <name>Listener2D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a23dcba0cf950684d9fa2d43c30eb3e3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Listener&lt; 3 &gt;</type>
      <name>Listener3D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a50c798d426179331206e1983ad47bd89</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Playable&lt; 2 &gt;</type>
      <name>Playable2D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>af895c685c030560bdc3c1625e90bddbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Playable&lt; 3 &gt;</type>
      <name>Playable3D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>ac1131f1afb177ee22ae2911181cc8918</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PlayableGroup&lt; 2 &gt;</type>
      <name>PlayableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>aa2ee38e80ebc52fe99f90f4c3f683620</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PlayableGroup&lt; 3 &gt;</type>
      <name>PlayableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>acf9fa459536aa2b4553e6a2f0198a900</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BufferFormat</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a82b47f7e510b21d4c77cfbd2626c3acf</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfabc5c44624758954f1a4af1e009f5cf6e">Mono8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfaab2f4f7e4448e8c91c89774787a1cc2c">Mono16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfac6b222ce6dafa010da034571a80c21f3">Stereo8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa851cd6283aaf71edd18bb2fcda2505f4">Stereo16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfaa3ef86eb1edf1b0d24120152d02b9ef5">MonoALaw</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfaf898d946fe1d41fc95e314810ca89496">StereoALaw</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfaad3e4303ede6b64317a9ff173efa71bc">MonoMuLaw</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfac95d445585d921a97b8accb0e18947e5">StereoMuLaw</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa3b5536c3d1aaf79c160d903fcb9b0373">MonoFloat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa1a929985b34ac6a5fdb5711034db8c2e">StereoFloat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa1fbed8d9457b7fceea35133e4f1abcd9">MonoDouble</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa22e42f9014076820ae2392d3e446f06f">StereoDouble</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa81a164b246c5014e888b66929f52f590">Quad8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa58a29325c4b5d157cb99990258c5489e">Quad16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa0ad8b41946d63884e26b54328db993f4">Quad32</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfadf41c9c4fa8da9fe9f8f2e5a72af2524">Rear8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa9cc2022589783937583eb8b0d9647977">Rear16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfabdf29e461ff3e3d5a74989bd5f88e085">Rear32</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa8aea3b11005e9d26048ead9c6a42f5f6">Surround51Channel8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa97352bb35a7fd55284a8abcee934750b">Surround51Channel16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfab00d9219a3bd6bc39879c3b190b975d5">Surround51Channel32</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa5cc44f6f8cc3fcb9e82950f2a8cd5138">Surround61Channel8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfae73828019aeecb9a50fb8969ec37a692">Surround61Channel16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfaa2719df150529fd80a2d27f14e1960e3">Surround61Channel32</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa64e05f42c7d9f67c13383329b4492e82">Surround71Channel8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa36fb3772c6c7c3102f312473b1a0f466">Surround71Channel16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a82b47f7e510b21d4c77cfbd2626c3acfa8917bb1aa8b402c02ee777e8d59a51ec">Surround71Channel32</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a83f2c83c1b6e8fff1e6988716d58d8ca</anchor>
      <arglist>(Debug &amp;debug, BufferFormat value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>aaaa4894d3c9ef0fd261da648c8850155</anchor>
      <arglist>(Debug &amp;debug, Context::HrtfStatus value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>af5ed7655c31326a82464a3856ce8adaa</anchor>
      <arglist>(Debug &amp;debug, Renderer::Error value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>ad9b6a4047aa891ba272662f35fd78414</anchor>
      <arglist>(Debug &amp;debug, Renderer::DistanceModel value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a0a8de3ea9665f8333aabda2b530b9d7d</anchor>
      <arglist>(Debug &amp;debug, Source::State value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a65cb864cce21416949dca720e3f488f4</anchor>
      <arglist>(Debug &amp;debug, Source::Type value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Audio::Extensions</name>
    <filename>namespaceMagnum_1_1Audio_1_1Extensions.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Magnum::BulletIntegration</name>
    <filename>namespaceMagnum_1_1BulletIntegration.html</filename>
    <class kind="class">Magnum::BulletIntegration::DebugDraw</class>
    <class kind="class">Magnum::BulletIntegration::MotionState</class>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1BulletIntegration.html</anchorfile>
      <anchor>a3ad6b49cdf01acc63fe23aac3711bb60</anchor>
      <arglist>(Debug &amp;debug, DebugDraw::Mode value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::DartIntegration</name>
    <filename>namespaceMagnum_1_1DartIntegration.html</filename>
    <class kind="struct">Magnum::DartIntegration::DrawData</class>
    <class kind="class">Magnum::DartIntegration::Object</class>
    <class kind="struct">Magnum::DartIntegration::ShapeData</class>
    <class kind="class">Magnum::DartIntegration::World</class>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; ConvertShapeType &gt;</type>
      <name>ConvertShapeTypes</name>
      <anchorfile>namespaceMagnum_1_1DartIntegration.html</anchorfile>
      <anchor>a1d0206f742a4e62ea38e79ed9c19f7d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ConvertShapeType</name>
      <anchorfile>namespaceMagnum_1_1DartIntegration.html</anchorfile>
      <anchor>a015b848b4da3dd03f1fc32b860d04ba6</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1DartIntegration.html" anchor="a015b848b4da3dd03f1fc32b860d04ba6ad92a8333dd3ccb895cc65f7455b71206">Material</enumvalue>
      <enumvalue file="namespaceMagnum_1_1DartIntegration.html" anchor="a015b848b4da3dd03f1fc32b860d04ba6a07ee3427562e4f1a5c9f2bfb17fd9eee">Primitive</enumvalue>
      <enumvalue file="namespaceMagnum_1_1DartIntegration.html" anchor="a015b848b4da3dd03f1fc32b860d04ba6a710fdb6adb881b408116ef95335e1961">Mesh</enumvalue>
      <enumvalue file="namespaceMagnum_1_1DartIntegration.html" anchor="a015b848b4da3dd03f1fc32b860d04ba6ab1c94ca2fbc3e78fc30069c8d0f01680">All</enumvalue>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; ShapeData &gt;</type>
      <name>convertShapeNode</name>
      <anchorfile>namespaceMagnum_1_1DartIntegration.html</anchorfile>
      <anchor>a57f5733847272ce2d0dd1b29223dff38</anchor>
      <arglist>(dart::dynamics::ShapeNode &amp;shapeNode, ConvertShapeTypes convertTypes, Trade::AbstractImporter *importer=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::DebugTools</name>
    <filename>namespaceMagnum_1_1DebugTools.html</filename>
    <class kind="class">Magnum::DebugTools::CompareFileToImage</class>
    <class kind="class">Magnum::DebugTools::CompareImage</class>
    <class kind="class">Magnum::DebugTools::CompareImageFile</class>
    <class kind="class">Magnum::DebugTools::CompareImageToFile</class>
    <class kind="class">Magnum::DebugTools::ForceRenderer</class>
    <class kind="class">Magnum::DebugTools::ForceRendererOptions</class>
    <class kind="class">Magnum::DebugTools::ObjectRenderer</class>
    <class kind="class">Magnum::DebugTools::ObjectRendererOptions</class>
    <class kind="class">Magnum::DebugTools::Profiler</class>
    <class kind="class">Magnum::DebugTools::ResourceManager</class>
    <member kind="typedef">
      <type>ForceRenderer&lt; 2 &gt;</type>
      <name>ForceRenderer2D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>ab424a866e4229e281823e583db39ad4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ForceRenderer&lt; 3 &gt;</type>
      <name>ForceRenderer3D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a2071f737c8f9bf87b840e6c12609c281</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectRenderer&lt; 2 &gt;</type>
      <name>ObjectRenderer2D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a15125d3c82e81b2ce5f8b30cf05b331d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectRenderer&lt; 3 &gt;</type>
      <name>ObjectRenderer3D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a784fac03e2e3837cd90f088564eadc3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>bufferSubData</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a3bfef58b1af77c155747d1d9b53b55ca</anchor>
      <arglist>(GL::Buffer &amp;buffer, GLintptr offset, GLsizeiptr size)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>bufferData</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a0d9e45c0369943648463c6f5a2ff42d3</anchor>
      <arglist>(GL::Buffer &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>screenshot</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a66cd81ac668af7f8dffcd27ee47b2019</anchor>
      <arglist>(GL::AbstractFramebuffer &amp;framebuffer, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>screenshot</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a55b3076fc8e5c4de5aa79b544bb46424</anchor>
      <arglist>(PluginManager::Manager&lt; Trade::AbstractImageConverter &gt; &amp;manager, GL::AbstractFramebuffer &amp;framebuffer, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>screenshot</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a7882f4d876628589eda4f0f16322e4f8</anchor>
      <arglist>(GL::AbstractFramebuffer &amp;framebuffer, PixelFormat format, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>screenshot</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>add0b77dda13df585e51a7c0e7f3c4098</anchor>
      <arglist>(PluginManager::Manager&lt; Trade::AbstractImageConverter &gt; &amp;manager, GL::AbstractFramebuffer &amp;framebuffer, const PixelFormat format, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>afdcb5b50a808bfa96a5da1483806e368</anchor>
      <arglist>(GL::Texture2D &amp;texture, Int level, const Range2Di &amp;range, Image2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image2D</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a2f1f5f3098c9a3a1886edf40bbe3a7f6</anchor>
      <arglist>(GL::Texture2D &amp;texture, Int level, const Range2Di &amp;range, Image2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>ae9d83854ed5028043bd9e0951faf5182</anchor>
      <arglist>(GL::Texture2D &amp;texture, Int level, const Range2Di &amp;range, GL::BufferImage2D &amp;image, GL::BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>GL::BufferImage2D</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a52beaa2e90552e75e43b2eb0db287691</anchor>
      <arglist>(GL::Texture2D &amp;texture, Int level, const Range2Di &amp;range, GL::BufferImage2D &amp;&amp;image, GL::BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a541945db04f64cb983e33ec11e0be242</anchor>
      <arglist>(GL::CubeMapTexture &amp;texture, GL::CubeMapCoordinate coordinate, Int level, const Range2Di &amp;range, Image2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image2D</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a963c44fa93ba2a1a76b29d73de152076</anchor>
      <arglist>(GL::CubeMapTexture &amp;texture, GL::CubeMapCoordinate coordinate, Int level, const Range2Di &amp;range, Image2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a50dd5b95598d556ff9da4b8fab7c0bcc</anchor>
      <arglist>(GL::CubeMapTexture &amp;texture, GL::CubeMapCoordinate coordinate, Int level, const Range2Di &amp;range, GL::BufferImage2D &amp;image, GL::BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>GL::BufferImage2D</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a4bbbfd364415ece3a6128156fc7a86bd</anchor>
      <arglist>(GL::CubeMapTexture &amp;texture, GL::CubeMapCoordinate coordinate, Int level, const Range2Di &amp;range, GL::BufferImage2D &amp;&amp;image, GL::BufferUsage usage)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::EigenIntegration</name>
    <filename>namespaceMagnum_1_1EigenIntegration.html</filename>
    <member kind="function">
      <type>To</type>
      <name>cast</name>
      <anchorfile>namespaceMagnum_1_1EigenIntegration.html</anchorfile>
      <anchor>a33f32d9f98971afab137d9acdd839f6f</anchor>
      <arglist>(const Math::Quaternion&lt; T &gt; &amp;from)</arglist>
    </member>
    <member kind="function">
      <type>To</type>
      <name>cast</name>
      <anchorfile>namespaceMagnum_1_1EigenIntegration.html</anchorfile>
      <anchor>a40db605de7a5d9c8b15f196bc0845bff</anchor>
      <arglist>(const Math::RectangularMatrix&lt; cols, rows, T &gt; &amp;from)</arglist>
    </member>
    <member kind="function">
      <type>To</type>
      <name>cast</name>
      <anchorfile>namespaceMagnum_1_1EigenIntegration.html</anchorfile>
      <anchor>a89a0a154797fefb7981c775b360d55f7</anchor>
      <arglist>(const Math::BoolVector&lt; size &gt; &amp;from)</arglist>
    </member>
    <member kind="function">
      <type>To</type>
      <name>cast</name>
      <anchorfile>namespaceMagnum_1_1EigenIntegration.html</anchorfile>
      <anchor>a4308a5265e28841c0cdf03efec45b339</anchor>
      <arglist>(const Math::Vector&lt; size, T &gt; &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::GL</name>
    <filename>namespaceMagnum_1_1GL.html</filename>
    <namespace>Magnum::GL::Extensions</namespace>
    <class kind="class">Magnum::GL::AbstractFramebuffer</class>
    <class kind="class">Magnum::GL::AbstractObject</class>
    <class kind="class">Magnum::GL::AbstractQuery</class>
    <class kind="class">Magnum::GL::AbstractShaderProgram</class>
    <class kind="class">Magnum::GL::AbstractTexture</class>
    <class kind="class">Magnum::GL::Attribute</class>
    <class kind="class">Magnum::GL::Buffer</class>
    <class kind="class">Magnum::GL::BufferImage</class>
    <class kind="class">Magnum::GL::BufferTexture</class>
    <class kind="class">Magnum::GL::CompressedBufferImage</class>
    <class kind="class">Magnum::GL::Context</class>
    <class kind="class">Magnum::GL::CubeMapTexture</class>
    <class kind="class">Magnum::GL::CubeMapTextureArray</class>
    <class kind="class">Magnum::GL::DebugGroup</class>
    <class kind="class">Magnum::GL::DebugMessage</class>
    <class kind="class">Magnum::GL::DebugOutput</class>
    <class kind="class">Magnum::GL::DefaultFramebuffer</class>
    <class kind="class">Magnum::GL::DynamicAttribute</class>
    <class kind="class">Magnum::GL::Extension</class>
    <class kind="class">Magnum::GL::Framebuffer</class>
    <class kind="class">Magnum::GL::Mesh</class>
    <class kind="class">Magnum::GL::MeshView</class>
    <class kind="class">Magnum::GL::MultisampleTexture</class>
    <class kind="class">Magnum::GL::OpenGLTester</class>
    <class kind="class">Magnum::GL::PrimitiveQuery</class>
    <class kind="class">Magnum::GL::RectangleTexture</class>
    <class kind="class">Magnum::GL::Renderbuffer</class>
    <class kind="class">Magnum::GL::Renderer</class>
    <class kind="class">Magnum::GL::SampleQuery</class>
    <class kind="class">Magnum::GL::Sampler</class>
    <class kind="class">Magnum::GL::Shader</class>
    <class kind="class">Magnum::GL::Texture</class>
    <class kind="class">Magnum::GL::TextureArray</class>
    <class kind="class">Magnum::GL::TimeQuery</class>
    <class kind="class">Magnum::GL::TransformFeedback</class>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; FramebufferClear &gt;</type>
      <name>FramebufferClearMask</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ab01cae3ec614cfc08dc9cb57b7474bbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; FramebufferBlit &gt;</type>
      <name>FramebufferBlitMask</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a31205b9572d4cd97ed30455a17ace1d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; ObjectFlag &gt;</type>
      <name>ObjectFlags</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a2538f8905d17b9d887491e9211ca8755</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BufferImage&lt; 1 &gt;</type>
      <name>BufferImage1D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ab21826e2c7241f872cb2c41badd3befc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BufferImage&lt; 2 &gt;</type>
      <name>BufferImage2D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a27593b6df921b51ca094cb26d5df5243</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BufferImage&lt; 3 &gt;</type>
      <name>BufferImage3D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>aa9af14bf86aedc496e7d929a8d8a012f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedBufferImage&lt; 1 &gt;</type>
      <name>CompressedBufferImage1D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a3cc59639b0f7023257750c19e49c9eee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedBufferImage&lt; 2 &gt;</type>
      <name>CompressedBufferImage2D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a4f87f1e4919aa2eff5082afeaf16de57</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedBufferImage&lt; 3 &gt;</type>
      <name>CompressedBufferImage3D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a0decb20094b0d5054f3d87e3d0c955a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MultisampleTexture&lt; 2 &gt;</type>
      <name>MultisampleTexture2D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a0e034eda62f5ab49675300a0bba83672</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MultisampleTexture&lt; 3 &gt;</type>
      <name>MultisampleTexture2DArray</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>abb6076d2f85102b7b1736fb8df961bce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Texture&lt; 1 &gt;</type>
      <name>Texture1D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a689bcf5b324f011cb9242e10d113227a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Texture&lt; 2 &gt;</type>
      <name>Texture2D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a186b77bc7412f679b6a6a043d88b05a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Texture&lt; 3 &gt;</type>
      <name>Texture3D</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a6346a4e43ba5119977909a7ce348bc9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TextureArray&lt; 1 &gt;</type>
      <name>Texture1DArray</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a8507a9ef37bbde339536e537d9afaf37</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TextureArray&lt; 2 &gt;</type>
      <name>Texture2DArray</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a7c9f5d6fb84cc057c47844cc748008f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FramebufferClear</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a84c9d96fc42070ef5cd7238baac5def3</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a84c9d96fc42070ef5cd7238baac5def3acb5feb1b7314637725a2e73bdc9f7295">Color</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a84c9d96fc42070ef5cd7238baac5def3a675056ad1441b6375b2c5abd48c27ef1">Depth</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a84c9d96fc42070ef5cd7238baac5def3ad821e7ccd4d4c25a491ba1a9ea248895">Stencil</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FramebufferBlit</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a7b31579beaad957300391508ac385877</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a7b31579beaad957300391508ac385877acb5feb1b7314637725a2e73bdc9f7295">Color</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a7b31579beaad957300391508ac385877a675056ad1441b6375b2c5abd48c27ef1">Depth</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a7b31579beaad957300391508ac385877ad821e7ccd4d4c25a491ba1a9ea248895">Stencil</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FramebufferBlitFilter</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a3b5bb8f87a28f939bd015e1cc76c7f2c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3b5bb8f87a28f939bd015e1cc76c7f2ca60494f02d440f316319dd0fad40ad007">Nearest</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3b5bb8f87a28f939bd015e1cc76c7f2ca32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FramebufferTarget</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a4eed8d34b2909ba469a622ce860b43f0</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4eed8d34b2909ba469a622ce860b43f0a7a1a5f3e79fdc91edf2f5ead9d66abb4">Read</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4eed8d34b2909ba469a622ce860b43f0a2d03c2d5a7ec65ef4619e0582c272ec2">Draw</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ObjectFlag</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ac3ca8b3f7b3943f4220ff066d02ae4d2</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ac3ca8b3f7b3943f4220ff066d02ae4d2a0eceeb45861f9585dd7a97a3e36f85c6">Created</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ac3ca8b3f7b3943f4220ff066d02ae4d2a50dd1297fc0f8a96753257b224b1e5b8">DeleteOnDestruction</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BufferUsage</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a40d39a1d3b2db27a7ce97615273ba11b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a40d39a1d3b2db27a7ce97615273ba11bab831b12d8d415645f1f00e37e0426ca2">StreamDraw</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a40d39a1d3b2db27a7ce97615273ba11ba10953b8796ab666281dc734e99aa5180">StreamRead</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a40d39a1d3b2db27a7ce97615273ba11ba72d80d051f94e8aa1e3dc1ebfb6cc8cc">StreamCopy</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a40d39a1d3b2db27a7ce97615273ba11bac3ed2ba606af12869974bdab26334e6c">StaticDraw</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a40d39a1d3b2db27a7ce97615273ba11ba3b35249bb273aea8b56c05f2c914a38a">StaticRead</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a40d39a1d3b2db27a7ce97615273ba11bac5a66e746248ebb7fe5f99443172fca7">StaticCopy</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a40d39a1d3b2db27a7ce97615273ba11ba07988dce2d161630856fb73bc06682c0">DynamicDraw</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a40d39a1d3b2db27a7ce97615273ba11ba2ca7cf82bf5d2f11738ae1a371d5ae32">DynamicRead</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a40d39a1d3b2db27a7ce97615273ba11bac572ac15b4bcbc9e975b79480e253c14">DynamicCopy</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BufferTextureFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a8123583510befde47788d7998cb67878</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878acfff813d86d447fa2a9c858650ebbb90">R8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a0367a93b9e3e7aa2fbe9802d80298e46">RG8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ab4b279046a02077466fa26cabb00c642">RGBA8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a9a486e1a3c543c7c58e1cc8086dc4239">R16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a2b66caa416f0a28686ade3fc30ab223a">RG16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a50989efe15b375dce8ba3a5714fe2543">RGBA16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a477722a31a67b4a8f4bdb09e796e343b">R8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a65264dd5d010ab021cbec10f07f97ed5">RG8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878aeb843f86a572765b9be8a71bd9563bea">RGBA8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a1ab8b9cd2509e2ccf930739d6d29ff35">R8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878af16a55975b8a8daa365e5b3cb116a001">RG8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ab99d001604e415e4ea7f107daaffd6dd">RGBA8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ac13d06830e39e268be15adfae07d9eb0">R16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a4475a780df31a86ece088a8aac082b12">RG16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ae418a751a46186248578aecf3f30a26c">RGBA16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a3bf53b9d9aca5ddf22161b4c9d362f3f">R16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878af0c6bc16df3d36b62adc241a797148de">RG16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a3d8d82a913260a439bf38ed05d6d2f46">RGBA16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a2c102dbf18ef5770d3beb5385661c1c2">R32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ac16ead63f9b07b5c97635edac05412cd">RG32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ae240d3e394b6a7cfa467efe512e96bb4">RGB32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ac050956335d883e2f6ed07cc6b0c90d8">RGBA32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a88996871eb63291d92c2f9d83219648a">R32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a56014c7d6ebfadbff4d0d4d3c20a0243">RG32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a8305c7f5432d31774cceb858c966b22e">RGB32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a9f87275b4130dd118085dd75ee6a7ac1">RGBA32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a8dfbaada0d68227f5c299c2aa637df68">R16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ad28539b874a2bc4c5d40f49b375af474">RG16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878aa29d843695056f9c171a9eb702d6910a">RGBA16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878aca70b53fb0610461a2327973614a76ce">R32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ab968b93cd3c34fc9583050ce7e267394">RG32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878ad8936cc7055546f79128b9dbfb8c8bbb">RGB32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8123583510befde47788d7998cb67878a703a7a81e586669c930e3dcaf3e8c428">RGBA32F</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CubeMapCoordinate</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ae7e757e675322bf695a525cab0b86b3f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae7e757e675322bf695a525cab0b86b3fa9f082d04c481aab268b9f614d2ffd129">PositiveX</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae7e757e675322bf695a525cab0b86b3fa963a8a64a09d54efc81b136ca6be21b2">NegativeX</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae7e757e675322bf695a525cab0b86b3fac53c385ced96bd629c0f45a902aceba3">PositiveY</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae7e757e675322bf695a525cab0b86b3fae4d5f02ceecd15caf66e9f0b2393c86b">NegativeY</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae7e757e675322bf695a525cab0b86b3fa1921c16ffdafaf04e378ca1b6774c0ce">PositiveZ</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae7e757e675322bf695a525cab0b86b3fada76df034cd139bd515761c8bb8e3090">NegativeZ</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ImageAccess</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a22f6df05eb9102b082a37ce813dbe276</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a22f6df05eb9102b082a37ce813dbe276a131fb182a881796e7606ed6da27f1197">ReadOnly</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a22f6df05eb9102b082a37ce813dbe276a53dfe5089ae9e65887cb0215cb0098f5">WriteOnly</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a22f6df05eb9102b082a37ce813dbe276a70a2a84088d405a2e3f1e3accaa16723">ReadWrite</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ImageFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a4703eb65d2fc9fa7f632baf228504904</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904acfff813d86d447fa2a9c858650ebbb90">R8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a0367a93b9e3e7aa2fbe9802d80298e46">RG8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ab4b279046a02077466fa26cabb00c642">RGBA8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ae24128a61e28847e5cae93e146f3c396">R8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a0c1bc4554d3ca92e8ed03fde8fb668fc">RG8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a77b2290184a281692c88cea55f7e4709">RGBA8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a9a486e1a3c543c7c58e1cc8086dc4239">R16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a2b66caa416f0a28686ade3fc30ab223a">RG16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a50989efe15b375dce8ba3a5714fe2543">RGBA16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a3be85f3a039758c6edb91c91b7af98d2">R16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a7e7693eb3b20e62d8af832c2fe116559">RG16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a825f61116ed1837ab9125c3e1921d860">RGBA16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a477722a31a67b4a8f4bdb09e796e343b">R8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a65264dd5d010ab021cbec10f07f97ed5">RG8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904aeb843f86a572765b9be8a71bd9563bea">RGBA8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a1ab8b9cd2509e2ccf930739d6d29ff35">R8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904af16a55975b8a8daa365e5b3cb116a001">RG8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ab99d001604e415e4ea7f107daaffd6dd">RGBA8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ac13d06830e39e268be15adfae07d9eb0">R16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a4475a780df31a86ece088a8aac082b12">RG16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ae418a751a46186248578aecf3f30a26c">RGBA16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a3bf53b9d9aca5ddf22161b4c9d362f3f">R16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904af0c6bc16df3d36b62adc241a797148de">RG16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a3d8d82a913260a439bf38ed05d6d2f46">RGBA16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a2c102dbf18ef5770d3beb5385661c1c2">R32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ac16ead63f9b07b5c97635edac05412cd">RG32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ac050956335d883e2f6ed07cc6b0c90d8">RGBA32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a88996871eb63291d92c2f9d83219648a">R32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a56014c7d6ebfadbff4d0d4d3c20a0243">RG32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a9f87275b4130dd118085dd75ee6a7ac1">RGBA32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a8dfbaada0d68227f5c299c2aa637df68">R16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ad28539b874a2bc4c5d40f49b375af474">RG16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904aa29d843695056f9c171a9eb702d6910a">RGBA16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904aca70b53fb0610461a2327973614a76ce">R32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ab968b93cd3c34fc9583050ce7e267394">RG32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a703a7a81e586669c930e3dcaf3e8c428">RGBA32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904ac749b8eee74e3b7b60f8774178537dea">R11FG11FB10F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a4cad8c5058101f0f527e306958b6641b">RGB10A2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a4703eb65d2fc9fa7f632baf228504904a1d8555f4846b8791e329e36dcd5239dc">RGB10A2UI</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MeshPrimitive</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a23bf590a12c81b345fffe099c42a9bc7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7a75dd5f1160a3f02b6fae89c54361a1b3">Points</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7aa0b0293a2db49f5f93c15a62e095c819">Lines</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7a2ba065d2b3004087cc8f111bf56f134b">LineLoop</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7ae7f9e73b8edd21f420a63b3ace5768a2">LineStrip</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7a72ba2961719d09dc64d6088bb7b6e13a">LinesAdjacency</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7a826457761e4d352b8f54d7d47b80dbaa">LineStripAdjacency</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7a7ca66fdfaad3eb33fc65d7490178f856">Triangles</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7a1da0b9ead8b051940a89214bae22831c">TriangleStrip</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7a18d58fde618e4a30e2dfdc122e693047">TriangleFan</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7a17eff3f9b5c0afdaacaeaf79238e36d5">TrianglesAdjacency</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7a6b682fd6550f90f75722e4a7d38f3949">TriangleStripAdjacency</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a23bf590a12c81b345fffe099c42a9bc7ac4d283323af70979073f5cb6145f3a4b">Patches</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MeshIndexType</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a6a528f7612a957b6d7b5d5f1e3388820</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a6a528f7612a957b6d7b5d5f1e3388820a8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a6a528f7612a957b6d7b5d5f1e3388820aeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a6a528f7612a957b6d7b5d5f1e3388820ac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MultisampleTextureSampleLocations</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>afddc4b64b09025c8d8f5ac4742985ec7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afddc4b64b09025c8d8f5ac4742985ec7ae4964d078936084e4df8afce581a2c7f">NotFixed</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afddc4b64b09025c8d8f5ac4742985ec7a4457d440870ad6d42bab9082d9bf9b61">Fixed</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PixelFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a0f1b8f543578e719e4d68645170dd209</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209aee38e4d5dd68c4e440825018d549cb47">Red</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209ad382816a3cbeed082c9e216e7392eed1">Green</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a9594eec95be70e7b1710f730fdda33d9">Blue</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a280f73691109aeaa235ffddd2d154d9b">Luminance</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209abac953e88f6d79514b0b6fc42eb6f3b7">RG</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a780701651d86fd20708e81e7ad48c078">LuminanceAlpha</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a889574aebacda6bfd3e534e2b49b8028">RGB</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209aea3495a278957dc58165e48a8945469f">RGBA</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a2ad5640ebdec72fc79531d1778c6c2dc">BGR</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a5a1fe3c61c9e2fd6dbbc823589f6e697">BGRA</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a1f3f09bca5728eb7af4ea263ae84b9f1">SRGB</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a5dfd728b3bee2ad053d22203c3e8f2b8">SRGBAlpha</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a3774ed2915a508b6652a18b368a82a40">RedInteger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a108f898baf120f2b888ce842b430ad41">GreenInteger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a02f2197d037a51e8791768a670ea5ca9">BlueInteger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209ac614904b10b846a993192fd483fd0f8d">RGInteger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a893f9d29983ee73833f207885e688927">RGBInteger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a5beae36e40eb87168d14300e4b38a966">RGBAInteger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209afc927856045b7f1d1bf641aeb660aa5f">BGRInteger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a29874b26b860b0ddc3f3b447fc96849f">BGRAInteger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a19c8f1ee3a700e77e87053eee47f6bc8">DepthComponent</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209ac07ade4f9906db3ee8e4e7053dac1dee">StencilIndex</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a0f1b8f543578e719e4d68645170dd209a2fa8076285272883c91e14402975a441">DepthStencil</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PixelType</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>afc1b93b57053e76beed7ec9a5c48fa73</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73aa245c3230debe5c956484ecc6fa93877">Byte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73aeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a30bb747c98bccdd11b3f89e644c4d0ad">Short</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73ac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a1686a6c336b71b36d77354cea19a8b52">Int</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73ad35523d81610cee8b87cdac1853ad51f">HalfFloat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a131ebe9fa09dd81ada14f4d5ef22a5b2">UnsignedByte332</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73aaf08cd4bda32cbbc17aa1f038787b49b">UnsignedByte233Rev</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a9d948d3fd54e7a0e9b0a7160d30e60bd">UnsignedShort565</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73ad6ec07a536b4ddfa016eb3401cf15ea7">UnsignedShort565Rev</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a0ebf3ad4b14b5318b24eccbcb77ef881">UnsignedShort4444</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a49338e95b8a984e8ff863ba90cb6f25a">UnsignedShort4444Rev</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73ad48678934f71e808d76d168449e41533">UnsignedShort5551</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a7529deae08b78021635e47e49463a94b">UnsignedShort1555Rev</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73add65f4f231b5604c5866304f361d0b54">UnsignedInt8888</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a6fc9cc90f443b7408146a06802257ab0">UnsignedInt8888Rev</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a92660ebc482fda288d7b5c8a13995d55">UnsignedInt1010102</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73af181e9b017ba4f6226f947aef3d86755">UnsignedInt2101010Rev</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73ae90d4986e1e586a607c7a9bc906f0b34">UnsignedInt10F11F11FRev</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a15d9f69c3205d33007ca888cbf438f45">UnsignedInt5999Rev</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a97788b3aa5f586ee2e387dd091a80bb1">UnsignedInt248</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="afc1b93b57053e76beed7ec9a5c48fa73a492e9449323f9bf94ab4465e823a7b64">Float32UnsignedInt248Rev</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CompressedPixelFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a3d55f4d2412f6a9913220e80820847dd</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddaee38e4d5dd68c4e440825018d549cb47">Red</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddabac953e88f6d79514b0b6fc42eb6f3b7">RG</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda889574aebacda6bfd3e534e2b49b8028">RGB</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddaea3495a278957dc58165e48a8945469f">RGBA</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddaa3bed52b596f3b91bee25aa10394d27f">RedRgtc1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda62a8382f8aa2f858c49e427277a50872">RGRgtc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda75771c41918045589327f8283c8e352b">SignedRedRgtc1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda8fd2f045102ec87ada6ce64504fba872">SignedRGRgtc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddab7916cd38ad43474594d62f109fbf184">RGBBptcUnsignedFloat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddac7dd302cf140a18d635bbc80e1d5e783">RGBBptcSignedFloat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda7dd6aed4d4b349a913acdf49d5152e6f">RGBABptcUnorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddae7dbe7b43bd444b07f3cb60d3bd85413">SRGBAlphaBptcUnorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda2b383b452d4df4e2a7b7c749d5809f9f">RGB8Etc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda8eab3b04a17e67eed15dc5ac8315dc08">SRGB8Etc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda355cb5853c206ddfcf3fd3d27b91a9b1">RGB8PunchthroughAlpha1Etc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddace1e71dfb30dc15b2e56605daf8d0ce7">SRGB8PunchthroughAlpha1Etc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda98348631c6532dca147ed76111c3ca13">RGBA8Etc2Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda0725b0958585442fa72335c352a4f31b">SRGB8Alpha8Etc2Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda1adfe9f5f9890951fdd91d9ed0f6d782">R11Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddac30713a6d506c10c43c7bcaa69fcbac5">SignedR11Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda45ebf94b3877605e10852bcc28f4fcaa">RG11Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddae7fb874dcd270f657787a2df8ca76fdf">SignedRG11Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda202cb4f41f66d0b27bfc6f968f5d4e64">RGBS3tcDxt1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda5651aff1d9255d714952c05ddc992f47">RGBAS3tcDxt1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddab1b608a98cb05d81c057fb369922718d">RGBAS3tcDxt3</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda2a3b16cfc97107c276f6d8e5d1f1f311">RGBAS3tcDxt5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda4d54b5762d22b6cccbde8ecd2fadcf45">RGBAAstc4x4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddaca48b83bf02a4c74f477b92c766ee7b0">SRGB8Alpha8Astc4x4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddaa2b69ce26a065fc75905a70d03829757">RGBAAstc5x4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda9b3927d698dd5349e8eb9f68e9c6c6a1">SRGB8Alpha8Astc5x4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda8867cb489f247c08bcfc0a5b42726414">RGBAAstc5x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda1860eb6d1eb2911ba7f5e6afd715b1b2">SRGB8Alpha8Astc5x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddac905ed9f991dc301e8a713b9edc420bc">RGBAAstc6x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda77632c655108204cc7496ce98fe192d8">SRGB8Alpha8Astc6x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda6622396055bf65a5993a6cb9cf66265f">RGBAAstc6x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda960bc98e3d2ceacfad471d1db50ffc76">SRGB8Alpha8Astc6x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddaf7f012ccc372ef62e682256dbd93aefb">RGBAAstc8x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda1d8b727d6330b5cd196d7197cbc2c626">SRGB8Alpha8Astc8x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddaae5be3648e3d9ceb03d30b49251c0629">RGBAAstc8x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddafc2666906090246eefb829972ead8280">SRGB8Alpha8Astc8x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda43204df6edcc8d05b25e7efb58934f46">RGBAAstc8x8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddaaef0fa49535ce0cfac9dc45cbf22dc6f">SRGB8Alpha8Astc8x8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda6d0c85423c4abf4c177c93447a4b7777">RGBAAstc10x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda0f413861153fe70fc44eb26acf2eaa99">SRGB8Alpha8Astc10x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddad034ed7edf6c7208a351589ed2e5f17a">RGBAAstc10x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda98ce333cbad0ca0b10b47673ba3c9610">SRGB8Alpha8Astc10x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda5d145bbb1f4d7494d1ef3c2a554a2691">RGBAAstc10x8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847ddacb5ca548816c10b8e9328ffdfe4c584a">SRGB8Alpha8Astc10x8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda01f17158c3d1005268197fdd4990749d">RGBAAstc10x10</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda7db9b87a93dfa09f1bd47035f34028ce">SRGB8Alpha8Astc10x10</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda939449aabd0a436676eb40d18dc2cd10">RGBAAstc12x10</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda7b95d2f5ff8e629c4799a667d7b21fc9">SRGB8Alpha8Astc12x10</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda202b3c29a027a3edfd8df16f1bc65544">RGBAAstc12x12</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a3d55f4d2412f6a9913220e80820847dda2635212e4b84e4b77fd26175e564d013">SRGB8Alpha8Astc12x12</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RenderbufferFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>abdbfd17955cf0e7c38eff44f13fdcd42</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42aee38e4d5dd68c4e440825018d549cb47">Red</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42acfff813d86d447fa2a9c858650ebbb90">R8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42abac953e88f6d79514b0b6fc42eb6f3b7">RG</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a0367a93b9e3e7aa2fbe9802d80298e46">RG8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42aea3495a278957dc58165e48a8945469f">RGBA</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ab4b279046a02077466fa26cabb00c642">RGBA8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a9a486e1a3c543c7c58e1cc8086dc4239">R16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a2b66caa416f0a28686ade3fc30ab223a">RG16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a1cd42e2af35bdfb43d791f8cecdce4a4">RGB16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a50989efe15b375dce8ba3a5714fe2543">RGBA16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a477722a31a67b4a8f4bdb09e796e343b">R8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a65264dd5d010ab021cbec10f07f97ed5">RG8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42aeb843f86a572765b9be8a71bd9563bea">RGBA8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a1ab8b9cd2509e2ccf930739d6d29ff35">R8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42af16a55975b8a8daa365e5b3cb116a001">RG8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ab99d001604e415e4ea7f107daaffd6dd">RGBA8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ac13d06830e39e268be15adfae07d9eb0">R16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a4475a780df31a86ece088a8aac082b12">RG16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ae418a751a46186248578aecf3f30a26c">RGBA16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a3bf53b9d9aca5ddf22161b4c9d362f3f">R16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42af0c6bc16df3d36b62adc241a797148de">RG16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a3d8d82a913260a439bf38ed05d6d2f46">RGBA16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a2c102dbf18ef5770d3beb5385661c1c2">R32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ac16ead63f9b07b5c97635edac05412cd">RG32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ac050956335d883e2f6ed07cc6b0c90d8">RGBA32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a88996871eb63291d92c2f9d83219648a">R32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a56014c7d6ebfadbff4d0d4d3c20a0243">RG32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a9f87275b4130dd118085dd75ee6a7ac1">RGBA32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a8dfbaada0d68227f5c299c2aa637df68">R16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ad28539b874a2bc4c5d40f49b375af474">RG16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42aa29d843695056f9c171a9eb702d6910a">RGBA16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42aca70b53fb0610461a2327973614a76ce">R32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ab968b93cd3c34fc9583050ce7e267394">RG32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a703a7a81e586669c930e3dcaf3e8c428">RGBA32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a4cad8c5058101f0f527e306958b6641b">RGB10A2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a1d8555f4846b8791e329e36dcd5239dc">RGB10A2UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a145a041c8e2080c43fa129fb5b17d8be">RGB5A1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ad0194ebb93fd86b15f194ef73f81a01f">RGBA4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ac749b8eee74e3b7b60f8774178537dea">R11FG11FB10F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a3b73e4d15701467ed72f157ffaff680a">RGB565</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ad639700e92ceb4aaafdf02ebdb3e15a4">SRGB8Alpha8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a19c8f1ee3a700e77e87053eee47f6bc8">DepthComponent</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ab5743b6194329afdf89a6a32bbcc4124">DepthComponent16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42aedf2b17fc7b220c3b855af306c9f409d">DepthComponent24</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a1f519142b59a9d4382c6aa004acd7dd2">DepthComponent32</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a9e1081f1bca10bb12b11b81c23ccbdb2">DepthComponent32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42ac07ade4f9906db3ee8e4e7053dac1dee">StencilIndex</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a560908539b7d178d0b9110e5f6fa2c88">StencilIndex1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a399d15fb10ce87fceba1c826ee904fba">StencilIndex4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a08af7fbfd260214add2e402d8427f0a8">StencilIndex8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a728c7335f0b2e511de1ccb95f67ad78f">StencilIndex16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a2fa8076285272883c91e14402975a441">DepthStencil</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42a78181d4f5d4b30baefed6c0da0de894f">Depth24Stencil8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="abdbfd17955cf0e7c38eff44f13fdcd42abe0ddae1e70dc4233b16fc053a60e2fe">Depth32FStencil8</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SamplerFilter</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ac5625b1b6d9959c520df40ccaca38f70</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ac5625b1b6d9959c520df40ccaca38f70a60494f02d440f316319dd0fad40ad007">Nearest</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ac5625b1b6d9959c520df40ccaca38f70a32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SamplerMipmap</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a15af86b21783d0ab73ec2c9640a13dda</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a15af86b21783d0ab73ec2c9640a13ddaa095a1b43effec73955e31e790438de49">Base</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a15af86b21783d0ab73ec2c9640a13ddaa60494f02d440f316319dd0fad40ad007">Nearest</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a15af86b21783d0ab73ec2c9640a13ddaa32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SamplerWrapping</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ae807f5b816812ec007253cae4ddc4520</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae807f5b816812ec007253cae4ddc4520a7020426cfb0a204051be4b3053d2acc8">Repeat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae807f5b816812ec007253cae4ddc4520a12ce4a5977988214a6b098b8cb0bf695">MirroredRepeat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae807f5b816812ec007253cae4ddc4520a74556551231333c36debc3d373261134">ClampToEdge</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae807f5b816812ec007253cae4ddc4520afb07f88f6f11cc5ab9c951290716f147">ClampToBorder</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="ae807f5b816812ec007253cae4ddc4520a01f488e80fc32761aecfbeb3d1c8f26b">MirrorClampToEdge</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SamplerCompareMode</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a379113cf1be73c13cdd7b4895d286d98</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a379113cf1be73c13cdd7b4895d286d98a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a379113cf1be73c13cdd7b4895d286d98a55f2b6a9ca7e6205c9f597b7080c7e2f">CompareRefToTexture</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SamplerCompareFunction</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a8508ad3f6a7a528e5144a7e7f318417d</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8508ad3f6a7a528e5144a7e7f318417da6e7b34fa59e1bd229b207892956dc41c">Never</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8508ad3f6a7a528e5144a7e7f318417da68eec46437c384d8dad18d5464ebc35c">Always</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8508ad3f6a7a528e5144a7e7f318417da1cfdf0e8d0c87a228c1f40d9bee7888b">Less</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8508ad3f6a7a528e5144a7e7f318417daa4cbdbb6070a5abb35fc95ecf1e22c14">LessOrEqual</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8508ad3f6a7a528e5144a7e7f318417daf5f286e73bda105e538310b3190f75c5">Equal</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8508ad3f6a7a528e5144a7e7f318417da19bb0af2c3c530538cb41aff7f235b96">NotEqual</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8508ad3f6a7a528e5144a7e7f318417da6f2f0aefb3d22da0f3839453add5f937">GreaterOrEqual</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a8508ad3f6a7a528e5144a7e7f318417da8768a6821cd735aea4f5b0df88c1fc6a">Greater</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SamplerDepthStencilMode</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a672e8bb03f26c7147c932b95b1cc424b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a672e8bb03f26c7147c932b95b1cc424ba19c8f1ee3a700e77e87053eee47f6bc8">DepthComponent</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a672e8bb03f26c7147c932b95b1cc424bac07ade4f9906db3ee8e4e7053dac1dee">StencilIndex</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextureFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a97b777c3a35e1efd11bbbe565982926c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caee38e4d5dd68c4e440825018d549cb47">Red</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cacfff813d86d447fa2a9c858650ebbb90">R8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cabac953e88f6d79514b0b6fc42eb6f3b7">RG</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca0367a93b9e3e7aa2fbe9802d80298e46">RG8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca889574aebacda6bfd3e534e2b49b8028">RGB</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca165c6379d01617e12de274a3952efa63">RGB8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caea3495a278957dc58165e48a8945469f">RGBA</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cab4b279046a02077466fa26cabb00c642">RGBA8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cae24128a61e28847e5cae93e146f3c396">R8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca0c1bc4554d3ca92e8ed03fde8fb668fc">RG8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca0ed70c0ecaf24c9abe9b121dd6fbc7be">RGB8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca77b2290184a281692c88cea55f7e4709">RGBA8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca9a486e1a3c543c7c58e1cc8086dc4239">R16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca2b66caa416f0a28686ade3fc30ab223a">RG16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca1cd42e2af35bdfb43d791f8cecdce4a4">RGB16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca50989efe15b375dce8ba3a5714fe2543">RGBA16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca3be85f3a039758c6edb91c91b7af98d2">R16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca7e7693eb3b20e62d8af832c2fe116559">RG16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca31fe77f7173ed54fdc96a4f752083205">RGB16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca825f61116ed1837ab9125c3e1921d860">RGBA16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca477722a31a67b4a8f4bdb09e796e343b">R8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca65264dd5d010ab021cbec10f07f97ed5">RG8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cafc5e2f0963f0ce3529e8aee36d827bbd">RGB8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caeb843f86a572765b9be8a71bd9563bea">RGBA8UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca1ab8b9cd2509e2ccf930739d6d29ff35">R8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caf16a55975b8a8daa365e5b3cb116a001">RG8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca57a36f0c89bfa81cdd9a69e2ad2df08b">RGB8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cab99d001604e415e4ea7f107daaffd6dd">RGBA8I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cac13d06830e39e268be15adfae07d9eb0">R16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca4475a780df31a86ece088a8aac082b12">RG16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cadfb1f628557b0014586b94400f06777b">RGB16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cae418a751a46186248578aecf3f30a26c">RGBA16UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca3bf53b9d9aca5ddf22161b4c9d362f3f">R16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caf0c6bc16df3d36b62adc241a797148de">RG16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caff7632ef49d4bbe6b35050ac957a04c8">RGB16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca3d8d82a913260a439bf38ed05d6d2f46">RGBA16I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca2c102dbf18ef5770d3beb5385661c1c2">R32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cac16ead63f9b07b5c97635edac05412cd">RG32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cae240d3e394b6a7cfa467efe512e96bb4">RGB32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cac050956335d883e2f6ed07cc6b0c90d8">RGBA32UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca88996871eb63291d92c2f9d83219648a">R32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca56014c7d6ebfadbff4d0d4d3c20a0243">RG32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca8305c7f5432d31774cceb858c966b22e">RGB32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca9f87275b4130dd118085dd75ee6a7ac1">RGBA32I</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca8dfbaada0d68227f5c299c2aa637df68">R16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cad28539b874a2bc4c5d40f49b375af474">RG16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca25cd126670bd567a899c64c4e6e8ca7d">RGB16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caa29d843695056f9c171a9eb702d6910a">RGBA16F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caca70b53fb0610461a2327973614a76ce">R32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cab968b93cd3c34fc9583050ce7e267394">RG32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cad8936cc7055546f79128b9dbfb8c8bbb">RGB32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca703a7a81e586669c930e3dcaf3e8c428">RGBA32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca280f73691109aeaa235ffddd2d154d9b">Luminance</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca780701651d86fd20708e81e7ad48c078">LuminanceAlpha</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca95e4ca1fe4603b39d7e7a4686446d9be">R3B3G2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca988777bd9406d465bdf7d81a36b26749">RGB4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca51e72bb0b91ea20485e3ad7657b9a60e">RGB5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca3b73e4d15701467ed72f157ffaff680a">RGB565</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caa3ac59ae1fad21561752e23c2bebc6b8">RGB10</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cac65abdcc9466868b293bfb11179fedc5">RGB12</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cac749b8eee74e3b7b60f8774178537dea">R11FG11FB10F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca02f40147ece0d4ef4c1ec76a56e22224">RGB9E5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca1f3f09bca5728eb7af4ea263ae84b9f1">SRGB</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cab71c01d7fab5970416ff1c79c675dc15">SRGB8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca6d3435115853ddb0d9c1711d182ad6ac">RGBA2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cad0194ebb93fd86b15f194ef73f81a01f">RGBA4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca145a041c8e2080c43fa129fb5b17d8be">RGB5A1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca4cad8c5058101f0f527e306958b6641b">RGB10A2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca1d8555f4846b8791e329e36dcd5239dc">RGB10A2UI</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cafb9e3f60db71f694d22e9013646d38f5">RGBA12</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca5dfd728b3bee2ad053d22203c3e8f2b8">SRGBAlpha</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cad639700e92ceb4aaafdf02ebdb3e15a4">SRGB8Alpha8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca625185c9ec2ed5f455d19f1ca6a00773">CompressedRed</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca772bc5e58449cef708b6156078f3f5d8">CompressedRG</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cad0031186aeaf9a67a1eeb17f56dce93b">CompressedRGB</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caa1adbdbb4c32dcd365caa018b1f4c2ab">CompressedRGBA</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caae5c87496dd401b101d970d2be2d675d">CompressedRedRgtc1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caa00895171c7061e57b500fee14a937a8">CompressedRGRgtc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca1c0cc46455d26a44fb5bbfcc773e6caa">CompressedSignedRedRgtc1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca7d767450de41e4ad6f8a95fb4515e161">CompressedSignedRGRgtc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca863402c422be61e85e34a2e554b0a63c">CompressedRGBBptcUnsignedFloat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cab0ecb340d273932cde6de1fb444f3cb3">CompressedRGBBptcSignedFloat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caa245d27842b07f4ae9516d04fde441d1">CompressedRGBABptcUnorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca366916eda1a3218ad315dde357e5204a">CompressedSRGBAlphaBptcUnorm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca14250c0d7728ef90e996ae03bf7489fa">CompressedRGB8Etc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca95d73b2acfa5cd90584226c70269f2e8">CompressedSRGB8Etc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cade54b50cd1b16008d3a617f80a34e2eb">CompressedRGB8PunchthroughAlpha1Etc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca6c4a43ca22963e72ff03d842afe8a0a2">CompressedSRGB8PunchthroughAlpha1Etc2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca922c03efed4659f37f28437176325647">CompressedRGBA8Etc2Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca742b4f2e5cd4402729b02ec23a1025f9">CompressedSRGB8Alpha8Etc2Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cadb569da6b6f5e127591d8730ea79cb80">CompressedR11Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca6806ab0fb22fda8987dc1c44a10c36ad">CompressedSignedR11Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca45184ba1be0c480b35013d48e23474e6">CompressedRG11Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca5243d34520a11c285cb37e5a5cffd122">CompressedSignedRG11Eac</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca85f12a3af9a3a4a4c39e15bc125705e2">CompressedRGBS3tcDxt1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca05dd6df6676af88937f4dacc52fd7f6d">CompressedRGBAS3tcDxt1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca414690e758599d93ae1083830f33b187">CompressedRGBAS3tcDxt3</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca3701300f3409e2b208ab0786ccf8a782">CompressedRGBAS3tcDxt5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caa1ce82ea6c38485be618682112e539df">CompressedRGBAAstc4x4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca28c4d91f38360c0d861795f0ef838681">CompressedSRGB8Alpha8Astc4x4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cab0c113c2534fc0708128e5f7176dd70a">CompressedRGBAAstc5x4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca51613f53b2a8518f5c88fea1162db2b2">CompressedSRGB8Alpha8Astc5x4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cad69c5b046d1173bee3e3f037f0751e89">CompressedRGBAAstc5x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caa763331ac876a25410af5ca632b6db7d">CompressedSRGB8Alpha8Astc5x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cab2684ddc399d9e8dc07bcfaa0852546a">CompressedRGBAAstc6x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca18060e31caa5f53be3dd9d524ece7dfb">CompressedSRGB8Alpha8Astc6x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca84f136529809b4b46a0735c95cd1dcc1">CompressedRGBAAstc6x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca3635c9d4ed5d3e7c2911aacc8e3ba08f">CompressedSRGB8Alpha8Astc6x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca41e0cbb1620e2f5f0a37785cfae3b152">CompressedRGBAAstc8x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca64c722ef1f0d0a1e09ecedaa7b939067">CompressedSRGB8Alpha8Astc8x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cac2c952a6cdd1c104e808fa5ce5f5d43e">CompressedRGBAAstc8x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca350a4a5331d25e3ee726b841381ed9f8">CompressedSRGB8Alpha8Astc8x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cade4424b334ae908d6259c6c8137793c8">CompressedRGBAAstc8x8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cab555414f12cc6348809920b4ae02ac2d">CompressedSRGB8Alpha8Astc8x8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca1bd7a9fc8fbe546d83daa0c1b41cc9c4">CompressedRGBAAstc10x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca3710b3e0d2eceb116d22c776f4841020">CompressedSRGB8Alpha8Astc10x5</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cac0052d00bbb4992139980926903db7df">CompressedRGBAAstc10x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca9e81ac0b2ce7a2295475d2e60c80907a">CompressedSRGB8Alpha8Astc10x6</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cabc1f2059e849224ea01d85db0048b4b8">CompressedRGBAAstc10x8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caa7d98a3596e139da1d5e7ed2f9a2d3cf">CompressedSRGB8Alpha8Astc10x8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca355d96c9193731337720859439453df9">CompressedRGBAAstc10x10</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cae8127849086ce85af225624ef25f19b4">CompressedSRGB8Alpha8Astc10x10</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca66524e68a55780a6f3457f20e8e6ace8">CompressedRGBAAstc12x10</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caad9de1fda6e81b47fe595f0377eaf688">CompressedSRGB8Alpha8Astc12x10</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cadde421f8ef9da00a961c291fa112d226">CompressedRGBAAstc12x12</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca076dbe24a47429ccef59ae197475c50a">CompressedSRGB8Alpha8Astc12x12</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca19c8f1ee3a700e77e87053eee47f6bc8">DepthComponent</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cab5743b6194329afdf89a6a32bbcc4124">DepthComponent16</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926caedf2b17fc7b220c3b855af306c9f409d">DepthComponent24</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca1f519142b59a9d4382c6aa004acd7dd2">DepthComponent32</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca9e1081f1bca10bb12b11b81c23ccbdb2">DepthComponent32F</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca08af7fbfd260214add2e402d8427f0a8">StencilIndex8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca2fa8076285272883c91e14402975a441">DepthStencil</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926ca78181d4f5d4b30baefed6c0da0de894f">Depth24Stencil8</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a97b777c3a35e1efd11bbbe565982926cabe0ddae1e70dc4233b16fc053a60e2fe">Depth32FStencil8</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Version</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a25a655e88f8aa4c4528819e7c68360bf</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa6f87fc2156f6b7da4cafba3714fb3c09">GL210</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfae32fe21dd789983eb99064a11c84c00a">GL300</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa0631a35644b3a4a74bec3151f6c9b031">GL310</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa2cd64d0051d11e3c1442d67813886d86">GL320</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfad957a7f239a0bf7df56130c678f6396c">GL330</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa369c4ba0fc139d909ee94a5cc4ddb531">GL400</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfab81b89342b5f32260e52b2105382a298">GL410</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa30a393172e9cfa2c36ba8c6036692fad">GL420</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfaa895d16b1ad08894fb826ac79f710f3c">GL430</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfac616f63c50e83d49ca399eb7a5252ca4">GL440</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa232d8bc0d273cd67fa1d295fc3c8a944">GL450</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfaacdfa76854572ac38222de5c4297ce93">GL460</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa2d3e1e712d28ed030790b46222941235">GLES200</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa94d9b97253a36a124f91d9e70153e989">GLES300</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfaeee309b0c4a4eddcdaed74228d9443c2">GLES310</enumvalue>
      <enumvalue file="namespaceMagnum_1_1GL.html" anchor="a25a655e88f8aa4c4528819e7c68360bfa07a471031bd29835eab03c246f5d92a8">GLES320</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a0eb7a0597aa54dac06f74058f7591913</anchor>
      <arglist>(Debug &amp;debug, Attribute&lt; T &gt;::Components)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a74a95cad0d549a952ac6a097e5c92b0b</anchor>
      <arglist>(Debug &amp;debug, Attribute&lt; T &gt;::DataType)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a9024465ba0e0014d55008545bee2493d</anchor>
      <arglist>(Debug &amp;debug, Buffer::TargetHint value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a41d8e7d6b7a2d9d12dcca72630d3a23a</anchor>
      <arglist>(Debug &amp;debug, Buffer::Target value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a0d4db4d0216dee7835c81b44f0e0a4e0</anchor>
      <arglist>(Debug &amp;debug, Context::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ad2a1b71ac5740761d3d5f922c0578ddf</anchor>
      <arglist>(Debug &amp;debug, Context::Flags value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a9333b5940a6dfc9e3432f8231ded74bc</anchor>
      <arglist>(Debug &amp;debug, Context::DetectedDriver value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ad75f14aae1be07e6094458ae5eab06a7</anchor>
      <arglist>(Debug &amp;debug, Context::DetectedDrivers value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a8ebfbeb18914398a29b94bb905a2d27d</anchor>
      <arglist>(Debug &amp;debug, DebugOutput::Source value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a46414fbbd0eb0fa569512e82d9ee9e22</anchor>
      <arglist>(Debug &amp;debug, DebugOutput::Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a89d1fd21bfaa208055a8c0c9520776e2</anchor>
      <arglist>(Debug &amp;debug, DebugOutput::Severity value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a757e23b71bfbb06869da1eba3b7d45da</anchor>
      <arglist>(Debug &amp;debug, DebugMessage::Source value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ab1f7b8a72a9a538560f8f0606ca1f4a8</anchor>
      <arglist>(Debug &amp;debug, DebugMessage::Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ac94d5fde25c824e3f7cafb1c0ff7cb13</anchor>
      <arglist>(Debug &amp;debug, DebugGroup::Source value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a67c85d774decf9566ce34f0861b88198</anchor>
      <arglist>(Debug &amp;debug, DefaultFramebuffer::Status value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a969df0ccdd40303d80c983c3eda61ef8</anchor>
      <arglist>(Debug &amp;debug, Framebuffer::Status value)</arglist>
    </member>
    <member kind="function">
      <type>MeshPrimitive</type>
      <name>meshPrimitive</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a490b82a53ed07151dc0fc03ee4d3332e</anchor>
      <arglist>(Magnum::MeshPrimitive primitive)</arglist>
    </member>
    <member kind="function">
      <type>MeshIndexType</type>
      <name>meshIndexType</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ac702527f8d92c066c961f319d4f0788b</anchor>
      <arglist>(Magnum::MeshIndexType type)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a4b44a44902ca99975228ecd9b99c4e2e</anchor>
      <arglist>(Debug &amp;debug, MeshPrimitive value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a562525c121e92f785bede2fdafe8b62d</anchor>
      <arglist>(Debug &amp;debug, MeshIndexType value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPixelFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a0c16ea119f48d7bc3a27370f21a1d9de</anchor>
      <arglist>(Magnum::PixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>PixelFormat</type>
      <name>pixelFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>aa481129214ef74d5f599867b2edb1c8e</anchor>
      <arglist>(Magnum::PixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>PixelType</type>
      <name>pixelType</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>acef19e186d99b0190944fc4c91aad515</anchor>
      <arglist>(Magnum::PixelFormat format, UnsignedInt extra=0)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>pixelSize</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a426d95810d81105f5f330805335ca676</anchor>
      <arglist>(PixelFormat format, PixelType type)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>adba7ceaa4cfe049c21a480d4589fd5da</anchor>
      <arglist>(Debug &amp;debug, PixelFormat value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a94a4f70394fe63d61cc31b4c96406f82</anchor>
      <arglist>(Debug &amp;debug, PixelType value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasCompressedPixelFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a4d50de0a3f7e010a943cde4ff2768485</anchor>
      <arglist>(Magnum::CompressedPixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelFormat</type>
      <name>compressedPixelFormat</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a9c3fb5463562c07a462267f5dce9831c</anchor>
      <arglist>(Magnum::CompressedPixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a9e41f324b92c9209e9c2e9935dd8d809</anchor>
      <arglist>(Debug &amp;debug, CompressedPixelFormat value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>af5ed7655c31326a82464a3856ce8adaa</anchor>
      <arglist>(Debug &amp;debug, Renderer::Error value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a4b42fb5b1eb68a0a42794f44ef20faf5</anchor>
      <arglist>(Debug &amp;debug, Renderer::ResetNotificationStrategy value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a41f92605fac305549dc1f4bdb6957fa7</anchor>
      <arglist>(Debug &amp;debug, Renderer::GraphicsResetStatus value)</arglist>
    </member>
    <member kind="function">
      <type>SamplerFilter</type>
      <name>samplerFilter</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a5d9f203329afe7f2157eb2f0b721d914</anchor>
      <arglist>(Magnum::SamplerFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>SamplerMipmap</type>
      <name>samplerMipmap</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a38ae36b3ffddfd8a89352e2f7c65b5cd</anchor>
      <arglist>(Magnum::SamplerMipmap mipmap)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSamplerWrapping</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a68da07f6da40ae70bf4f68a5a5ff2ae7</anchor>
      <arglist>(Magnum::SamplerWrapping wrapping)</arglist>
    </member>
    <member kind="function">
      <type>SamplerWrapping</type>
      <name>samplerWrapping</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a33005f2d6b256a528790d8676e55c91c</anchor>
      <arglist>(Magnum::SamplerWrapping wrapping)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a72eb4eb787099206aeed4a33b1de3279</anchor>
      <arglist>(Debug &amp;debug, SamplerFilter value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a71dcb2bed12a67da434cea582acf9bdf</anchor>
      <arglist>(Debug &amp;debug, SamplerMipmap value)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; dimensions, SamplerWrapping &gt;</type>
      <name>samplerWrapping</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ac2aae6516f8473eb0de8f54c465bd53f</anchor>
      <arglist>(const Array&lt; dimensions, Magnum::SamplerWrapping &gt; &amp;wrapping)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ad78174e4316b2917fab9ff7d13a0b55f</anchor>
      <arglist>(Debug &amp;debug, SamplerWrapping value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a8e0b139605625de8bb53046c5fd72424</anchor>
      <arglist>(Debug &amp;debug, SamplerCompareMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>aee7d8763f95a57244519b5b6df0f0be4</anchor>
      <arglist>(Debug &amp;debug, SamplerCompareFunction value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>afc0c871f9862229e4b3a472d58b6cc81</anchor>
      <arglist>(Debug &amp;debug, SamplerDepthStencilMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a7ade40fd2de1c917757f97dbd6c5ab11</anchor>
      <arglist>(Debug &amp;debug, Shader::Type value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Version</type>
      <name>version</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a45f59f24c88057292c8aa4fb1c8db0e5</anchor>
      <arglist>(Int major, Int minor)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Int, Int &gt;</type>
      <name>version</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>aea96e4fa154ad9f99426e857e8baab2b</anchor>
      <arglist>(Version version)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isVersionES</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>aab14823d7ee4166e0aba7a5390c9d935</anchor>
      <arglist>(Version version)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>a3182f08d7ea54aad15c2e7465bf2bf53</anchor>
      <arglist>(Debug &amp;debug, Version value)</arglist>
    </member>
    <member kind="variable">
      <type>DefaultFramebuffer</type>
      <name>defaultFramebuffer</name>
      <anchorfile>namespaceMagnum_1_1GL.html</anchorfile>
      <anchor>ab29eb7554d0d5bdc2fb0600b1d06bcbb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::GL::Extensions</name>
    <filename>namespaceMagnum_1_1GL_1_1Extensions.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Magnum::GlmIntegration</name>
    <filename>namespaceMagnum_1_1GlmIntegration.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Magnum::ImGuiIntegration</name>
    <filename>namespaceMagnum_1_1ImGuiIntegration.html</filename>
    <class kind="class">Magnum::ImGuiIntegration::Context</class>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>namespaceMagnum_1_1ImGuiIntegration.html</anchorfile>
      <anchor>ae843621d2754d7d7645163fd4e2de80f</anchor>
      <arglist>(GL::Texture2D &amp;texture, const Vector2 &amp;size, const Range2D &amp;uvRange={{}, Vector2{1.0f}}, const Color4 &amp;tintColor=Color4{1.0f}, const Color4 &amp;borderColor={})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>imageButton</name>
      <anchorfile>namespaceMagnum_1_1ImGuiIntegration.html</anchorfile>
      <anchor>a6cca662c778c7e52336ffa46f79c9348</anchor>
      <arglist>(GL::Texture2D &amp;texture, const Vector2 &amp;size, const Range2D &amp;uvRange={{}, Vector2{1.0f}}, Int framePadding=-1, const Color4 &amp;backgroundColor={}, const Color4 &amp;tintColor=Color4{1.0f})</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Math</name>
    <filename>namespaceMagnum_1_1Math.html</filename>
    <namespace>Magnum::Math::Algorithms</namespace>
    <namespace>Magnum::Math::Distance</namespace>
    <namespace>Magnum::Math::Geometry</namespace>
    <namespace>Magnum::Math::Intersection</namespace>
    <namespace>Magnum::Math::Literals</namespace>
    <class kind="class">Magnum::Math::Bezier</class>
    <class kind="class">Magnum::Math::BoolVector</class>
    <class kind="class">Magnum::Math::Color3</class>
    <class kind="class">Magnum::Math::Color4</class>
    <class kind="struct">Magnum::Math::ColorHsv</class>
    <class kind="class">Magnum::Math::Complex</class>
    <class kind="struct">Magnum::Math::Constants</class>
    <class kind="class">Magnum::Math::CubicHermite</class>
    <class kind="class">Magnum::Math::Deg</class>
    <class kind="class">Magnum::Math::Dual</class>
    <class kind="class">Magnum::Math::DualComplex</class>
    <class kind="class">Magnum::Math::DualQuaternion</class>
    <class kind="class">Magnum::Math::Frustum</class>
    <class kind="class">Magnum::Math::Half</class>
    <class kind="struct">Magnum::Math::IdentityInitT</class>
    <class kind="struct">Magnum::Math::IsFloatingPoint</class>
    <class kind="struct">Magnum::Math::IsIntegral</class>
    <class kind="struct">Magnum::Math::IsScalar</class>
    <class kind="struct">Magnum::Math::IsUnitless</class>
    <class kind="struct">Magnum::Math::IsUnitless&lt; Deg&lt; T &gt; &gt;</class>
    <class kind="struct">Magnum::Math::IsUnitless&lt; Rad&lt; T &gt; &gt;</class>
    <class kind="struct">Magnum::Math::IsUnitless&lt; Unit&lt; Derived, T &gt; &gt;</class>
    <class kind="struct">Magnum::Math::IsVector</class>
    <class kind="class">Magnum::Math::Matrix</class>
    <class kind="class">Magnum::Math::Matrix3</class>
    <class kind="class">Magnum::Math::Matrix4</class>
    <class kind="class">Magnum::Math::Quaternion</class>
    <class kind="class">Magnum::Math::Rad</class>
    <class kind="class">Magnum::Math::Range</class>
    <class kind="class">Magnum::Math::Range2D</class>
    <class kind="class">Magnum::Math::Range3D</class>
    <class kind="class">Magnum::Math::RectangularMatrix</class>
    <class kind="struct">Magnum::Math::StrictWeakOrdering</class>
    <class kind="struct">Magnum::Math::TypeTraits</class>
    <class kind="class">Magnum::Math::Unit</class>
    <class kind="class">Magnum::Math::Vector</class>
    <class kind="class">Magnum::Math::Vector2</class>
    <class kind="class">Magnum::Math::Vector3</class>
    <class kind="class">Magnum::Math::Vector4</class>
    <class kind="struct">Magnum::Math::ZeroInitT</class>
    <member kind="typedef">
      <type>Bezier&lt; 2, dimensions, T &gt;</type>
      <name>QuadraticBezier</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a213eaf7e01a257c1eacf8a7184c2e5fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QuadraticBezier&lt; 2, T &gt;</type>
      <name>QuadraticBezier2D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a52bbd5f3028c1607e6663f17f67a5d1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QuadraticBezier&lt; 3, T &gt;</type>
      <name>QuadraticBezier3D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9493d9a9d8df8d9723dcb4d844718726</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Bezier&lt; 3, dimensions, T &gt;</type>
      <name>CubicBezier</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>acfbcdbd3e79169d81307b31e575601aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CubicBezier&lt; 2, T &gt;</type>
      <name>CubicBezier2D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac11e0f5820b7c4dc9649e35106bdc49a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CubicBezier&lt; 3, T &gt;</type>
      <name>CubicBezier3D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>addfd48e7102847b301863dedcc75a2e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CubicHermite&lt; T &gt;</type>
      <name>CubicHermite1D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aae4f0bf9764d711db7766c4a1d989add</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CubicHermite&lt; Vector2&lt; T &gt; &gt;</type>
      <name>CubicHermite2D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a80495de6a1efa4d9a0e05c20b9352a8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CubicHermite&lt; Vector3&lt; T &gt; &gt;</type>
      <name>CubicHermite3D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9ca862ecaad7ee99694cd49185174768</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CubicHermite&lt; Complex&lt; T &gt; &gt;</type>
      <name>CubicHermiteComplex</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a4d37e5bef0a581038a66091a3b53dbe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CubicHermite&lt; Quaternion&lt; T &gt; &gt;</type>
      <name>CubicHermiteQuaternion</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aa6efb48382e3d76787c632fafca910f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matrix&lt; 2, T &gt;</type>
      <name>Matrix2x2</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a652b81c9ddc63931b8965c5a88e8131f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matrix&lt; 3, T &gt;</type>
      <name>Matrix3x3</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac89eeb9dc2fad9807f0795ef9b292190</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matrix&lt; 4, T &gt;</type>
      <name>Matrix4x4</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6cfef6a416e4d1166adfc1f19cb45ed7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Range&lt; 1, T &gt;</type>
      <name>Range1D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab8759a26a030f045b5217d93618e5300</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 2, 3, T &gt;</type>
      <name>Matrix2x3</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aeafdba32770167422563607a6d7a7763</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 3, 2, T &gt;</type>
      <name>Matrix3x2</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6784a052ccad6a6f0b66121c6c2f270e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 2, 4, T &gt;</type>
      <name>Matrix2x4</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a72b6951e0e464e5547906e6824f83fc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 4, 2, T &gt;</type>
      <name>Matrix4x2</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a84e3b41c8281378227a9250c2fc2abf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 3, 4, T &gt;</type>
      <name>Matrix3x4</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab25028109475da01892b1e7b3e13a18b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 4, 3, T &gt;</type>
      <name>Matrix4x3</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aebcc2ac26446bd06cc6e7e4bb1d57464</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Corrade::Containers::NoInitT</type>
      <name>NoInitT</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae3fc2129ed8e84f3ed1cea8bd4a902ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Implementation::UnderlyingType&lt; T &gt;::Type</type>
      <name>UnderlyingTypeOf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a20237cea951d37ab824bf61685b26f8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a577c8c280a0b3753ef06a23b5b496a3a</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Unit&lt; Rad, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac757572f15467c51569563ea991a2549</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Unit&lt; Deg, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab1001276d3083c0d6d035c9e343c1c3c</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Bezier&lt; order, dimensions, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a05ecfedf1ed791f07d32b7d45d978432</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const BoolVector&lt; size &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>afae5b383b9623a3b56c4fae43a16b9ca</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Color3&lt; UnsignedByte &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a338890901a6aa2d1e80e689f9b2532a4</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Color4&lt; UnsignedByte &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>xyYToXyz</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a4fc7e7145d373b085fe34b3492b12b88</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;xyY)</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>xyzToXyY</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a95bff66ce9604939340d44686f857aa6</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;xyz)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a89bc10efa4914f4bd586cf6f493ee898</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const ColorHsv&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae3d695a1794978f2aded487bc9e6e312</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;a, const Complex&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab0d977c1e3f6a66dcdedcd261b758210</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;normalizedA, const Complex&lt; T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator *</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac2f12a2b45f2b85dd1c8e9797b03fa13</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector, const Complex&lt; T &gt; &amp;complex)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a61610c4747e550c9076fa7e783494498</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;normalizedA, const Complex&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>slerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aa3c5f948767edd96cd712952485a1275</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;normalizedA, const Complex&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a673cbf89633bedbae0a30457b9bfaceb</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Complex&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a744c87e95b64c6546f5b7b8298ac9aa7</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const CubicHermite&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>select</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>abc745d7090d44bb511d569a7216c978d</anchor>
      <arglist>(const CubicHermite&lt; T &gt; &amp;a, const CubicHermite&lt; T &gt; &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a576071442da326909b9b303ad0b53372</anchor>
      <arglist>(const CubicHermite&lt; T &gt; &amp;a, const CubicHermite&lt; T &gt; &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a7470cab437d00cad96234c6d1a342cae</anchor>
      <arglist>(const CubicHermiteComplex&lt; T &gt; &amp;a, const CubicHermiteComplex&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab913ecf3dca35c39c342943f59e60011</anchor>
      <arglist>(const CubicHermiteQuaternion&lt; T &gt; &amp;a, const CubicHermiteQuaternion&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>lerpShortestPath</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a500433112c7749a99bfb107f193770e8</anchor>
      <arglist>(const CubicHermiteQuaternion&lt; T &gt; &amp;a, const CubicHermiteQuaternion&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>slerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2eeb9131e981855582bf20deff050427</anchor>
      <arglist>(const CubicHermiteComplex&lt; T &gt; &amp;a, const CubicHermiteComplex&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>slerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6e4b17bc7fbbdb663093b1c453edf61c</anchor>
      <arglist>(const CubicHermiteQuaternion&lt; T &gt; &amp;a, const CubicHermiteQuaternion&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>slerpShortestPath</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>afdcbab518271116c57eba6d6046e8bf8</anchor>
      <arglist>(const CubicHermiteQuaternion&lt; T &gt; &amp;a, const CubicHermiteQuaternion&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>splerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aada021cfaf2a04e3a8c1f0c6c4b5addd</anchor>
      <arglist>(const CubicHermite&lt; T &gt; &amp;a, const CubicHermite&lt; T &gt; &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>splerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aa5bbd5f87e7e2a7bae49f6bcd1562b8f</anchor>
      <arglist>(const CubicHermiteComplex&lt; T &gt; &amp;a, const CubicHermiteComplex&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>splerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a8a1e8df44aad8f5bf8861f026737f334</anchor>
      <arglist>(const CubicHermiteQuaternion&lt; T &gt; &amp;a, const CubicHermiteQuaternion&lt; T &gt; &amp;b, T t)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a566f5ca101d2a3793843141980b2545e</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Dual&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt;</type>
      <name>sqrt</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9f399ec60dc87478fcdbe6091e0b6783</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;dual)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Dual&lt; T &gt;, Dual&lt; T &gt; &gt;</type>
      <name>sincos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>adf84b1bff280ad75079c8774ca25cbec</anchor>
      <arglist>(const Dual&lt; Rad&lt; T &gt;&gt; &amp;angle)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a59b3488a700c0d5fcaed8ce7d7e5b1fc</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const DualComplex&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>sclerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a16a9790aad4406e49517818bd3fa632b</anchor>
      <arglist>(const DualQuaternion&lt; T &gt; &amp;normalizedA, const DualQuaternion&lt; T &gt; &amp;normalizedB, const T t)</arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>sclerpShortestPath</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a473dd6757639985c2f395396089a02b5</anchor>
      <arglist>(const DualQuaternion&lt; T &gt; &amp;normalizedA, const DualQuaternion&lt; T &gt; &amp;normalizedB, const T t)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a827f6a5c6237137238f27a82aa9d1f4d</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const DualQuaternion&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aad6fdc9ca9b5bd751970733503de84ee</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Frustum&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Integral, Integral &gt;</type>
      <name>div</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac26736b3814a1affa940a7ebd90d2c0c</anchor>
      <arglist>(Integral x, Integral y)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a158798027e4c105796ba27c51b857848</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, Half value)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a24a478c9463275d440061899c3630a32</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;a, const Quaternion&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a77252a59dcbaf44761edc9213f0e5927</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a702539c58371af1c8635c2bc60e3e0a5</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>lerpShortestPath</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a7af2a318a3c70abee764adfa3b5a3a02</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>slerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aa52d32b2fcb66f28a4330fb39fa50589</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>slerpShortestPath</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0d790000a3656bf3b1bad2098ec00ea0</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a03f030af72160303a9934d7a9af40f37</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Quaternion&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>join</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab1a605df6c5b25fe493c1ee83e2ae6d6</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>intersect</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a4cf6ac31a2f0a80774021f83cd397426</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a21df4e4922ea49e428d71f6fe56e7b63</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1f3385fec96840d6f57368596e7b8fe5</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Range&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2b4c9a90c6ef57998d88efe24b223a07</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Magnum::Math::RectangularMatrix&lt; cols, rows, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Implementation::TypeForSize&lt; sizeof...(components), T &gt;::Type</type>
      <name>swizzle</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0bfabe9a216b20e44f34d6258ae02756</anchor>
      <arglist>(const T &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; FloatingPoint &gt;</type>
      <name>angle</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aee8c44413ae416ea25a03146bf8a5484</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;normalizedA, const Vector&lt; size, FloatingPoint &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>equal</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5b9f7afdebb621e14931b9199bb57920</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>notEqual</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9c34112dad523fa92071f5cad7f01d3c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>cross</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2058d3c2541d8b3556c861ef79c592d0</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>cross</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad90024e1b2ca900d572042ccd0baba64</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector4&lt; T &gt;</type>
      <name>planeEquation</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0c975a8c8c6bbff31a943561f9adf681</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;p0, const Vector3&lt; T &gt; &amp;p1, const Vector3&lt; T &gt; &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>Vector4&lt; T &gt;</type>
      <name>planeEquation</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>adcb3b9fbc37a6d26d5330b1e5c84d143</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;normal, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>log</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0506f088194eafea3e7a4100f2c4ed2d</anchor>
      <arglist>(UnsignedInt base, UnsignedInt number)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>log2</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0f41b7b73d96020cc88c28b09a229ab5</anchor>
      <arglist>(UnsignedInt number)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>log</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a94c4d12ee57e7129651a9d9cd43c7c66</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>exp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a54553867ca47a3e9ffada201a4c35ca3</anchor>
      <arglist>(T exponent)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab87686781f77f99e15004fde66ac4efe</anchor>
      <arglist>(T base)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a341118d5b76b52847f3e2e1e0ccdbee8</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;base)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aa11bdab7e096bc956c01428d6a9bf092</anchor>
      <arglist>(T base, T exponent)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a68a0728c0d2af141dad9a34f406a1765</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;base, T exponent)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>sqrt</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2b45c65b1c0eb3f2f5398dc97b060fe4</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>sqrt</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a185276ced88e0fd1ca36290a3ed1f197</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>sqrtInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a58be896f47cda8ed62fd39bb03ddb674</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>sqrtInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9f2f814761c468a0ae5a7075ec4e79b3</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sin</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6558da1eb5042764fae1640dcf99d0a8</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>cos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a786b7203dac52e7b7a23965cac9ef127</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>sincos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aad0e3cf434e90f80d18860f775efe427</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>tan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5b75699b28dffa85a5d2c59b769c78b9</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>asin</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5a0d14b2cdd605132c3fa408763e615a</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>acos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a3b14d10e75ca21d34df11d7be0f6b616</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>atan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a916c22b19c5c7bf191ec697eecab60b6</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, bool &gt;::type</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad440119d3516d75bd5ff878723670acc</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a53ef8cb0e28d9c59e6d72e4927e36e61</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, bool &gt;::type</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aee19024da337a2264fce2bbbae2ef014</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a740f4050b4d66b0af6a7ec66639cfdaa</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a73d452db5a48a539988bfd80e29dcbcf</anchor>
      <arglist>(T value, T min)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1fe447bd1df20772eee153a58734a08e</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, const Vector&lt; size, T &gt; &amp;min)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a4bee14bf25158b6be1dc4afd70971fb8</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T min)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab20dfdf8194d6b4bc1bf137640cc02e2</anchor>
      <arglist>(T a, T b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6c9c233ff512d3cfb52aba13ab649f4a</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, const Vector&lt; size, T &gt; &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad8719e1853a5c449106e63c776c9d72f</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T max)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, std::pair&lt; T, T &gt; &gt;::type</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6d0a7d68d7aae97ad18ebdd1d9ee66e5</anchor>
      <arglist>(T a, T b)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Vector&lt; size, T &gt;, Vector&lt; size, T &gt; &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1be28fa49728193f3891a80e2e532f3a</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a3eebcca3a0bb22009bffdbe85e09fc69</anchor>
      <arglist>(T value, T min, T max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a77d6c362ed010788be3524d1d7590ecf</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, const Vector&lt; size, T &gt; &amp;min, const Vector&lt; size, T &gt; &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad4a8b2ed74b85d7eead141ebd9b68ce7</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T min, T max)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>sign</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a90bbd057fdad07c10a874587e85ff3f7</anchor>
      <arglist>(const T &amp;scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>sign</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>af6e5fe047dcca5901c77e0a85b78edcc</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>abs</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9be3830c016221eee0c2b74253f1e297</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>abs</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5aded6b09b6926348329b80e3f3ae3de</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>floor</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac1c5e4b910a79bbe7116b1e9c650ee80</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>floor</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a900a33f3287d7aaee9f6dcc062a6dc08</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>round</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a3fc23146b9833fa0c4317256f8b7640e</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>round</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a255ee2e0250afe2c4f3b8609f1f5e1e0</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>ceil</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1a759e2614f12f54f3972a80b01b0773</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>ceil</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aa117c52ac77784673ffe4779ac7b94bd</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a8d0cf4b89dfd92edf6cff3954adf7cf7</anchor>
      <arglist>(const T &amp;a, const T &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a475f41c02fdf7b62b1d6ee14dec70a0c</anchor>
      <arglist>(const T &amp;a, const T &amp;b, bool t)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a442e12f313c209eb67dbfcbef05e2b5c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b, const BoolVector&lt; size &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a757985d96fb36e841322a3317c851304</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;a, const BoolVector&lt; size &gt; &amp;b, const BoolVector&lt; size &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>UnderlyingTypeOf&lt; typename std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type &gt;</type>
      <name>lerpInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a586189ebf6a1c2e3fea58fe6b12147d6</anchor>
      <arglist>(T a, T b, T lerp)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, UnderlyingTypeOf&lt; T &gt; &gt;</type>
      <name>lerpInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae850b993aa7bc714cbc88035ab94f7d9</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b, const Vector&lt; size, T &gt; &amp;lerp)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>select</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0358670cc3c6b662acb473ebab49de5f</anchor>
      <arglist>(const T &amp;a, const T &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>fma</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5521b10067ed8062ac1fa3fcea19402b</anchor>
      <arglist>(T a, T b, T c)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>fma</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a043aba857f8ce67ad0fc54770037c63b</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b, const Vector&lt; size, T &gt; &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab3600cc3682bc35bb0a3ecc69326269d</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range) -&gt; decltype(isInf(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a81de3adbfd337fe437803b1525ea6dbd</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list) -&gt; decltype(isInf(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>acb2580c881d83046be32d82e8138ed0f</anchor>
      <arglist>(const T(&amp;array)[size]) -&gt; decltype(isInf(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a7f1b082af7aa29269527490552ed3402</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range) -&gt; decltype(isNan(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a19f896e92fecc7c90527a4f04d3ca827</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list) -&gt; decltype(isInf(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a01b001acc23b44a67e4e9743dc18a429</anchor>
      <arglist>(const T(&amp;array)[size])</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab1e7e382b2dc655a62f6589b31562031</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae9a92854975b2f250004249044e1bfcf</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a96d63ce830679d3516755e875a87a23d</anchor>
      <arglist>(const T(&amp;array)[size])</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2d3efc8614af54ada844e4280f7e8091</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a37e8a2e2b6ce6a039cc6d41c1bc6ded1</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad1f165cde9ca7992987fe78b9f2c180a</anchor>
      <arglist>(const T(&amp;array)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac0524e916ab96970c6b00e99ecc6e912</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a31ca6cb241a516d8b652b0d39cb5909e</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac2bf61d8aec6fa605c73b03d8337df5c</anchor>
      <arglist>(const T(&amp;array)[size])</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>unpackHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a42d97dba419c59474cd88f1770cf95a8</anchor>
      <arglist>(UnsignedShort value)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedShort</type>
      <name>packHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9655ce490778c81064c358754ea93aad</anchor>
      <arglist>(Float value)</arglist>
    </member>
    <member kind="function">
      <type>FloatingPoint</type>
      <name>unpack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab69ab3369a85ccf59c87486b0e5a3dd9</anchor>
      <arglist>(const Integral &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>FloatingPoint</type>
      <name>unpack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a711947054a07023a401b47bda5b0d16b</anchor>
      <arglist>(const Integral &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Integral</type>
      <name>pack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>af491eb512c26e9d8ba0ab9646d5bb436</anchor>
      <arglist>(const FloatingPoint &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Integral</type>
      <name>pack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad41fc73d795a8f589b0502ef9f6a4a46</anchor>
      <arglist>(FloatingPoint value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, UnsignedShort &gt;</type>
      <name>packHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9d2180063001e747188e2fd83d3a38bb</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>unpackHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a689b3e216755b7c12ea3ca482cb414f3</anchor>
      <arglist>(const Vector&lt; size, UnsignedShort &gt; &amp;value)</arglist>
    </member>
    <member kind="variable">
      <type>constexpr NoInitT</type>
      <name>NoInit</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a09af7a367aa780ca2c682546085cafe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr ZeroInitT</type>
      <name>ZeroInit</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1a3ef1a05ea090ef83dc89eed44ba8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr IdentityInitT</type>
      <name>IdentityInit</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab915b0885bc50909b7cb7838266715c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sin</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6558da1eb5042764fae1640dcf99d0a8</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>cos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a786b7203dac52e7b7a23965cac9ef127</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>sincos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aad0e3cf434e90f80d18860f775efe427</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>tan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5b75699b28dffa85a5d2c59b769c78b9</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>asin</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5a0d14b2cdd605132c3fa408763e615a</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>acos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a3b14d10e75ca21d34df11d7be0f6b616</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>atan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a916c22b19c5c7bf191ec697eecab60b6</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, bool &gt;::type</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad440119d3516d75bd5ff878723670acc</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a53ef8cb0e28d9c59e6d72e4927e36e61</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, bool &gt;::type</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aee19024da337a2264fce2bbbae2ef014</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a740f4050b4d66b0af6a7ec66639cfdaa</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a73d452db5a48a539988bfd80e29dcbcf</anchor>
      <arglist>(T value, T min)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1fe447bd1df20772eee153a58734a08e</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, const Vector&lt; size, T &gt; &amp;min)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a4bee14bf25158b6be1dc4afd70971fb8</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T min)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab20dfdf8194d6b4bc1bf137640cc02e2</anchor>
      <arglist>(T a, T b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6c9c233ff512d3cfb52aba13ab649f4a</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, const Vector&lt; size, T &gt; &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad8719e1853a5c449106e63c776c9d72f</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T max)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, std::pair&lt; T, T &gt; &gt;::type</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6d0a7d68d7aae97ad18ebdd1d9ee66e5</anchor>
      <arglist>(T a, T b)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Vector&lt; size, T &gt;, Vector&lt; size, T &gt; &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1be28fa49728193f3891a80e2e532f3a</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a3eebcca3a0bb22009bffdbe85e09fc69</anchor>
      <arglist>(T value, T min, T max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a77d6c362ed010788be3524d1d7590ecf</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, const Vector&lt; size, T &gt; &amp;min, const Vector&lt; size, T &gt; &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad4a8b2ed74b85d7eead141ebd9b68ce7</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T min, T max)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>sign</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a90bbd057fdad07c10a874587e85ff3f7</anchor>
      <arglist>(const T &amp;scalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>sign</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>af6e5fe047dcca5901c77e0a85b78edcc</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>abs</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9be3830c016221eee0c2b74253f1e297</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>abs</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5aded6b09b6926348329b80e3f3ae3de</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>floor</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac1c5e4b910a79bbe7116b1e9c650ee80</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>floor</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a900a33f3287d7aaee9f6dcc062a6dc08</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>round</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a3fc23146b9833fa0c4317256f8b7640e</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>round</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a255ee2e0250afe2c4f3b8609f1f5e1e0</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>ceil</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1a759e2614f12f54f3972a80b01b0773</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>ceil</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aa117c52ac77784673ffe4779ac7b94bd</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a8d0cf4b89dfd92edf6cff3954adf7cf7</anchor>
      <arglist>(const T &amp;a, const T &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a475f41c02fdf7b62b1d6ee14dec70a0c</anchor>
      <arglist>(const T &amp;a, const T &amp;b, bool t)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a442e12f313c209eb67dbfcbef05e2b5c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b, const BoolVector&lt; size &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a757985d96fb36e841322a3317c851304</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;a, const BoolVector&lt; size &gt; &amp;b, const BoolVector&lt; size &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>UnderlyingTypeOf&lt; typename std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type &gt;</type>
      <name>lerpInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a586189ebf6a1c2e3fea58fe6b12147d6</anchor>
      <arglist>(T a, T b, T lerp)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, UnderlyingTypeOf&lt; T &gt; &gt;</type>
      <name>lerpInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae850b993aa7bc714cbc88035ab94f7d9</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b, const Vector&lt; size, T &gt; &amp;lerp)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>select</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0358670cc3c6b662acb473ebab49de5f</anchor>
      <arglist>(const T &amp;a, const T &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>fma</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5521b10067ed8062ac1fa3fcea19402b</anchor>
      <arglist>(T a, T b, T c)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>fma</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a043aba857f8ce67ad0fc54770037c63b</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b, const Vector&lt; size, T &gt; &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>log</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0506f088194eafea3e7a4100f2c4ed2d</anchor>
      <arglist>(UnsignedInt base, UnsignedInt number)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>log2</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0f41b7b73d96020cc88c28b09a229ab5</anchor>
      <arglist>(UnsignedInt number)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>log</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a94c4d12ee57e7129651a9d9cd43c7c66</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>exp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a54553867ca47a3e9ffada201a4c35ca3</anchor>
      <arglist>(T exponent)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab87686781f77f99e15004fde66ac4efe</anchor>
      <arglist>(T base)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a341118d5b76b52847f3e2e1e0ccdbee8</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;base)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aa11bdab7e096bc956c01428d6a9bf092</anchor>
      <arglist>(T base, T exponent)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a68a0728c0d2af141dad9a34f406a1765</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;base, T exponent)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>sqrt</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2b45c65b1c0eb3f2f5398dc97b060fe4</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>sqrt</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a185276ced88e0fd1ca36290a3ed1f197</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; IsScalar&lt; T &gt;::value, T &gt;::type</type>
      <name>sqrtInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a58be896f47cda8ed62fd39bb03ddb674</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>sqrtInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9f2f814761c468a0ae5a7075ec4e79b3</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab3600cc3682bc35bb0a3ecc69326269d</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range) -&gt; decltype(isInf(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a81de3adbfd337fe437803b1525ea6dbd</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list) -&gt; decltype(isInf(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>isInf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>acb2580c881d83046be32d82e8138ed0f</anchor>
      <arglist>(const T(&amp;array)[size]) -&gt; decltype(isInf(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a7f1b082af7aa29269527490552ed3402</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range) -&gt; decltype(isNan(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a19f896e92fecc7c90527a4f04d3ca827</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list) -&gt; decltype(isInf(std::declval&lt; T &gt;()))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a01b001acc23b44a67e4e9743dc18a429</anchor>
      <arglist>(const T(&amp;array)[size])</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab1e7e382b2dc655a62f6589b31562031</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae9a92854975b2f250004249044e1bfcf</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a96d63ce830679d3516755e875a87a23d</anchor>
      <arglist>(const T(&amp;array)[size])</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2d3efc8614af54ada844e4280f7e8091</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a37e8a2e2b6ce6a039cc6d41c1bc6ded1</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad1f165cde9ca7992987fe78b9f2c180a</anchor>
      <arglist>(const T(&amp;array)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac0524e916ab96970c6b00e99ecc6e912</anchor>
      <arglist>(Corrade::Containers::StridedArrayView1D&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a31ca6cb241a516d8b652b0d39cb5909e</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac2bf61d8aec6fa605c73b03d8337df5c</anchor>
      <arglist>(const T(&amp;array)[size])</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>unpackHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a42d97dba419c59474cd88f1770cf95a8</anchor>
      <arglist>(UnsignedShort value)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedShort</type>
      <name>packHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9655ce490778c81064c358754ea93aad</anchor>
      <arglist>(Float value)</arglist>
    </member>
    <member kind="function">
      <type>FloatingPoint</type>
      <name>unpack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab69ab3369a85ccf59c87486b0e5a3dd9</anchor>
      <arglist>(const Integral &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>FloatingPoint</type>
      <name>unpack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a711947054a07023a401b47bda5b0d16b</anchor>
      <arglist>(const Integral &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Integral</type>
      <name>pack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>af491eb512c26e9d8ba0ab9646d5bb436</anchor>
      <arglist>(const FloatingPoint &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Integral</type>
      <name>pack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad41fc73d795a8f589b0502ef9f6a4a46</anchor>
      <arglist>(FloatingPoint value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, UnsignedShort &gt;</type>
      <name>packHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9d2180063001e747188e2fd83d3a38bb</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>unpackHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a689b3e216755b7c12ea3ca482cb414f3</anchor>
      <arglist>(const Vector&lt; size, UnsignedShort &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Math::Algorithms</name>
    <filename>namespaceMagnum_1_1Math_1_1Algorithms.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>gaussJordanInPlaceTransposed</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>afd51c7cc16e65c7e76054f3894c968c1</anchor>
      <arglist>(RectangularMatrix&lt; size, size, T &gt; &amp;a, RectangularMatrix&lt; size, rows, T &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>gaussJordanInPlace</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a34eea735d7911e9ac472ed98cd7b9128</anchor>
      <arglist>(RectangularMatrix&lt; size, size, T &gt; &amp;a, RectangularMatrix&lt; cols, size, T &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Matrix&lt; size, T &gt;</type>
      <name>gaussJordanInverted</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a8ec84b7776d70334669c6f11ad8253a1</anchor>
      <arglist>(Matrix&lt; size, T &gt; matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gramSchmidtOrthogonalizeInPlace</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a18d7248a3ee6e2a4edc1c850724ce488</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>gramSchmidtOrthogonalize</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a65923466ad3890a5ef400f84940362d6</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gramSchmidtOrthonormalizeInPlace</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a097b3bec336a94a7d12443e2ea517105</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>gramSchmidtOrthonormalize</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a9acdde07b5c85594592c8032244e585b</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; matrix)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>kahanSum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>aa4696c9d956d5c6bb1833a29533be545</anchor>
      <arglist>(Iterator begin, Iterator end, T sum=T(0), T *compensation=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Matrix&lt; size, T &gt;, Matrix&lt; size, T &gt; &gt;</type>
      <name>qr</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>afa6848a3c35575e119f8b05a67822b43</anchor>
      <arglist>(const Matrix&lt; size, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; RectangularMatrix&lt; cols, rows, T &gt;, Vector&lt; cols, T &gt;, Matrix&lt; cols, T &gt; &gt;</type>
      <name>svd</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>abe54bd778b9c6fdb93ccc6b3ef82c0e3</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; m)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Math::Distance</name>
    <filename>namespaceMagnum_1_1Math_1_1Distance.html</filename>
    <member kind="function">
      <type>T</type>
      <name>linePointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>aa16338c42c14bd93de07f1ec9c99d2a3</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>linePoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>aa8b3c2986bf91b459df63f4908c3d662</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>linePointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>abb2e0c0978a98d27afffeae9acc89c36</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>linePoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>a85a91cb5f3d52d608a9ffead5b517d29</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>abf04120637dae40f8d95c668634de7d7</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>a85509e435f83ea40a9b7cf29573c65eb</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>abc78759599a23072f394123c614b1ca7</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>aafa30732d6d262bfe397a87a2c6ac4cd</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pointPlaneScaled</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>add42ee7180aebb24d51fafb908951a39</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector4&lt; T &gt; &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pointPlane</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>aeb9974e342ac51e43fe25f2f2c8ad456</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector4&lt; T &gt; &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pointPlaneNormalized</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Distance.html</anchorfile>
      <anchor>a804cb4776329e2730d91a06f7de59586</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector4&lt; T &gt; &amp;plane)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Math::Geometry</name>
    <filename>namespaceMagnum_1_1Math_1_1Geometry.html</filename>
    <namespace>Magnum::Math::Geometry::Distance</namespace>
    <namespace>Magnum::Math::Geometry::Intersection</namespace>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Math::Geometry::Distance</name>
    <filename>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</filename>
    <member kind="function">
      <type>T</type>
      <name>linePointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>ac33ebb71e4666f173823ebd439d4adfb</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>linePoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a291224fca49a4d15806529e3e50d5eac</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>linePointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a0050edf5b044dab7ffe51dd6faa6e01c</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>linePoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a623565c0848d9889e6fce5e737f630c1</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a96f5691b3830d0e07f8ec5733b2a6abf</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a872fd7983a565eb1cb0b8258e1a12b50</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>adf13632b622b81cf2439e9bad953f832</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a17c3fcb501900e9e035066b7bd4cad76</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pointPlaneScaled</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a68e706f79aa088970a87622b5f028d24</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector4&lt; T &gt; &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pointPlane</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a0d202b2ca5de7f3ecdd784c2cca8f98b</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector4&lt; T &gt; &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pointPlaneNormalized</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a1bb096c90b1f49dc1d997b7a042c0e57</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector4&lt; T &gt; &amp;plane)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Math::Geometry::Intersection</name>
    <filename>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</filename>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>lineSegmentLineSegment</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>a9a70996eaa59f516e03a96ac9d2819f9</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;p, const Vector2&lt; T &gt; &amp;r, const Vector2&lt; T &gt; &amp;q, const Vector2&lt; T &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentLine</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>ace33bfa9669405ec56c962e326f7f801</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;p, const Vector2&lt; T &gt; &amp;r, const Vector2&lt; T &gt; &amp;q, const Vector2&lt; T &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>planeLine</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>ab066645bcadd013be325d879e12f66e6</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;planePosition, const Vector3&lt; T &gt; &amp;planeNormal, const Vector3&lt; T &gt; &amp;p, const Vector3&lt; T &gt; &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pointFrustum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>a5d15498a45ce78618e6af612c3007abe</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Frustum&lt; T &gt; &amp;frustum)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>boxFrustum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>a6402923659fb366fee8adf726ac4bbb6</anchor>
      <arglist>(const Range3D&lt; T &gt; &amp;box, const Frustum&lt; T &gt; &amp;frustum)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Math::Intersection</name>
    <filename>namespaceMagnum_1_1Math_1_1Intersection.html</filename>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>lineSegmentLineSegment</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a5172fdb40967061cd5c155bb0e308194</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;p, const Vector2&lt; T &gt; &amp;r, const Vector2&lt; T &gt; &amp;q, const Vector2&lt; T &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentLine</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a7a11b6dfb0cb9a7540c4aa99c685b79b</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;p, const Vector2&lt; T &gt; &amp;r, const Vector2&lt; T &gt; &amp;q, const Vector2&lt; T &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>planeLine</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>acaecb2a4006d6cdaff6adbe8bffb0380</anchor>
      <arglist>(const Vector4&lt; T &gt; &amp;plane, const Vector3&lt; T &gt; &amp;p, const Vector3&lt; T &gt; &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>planeLine</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a3c37ec85f5a57807a2e8d397240e948f</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;planePosition, const Vector3&lt; T &gt; &amp;planeNormal, const Vector3&lt; T &gt; &amp;p, const Vector3&lt; T &gt; &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pointFrustum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a78c1a0e6d93cc7df1ea18be18d7c9fa2</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Frustum&lt; T &gt; &amp;frustum)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rangeFrustum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>adfaf84fb3863302762e983ee3d5e7538</anchor>
      <arglist>(const Range3D&lt; T &gt; &amp;range, const Frustum&lt; T &gt; &amp;frustum)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>aabbFrustum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>aff89dcc76a565d08677f639bf52fc654</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;aabbCenter, const Vector3&lt; T &gt; &amp;aabbExtents, const Frustum&lt; T &gt; &amp;frustum)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sphereFrustum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>aa7c4b8af19c89fa58368e6e1bb04da5a</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;sphereCenter, T sphereRadius, const Frustum&lt; T &gt; &amp;frustum)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pointCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>aa6c215fc1bf442ea796ed51af43038c8</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, Rad&lt; T &gt; coneAngle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pointCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>abae0b6fce75d9a70d6685f9cf873b7ee</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, T tanAngleSqPlusOne)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pointDoubleCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>ae14d9ec38f9458ce09d315dcc607daba</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, Rad&lt; T &gt; coneAngle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pointDoubleCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a40e079e76dde4db35bc27fef90c08f18</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, T tanAngleSqPlusOne)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sphereConeView</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a5fcc79d8f811ad188a27a5a8a7ff1d4b</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;sphereCenter, T sphereRadius, const Matrix4&lt; T &gt; &amp;coneView, Rad&lt; T &gt; coneAngle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sphereConeView</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>ac9a5dc1e5a6330b5df87cc4ae593215f</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;sphereCenter, T sphereRadius, const Matrix4&lt; T &gt; &amp;coneView, T sinAngle, T tanAngle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sphereCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>aec9fe5a65521eb72f8a7d2c93a03fd30</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;sphereCenter, T sphereRadius, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, Rad&lt; T &gt; coneAngle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sphereCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a67b92904636d5ba84f01f49452edfbef</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;sphereCenter, T sphereRadius, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, T sinAngle, T tanAngleSqPlusOne)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>aabbCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a14cbda69d0e0b6024282dffae43f5d07</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;aabbCenter, const Vector3&lt; T &gt; &amp;aabbExtents, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, Rad&lt; T &gt; coneAngle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>aabbCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a796a25abb39fdaecab9933aff6c70836</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;aabbCenter, const Vector3&lt; T &gt; &amp;aabbExtents, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, T tanAngleSqPlusOne)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rangeCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a8f3ea3097d8224a5d990ccf440292973</anchor>
      <arglist>(const Range3D&lt; T &gt; &amp;range, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, const Rad&lt; T &gt; coneAngle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rangeCone</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Intersection.html</anchorfile>
      <anchor>a5220428610cd5b7a220f9edb28cde072</anchor>
      <arglist>(const Range3D&lt; T &gt; &amp;range, const Vector3&lt; T &gt; &amp;coneOrigin, const Vector3&lt; T &gt; &amp;coneNormal, const T tanAngleSqPlusOne)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Math::Literals</name>
    <filename>namespaceMagnum_1_1Math_1_1Literals.html</filename>
    <member kind="function">
      <type>constexpr Deg&lt; Double &gt;</type>
      <name>operator&quot;&quot;_deg</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ad0f0411d4a58db406d968733715f782d</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Deg&lt; Float &gt;</type>
      <name>operator&quot;&quot;_degf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ac3f64414df5978006e55682877e92736</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Rad&lt; Double &gt;</type>
      <name>operator&quot;&quot;_rad</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>aa2e5542942a14d84870d860ec13056e2</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Rad&lt; Float &gt;</type>
      <name>operator&quot;&quot;_radf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ab0143c89ebaa92da73ed5ba17426129b</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Color3&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_rgb</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a4f0eadc3e56cafb0555955462d517a34</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_srgb</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a9052c59f7064fa0cfbebc072fc2b9ea0</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Color4&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_rgba</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>af1fd45fb22c7abab7789420803854ce8</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_srgba</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a06c6b73f0ff0dc013473d471c291a004</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color3&lt; Float &gt;</type>
      <name>operator&quot;&quot;_rgbf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ad7f076b5e49b4994187962381ec8ab25</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color3&lt; Float &gt;</type>
      <name>operator&quot;&quot;_srgbf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a32d61d07f3015fa8e918913ff59b1d6a</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color4&lt; Float &gt;</type>
      <name>operator&quot;&quot;_rgbaf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a2d8cc91f17b65523b10d3cb3b3f959e7</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color4&lt; Float &gt;</type>
      <name>operator&quot;&quot;_srgbaf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ae2004bd1cd605e290e19b8566da65934</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Half</type>
      <name>operator&quot;&quot;_h</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a3f29fbcf0c140ce4248c2ac8fa331767</anchor>
      <arglist>(long double value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::MeshTools</name>
    <filename>namespaceMagnum_1_1MeshTools.html</filename>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; CompileFlag &gt;</type>
      <name>CompileFlags</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ad6b7494a9eca53d1d2619d508826489f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CompileFlag</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a960e7fd98f5b0340a155559dcce9d02b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1MeshTools.html" anchor="a960e7fd98f5b0340a155559dcce9d02ba49217a0d8a6229be85ebdae99e3ff1d9">GenerateFlatNormals</enumvalue>
      <enumvalue file="namespaceMagnum_1_1MeshTools.html" anchor="a960e7fd98f5b0340a155559dcce9d02baf406d43587be6c764c3cf683ab79c55e">GenerateSmoothNormals</enumvalue>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt;</type>
      <name>combineIndexArrays</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ad5474465b12e161040774798fe47e3b6</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; std::vector&lt; UnsignedInt &gt;&gt;&gt; &amp;arrays)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt;</type>
      <name>combineIndexArrays</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>afe462618d8a3fded321b91dfadb77e27</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; std::vector&lt; UnsignedInt &gt;&gt;&gt; arrays)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::vector&lt; UnsignedInt &gt;, std::vector&lt; UnsignedInt &gt; &gt;</type>
      <name>combineIndexArrays</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a17a53a7980104181355a5bc1b5fc89fb</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;interleavedArrays, UnsignedInt stride)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt;</type>
      <name>combineIndexedArrays</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ab86ee6e00df70ca11dc7a93a2c8c34e9</anchor>
      <arglist>(const std::pair&lt; const std::vector&lt; UnsignedInt &gt; &amp;, std::vector&lt; T &gt; &amp; &gt; &amp;... indexedArrays)</arglist>
    </member>
    <member kind="function">
      <type>GL::Mesh</type>
      <name>compile</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ad81a27660fbec427f3253d99dfc08797</anchor>
      <arglist>(const Trade::MeshData2D &amp;meshData)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; GL::Mesh, std::unique_ptr&lt; GL::Buffer &gt;, std::unique_ptr&lt; GL::Buffer &gt; &gt;</type>
      <name>compile</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a1da9b66eefd634e997d8aabc93a12609</anchor>
      <arglist>(const Trade::MeshData2D &amp;meshData, GL::BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>GL::Mesh</type>
      <name>compile</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a117705a137cfa68945d678a096824648</anchor>
      <arglist>(const Trade::MeshData3D &amp;meshData, CompileFlags flags={})</arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; GL::Mesh, std::unique_ptr&lt; GL::Buffer &gt;, std::unique_ptr&lt; GL::Buffer &gt; &gt;</type>
      <name>compile</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a70a1820d9e4a5ea6be7207cd1ca0f5db</anchor>
      <arglist>(const Trade::MeshData3D &amp;meshData, GL::BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; Containers::Array&lt; char &gt;, MeshIndexType, UnsignedInt, UnsignedInt &gt;</type>
      <name>compressIndices</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a234bd3aeb3eff5b2ec43a4f96a04f140</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>compressIndicesAs</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>abd142dbefa361afda5152d3008d3aaa0</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>duplicate</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ad0789f7fc50abc956c1c69b7c6662bdc</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const IndexType &gt; &amp;indices, const Containers::StridedArrayView1D&lt; const T &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>duplicateInto</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>aaea4fe9f4aa2bb33f77e0f752eda387c</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const IndexType &gt; &amp;indices, const Containers::StridedArrayView1D&lt; const T &gt; &amp;data, const Containers::StridedArrayView1D&lt; T &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; T &gt;</type>
      <name>duplicate</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a52e95bc7fa1a8b895d6b7095659086e2</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;indices, const std::vector&lt; T &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipFaceWinding</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a42784996b61886a56da58a0361f7909a</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipNormals</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ab2904cb96723d76bea8a6d7aa36cc81d</anchor>
      <arglist>(std::vector&lt; Vector3 &gt; &amp;normals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipNormals</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>af4417b043b3de224d43edf1748f880fc</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; &amp;indices, std::vector&lt; Vector3 &gt; &amp;normals)</arglist>
    </member>
    <member kind="function">
      <type>GL::Mesh</type>
      <name>fullScreenTriangle</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>aba8238805e0e572ea2edb8b2bca8c35c</anchor>
      <arglist>(GL::Version version)</arglist>
    </member>
    <member kind="function">
      <type>GL::Mesh</type>
      <name>fullScreenTriangle</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>aac8edd8ee4844ebc192acd7c96e41d95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateFlatNormalsInto</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>aae2080c6cc17eb59706b67efe4f7c4ac</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const Vector3 &gt; &amp;positions, const Containers::StridedArrayView1D&lt; Vector3 &gt; &amp;normals)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; Vector3 &gt;</type>
      <name>generateFlatNormals</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ae4144c56a4eca8797e6701fab9c636cb</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const Vector3 &gt; &amp;positions)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::vector&lt; UnsignedInt &gt;, std::vector&lt; Vector3 &gt; &gt;</type>
      <name>generateFlatNormals</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>adebe9eb34e2f16d50d041ba77e31c3d2</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;indices, const std::vector&lt; Vector3 &gt; &amp;positions)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateSmoothNormalsInto</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>af06748ecca64ef58a0bb4cb43ef86154</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const T &gt; &amp;indices, const Containers::StridedArrayView1D&lt; const Vector3 &gt; &amp;positions, const Containers::StridedArrayView1D&lt; Vector3 &gt; &amp;normals)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; Vector3 &gt;</type>
      <name>generateSmoothNormals</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a1055154900bcbc7d87b72d863f14ce54</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const T &gt; &amp;indices, const Containers::StridedArrayView1D&lt; const Vector3 &gt; &amp;positions)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>interleave</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a006bda8a1901669404adcc50b4b68735</anchor>
      <arglist>(const T &amp;first, const U &amp;... next)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interleaveInto</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a4ab7fd3d1e0900d0085f0d4f3cc56fe7</anchor>
      <arglist>(Containers::ArrayView&lt; char &gt; buffer, const T &amp;first, const U &amp;... next)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt;</type>
      <name>removeDuplicates</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a002865c3510bb6d2c12dca5b5fda7fa9</anchor>
      <arglist>(std::vector&lt; Vector &gt; &amp;data, typename Vector::Type epsilon=Math::TypeTraits&lt; typename Vector::Type &gt;::epsilon())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subdivide</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a365f7548fa611240bd2afc613c55c051</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; &amp;indices, std::vector&lt; Vertex &gt; &amp;vertices, Interpolator interpolator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tipsify</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>adda6a399901fd1bae7e3cd9d04179d37</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; &amp;indices, UnsignedInt vertexCount, std::size_t cacheSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformVectorsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a2d4bc525e4156de1df689eee44252ad3</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;matrix, U &amp;vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformVectorsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a4d7e07550ea88eb4e4b006a04a6d6670</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;matrix, U &amp;vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformVectorsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a911f36841acac6ce2d13432cf2020286</anchor>
      <arglist>(const Math::Complex&lt; T &gt; &amp;complex, U &amp;vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformVectorsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a608f59c896865a34b280e70b5e47ff04</anchor>
      <arglist>(const Math::Quaternion&lt; T &gt; &amp;normalizedQuaternion, U &amp;vectors)</arglist>
    </member>
    <member kind="function">
      <type>U</type>
      <name>transformVectors</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>add947f248aa8d07112060cc99ec31f42</anchor>
      <arglist>(const T &amp;transformation, U vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformPointsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a740f09c1e6a3e8455541df16bf31556c</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;matrix, U &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformPointsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a5fe0ab4c29ddd744feca85ee3c4e8bf0</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;matrix, U &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformPointsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ab401e4f628c575263ed997d01eb1ea8f</anchor>
      <arglist>(const Math::DualComplex&lt; T &gt; &amp;dualComplex, U &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformPointsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a8d746fd1952ce5402421ec652c8906ef</anchor>
      <arglist>(const Math::DualQuaternion&lt; T &gt; &amp;normalizedDualQuaternion, U &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>U</type>
      <name>transformPoints</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a6a35b6df2232d8cbf17f612b52244851</anchor>
      <arglist>(const T &amp;transformation, U vectors)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::OpenDdl</name>
    <filename>namespaceMagnum_1_1OpenDdl.html</filename>
    <namespace>Magnum::OpenDdl::Validation</namespace>
    <class kind="struct">Magnum::OpenDdl::CharacterLiteral</class>
    <class kind="class">Magnum::OpenDdl::Document</class>
    <class kind="class">Magnum::OpenDdl::Property</class>
    <class kind="class">Magnum::OpenDdl::Structure</class>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a4009db4d647b9aca8556805c331b9ce2</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2ac26f15e86e3de4c398a8273272aba034">Bool</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2aa245c3230debe5c956484ecc6fa93877">Byte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2aeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a30bb747c98bccdd11b3f89e644c4d0ad">Short</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2ac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a1686a6c336b71b36d77354cea19a8b52">Int</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a0c72cf9e88a9782dbad0fde761ae9352">UnsignedLong</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a8394f0347c184cf156ac5924dccb773b">Long</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2ad909d38d705ce75386dd86e611a82f5b">Double</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a27118326006d3829667a400ad23d5d98">String</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a63d5049791d9d79d86e9a108b0a999ca">Reference</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2aa1fa27779242b4902f7ae3bdd5c6d508">Type</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a90589c47f06eb971d548591f23c285af">Custom</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PropertyType</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a82efc07fb689b4b8a8520a15cb1e0a24</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24ac26f15e86e3de4c398a8273272aba034">Bool</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24aa245c3230debe5c956484ecc6fa93877">Byte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24aeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a30bb747c98bccdd11b3f89e644c4d0ad">Short</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24ac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a1686a6c336b71b36d77354cea19a8b52">Int</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a0c72cf9e88a9782dbad0fde761ae9352">UnsignedLong</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a8394f0347c184cf156ac5924dccb773b">Long</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24ad909d38d705ce75386dd86e611a82f5b">Double</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a27118326006d3829667a400ad23d5d98">String</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a63d5049791d9d79d86e9a108b0a999ca">Reference</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24aa1fa27779242b4902f7ae3bdd5c6d508">Type</enumvalue>
    </member>
    <member kind="enumvalue">
      <name>UnknownIdentifier</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a5da1ea5d4835eb24512f889e92560479a04e754b073ff12e4cd5c65c74b0f73c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a0889969b8815dd0139622559b09b78a3</anchor>
      <arglist>(Debug &amp;debug, Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a3b1df866907b4e20bb899e8dc803bc9b</anchor>
      <arglist>(Debug &amp;debug, PropertyType value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::OpenDdl::Validation</name>
    <filename>namespaceMagnum_1_1OpenDdl_1_1Validation.html</filename>
    <class kind="class">Magnum::OpenDdl::Validation::Property</class>
    <class kind="struct">Magnum::OpenDdl::Validation::RequiredPropertyType</class>
    <class kind="class">Magnum::OpenDdl::Validation::Structure</class>
    <member kind="typedef">
      <type>std::initializer_list&lt; std::pair&lt; Int, std::pair&lt; Int, Int &gt; &gt; &gt;</type>
      <name>Structures</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>a1e6b6eba2d16c215adbbef9c2562b7be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::initializer_list&lt; Property &gt;</type>
      <name>Properties</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>aaf1e085b806e79ad4689bcc45a8813ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::initializer_list&lt; Type &gt;</type>
      <name>Primitives</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>a7f9bfa8a467d3956e1ba3128c0285503</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr RequiredPropertyType</type>
      <name>RequiredProperty</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>ae85ee16ee3a7b8c1e3b9dcdd26f24c56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr RequiredPropertyType</type>
      <name>OptionalProperty</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>a7c926c8ec7eec3eec79dd687eab2e03f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::OvrIntegration</name>
    <filename>namespaceMagnum_1_1OvrIntegration.html</filename>
    <class kind="struct">Magnum::OvrIntegration::Buttons</class>
    <class kind="class">Magnum::OvrIntegration::Compositor</class>
    <class kind="class">Magnum::OvrIntegration::Context</class>
    <class kind="struct">Magnum::OvrIntegration::Error</class>
    <class kind="class">Magnum::OvrIntegration::HeadLockableLayer</class>
    <class kind="class">Magnum::OvrIntegration::InputState</class>
    <class kind="class">Magnum::OvrIntegration::Layer</class>
    <class kind="class">Magnum::OvrIntegration::LayerEyeFov</class>
    <class kind="class">Magnum::OvrIntegration::LayerQuad</class>
    <class kind="class">Magnum::OvrIntegration::PoseState</class>
    <class kind="class">Magnum::OvrIntegration::Session</class>
    <class kind="class">Magnum::OvrIntegration::TextureSwapChain</class>
    <class kind="struct">Magnum::OvrIntegration::Touches</class>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; DetectResult &gt;</type>
      <name>DetectResults</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a4fe10611df2e827d955a22c45a88028c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; TrackerFlag &gt;</type>
      <name>TrackerFlags</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a96d457b1afd55fc8dbf7c4c5c8914108</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; StatusFlag &gt;</type>
      <name>StatusFlags</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a3ecc95a048c433bfe45edab8ac88d15b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; SessionStatusFlag &gt;</type>
      <name>SessionStatusFlags</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a98bef84792091fda50bf4128a950af69</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; MirrorOption &gt;</type>
      <name>MirrorOptions</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a3298045f21c3398a39dd6acfcbf5a1da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LayerType</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a77b0ed14328c2faa7b2519b746c4ce90</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a77b0ed14328c2faa7b2519b746c4ce90a10cad50ddd2638ffc443bc4bb874f95e">EyeFov</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a77b0ed14328c2faa7b2519b746c4ce90ae9017664588010860a92ceb5f8fcb824">Quad</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a77b0ed14328c2faa7b2519b746c4ce90ad0845b10e8e64b028afc0b1fb22ffca4">EyeMatrix</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DetectResult</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>abe437794a1624b8ecdcdb909d72ee895</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="abe437794a1624b8ecdcdb909d72ee895a7970e3e8bdee1773a50915479ffbabb7">ServiceRunning</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="abe437794a1624b8ecdcdb909d72ee895a66b7262d619bd3873bac68927465f0c5">HmdConnected</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>HmdType</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>ab8c9a8c7cce6ad0ef7ce2e1befecc41c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca47f84b7951ed9537b0a70c4e0047de81">DK1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca66994daf724ae63030fbcc30d3655bef">DKHD</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca284bad9c648d4b9dbdf4baa703acb02d">DK2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca834cb54b61bbed9d4296c995e4c5d8b2">CB</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca6311ae17c1ee52b36e68aaf4ad066387">Other</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca3bedec542f1401c2da728a90cc6fa1b2">E3_2015</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca28dd683b878e138a2c30a2cb3094306a">ES06</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41cab67df66fbe1fbfdd5becd15bbc4a8585">ES09</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41caf58b754169ac9c2928472f57f73e1610">ES11</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca5cd3d32886412288e18a345898146b8d">CV1</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TrackingOrigin</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a6d5277b84d2b8c94d19de5cbeaa45fc7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a6d5277b84d2b8c94d19de5cbeaa45fc7a16d89336a4617fb6b87763d4b56139b7">EyeLevel</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a6d5277b84d2b8c94d19de5cbeaa45fc7acbd6ea814849130b29ce44bc70114c4b">FloorLevel</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TrackerFlag</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a0abd84c8f718932b3c2268e0e02310e7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a0abd84c8f718932b3c2268e0e02310e7a2ec0d16e4ca169baedb9b2d50ec5c6d7">Connected</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a0abd84c8f718932b3c2268e0e02310e7a03b7e73d85589978f9c3a063b8246508">PoseTracked</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a077525510ed427920eff7ae75ec5123f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa7fc56270e7a70fa81a5935b72eacbe29">A</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa9d5ed678fe57bcca610140957afab571">B</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa787cce7d516ae441abe97ffff79b08c8">RThumb</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa41a810fe24d1ea211a55337eaaa1e3d2">RShoulder</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123faa459ba7fb2f974adf6eba980f35f8d14">LThumb</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fafe788e67252c3049b894226c0c6ca5aa">LShoulder</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa258f49887ef8d14ac268c92b02503aaa">Up</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa08a38277b0309070706f6652eeae9a53">Down</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123faf1851d5600eae616ee802a31ac74701b">Enter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa0557fa923dcee4d0f86b1409f5c2167f">Back</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa685dec8174e7e1bbc0e7566fc30c72f0">VolUp</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa573c1456126efb9d131daea39f0c30ff">VolDown</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa8cf04a9734132302f96da8e113e80ce5">Home</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Touch</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a5a7392511ba112942f2528ff415ffeac</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca7fc56270e7a70fa81a5935b72eacbe29">A</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca9d5ed678fe57bcca610140957afab571">B</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca787cce7d516ae441abe97ffff79b08c8">RThumb</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeacaa459ba7fb2f974adf6eba980f35f8d14">LThumb</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca0501589371e70c45f36658f9bb4b7843">RIndexTrigger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca539fc444c6c42c09fec1c86daa96b8a2">LIndexTrigger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeacacfe67b27ee94b2453d80c20089a65d9e">RIndexPointing</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeacad68850271da7c45858aa8df755601922">RThumbUp</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca522257548de440cb48251ce74a036633">LIndexPointing</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca3bbcb71d84685fa1383e07d91a3cf011">LThumbUp</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ControllerType</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>aad674320383d77fc5e7a9f028ea56843</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843a253c104ad721758c8c0654a6878f47ff">LTouch</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843a02f85d6ee062327d58a289335f56fca1">RTouch</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843af0f31c9700c6b10d8a20dc487b2ae6a8">Touch</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843af8508f576cd3f742dfc268258dcdf0dd">Remote</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843ad7a5c7a13c0838c399a34112f46676b6">XBox</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843a4d3d769b812b6faa6b76e1a8abaece2d">Active</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StatusFlag</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a018508181e5fd5575105208b3c9f5a65</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a018508181e5fd5575105208b3c9f5a65a6a8886de54f4886e42898ef3b017442b">OrientationTracked</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a018508181e5fd5575105208b3c9f5a65ab7ddf1ada4f53b9481038b4bf8c6cc56">PositionTracked</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SessionStatusFlag</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a05fe9e5cf2c3f76cad37febcfda1569f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa149c5e61355c8de0943d094e18471195">IsVisible</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa173e3971d0e0a2e4de01a20ce02864a2">HmdPresent</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa7007260d2109c1b8a5614f339d6de495">HmdMounted</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa89dad51f4ce3c9e37a4581346d338a8a">DisplayLost</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fae991b8c66aad662cea8ca5bdeb073dee">ShouldQuit</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa706fe46f20c4f4f109d18310acd81c72">ShouldRecenter</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MirrorOption</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a9dff944a2e05defc83e91e2ce98ca7a4</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a9dff944a2e05defc83e91e2ce98ca7a4a7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a9dff944a2e05defc83e91e2ce98ca7a4a1c07db0406abec4adeb373993bbaf223">PostDistortion</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a9dff944a2e05defc83e91e2ce98ca7a4ac35d9d190345702a11cc451c6d42f275">LeftEyeOnly</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a9dff944a2e05defc83e91e2ce98ca7a4a9d6d844ca936c88d43ad042269f64969">RightEyeOnly</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a9dff944a2e05defc83e91e2ce98ca7a4a017ed27d843c069b6f807d0670965ca3">IncludeGuardian</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a9dff944a2e05defc83e91e2ce98ca7a4a163cd5f4593cd178a7eef7aa98ce5b92">IncludeNotifications</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a9dff944a2e05defc83e91e2ce98ca7a4a664f7011f202aa7a4bd25b1a08dc3c52">IncludeSystemGui</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PerformanceHudMode</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a13dbe6c3cff28c02def2998200ae32ba</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baad15305d7a4e34e02489c74a5ef542f36">Off</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baaa753651df182d2d54712d863b9af4f0d">PerfSummary</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baa03eb527e4457d835779020ea5b946e4e">LatencyTiming</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baafa4e966fc32d9ddcd5084b98cbb26f4f">AppRenderTiming</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baa376814a1f428866975b538385cc67810">CompRenderTiming</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baa9db78fd43c596601aa891c5c656a078d">VersionInfo</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DebugHudStereoMode</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a981bf665fe55ea30d79c251cb8dd3dae</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a981bf665fe55ea30d79c251cb8dd3daead15305d7a4e34e02489c74a5ef542f36">Off</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a981bf665fe55ea30d79c251cb8dd3daeae9017664588010860a92ceb5f8fcb824">Quad</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a981bf665fe55ea30d79c251cb8dd3daeace19873f7b7fd296a0c3b514c6562d37">QuadWithCrosshair</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a981bf665fe55ea30d79c251cb8dd3daeaab6e7a65e73a0fc5d343d78c616d7e6d">CrosshairAtInfinity</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LayerHudMode</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a7457b8480db6553349312d38e10ee2d3</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a7457b8480db6553349312d38e10ee2d3ad15305d7a4e34e02489c74a5ef542f36">Off</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a7457b8480db6553349312d38e10ee2d3a4059b0251f66a18cb56f544728796875">Info</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ErrorType</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>adabeb393adcab6691d7250753ef6582c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cadfa6c4e376d67452db5b14bb40d4d9a0">MemoryAllocationFailure</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca082b94968d127d17abb24a69da6cda56">InvalidSession</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cac85a251cc457840f1e032f1b733e9398">Timeout</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca9646ad3a1c3e708b4fa8b4b4270fbab6">NotInitialized</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca627251310d3384b591e4138be21145d5">InvalidParameter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca112197d9297e3f816e50aa133dc6dd5e">ServiceError</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caff59267aa541879a068a88355d62f058">NoHmd</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cab4080bdf74febf04d578ff105cce9d3f">Unsupported</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca758b1a8856a2f8715b9c898ae0a57c14">DeviceUnavailable</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca49c2d0b56e40fadbdc0c2a9fd4315524">InvalidHeadsetOrientation</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca7eb9535c8784e5d2aa3a652471c1a7b4">ClientSkippedDestroy</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cae813f5801e9ff3e49091c0aafe8965a9">ClientSkippedShutdown</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cad509009f13c4de2c1177bc2d363b73e8">AudioDeviceNotFound</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cafc426c134912a0008fc9c7a48263c5df">AudioComError</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca223e06f5cb15fc701ea1e686f7934f4f">Initialize</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca7133af63cf13b9725dff98d146b3ccff">LibLoad</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca4491810b1469ebfe9ed1c40221d2c4d8">LibVersion</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caece78a70b624b88f562799ec52ddb02d">ServiceConnection</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca43ea2ee41bedd266ad7da264884ca5c5">ServiceVersion</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca4a9681314bd727c21cb6ed804911e6d7">IncompatibleOs</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca7ae7a1fe2dc931469a6534b9262d6fc4">DisplayInit</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca79ba98cd5eb4e6dae3995d81fd0e6ad4">ServerStart</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caf10363860dd5bc034f3078e1c30541b7">Reinitialization</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca9cc6505cca9015da503dfdd9bb62b7d0">MismatchedAdapters</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caad61a17a5106a6821235602778309b84">LeakingResources</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca5fa6776d2b97bf9fc75a006d96516129">ClientVersion</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca2680972d5946d0faa51f71d1a7ec8646">OutOfDateOs</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caf21d6d4d86c3d104e5ee7b120b1f90af">OutOfDateGfxDriver</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cac022b6a8e903db3815747953baa21b19">IncompatibleGpu</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca03ebe1b3b069f637eb93f06c30916350">NoValidVrDisplaySystem</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caec30c235d0eb792797af1aa1d11759a7">Obsolete</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caf9717c4a65ac4604bbf0a6e2288b3d87">DisabledOrDefaultAdapter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cad516cecd05c0c1d9f6196a02d925617a">HybridGraphicsNotSupported</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca486fac754172c31f16df1fbadf62e4e8">DisplayManagerInit</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cac5a395ab4d788f57bd18171ccc9f78fa">TrackerDriverInit</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca89dad51f4ce3c9e37a4581346d338a8a">DisplayLost</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca01ac2fb3024f7f373266fa56ecb33ded">TextureSwapChainFull</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca21927b16639259e410f2054322ad64b8">TextureSwapChainInvalid</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca15452a9b0f2356c3dabe720a67728b3d">RuntimeException</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a898ef35965e30a1d246cfa56c4c6ef1d</anchor>
      <arglist>(Debug &amp;debug, DetectResult value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a650d4953f7d4d211f4d022d50d616538</anchor>
      <arglist>(Debug &amp;debug, HmdType value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a73ce87139dacba79763659aaeebc170c</anchor>
      <arglist>(Debug &amp;debug, TrackingOrigin value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a75fcd47c56139a2a51ac70f958ff8615</anchor>
      <arglist>(Debug &amp;debug, TrackerFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>ab05854774e0c74850a6258734e56e1f6</anchor>
      <arglist>(Debug &amp;debug, Button value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>af1ee6d0c448e1a216f8414fc842687af</anchor>
      <arglist>(Debug &amp;debug, Touch value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>aa8726fd40080c94c7dd03067313b095f</anchor>
      <arglist>(Debug &amp;debug, ControllerType value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a79df2b6b9a2e08ae0a76732f970c7920</anchor>
      <arglist>(Debug &amp;debug, StatusFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>ae84582e8ef8bdf12136fbd05d443c4ca</anchor>
      <arglist>(Debug &amp;debug, SessionStatusFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a1790323104ce92acab9a4ad5fc784bfc</anchor>
      <arglist>(Debug &amp;debug, MirrorOption value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a4d12129038f2a71b3f7ae7a4852b5755</anchor>
      <arglist>(Debug &amp;debug, PerformanceHudMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a3bbf933e98ed3cf875a09525f71171f3</anchor>
      <arglist>(Debug &amp;debug, DebugHudStereoMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>aa1582c7807ce82ce4c3dfcf394049404</anchor>
      <arglist>(Debug &amp;debug, LayerHudMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a340c9be88a1f969d3a34dc53af11f808</anchor>
      <arglist>(Debug &amp;debug, ErrorType value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Platform</name>
    <filename>namespaceMagnum_1_1Platform.html</filename>
    <class kind="class">Magnum::Platform::AbstractXApplication</class>
    <class kind="class">Magnum::Platform::AndroidApplication</class>
    <class kind="class">Magnum::Platform::BasicScreen</class>
    <class kind="class">Magnum::Platform::BasicScreenedApplication</class>
    <class kind="class">Magnum::Platform::EmscriptenApplication</class>
    <class kind="class">Magnum::Platform::GLContext</class>
    <class kind="class">Magnum::Platform::GlfwApplication</class>
    <class kind="class">Magnum::Platform::GlxApplication</class>
    <class kind="class">Magnum::Platform::Sdl2Application</class>
    <class kind="class">Magnum::Platform::WindowlessCglApplication</class>
    <class kind="class">Magnum::Platform::WindowlessCglContext</class>
    <class kind="class">Magnum::Platform::WindowlessEglApplication</class>
    <class kind="class">Magnum::Platform::WindowlessEglContext</class>
    <class kind="class">Magnum::Platform::WindowlessGlxApplication</class>
    <class kind="class">Magnum::Platform::WindowlessGlxContext</class>
    <class kind="class">Magnum::Platform::WindowlessIosApplication</class>
    <class kind="class">Magnum::Platform::WindowlessIosContext</class>
    <class kind="class">Magnum::Platform::WindowlessWglApplication</class>
    <class kind="class">Magnum::Platform::WindowlessWglContext</class>
    <class kind="class">Magnum::Platform::WindowlessWindowsEglApplication</class>
    <class kind="class">Magnum::Platform::WindowlessWindowsEglContext</class>
    <class kind="class">Magnum::Platform::XEglApplication</class>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Primitives</name>
    <filename>namespaceMagnum_1_1Primitives.html</filename>
    <class kind="struct">Magnum::Primitives::Capsule2D</class>
    <class kind="struct">Magnum::Primitives::Capsule3D</class>
    <class kind="struct">Magnum::Primitives::Circle</class>
    <class kind="struct">Magnum::Primitives::Crosshair2D</class>
    <class kind="struct">Magnum::Primitives::Crosshair3D</class>
    <class kind="struct">Magnum::Primitives::Cube</class>
    <class kind="struct">Magnum::Primitives::Cylinder</class>
    <class kind="struct">Magnum::Primitives::Icosphere</class>
    <class kind="struct">Magnum::Primitives::Line2D</class>
    <class kind="struct">Magnum::Primitives::Line3D</class>
    <class kind="struct">Magnum::Primitives::Plane</class>
    <class kind="struct">Magnum::Primitives::Square</class>
    <class kind="struct">Magnum::Primitives::UVSphere</class>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; ConeFlag &gt;</type>
      <name>ConeFlags</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a29da9bb001ed84463a04c6910e03b749</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; CylinderFlag &gt;</type>
      <name>CylinderFlags</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a8c8072e2174349e45464def9b33c4819</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; GridFlag &gt;</type>
      <name>GridFlags</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>aed288bc35ab47010ee646337b7dc4594</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CapsuleTextureCoords</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>ac74ade7e583adc4c8befc803e5d91760</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="ac74ade7e583adc4c8befc803e5d91760a1f3b10de72bb2edffce9811a94d44019">DontGenerate</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="ac74ade7e583adc4c8befc803e5d91760a32b919d18cfaca89383f6000dcc9c031">Generate</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ConeFlag</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a11c771d45152f26e235526f240da0f1b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a11c771d45152f26e235526f240da0f1ba1e6b6c618ee6976c127199d69394b8f5">GenerateTextureCoords</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a11c771d45152f26e235526f240da0f1baf671cbdd2a56b97870c5c60a69141dae">CapEnd</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CylinderFlag</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>abc4496bd7b89f82fe40b263ffb28e767</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="abc4496bd7b89f82fe40b263ffb28e767a1e6b6c618ee6976c127199d69394b8f5">GenerateTextureCoords</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="abc4496bd7b89f82fe40b263ffb28e767a2160dc2c41ed697f0eec7dc9c241318c">CapEnds</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GridFlag</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a8c21adc05e93b76ee73ee705fcccb284</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a8c21adc05e93b76ee73ee705fcccb284a1e6b6c618ee6976c127199d69394b8f5">GenerateTextureCoords</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a8c21adc05e93b76ee73ee705fcccb284a7d8ea0467d442b8095bdcb3482bce959">GenerateNormals</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PlaneTextureCoords</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a2f56608b355c0c09837c7aed657b2ecf</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a2f56608b355c0c09837c7aed657b2ecfa1f3b10de72bb2edffce9811a94d44019">DontGenerate</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a2f56608b355c0c09837c7aed657b2ecfa32b919d18cfaca89383f6000dcc9c031">Generate</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SquareTextureCoords</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a477200e2f2632ebf0e3ac366ab7b445c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a477200e2f2632ebf0e3ac366ab7b445ca1f3b10de72bb2edffce9811a94d44019">DontGenerate</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a477200e2f2632ebf0e3ac366ab7b445ca32b919d18cfaca89383f6000dcc9c031">Generate</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UVSphereTextureCoords</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a2efb1c948cdf0d5d3c87521be5b9a714</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a2efb1c948cdf0d5d3c87521be5b9a714a1f3b10de72bb2edffce9811a94d44019">DontGenerate</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Primitives.html" anchor="a2efb1c948cdf0d5d3c87521be5b9a714a32b919d18cfaca89383f6000dcc9c031">Generate</enumvalue>
    </member>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>axis2D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>ade115b7b48cb6379a7dcb2072d45c77d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>axis3D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>ae6841afe470778bf0b2cf6af400141a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>capsule2DWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a72fb075f69f8cf5eca3f8f239c3d9d20</anchor>
      <arglist>(UnsignedInt hemisphereRings, UnsignedInt cylinderRings, Float halfLength)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>capsule3DSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a9cd82975f6a7ab193105e31096d03d15</anchor>
      <arglist>(UnsignedInt hemisphereRings, UnsignedInt cylinderRings, UnsignedInt segments, Float halfLength, CapsuleTextureCoords textureCoords=CapsuleTextureCoords::DontGenerate)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>capsule3DWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>aeb898af80f38bad7be7b46f500f882c9</anchor>
      <arglist>(UnsignedInt hemisphereRings, UnsignedInt cylinderRings, UnsignedInt segments, Float halfLength)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>circle2DSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a47dd0cdeb9b98933a5820aa9b1f80136</anchor>
      <arglist>(UnsignedInt segments)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>circle2DWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a3645ee174da8b0ab1fbead12525fb087</anchor>
      <arglist>(UnsignedInt segments)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>circle3DSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>aca0de533a4f6136856809f7998b1723d</anchor>
      <arglist>(UnsignedInt segments)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>circle3DWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>af4229e6a8d87f9ddc563a2cfc13e2e06</anchor>
      <arglist>(UnsignedInt segments)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>coneSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a5687268cfce168ff39376d0be228eab7</anchor>
      <arglist>(UnsignedInt rings, UnsignedInt segments, Float halfLength, ConeFlags flags={})</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>coneWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a79f0497fc0e34808687aaedb76a44e3e</anchor>
      <arglist>(UnsignedInt segments, Float halfLength)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>crosshair2D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a442959771fa1f63ec5cbf604799da7df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>crosshair3D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>aa7c72991a4a0b558a720c291038a8627</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>cubeSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>aaa59c7061d26f9887d6c2c337d90cf2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>cubeSolidStrip</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>addc2298e405e49b5a6c39ed444b20b01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>cubeWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a2fa9beec73c178d24404bacace7ccea3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>cylinderSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a45e283bf247a3af8c91629c9caeb55b0</anchor>
      <arglist>(UnsignedInt rings, UnsignedInt segments, Float halfLength, CylinderFlags flags={})</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>cylinderWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a68fb64ba061321af4b5ed191c037c83f</anchor>
      <arglist>(UnsignedInt rings, UnsignedInt segments, Float halfLength)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>gradient2D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a5201f8db2f6e62bead42d8e1edc000c8</anchor>
      <arglist>(const Vector2 &amp;a, const Color4 &amp;colorA, const Vector2 &amp;b, const Color4 &amp;colorB)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>gradient2DHorizontal</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>afa9587dee7fb8de46308626a06929707</anchor>
      <arglist>(const Color4 &amp;colorLeft, const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>gradient2DVertical</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a4374d98bb8a12f7e7123d45def4fb876</anchor>
      <arglist>(const Color4 &amp;colorBottom, const Color4 &amp;colorTop)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>gradient3D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a536dcbed4cee0adc3f7cb6bb7e608230</anchor>
      <arglist>(const Vector3 &amp;a, const Color4 &amp;colorA, const Vector3 &amp;b, const Color4 &amp;colorB)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>gradient3DHorizontal</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a15ab1c150b25e23e30761f13670a470e</anchor>
      <arglist>(const Color4 &amp;colorLeft, const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>gradient3DVertical</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>ab16ad6bc15e50a892ef18378bb60b968</anchor>
      <arglist>(const Color4 &amp;colorBottom, const Color4 &amp;colorTop)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>grid3DSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a69453b1837a77d466866e4960e8917f6</anchor>
      <arglist>(const Vector2i &amp;subdivisions, GridFlags flags=GridFlag::GenerateNormals)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>grid3DWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a878f9ac70bc18e2af290d779931f1c29</anchor>
      <arglist>(const Vector2i &amp;subdivisions)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>icosphereSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a283673f4f9f384078114435fcf3ce0a6</anchor>
      <arglist>(UnsignedInt subdivisions)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>line2D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a204999eee5ec456ad13079774eeca7ca</anchor>
      <arglist>(const Vector2 &amp;a, const Vector2 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>line3D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a5cd3ee59cae68330e815d49170581ee5</anchor>
      <arglist>(const Vector3 &amp;a, const Vector3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>line2D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a7e7c1daf3884a9e75018bd94ccf7f533</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>line3D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a64db20fa91bcb06b9e3bfac776566a51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>planeSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a0c23b8391cf237db5ebfffba0c823535</anchor>
      <arglist>(PlaneTextureCoords textureCoords=PlaneTextureCoords::DontGenerate)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>planeWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a3b10f846773a54ce153737c4b0cf537a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>squareSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a2b9e6b87efe8f6eb09178dbdfdbc00a6</anchor>
      <arglist>(SquareTextureCoords textureCoords=SquareTextureCoords::DontGenerate)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>squareWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a0fc310bb65d95088a40eb29e2e93bdb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>uvSphereSolid</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a0a2eacf71c0eb4be0d2b930f6afedf4e</anchor>
      <arglist>(UnsignedInt rings, UnsignedInt segments, UVSphereTextureCoords textureCoords=UVSphereTextureCoords::DontGenerate)</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>uvSphereWireframe</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>a8d29fb8efce266799af9356d3b4d9d90</anchor>
      <arglist>(UnsignedInt rings, UnsignedInt segments)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::SceneGraph</name>
    <filename>namespaceMagnum_1_1SceneGraph.html</filename>
    <class kind="class">Magnum::SceneGraph::AbstractBasicTranslationRotation2D</class>
    <class kind="class">Magnum::SceneGraph::AbstractBasicTranslationRotation3D</class>
    <class kind="class">Magnum::SceneGraph::AbstractBasicTranslationRotationScaling2D</class>
    <class kind="class">Magnum::SceneGraph::AbstractBasicTranslationRotationScaling3D</class>
    <class kind="class">Magnum::SceneGraph::AbstractFeature</class>
    <class kind="class">Magnum::SceneGraph::AbstractFeatureGroup</class>
    <class kind="class">Magnum::SceneGraph::AbstractGroupedFeature</class>
    <class kind="class">Magnum::SceneGraph::AbstractObject</class>
    <class kind="class">Magnum::SceneGraph::AbstractTransformation</class>
    <class kind="class">Magnum::SceneGraph::AbstractTranslation</class>
    <class kind="class">Magnum::SceneGraph::Animable</class>
    <class kind="class">Magnum::SceneGraph::AnimableGroup</class>
    <class kind="class">Magnum::SceneGraph::BasicDualComplexTransformation</class>
    <class kind="class">Magnum::SceneGraph::BasicDualQuaternionTransformation</class>
    <class kind="class">Magnum::SceneGraph::BasicMatrixTransformation2D</class>
    <class kind="class">Magnum::SceneGraph::BasicMatrixTransformation3D</class>
    <class kind="class">Magnum::SceneGraph::BasicRigidMatrixTransformation2D</class>
    <class kind="class">Magnum::SceneGraph::BasicRigidMatrixTransformation3D</class>
    <class kind="class">Magnum::SceneGraph::BasicTranslationRotationScalingTransformation2D</class>
    <class kind="class">Magnum::SceneGraph::BasicTranslationRotationScalingTransformation3D</class>
    <class kind="class">Magnum::SceneGraph::Camera</class>
    <class kind="class">Magnum::SceneGraph::Drawable</class>
    <class kind="class">Magnum::SceneGraph::FeatureGroup</class>
    <class kind="class">Magnum::SceneGraph::Object</class>
    <class kind="class">Magnum::SceneGraph::Scene</class>
    <class kind="class">Magnum::SceneGraph::TranslationTransformation</class>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; CachedTransformation &gt;</type>
      <name>CachedTransformations</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af9e8bdf2e2bab5a58cfc05e274225393</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractFeature&lt; 2, T &gt;</type>
      <name>AbstractBasicFeature2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a6efac1307c51ae050f83653c2bf29e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicFeature2D&lt; Float &gt;</type>
      <name>AbstractFeature2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a80fc83e5625dfc7a52d778b5a20b7062</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractFeature&lt; 3, T &gt;</type>
      <name>AbstractBasicFeature3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a7add6ebdd4b5aecd49d9edd9d49486b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicFeature3D&lt; Float &gt;</type>
      <name>AbstractFeature3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aed6f17d57d2ade33c8f93c725dadd724</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractGroupedFeature&lt; 2, Derived, T &gt;</type>
      <name>AbstractBasicGroupedFeature2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ab7691a7938394382e821286ef7fa9ab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicGroupedFeature2D&lt; Derived, Float &gt;</type>
      <name>AbstractGroupedFeature2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a5ec5d07043e93ec9fe40dbc8f0cbfc74</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractGroupedFeature&lt; 3, Derived, T &gt;</type>
      <name>AbstractBasicGroupedFeature3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1b1dd3ce224e183c55ec13cb8643adb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicGroupedFeature3D&lt; Derived, Float &gt;</type>
      <name>AbstractGroupedFeature3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ac93c4664dee5dc5d5d2661b34cd5533f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractObject&lt; 2, T &gt;</type>
      <name>AbstractBasicObject2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a9ba6f965849b32eec2a4bf716f57c0f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicObject2D&lt; Float &gt;</type>
      <name>AbstractObject2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a4dc2f3b5d4fa5de326d57fd394bc02f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractObject&lt; 3, T &gt;</type>
      <name>AbstractBasicObject3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>afcd46917ca137989e38c5f756a1d020b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicObject3D&lt; Float &gt;</type>
      <name>AbstractObject3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aebce906e64701c696f6ee3b2b01ae348</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractTransformation&lt; 2, T &gt;</type>
      <name>AbstractBasicTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a65b3d0e7b1a414d7ac410513ef4798ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTransformation2D&lt; Float &gt;</type>
      <name>AbstractTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1800f21d9f91b1e58cbe5308de5b092e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractTransformation&lt; 3, T &gt;</type>
      <name>AbstractBasicTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ad5d334b1e544a9f8f1f5cdb3b7dbcc00</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTransformation3D&lt; Float &gt;</type>
      <name>AbstractTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a0701dfa4ff4ba88521d526036e86a04b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractTranslation&lt; 2, T, TranslationType &gt;</type>
      <name>AbstractBasicTranslation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>afa2b93c31678db7e215fe91a996a9399</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTranslation2D&lt; Float &gt;</type>
      <name>AbstractTranslation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1ecd42490b0d1037158feea72e9377f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractTranslation&lt; 3, T, TranslationType &gt;</type>
      <name>AbstractBasicTranslation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>abf1c3f934c602108fe07d8ee2639ba70</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTranslation3D&lt; Float &gt;</type>
      <name>AbstractTranslation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af6747f94f4a4dc7bd37cc73f28d31a83</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTranslationRotation2D&lt; Float &gt;</type>
      <name>AbstractTranslationRotation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a6598fdbed8b32af6f4b2381694cc507f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTranslationRotation3D&lt; Float &gt;</type>
      <name>AbstractTranslationRotation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a8b9e42c74f3ebd9a6ce994d5c8c3128c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTranslationRotationScaling2D&lt; Float &gt;</type>
      <name>AbstractTranslationRotationScaling2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a8f9ce60d44dde9dee80e1a70b6a4e3f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTranslationRotationScaling3D&lt; Float &gt;</type>
      <name>AbstractTranslationRotationScaling3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aa6ba8ecac0bb59927cd34182c0fd8968</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Animable&lt; 2, T &gt;</type>
      <name>BasicAnimable2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af507ef77ec969a61d24f416fac00ec41</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicAnimable2D&lt; Float &gt;</type>
      <name>Animable2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aee309216aa9fd6b5e622e17f53db835a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Animable&lt; 3, T &gt;</type>
      <name>BasicAnimable3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a0d2fdb55f25032894b12f19cc48566c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicAnimable3D&lt; Float &gt;</type>
      <name>Animable3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aa0f108ba69b680383c4352a65405453f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AnimableGroup&lt; 2, T &gt;</type>
      <name>BasicAnimableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aa2109eabf251858d7cb0b4520420ecf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicAnimableGroup2D&lt; Float &gt;</type>
      <name>AnimableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a711874b097520d09e5c281122b03edcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AnimableGroup&lt; 3, T &gt;</type>
      <name>BasicAnimableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>abc62975ccc8fbb63942d506501a43a8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicAnimableGroup3D&lt; Float &gt;</type>
      <name>AnimableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a89361d9c4cb88eb0bfdfbcaad04146b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Camera&lt; 2, T &gt;</type>
      <name>BasicCamera2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a66914ceee1ef23ea459cedc8ab32ab01</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicCamera2D&lt; Float &gt;</type>
      <name>Camera2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ad67b34a37740d83f11e40497efebb550</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Camera&lt; 3, T &gt;</type>
      <name>BasicCamera3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1549f0fb851b0017f5cea510529215ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicCamera3D&lt; Float &gt;</type>
      <name>Camera3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ac55e4b88d38c97efac6adff0d0d619e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Drawable&lt; 2, T &gt;</type>
      <name>BasicDrawable2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>afd9e085ba01b246e3483e632ce3db6e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDrawable2D&lt; Float &gt;</type>
      <name>Drawable2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ae43f3318da2b84a600394fb0bc5c562e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Drawable&lt; 3, T &gt;</type>
      <name>BasicDrawable3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ae102f6a45fd81072b42ae43a4ddc441d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDrawable3D&lt; Float &gt;</type>
      <name>Drawable3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ab09a7cdf66c68b65728d2781312e6a63</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt;</type>
      <name>DrawableGroup</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aab4b9fe25aa18fcb51f5b4d254784da8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DrawableGroup&lt; 2, T &gt;</type>
      <name>BasicDrawableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a3a864e18201ce23953ab813f8b251e10</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDrawableGroup2D&lt; Float &gt;</type>
      <name>DrawableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1bc520b13eb6055504cb2d8ee805cb2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DrawableGroup&lt; 3, T &gt;</type>
      <name>BasicDrawableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af290740590e7d443cc28552ca6ac1ffa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDrawableGroup3D&lt; Float &gt;</type>
      <name>DrawableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a578886bc73264432278d65147faddee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDualComplexTransformation&lt; Float &gt;</type>
      <name>DualComplexTransformation</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ac9f4aaec12a825842009426a76092659</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDualQuaternionTransformation&lt; Float &gt;</type>
      <name>DualQuaternionTransformation</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ace6339f6ce9e8983c8d02c7219419f3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FeatureGroup&lt; 2, Feature, T &gt;</type>
      <name>BasicFeatureGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>addfbae050115f381b9e80540547c579b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicFeatureGroup2D&lt; Feature, Float &gt;</type>
      <name>FeatureGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aaac5484c4293df2de98534d4cf5d6faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FeatureGroup&lt; 3, Feature, T &gt;</type>
      <name>BasicFeatureGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a0664ea4967264026b00a3a5fe1af06c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicFeatureGroup3D&lt; Feature, Float &gt;</type>
      <name>FeatureGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a799a96fb4d84e3e6bd549a54e7b60816</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicMatrixTransformation2D&lt; Float &gt;</type>
      <name>MatrixTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af0e9bde86c8d6acfa18111bb38eb9bda</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicMatrixTransformation3D&lt; Float &gt;</type>
      <name>MatrixTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ae72540433b3a42ea312c5ec5c70abc6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicRigidMatrixTransformation2D&lt; Float &gt;</type>
      <name>RigidMatrixTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>afea6d7bb24ebadabee2446a2ef48cdc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicRigidMatrixTransformation3D&lt; Float &gt;</type>
      <name>RigidMatrixTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a3d123239f654f6cfe87cd3012f1686dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicTranslationRotationScalingTransformation2D&lt; Float &gt;</type>
      <name>TranslationRotationScalingTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a67e51ad00b1ad8f19d6e67a14cb9951d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicTranslationRotationScalingTransformation3D&lt; Float &gt;</type>
      <name>TranslationRotationScalingTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a5af7f3fa56af8a3e906490e63562c8a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TranslationTransformation&lt; 2, T, TranslationType &gt;</type>
      <name>BasicTranslationTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a768dfc3a71f8ce15d89126b17dbbcd4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicTranslationTransformation2D&lt; Float &gt;</type>
      <name>TranslationTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a36feaa72147fd92f3d53923d95c2d69c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TranslationTransformation&lt; 3, T, TranslationType &gt;</type>
      <name>BasicTranslationTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1f4a55c7b170b3f3245dbbbc1b136bee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicTranslationTransformation3D&lt; Float &gt;</type>
      <name>TranslationTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a8f23c88e7ff2cb5a2dd3d19f3e6790a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CachedTransformation</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a86cf8735be255da54d15f5c6eff54078</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a86cf8735be255da54d15f5c6eff54078ab51ca26c6c89cfc9bec338f7a0d3e0c8">Absolute</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a86cf8735be255da54d15f5c6eff54078ad0cf2589edf19b963da1550d2a26009b">InvertedAbsolute</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AnimationState</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a94815106daa99f9642ee24afd40982e2</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a94815106daa99f9642ee24afd40982e2ac23e2b09ebe6bf4cb5e2a9abe85c0be2">Stopped</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a94815106daa99f9642ee24afd40982e2ae99180abf47a8b3a856e0bcb2656990a">Paused</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a94815106daa99f9642ee24afd40982e2a5bda814c4aedb126839228f1a3d92f09">Running</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AspectRatioPolicy</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ae75dff003c61f0268e0b108ea26db6a9</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="ae75dff003c61f0268e0b108ea26db6a9a98c2e7bea0117de839fdbbcfdedc9060">NotPreserved</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="ae75dff003c61f0268e0b108ea26db6a9a3bc026b815790a05493fa56fc4b8d8bd">Extend</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="ae75dff003c61f0268e0b108ea26db6a9a6adac929b615be2e0d213eb9d1ad15ba">Clip</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ab2553f73b3bea3c12ede8a39943e476b</anchor>
      <arglist>(Debug &amp;debug, AnimationState value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Shaders</name>
    <filename>namespaceMagnum_1_1Shaders.html</filename>
    <class kind="class">Magnum::Shaders::AbstractVector</class>
    <class kind="class">Magnum::Shaders::DistanceFieldVector</class>
    <class kind="class">Magnum::Shaders::Flat</class>
    <class kind="struct">Magnum::Shaders::Generic</class>
    <class kind="class">Magnum::Shaders::MeshVisualizer</class>
    <class kind="class">Magnum::Shaders::Phong</class>
    <class kind="class">Magnum::Shaders::Vector</class>
    <class kind="class">Magnum::Shaders::VertexColor</class>
    <member kind="typedef">
      <type>AbstractVector&lt; 2 &gt;</type>
      <name>AbstractVector2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a055a4b60fca99365039c226e3e7de622</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractVector&lt; 3 &gt;</type>
      <name>AbstractVector3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>aa9e326f4cddc22d9724249d2c8634cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DistanceFieldVector&lt; 2 &gt;</type>
      <name>DistanceFieldVector2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a82d25087393b5cc2cdb0af02b930ffb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DistanceFieldVector&lt; 3 &gt;</type>
      <name>DistanceFieldVector3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a516b8c2f61f5e9e610aedf7328e95cb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Flat&lt; 2 &gt;</type>
      <name>Flat2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>ac2923bd6a72e0b094f2bf07131932169</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Flat&lt; 3 &gt;</type>
      <name>Flat3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>aa6668d0744cbc4ef218d1df107aca861</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Generic&lt; 2 &gt;</type>
      <name>Generic2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a11fcc97e4ebd48ee9038fefecccdf45c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Generic&lt; 3 &gt;</type>
      <name>Generic3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>adb3c39d719d87a10a28481df319797a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Vector&lt; 2 &gt;</type>
      <name>Vector2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a9da9270650198bf41711864da95433e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Vector&lt; 3 &gt;</type>
      <name>Vector3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>ad52ea30fd146f95b5b98a8100f945776</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VertexColor&lt; 2 &gt;</type>
      <name>VertexColor2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a2433f1de6a4cba48f5c7f2b8a6586b96</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VertexColor&lt; 3 &gt;</type>
      <name>VertexColor3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a476d46cfe6e4a6287f3006f81922a858</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a3f7f31121097f8e2bfdb3c9e71c850d0</anchor>
      <arglist>(Debug &amp;debug, Flat&lt; dimensions &gt;::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a82744a2393047180b216c586a9a57ad6</anchor>
      <arglist>(Debug &amp;debug, Flat&lt; dimensions &gt;::Flags value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>aae5f6840e7f2ec959aa81681626a4b72</anchor>
      <arglist>(Debug &amp;debug, MeshVisualizer::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a0b86ff630e94bcf1d54d14c0f67df69a</anchor>
      <arglist>(Debug &amp;debug, MeshVisualizer::Flags value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>aaeb06f4f4fc08f67f907deae8ac32fe7</anchor>
      <arglist>(Debug &amp;debug, Phong::Flag value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Text</name>
    <filename>namespaceMagnum_1_1Text.html</filename>
    <class kind="class">Magnum::Text::AbstractFont</class>
    <class kind="class">Magnum::Text::AbstractFontConverter</class>
    <class kind="class">Magnum::Text::AbstractGlyphCache</class>
    <class kind="class">Magnum::Text::AbstractLayouter</class>
    <class kind="class">Magnum::Text::AbstractRenderer</class>
    <class kind="class">Magnum::Text::DistanceFieldGlyphCache</class>
    <class kind="class">Magnum::Text::FreeTypeFont</class>
    <class kind="class">Magnum::Text::GlyphCache</class>
    <class kind="class">Magnum::Text::HarfBuzzFont</class>
    <class kind="class">Magnum::Text::MagnumFont</class>
    <class kind="class">Magnum::Text::MagnumFontConverter</class>
    <class kind="class">Magnum::Text::Renderer</class>
    <class kind="class">Magnum::Text::StbTrueTypeFont</class>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; GlyphCacheFeature &gt;</type>
      <name>GlyphCacheFeatures</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>a94ddecd6c5bc8f53ce09021c01cdd128</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Renderer&lt; 2 &gt;</type>
      <name>Renderer2D</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>a2410d31063c8db63437a8cc44ff84e8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Renderer&lt; 3 &gt;</type>
      <name>Renderer3D</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>a4b69f1bb3ee0486ceed6c41cfebfcb81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GlyphCacheFeature</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>a7f26cc446d372d930e996c37fb356455</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="a7f26cc446d372d930e996c37fb356455ac65e06981d6f8f3d1e13791a39d346df">ImageDownload</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Alignment</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>afe5ab4c9617fdc70eefe5b871e5ee81b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba648fc4cad5ac4a6e2741b3983bbf942c">LineLeft</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81bae184e1933ff72b6ac41649f71eb9fcac">LineCenter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba71d87665cdb4e7a2ac51d1a80f591939">LineRight</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba1d536cb49605c6a39292c33cfc5e872a">MiddleLeft</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba2096d77a6ee8ef295acbdc276773dd81">MiddleCenter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba3b9c2b3657981eb77a10390aa0e8c156">MiddleRight</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81bab32beb056fbfe36afbabc6c88c81ab36">TopLeft</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba91b8ede24b7f93a98ae4dcaade15d468">TopCenter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba1d85a557894c340c318493f33bfa8efb">TopRight</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba77e7c1e9341efec9ff6b0fc8e5c8deda">LineCenterIntegral</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81baef3f989c5b8b37ec01e0d588d00db0f3">MiddleLeftIntegral</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81bafc989b7f4c3942a8d586054d11e9bf29">MiddleCenterIntegral</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81baf4e3acd109cd0c34ceed8ed3e6b73846">MiddleRightIntegral</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>a7fa35f3ab0a4527b5e719d0dd5cf84ca</anchor>
      <arglist>(Debug &amp;debug, AbstractFont::Feature value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>a93a05e290c110f57d63c674953393f44</anchor>
      <arglist>(Debug &amp;debug, AbstractFont::Features value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::TextureTools</name>
    <filename>namespaceMagnum_1_1TextureTools.html</filename>
    <class kind="class">Magnum::TextureTools::DistanceField</class>
    <member kind="function">
      <type>std::vector&lt; Range2Di &gt;</type>
      <name>atlas</name>
      <anchorfile>namespaceMagnum_1_1TextureTools.html</anchorfile>
      <anchor>af76cb9fcfc002d17f8ef57825015ba0e</anchor>
      <arglist>(const Vector2i &amp;atlasSize, const std::vector&lt; Vector2i &gt; &amp;sizes, const Vector2i &amp;padding=Vector2i())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>distanceField</name>
      <anchorfile>namespaceMagnum_1_1TextureTools.html</anchorfile>
      <anchor>adfb47ef9f973e8e24d567cc03dfc5a2b</anchor>
      <arglist>(GL::Texture2D &amp;input, GL::Texture2D &amp;output, const Range2Di &amp;rectangle, Int radius, const Vector2i &amp;imageSize=Vector2i{})</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Trade</name>
    <filename>namespaceMagnum_1_1Trade.html</filename>
    <namespace>Magnum::Trade::OpenGex</namespace>
    <class kind="class">Magnum::Trade::AbstractImageConverter</class>
    <class kind="class">Magnum::Trade::AbstractImporter</class>
    <class kind="class">Magnum::Trade::AbstractMaterialData</class>
    <class kind="class">Magnum::Trade::AnimationData</class>
    <class kind="class">Magnum::Trade::AnimationTrackData</class>
    <class kind="class">Magnum::Trade::AnyImageConverter</class>
    <class kind="class">Magnum::Trade::AnyImageImporter</class>
    <class kind="class">Magnum::Trade::AnySceneImporter</class>
    <class kind="class">Magnum::Trade::AssimpImporter</class>
    <class kind="class">Magnum::Trade::CameraData</class>
    <class kind="class">Magnum::Trade::DdsImporter</class>
    <class kind="class">Magnum::Trade::DevIlImageImporter</class>
    <class kind="class">Magnum::Trade::ImageData</class>
    <class kind="class">Magnum::Trade::JpegImageConverter</class>
    <class kind="class">Magnum::Trade::JpegImporter</class>
    <class kind="class">Magnum::Trade::LightData</class>
    <class kind="class">Magnum::Trade::MeshData2D</class>
    <class kind="class">Magnum::Trade::MeshData3D</class>
    <class kind="class">Magnum::Trade::MeshObjectData2D</class>
    <class kind="class">Magnum::Trade::MeshObjectData3D</class>
    <class kind="class">Magnum::Trade::MiniExrImageConverter</class>
    <class kind="class">Magnum::Trade::ObjectData2D</class>
    <class kind="class">Magnum::Trade::ObjectData3D</class>
    <class kind="class">Magnum::Trade::ObjImporter</class>
    <class kind="class">Magnum::Trade::OpenGexImporter</class>
    <class kind="class">Magnum::Trade::PhongMaterialData</class>
    <class kind="class">Magnum::Trade::PngImageConverter</class>
    <class kind="class">Magnum::Trade::PngImporter</class>
    <class kind="class">Magnum::Trade::SceneData</class>
    <class kind="class">Magnum::Trade::StanfordImporter</class>
    <class kind="class">Magnum::Trade::StbImageConverter</class>
    <class kind="class">Magnum::Trade::StbImageImporter</class>
    <class kind="class">Magnum::Trade::TextureData</class>
    <class kind="class">Magnum::Trade::TgaImageConverter</class>
    <class kind="class">Magnum::Trade::TgaImporter</class>
    <class kind="class">Magnum::Trade::TinyGltfImporter</class>
    <member kind="typedef">
      <type>InputFileCallbackPolicy</type>
      <name>ImporterFileCallbackPolicy</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a4f346999e9e7d01b160fdefd9916eebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageData&lt; 1 &gt;</type>
      <name>ImageData1D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a000f4964aae4b1a8f17a0f22709c6b12</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageData&lt; 2 &gt;</type>
      <name>ImageData2D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a45555303e00cf9d64cf942326bc6cbf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageData&lt; 3 &gt;</type>
      <name>ImageData3D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a1b42de4e1c79ca544279bc36da5739d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; ObjectFlag2D &gt;</type>
      <name>ObjectFlags2D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>af1fd848e1e6de839e707189f7e3cd93c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; ObjectFlag3D &gt;</type>
      <name>ObjectFlags3D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a2fbbdc803324132091fd20b1e363cb65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MaterialType</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a9e426ccb00311a951abde7d18ace1b7e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a9e426ccb00311a951abde7d18ace1b7ea568fb6d547b4449c90057f8d4f76a838">Phong</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MaterialAlphaMode</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>af78ad2cf1f77b0f47bc6cf3fd69d4658</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="af78ad2cf1f77b0f47bc6cf3fd69d4658afaa90538de35640e4b1e31ccf35b6eb5">Opaque</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="af78ad2cf1f77b0f47bc6cf3fd69d4658a4a18312b5b75f549d5551e5912ad6ebf">Mask</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="af78ad2cf1f77b0f47bc6cf3fd69d4658a09ac609fcdb514c9adca34e7f97b4ac4">Blend</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AnimationTrackType</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a0cd8da38bf86e61333dabdc1bbabfa64</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64ac26f15e86e3de4c398a8273272aba034">Bool</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64ac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a1686a6c336b71b36d77354cea19a8b52">Int</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a4507efc6e8fb2851efc3ef9de5dd0089">BoolVector2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a1c6cdecaad6e5668edd6c91cefa128b2">BoolVector3</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a209ecfa861cb7a2202062341c4a36e93">BoolVector4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a1bebc5ae2822f8e361fb0ce57b5e09e2">Vector2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a0287c156bcb3ac44384e9d6e52a288c5">Vector2ui</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a97bfce059f906d51864f78c4118f4c13">Vector2i</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a02b4dab58bbc49e0851fb3fd8df520cc">Vector3</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64ad87911e92d9da1f085d03c2d996a5ec9">Vector3ui</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64ad58be153a15c904c858bdda07c8ebd9d">Vector3i</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64acf637ffa2663b40ae52857aa0bdb1ec3">Vector4</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a5a3fff878f721064d11e6d2643a6a291">Vector4ui</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a723467a7a855058c8f83561eccff59d6">Vector4i</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a10b4eb76294b70d7fd6df997ff06edb1">Complex</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a3743af167c53361d795405561faac2b2">Quaternion</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a544fbef226fae9ec4a963f93d973497a">DualQuaternion</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64afecf022c6a47089b44c9072d6d5f500e">CubicHermite1D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64aa916f1544566aaf4293595588d913d3a">CubicHermite2D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64ac4374022002cfa3c8507a1b4bb2750a4">CubicHermite3D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a6d1a492fe08c661b75d4dbf10cf74239">CubicHermiteComplex</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a0cd8da38bf86e61333dabdc1bbabfa64a528572b911fd064984974f0452e0a6c3">CubicHermiteQuaternion</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AnimationTrackTargetType</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a1d4b2b8621accda829e6ab9c6241df06</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a1d4b2b8621accda829e6ab9c6241df06a9341b4e6364e09fb979455cccdd00cc9">Translation2D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a1d4b2b8621accda829e6ab9c6241df06af7d4586c58fdfa7bbf7cbc7602617917">Translation3D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a1d4b2b8621accda829e6ab9c6241df06a684e449d26f835f7a1d3c872a13a36d2">Rotation2D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a1d4b2b8621accda829e6ab9c6241df06a4ff4b7b9f998f2ff5086f0c6b3feeee2">Rotation3D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a1d4b2b8621accda829e6ab9c6241df06ae4121ee39329e9dffb8dea49f4fca007">Scaling2D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a1d4b2b8621accda829e6ab9c6241df06a70162e017eef53199c4927f12094c34c">Scaling3D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a1d4b2b8621accda829e6ab9c6241df06a90589c47f06eb971d548591f23c285af">Custom</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CameraType</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aade3490fdf16f331c10bf3eccbc64759</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aade3490fdf16f331c10bf3eccbc64759a7ad31566817d74d74f6d59a253b74d8a">Orthographic2D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aade3490fdf16f331c10bf3eccbc64759a8ea380b8d60382bf2de4913fc109ca60">Orthographic3D</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aade3490fdf16f331c10bf3eccbc64759acb30a81bf51da4076dce78d043a7da11">Perspective3D</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ObjectInstanceType2D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aa708f15a256073a2edc089736614fb55</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aa708f15a256073a2edc089736614fb55a967d35e40f3f95b1f538bd248640bf3b">Camera</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aa708f15a256073a2edc089736614fb55a710fdb6adb881b408116ef95335e1961">Mesh</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aa708f15a256073a2edc089736614fb55ace2c8aed9c2fa0cfbed56cbda4d8bf07">Empty</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ObjectFlag2D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aaca19d91702e6fce12e444e9c211511e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aaca19d91702e6fce12e444e9c211511ea899156f90505ab604f4d5df579480577">HasTranslationRotationScaling</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ObjectInstanceType3D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a69823207d6668a086926bcdc5d1f4085</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a69823207d6668a086926bcdc5d1f4085a967d35e40f3f95b1f538bd248640bf3b">Camera</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a69823207d6668a086926bcdc5d1f4085a9914a0ce04a7b7b6a8e39bec55064b82">Light</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a69823207d6668a086926bcdc5d1f4085a710fdb6adb881b408116ef95335e1961">Mesh</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a69823207d6668a086926bcdc5d1f4085ace2c8aed9c2fa0cfbed56cbda4d8bf07">Empty</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ObjectFlag3D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>afd5ad5df868891dd8b329efa03b93de1</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="afd5ad5df868891dd8b329efa03b93de1a899156f90505ab604f4d5df579480577">HasTranslationRotationScaling</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aa6323c59871ddc542da225e4566d99d7</anchor>
      <arglist>(Debug &amp;debug, AbstractImageConverter::Feature value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>af013d6d5cd121a77359f53e7d3ccbdf4</anchor>
      <arglist>(Debug &amp;debug, AbstractImageConverter::Features value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aef6bc92c8398c94aa71feeb75a737fec</anchor>
      <arglist>(Debug &amp;debug, AbstractImporter::Feature value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aa496c4bdc948dbfd58efa04b130f0f52</anchor>
      <arglist>(Debug &amp;debug, MaterialType value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>ad2a689e2ac87d05c71f37e313618dcea</anchor>
      <arglist>(Debug &amp;debug, AbstractMaterialData::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a8e0480c58f2147b8bf9ea24e0f782563</anchor>
      <arglist>(Debug &amp;debug, AbstractMaterialData::Flags value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>acc1bab7109f029fa4e8da4df0bd9f57b</anchor>
      <arglist>(Debug &amp;debug, MaterialAlphaMode value)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>animationInterpolatorFor</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aefc286373c2effb2be34c0b1bbad4db0</anchor>
      <arglist>(Animation::Interpolation interpolation) -&gt; R(*)(const V &amp;, const V &amp;, Float)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>ac925d7742cb241b753cc70dd32772091</anchor>
      <arglist>(Debug &amp;debug, AnimationTrackType value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a965bd348bbbd3df5c430c63517b5d4b9</anchor>
      <arglist>(Debug &amp;debug, AnimationTrackTargetType value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a1015a5600e1d67e9c8a86ef361cbaa0b</anchor>
      <arglist>(Debug &amp;debug, CameraType value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>ab343d2a8322481146569fda9452d6992</anchor>
      <arglist>(Debug &amp;debug, LightData::Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>ae19c01b4e1bd6788833d78b25099ac94</anchor>
      <arglist>(Debug &amp;debug, ObjectInstanceType2D value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a9e03342e07c7f3acca4f7aae60fef99a</anchor>
      <arglist>(Debug &amp;debug, ObjectFlag2D value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aca82a6e413fe146b7c847ec4112a98de</anchor>
      <arglist>(Debug &amp;debug, ObjectFlags2D value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>ab281f59369e4880eeea1a482fd5eefa6</anchor>
      <arglist>(Debug &amp;debug, ObjectInstanceType3D value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a2fb296716a438a935ea2f48f4fc3c380</anchor>
      <arglist>(Debug &amp;debug, ObjectFlag3D value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a515b4140beb619d966dae96ff536bbe1</anchor>
      <arglist>(Debug &amp;debug, ObjectFlags3D value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a2f0d64be467035ef498ce966facceffa</anchor>
      <arglist>(Debug &amp;debug, PhongMaterialData::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a5fb39c5f1a765358446a9ef3caa31682</anchor>
      <arglist>(Debug &amp;debug, TextureData::Type value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Trade::OpenGex</name>
    <filename>namespaceMagnum_1_1Trade_1_1OpenGex.html</filename>
    <member kind="enumvalue">
      <name>Animation</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253af6304a6d8f2b01e13c2c03605012974f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Atten</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a3315a33f9cb5091a3b345490b505ad98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneCountArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a5e03287e50a9f6c52a96e9640a421c39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneIndexArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a714317d24ba7565cdf496364d16a9685</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneNode</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a7befe320b8fca7e7dcdec2b0f9d499e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneRefArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a6812f44800f182c8e94f5491cac105c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneWeightArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a56ee38e9394b75f64e62e6ced8742b54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CameraNode</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a79f93a7971247339463c3443d84cc6ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CameraObject</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a9d30b4eba79b224629783fff2d715542</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Clip</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a5e5ba5fbc4f9f16da02dbc66e58e275a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Color</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253aa305118a547fad84e384a955e9f0a1b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Extension</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a449c75f33e58cc2eb597c310cfeb5fac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GeometryNode</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253aa8b521e7303f947b6399cd3cd89add8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GeometryObject</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253ab9c0282c868cfceb40b18595ec09229e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IndexArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a6f887a76d1a7c1feec058b6246e83416</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a6dad8335d3b0813d55a4c60ef049ffc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LightNode</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253ac8d133985294c96dff732ffbbee59552</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LightObject</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a5de337af814f611451f4beeefdcc9da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Material</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a2982962fd9e99b00b4359b514aee881a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaterialRef</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253af39c57ecb85b2f39f559f692771ac749</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Mesh</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a6d661040b1fb0e10b974fe00b7bf3f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Metric</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a72fedae492949f109c5a671714ea11e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Morph</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a8226a1c8b12b430b159901155419f1b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MorphWeight</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a9fc57ac008463f0658dd45d2da01c799</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Name</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a9fb68c4b6dde8bbfa5a0338529adc39a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Node</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253adf1cf043fcf03377aa66d637fa39452b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ObjectRef</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a49193eba0a0ec0e3b7896fa9aeed31ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Param</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253afa110c5e2ac4a8bc1fa05c1f44690fda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Rotation</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253afea1cb9c8299c7ec22c61165fc21c689</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Scale</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a55d05b90c547fdab267e7b295fee5b87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Skeleton</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253af6d3ca18ff250a79bc6baba3dc217b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Skin</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a7e6348fd496b7cf7023295dc02d08063</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Texture</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a3d7bd43b2ed5863a1ba7e13e929b34f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Time</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a25494f92a1dc0c0fb91402b35a7fa813</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Track</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a794e6449746fc499f0a1e63cd1a02962</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Transform</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253ae734064831130b08157f87eb2fec5c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Translation</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a914fd569607f44f239d3f603a4d13ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Value</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253a13a96ad06820240b8ffb3f97164232a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VertexArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>aba7287b9c3d7f2f0cf5e8eeedc018253ac135467232e5951ff43f8067e418447f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>applic</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba9a26f4e136d781b2c1848520ae3141f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>attrib</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba516e438559e8f2bab01700d47aa6f197</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>begin</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fbae6626e94c1015e5b49fd45e1dd92d35d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba2dce971eae3a260036e6d9713d772486</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>curve</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fbad557c97bc0247e863099b2921b606775</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>end</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba7d34c05f5781373d6c7fac56d18f7d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>front</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba8a5263bb2eed3a692e0f4f195a82e18c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>index</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fbaadc159aa83eeca7f6445d433a33e2aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba9bf1cb45e2b8651c9e22d7446abcd4fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kind</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fbac06e90780bba6ce7025c18dadf06d184</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lod</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba193e71c288b7ae8e54e47b42e20921fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>material</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba154577709fcaa2cd5c0c7f938cb623e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>morph</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fbac552ac8ad16bad93b1b626ff5a87c0ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>motion_blur</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba224f46f7716477f92e775f86fdad3f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>object</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fbae8c5cec062765c72668d1e378c168087</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>primitive</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba8153a3da7f9d0d647723ecba0a285ce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>restart</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba71f9f08ca8c42c41b73c0e637b653bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shadow</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fbaded2827f0f93ee44c700b4b3e12ec82e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>target</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba596bb86cf21072c10f8650dab16d390d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>texcoord</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba33f759f009a97cf9ef59b5995aa3ffb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>two_sided</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba821084236c6eedf8d87a18d4b172f187</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>type</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fba418aa48c09c18d8ea99d0917ee51ef7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>visible</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a8b595fb3365fd6074da573901b3fc3fbaa998be9a9713013727605f355b066820</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Ui</name>
    <filename>namespaceMagnum_1_1Ui.html</filename>
    <class kind="class">Magnum::Ui::AbstractPlane</class>
    <class kind="class">Magnum::Ui::AbstractUiShader</class>
    <class kind="class">Magnum::Ui::AbstractUserInterface</class>
    <class kind="class">Magnum::Ui::Anchor</class>
    <class kind="class">Magnum::Ui::BasicGLLayer</class>
    <class kind="class">Magnum::Ui::BasicInstancedGLLayer</class>
    <class kind="class">Magnum::Ui::BasicInstancedLayer</class>
    <class kind="class">Magnum::Ui::BasicLayer</class>
    <class kind="class">Magnum::Ui::BasicPlane</class>
    <class kind="class">Magnum::Ui::BasicUserInterface</class>
    <class kind="class">Magnum::Ui::Button</class>
    <class kind="class">Magnum::Ui::Input</class>
    <class kind="class">Magnum::Ui::Label</class>
    <class kind="class">Magnum::Ui::Modal</class>
    <class kind="class">Magnum::Ui::Plane</class>
    <class kind="class">Magnum::Ui::StyleConfiguration</class>
    <class kind="class">Magnum::Ui::UserInterface</class>
    <class kind="class">Magnum::Ui::ValidatedInput</class>
    <class kind="class">Magnum::Ui::Widget</class>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Snap &gt;</type>
      <name>Snaps</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>abf82220e5ebfc36efdff609efcb9ae01</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; PlaneFlag &gt;</type>
      <name>PlaneFlags</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a25efa17947864ff2d297cc5f560cc62e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; WidgetFlag &gt;</type>
      <name>WidgetFlags</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a8f043ada252e182e750e0f74407965de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Snap</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>adb75721c5ea61dfb3b39cdae3743482b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482ba945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482ba92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482ba2ad9d63b69c4a10a5cc9cad923133bc4">Bottom</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482baa4ffdcf0dc1f31b9acaf295d75b51d00">Top</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482babb372b16a6afd593f17b8fbdb297d823">InsideX</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482bae1a26b20ef38819a20b38008f8436ee6">InsideY</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482bac87437e57753ee4bc03f6ce6b2a37d97">NoSpaceX</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482ba52bc69c5b52cb1ef358ec05222e8f4c5">NoSpaceY</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PlaneFlag</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>ae45be3c82cb871a531ca61b5f228015c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ae45be3c82cb871a531ca61b5f228015ca7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a3a950dd64c0c17160f00681acf28d71c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a3a950dd64c0c17160f00681acf28d71ca87b7760f14fbff78d8819291f36ab9a0">Button</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a3a950dd64c0c17160f00681acf28d71cab021df6aac4654c454f46c77646e745f">Label</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a3a950dd64c0c17160f00681acf28d71ca324118a6721dd6b8a9b9f4e327df2bf5">Input</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a3a950dd64c0c17160f00681acf28d71cac59d6df802c32f037c2a15ff75faec17">Modal</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>ad16021b9313de52986ac0ff6e92b346c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346ca7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346caeee0168be69b854c20621fc6f01cc3fc">Hover</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346cad78a68f6a85421ae121c2cb5b73a1040">Pressed</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346ca4d3d769b812b6faa6b76e1a8abaece2d">Active</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346cab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346ca7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Style</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>ab8c9d883509415e4668b9165e63c10de</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea074de7e7c226d5c60f8af14c20725352">Primary</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea505a83f220c02df2f85c3810cd9ceb38">Success</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea4059b0251f66a18cb56f544728796875">Info</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea0eaadb4fcb48a0a0ed7bc9868be9fbaa">Warning</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea990816b607ebf99b1415760965e4d564">Danger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea8ed64ce6e8032ddb62a463ffa78881d9">Dim</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea745e3db6a7ffd50e1a72b39482f0882d">Flat</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WidgetFlag</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a45de09c646008bdb65fc358488fd64b6</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6a3ef193e1ac8f2bc3d7226a29d6b09875">Hovered</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6ad78a68f6a85421ae121c2cb5b73a1040">Pressed</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6a4d3d769b812b6faa6b76e1a8abaece2d">Active</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6ab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6a7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a668ca2e16644e9d8e6b077ed9d2262cd</anchor>
      <arglist>(Debug &amp;debug, PlaneFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>af1efee2fa682422665c299232d1870b9</anchor>
      <arglist>(Debug &amp;debug, PlaneFlags value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>aa164d931b7585de7abc12588d41b9c55</anchor>
      <arglist>(Debug &amp;debug, Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a328fb1fa2dd19b12b50706df41c2ce53</anchor>
      <arglist>(Debug &amp;debug, State value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>aed40c9f728962b3d3ff3794ca563a5b0</anchor>
      <arglist>(Debug &amp;debug, Style value)</arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration</type>
      <name>defaultStyleConfiguration</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a757a55d7cb2d73c2e757e308cd8d9e14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration</type>
      <name>mcssDarkStyleConfiguration</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a1f6e9b3376c1bc4f6f913e2bcbf37b57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a0310478aa60fec3a2e0e4e2226751a95</anchor>
      <arglist>(Debug &amp;debug, WidgetFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>ad24ec2ad8310d61add110dbe738e8566</anchor>
      <arglist>(Debug &amp;debug, WidgetFlags value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Vk</name>
    <filename>namespaceMagnum_1_1Vk.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>hasVkPrimitiveTopology</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a3868a55bd1daeee366e479b2a0fd1438</anchor>
      <arglist>(Magnum::MeshPrimitive primitive)</arglist>
    </member>
    <member kind="function">
      <type>VkPrimitiveTopology</type>
      <name>vkPrimitiveTopology</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a169ab6b4d8a914bbb301cfd75b626c66</anchor>
      <arglist>(Magnum::MeshPrimitive primitive)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasVkIndexType</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a3ba452fb290467d930fe153027942990</anchor>
      <arglist>(Magnum::MeshIndexType type)</arglist>
    </member>
    <member kind="function">
      <type>VkIndexType</type>
      <name>vkIndexType</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a78c671a53fc75529aaeb2618b077700d</anchor>
      <arglist>(Magnum::MeshIndexType type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasVkFormat</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>ac82a207c9b17d10b87c6bd27440e485e</anchor>
      <arglist>(Magnum::PixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasVkFormat</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>abf0edbce00dc9210fe89a56335a619cc</anchor>
      <arglist>(Magnum::CompressedPixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>VkFormat</type>
      <name>vkFormat</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a9039b79313fc2ad91f427a8ef3382f63</anchor>
      <arglist>(Magnum::PixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>VkFormat</type>
      <name>vkFormat</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a2479652926689c38bb03bd3243b60e71</anchor>
      <arglist>(Magnum::CompressedPixelFormat format)</arglist>
    </member>
    <member kind="function">
      <type>VkFilter</type>
      <name>vkFilter</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a88d6d498708916f4dc6e2839f5d2d91f</anchor>
      <arglist>(Magnum::SamplerFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>VkSamplerMipmapMode</type>
      <name>vkSamplerMipmapMode</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>aad05615076c109d791a654adab94fa86</anchor>
      <arglist>(Magnum::SamplerMipmap mipmap)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasVkSamplerAddressMode</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a7200c63b45fa88c7c77a7dc309219562</anchor>
      <arglist>(Magnum::SamplerWrapping wrapping)</arglist>
    </member>
    <member kind="function">
      <type>VkSamplerAddressMode</type>
      <name>vkSamplerAddressMode</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a2593b7a6403ed2203afba493dbfe40f4</anchor>
      <arglist>(Magnum::SamplerWrapping wrapping)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; dimensions, VkSamplerAddressMode &gt;</type>
      <name>vkSamplerAddressMode</name>
      <anchorfile>namespaceMagnum_1_1Vk.html</anchorfile>
      <anchor>a479364ca861fe421e7bff6a532a8c6dc</anchor>
      <arglist>(const Array&lt; dimensions, Magnum::SamplerWrapping &gt; &amp;wrapping)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>std</name>
    <filename>namespacestd.html</filename>
    <class kind="struct">std::hash&lt; Magnum::ResourceKey &gt;</class>
  </compound>
  <compound kind="page">
    <name>magnum-al-info</name>
    <title>Magnum OpenAL Info</title>
    <filename>magnum-al-info</filename>
    <docanchor file="magnum-al-info" title="Usage">magnum-al-info-usage</docanchor>
    <docanchor file="magnum-al-info" title="Usage on Emscripten">magnum-al-info-usage-emscripten</docanchor>
    <docanchor file="magnum-al-info" title="Example output">magnum-al-info-example</docanchor>
  </compound>
  <compound kind="page">
    <name>magnum-gl-info</name>
    <title>Magnum GL Info</title>
    <filename>magnum-gl-info</filename>
    <docanchor file="magnum-gl-info" title="Usage">magnum-gl-info-usage</docanchor>
    <docanchor file="magnum-gl-info" title="Usage on Emscripten">magnum-gl-info-usage-emscripten</docanchor>
    <docanchor file="magnum-gl-info" title="Usage on Android">magnum-gl-info-usage-android</docanchor>
    <docanchor file="magnum-gl-info" title="Example output">magnum-gl-info-example</docanchor>
  </compound>
  <compound kind="page">
    <name>magnum-fontconverter</name>
    <title>Font conversion utility</title>
    <filename>magnum-fontconverter</filename>
    <docanchor file="magnum-fontconverter" title="Usage">magnum-fontconverter-usage</docanchor>
    <docanchor file="magnum-fontconverter" title="Example usage">magnum-fontconverter-example</docanchor>
  </compound>
  <compound kind="page">
    <name>magnum-distancefieldconverter</name>
    <title>Distance Field conversion utility</title>
    <filename>magnum-distancefieldconverter</filename>
    <docanchor file="magnum-distancefieldconverter" title="Usage">magnum-distancefieldconverter-usage</docanchor>
    <docanchor file="magnum-distancefieldconverter" title="Example usage">magnum-distancefield-example</docanchor>
  </compound>
  <compound kind="page">
    <name>magnum-imageconverter</name>
    <title>Image conversion utility</title>
    <filename>magnum-imageconverter</filename>
    <docanchor file="magnum-imageconverter" title="Usage">magnum-imageconverter-usage</docanchor>
    <docanchor file="magnum-imageconverter" title="Example usage">magnum-imageconverter-example</docanchor>
  </compound>
  <compound kind="page">
    <name>getting-started</name>
    <title>Getting started</title>
    <filename>getting-started</filename>
    <docanchor file="getting-started" title="Download the bootstrap project">getting-started-bootstrap</docanchor>
    <docanchor file="getting-started" title="Download, build and install Corrade and Magnum">getting-started-download</docanchor>
    <docanchor file="getting-started" title="Review project structure">getting-started-review</docanchor>
    <docanchor file="getting-started" title="Build it and run">getting-started-build</docanchor>
    <docanchor file="getting-started" title="Linux, macOS and other Unix-based OSes">getting-started-linux</docanchor>
    <docanchor file="getting-started" title="Windows">getting-started-windows</docanchor>
    <docanchor file="getting-started" title="Running the application">getting-started-running</docanchor>
    <docanchor file="getting-started" title="Follow tutorials and learn the principles">getting-started-tutorials</docanchor>
    <docanchor file="getting-started" title="Additional information">getting-started-more</docanchor>
  </compound>
  <compound kind="page">
    <name>features</name>
    <title>Feature guide</title>
    <filename>features</filename>
  </compound>
  <compound kind="page">
    <name>platforms</name>
    <title>Platform-specific guides</title>
    <filename>platforms</filename>
  </compound>
  <compound kind="page">
    <name>example-index</name>
    <title>Examples</title>
    <filename>example-index</filename>
    <docanchor file="example-index" title="Fully documented tutorials">example-index-tutorials</docanchor>
    <docanchor file="example-index" title="Other examples">example-index-source</docanchor>
  </compound>
  <compound kind="page">
    <name>tips</name>
    <title>Tips and tricks</title>
    <filename>tips</filename>
  </compound>
  <compound kind="page">
    <name>utilities</name>
    <title>Utilities</title>
    <filename>utilities</filename>
    <docanchor file="utilities" title="GUI apps">utilities-gui</docanchor>
    <docanchor file="utilities" title="Command-line utilities">utilities-cli</docanchor>
  </compound>
  <compound kind="page">
    <name>vulkan</name>
    <title>Vulkan</title>
    <filename>vulkan</filename>
  </compound>
  <compound kind="page">
    <name>opengl</name>
    <title>OpenGL</title>
    <filename>opengl</filename>
    <docanchor file="opengl" title="Version and extension requirements">opengl-required-extensions</docanchor>
  </compound>
  <compound kind="page">
    <name>openal</name>
    <title>OpenAL</title>
    <filename>openal</filename>
    <docanchor file="openal" title="Extension requirements">openal-required-extensions</docanchor>
  </compound>
  <compound kind="page">
    <name>changelog</name>
    <title>Changelog</title>
    <filename>changelog</filename>
    <docanchor file="changelog" title="Changes since 2019.01">changelog-latest</docanchor>
    <docanchor file="changelog" title="New features">changelog-latest-new</docanchor>
    <docanchor file="changelog" title="Audio library">changelog-latest-new-audio</docanchor>
    <docanchor file="changelog" title="DebugTools library">changelog-latest-new-debugtools</docanchor>
    <docanchor file="changelog" title="GL library">changelog-latest-new-gl</docanchor>
    <docanchor file="changelog" title="Math library">changelog-latest-new-math</docanchor>
    <docanchor file="changelog" title="MeshTools library">changelog-latest-new-meshtools</docanchor>
    <docanchor file="changelog" title="Platform libraries">changelog-latest-new-platform</docanchor>
    <docanchor file="changelog" title="SceneGraph library">changelog-latest-new-scenegraph</docanchor>
    <docanchor file="changelog" title="Shaders library">changelog-latest-new-shaders</docanchor>
    <docanchor file="changelog" title="Text library">changelog-latest-new-text</docanchor>
    <docanchor file="changelog" title="Changes and improvements">changelog-latest-changes</docanchor>
    <docanchor file="changelog" title="Animation library">changelog-latest-changes-animation</docanchor>
    <docanchor file="changelog" title="Audio library">changelog-latest-changes-audio</docanchor>
    <docanchor file="changelog" title="DebugTools library">changelog-latest-changes-debugtools</docanchor>
    <docanchor file="changelog" title="GL library">changelog-latest-changes-gl</docanchor>
    <docanchor file="changelog" title="Math library">changelog-latest-changes-math</docanchor>
    <docanchor file="changelog" title="MeshTools library">changelog-latest-changes-meshtools</docanchor>
    <docanchor file="changelog" title="Shaders library">changelog-latest-changes-shaders</docanchor>
    <docanchor file="changelog" title="TextureTools library">changelog-latest-changes-texturetools</docanchor>
    <docanchor file="changelog" title="Platform libraries">changelog-latest-changes-platform</docanchor>
    <docanchor file="changelog" title="Text library">changelog-latest-changes-text</docanchor>
    <docanchor file="changelog" title="Trade library">changelog-latest-changes-trade</docanchor>
    <docanchor file="changelog" title="Build system">changelog-latest-buildsystem</docanchor>
    <docanchor file="changelog" title="Bug fixes">changelog-latest-bugfixes</docanchor>
    <docanchor file="changelog" title="Documentation">changelog-latest-docs</docanchor>
    <docanchor file="changelog" title="Deprecated APIs">changelog-latest-deprecated</docanchor>
    <docanchor file="changelog" title="Potential compatibility breakages, removed APIs">changelog-latest-compatibility</docanchor>
    <docanchor file="changelog" title="2019.01">changelog-2019-01</docanchor>
    <docanchor file="changelog" title="Dependency changes">changelog-2019-01-dependencies</docanchor>
    <docanchor file="changelog" title="New features">changelog-2019-01-new</docanchor>
    <docanchor file="changelog" title="Animation library">changelog-2019-01-new-animation</docanchor>
    <docanchor file="changelog" title="Math library">changelog-2019-01-new-math</docanchor>
    <docanchor file="changelog" title="Platform libraries">changelog-2019-01-new-platform</docanchor>
    <docanchor file="changelog" title="Vk library">changelog-2019-01-new-vk</docanchor>
    <docanchor file="changelog" title="Changes and improvements">changelog-2019-01-changes</docanchor>
    <docanchor file="changelog" title="Audio library">changelog-2019-01-changes-audio</docanchor>
    <docanchor file="changelog" title="GL library">changelog-2019-01-changes-gl</docanchor>
    <docanchor file="changelog" title="Platform libraries">changelog-2019-01-changes-platform</docanchor>
    <docanchor file="changelog" title="Text library">changelog-2019-01-changes-text</docanchor>
    <docanchor file="changelog" title="TextureTools library">changelog-2019-01-changes-texturetools</docanchor>
    <docanchor file="changelog" title="Trade library">changelog-2019-01-changes-trade</docanchor>
    <docanchor file="changelog" title="Build system">changelog-2019-01-buildsystem</docanchor>
    <docanchor file="changelog" title="Bug fixes">changelog-2019-01-bugfixes</docanchor>
    <docanchor file="changelog" title="Documentation">changelog-2019-01-docs</docanchor>
    <docanchor file="changelog" title="Deprecated APIs">changelog-2019-01-deprecated</docanchor>
    <docanchor file="changelog" title="Potential compatibility breakages, removed APIs">changelog-2019-01-compatibility</docanchor>
    <docanchor file="changelog" title="2018.10">changelog-2018-10</docanchor>
    <docanchor file="changelog" title="New features">changelog-2018-10-new</docanchor>
    <docanchor file="changelog" title="Animation library">changelog-2018-10-new-animation</docanchor>
    <docanchor file="changelog" title="DebugTools library">changelog-2018-10-new-debugtools</docanchor>
    <docanchor file="changelog" title="GL library">changelog-2018-10-new-gl</docanchor>
    <docanchor file="changelog" title="Math library">changelog-2018-10-new-math</docanchor>
    <docanchor file="changelog" title="Platform libraries">changelog-2018-10-new-platform</docanchor>
    <docanchor file="changelog" title="Primitives library">changelog-2018-10-new-primitives</docanchor>
    <docanchor file="changelog" title="SceneGraph library">changelog-2018-10-new-scenegraph</docanchor>
    <docanchor file="changelog" title="Shaders library">changelog-2018-10-new-shaders</docanchor>
    <docanchor file="changelog" title="Trade library">changelog-2018-10-new-trade</docanchor>
    <docanchor file="changelog" title="Vk library">changelog-2018-10-new-vk</docanchor>
    <docanchor file="changelog" title="Changes and improvements">changelog-2018-10-changes</docanchor>
    <docanchor file="changelog" title="Audio library">changelog-2018-10-changes-audio</docanchor>
    <docanchor file="changelog" title="GL library">changelog-2018-10-changes-gl</docanchor>
    <docanchor file="changelog" title="Math library">changelog-2018-10-changes-math</docanchor>
    <docanchor file="changelog" title="MeshTools library">changelog-2018-10-changes-meshtools</docanchor>
    <docanchor file="changelog" title="Platform libraries">changelog-2018-10-changes-platform</docanchor>
    <docanchor file="changelog" title="Shaders library">changelog-2018-10-changes-shaders</docanchor>
    <docanchor file="changelog" title="TextureTools library">changelog-2018-10-changes-texturetools</docanchor>
    <docanchor file="changelog" title="Trade library">changelog-2018-10-changes-trade</docanchor>
    <docanchor file="changelog" title="Build system">changelog-2018-10-buildsystem</docanchor>
    <docanchor file="changelog" title="Bug fixes">changelog-2018-10-bugfixes</docanchor>
    <docanchor file="changelog" title="Documentation">changelog-2018-10-docs</docanchor>
    <docanchor file="changelog" title="Deprecated APIs">changelog-2018-10-deprecated</docanchor>
    <docanchor file="changelog" title="Potential compatibility breakages, removed APIs">changelog-2018-10-compatibility</docanchor>
    <docanchor file="changelog" title="2018.04">changelog-2018-04</docanchor>
    <docanchor file="changelog" title="Dependency changes">changelog-2018-04-dependencies</docanchor>
    <docanchor file="changelog" title="New features">changelog-2018-04-new</docanchor>
    <docanchor file="changelog" title="Math library">changelog-2018-04-new-math</docanchor>
    <docanchor file="changelog" title="GL library">changelog-2018-04-new-gl</docanchor>
    <docanchor file="changelog" title="Platform libraries">changelog-2018-04-new-platform</docanchor>
    <docanchor file="changelog" title="Primitives library">changelog-2018-04-new-primitives</docanchor>
    <docanchor file="changelog" title="Trade library">changelog-2018-04-new-trade</docanchor>
    <docanchor file="changelog" title="Changes and improvements">changelog-2018-04-changes</docanchor>
    <docanchor file="changelog" title="DebugTools library">changelog-2018-04-changes-debugtools</docanchor>
    <docanchor file="changelog" title="GL library">changelog-2018-04-changes-gl</docanchor>
    <docanchor file="changelog" title="Text library">changelog-2018-04-changes-text</docanchor>
    <docanchor file="changelog" title="Platform libraries">changelog-2018-04-changes-platform</docanchor>
    <docanchor file="changelog" title="Plugins">changelog-2018-04-changes-plugins</docanchor>
    <docanchor file="changelog" title="Build system">changelog-2018-04-buildsystem</docanchor>
    <docanchor file="changelog" title="Bug fixes">changelog-2018-04-bugfixes</docanchor>
    <docanchor file="changelog" title="Deprecated APIs">changelog-2018-04-deprecated</docanchor>
    <docanchor file="changelog" title="Potential compatibility breakages, removed APIs">changelog-2018-04-compatibility</docanchor>
    <docanchor file="changelog" title="Documentation">changelog-2018-04-docs</docanchor>
    <docanchor file="changelog" title="2018.02">changelog-2018-02</docanchor>
    <docanchor file="changelog" title="Dependency changes">changelog-2018-02-dependencies</docanchor>
    <docanchor file="changelog" title="New features">changelog-2018-02-new</docanchor>
    <docanchor file="changelog" title="Audio library">changelog-2018-02-new-audio</docanchor>
    <docanchor file="changelog" title="DebugTools library">changelog-2018-02-new-debugtools</docanchor>
    <docanchor file="changelog" title="Math library">changelog-2018-02-new-math</docanchor>
    <docanchor file="changelog" title="Platform libraries">changelog-2018-02-new-platform</docanchor>
    <docanchor file="changelog" title="Primitives library">changelog-2018-02-new-primitives</docanchor>
    <docanchor file="changelog" title="Shaders library">changelog-2018-02-new-shaders</docanchor>
    <docanchor file="changelog" title="Text library">changelog-2018-02-new-text</docanchor>
    <docanchor file="changelog" title="Trade library">changelog-2018-02-new-trade</docanchor>
    <docanchor file="changelog" title="Changes and improvements">changelog-2018-02-changes</docanchor>
    <docanchor file="changelog" title="Math library">changelog-2018-02-changes-math</docanchor>
    <docanchor file="changelog" title="Platform library">changelog-2018-02-changes-platform</docanchor>
    <docanchor file="changelog" title="Shaders library">changelog-2018-02-changes-shaders</docanchor>
    <docanchor file="changelog" title="Build system">changelog-2018-02-buildsystem</docanchor>
    <docanchor file="changelog" title="Bug fixes">changelog-2018-02-bugfixes</docanchor>
    <docanchor file="changelog" title="Deprecated APIs">changelog-2018-02-deprecated</docanchor>
    <docanchor file="changelog" title="Potential compatibility breakages, removed APIs">changelog-2018-02-compatibility</docanchor>
    <docanchor file="changelog" title="Performance improvements">changelog-2018-02-performance</docanchor>
    <docanchor file="changelog" title="Documentation">changelog-2018-02-docs</docanchor>
  </compound>
  <compound kind="page">
    <name>changelog-old</name>
    <title>Archived changelogs</title>
    <filename>changelog-old</filename>
    <docanchor file="changelog-old" title="2015.05">changelog-2015-05</docanchor>
    <docanchor file="changelog-old" title="New features">changelog-2015-05-new</docanchor>
    <docanchor file="changelog-old" title="Changes">changelog-2015-05-changes</docanchor>
    <docanchor file="changelog-old" title="Build system">changelog-2015-05-buildsystem</docanchor>
    <docanchor file="changelog-old" title="Bug fixes">changelog-2015-05-bugfixes</docanchor>
    <docanchor file="changelog-old" title="Deprecated APIs">changelog-2015-05-deprecated</docanchor>
    <docanchor file="changelog-old" title="Potential compatibility breakages, removed APIs">changelog-2015-05-compatibility</docanchor>
    <docanchor file="changelog-old" title="Performance improvements">changelog-2015-05-performance</docanchor>
    <docanchor file="changelog-old" title="2014.06">changelog-2014-06</docanchor>
    <docanchor file="changelog-old" title="Dependency changes">changelog-2014-06-dependencies</docanchor>
    <docanchor file="changelog-old" title="New features">changelog-2014-06-new</docanchor>
    <docanchor file="changelog-old" title="Changes">changelog-2014-06-changes</docanchor>
    <docanchor file="changelog-old" title="Build system">changelog-2014-06-buildsystem</docanchor>
    <docanchor file="changelog-old" title="Bug fixes">changelog-2014-06-bugfixes</docanchor>
    <docanchor file="changelog-old" title="Deprecated APIs">changelog-2014-06-deprecated</docanchor>
    <docanchor file="changelog-old" title="Potential compatibility breakages, removed APIs">changelog-2014-06-compatibility</docanchor>
    <docanchor file="changelog-old" title="Internal changes">changelog-2014-06-internal</docanchor>
    <docanchor file="changelog-old" title="2014.01">changelog-2014-01</docanchor>
    <docanchor file="changelog-old" title="Dependency changes">changelog-2014-01-dependencies</docanchor>
    <docanchor file="changelog-old" title="New features">changelog-2014-01-new</docanchor>
    <docanchor file="changelog-old" title="Changes">changelog-2014-01-changes</docanchor>
    <docanchor file="changelog-old" title="Bug fixes">changelog-2014-01-bugfixes</docanchor>
    <docanchor file="changelog-old" title="Deprecated APIs">changelog-2014-01-deprecated</docanchor>
    <docanchor file="changelog-old" title="Potential compatibility breakages, removed APIs">changelog-2014-01-compatibility</docanchor>
    <docanchor file="changelog-old" title="Documentation">changelog-2014-01-documentation</docanchor>
    <docanchor file="changelog-old" title="Internal changes">changelog-2014-01-internal</docanchor>
    <docanchor file="changelog-old" title="2013.10">changelog-2013-10</docanchor>
    <docanchor file="changelog-old" title="Dependency changes">changelog-2013-10-dependencies</docanchor>
    <docanchor file="changelog-old" title="New features">changelog-2013-10-new</docanchor>
    <docanchor file="changelog-old" title="Changes">changelog-2013-10-changes</docanchor>
    <docanchor file="changelog-old" title="Bug fixes">changelog-2013-10-bugfixes</docanchor>
    <docanchor file="changelog-old" title="Deprecated APIs">changelog-2013-10-deprecated</docanchor>
    <docanchor file="changelog-old" title="Documentation">changelog-2013-10-documentation</docanchor>
    <docanchor file="changelog-old" title="Potential compatibility breakages, removed APIs">changelog-2013-10-compatibility</docanchor>
    <docanchor file="changelog-old" title="2013.08">changelog-2013-08</docanchor>
  </compound>
  <compound kind="page">
    <name>developers</name>
    <title>Developers guide</title>
    <filename>developers</filename>
    <docanchor file="developers" title="Checklist for adding / removing a library">developers-library</docanchor>
    <docanchor file="developers" title="Checklist for adding / removing an application library">developers-application</docanchor>
    <docanchor file="developers" title="Checklist for adding / removing a plugin">developers-plugin</docanchor>
    <docanchor file="developers" title="Checklist for adding / removing a plugin interface">developers-plugin-interface</docanchor>
    <docanchor file="developers" title="Checklist for adding / removing a tool">developers-tool</docanchor>
    <docanchor file="developers" title="Checklist for adding / removing an example">developers-example</docanchor>
    <docanchor file="developers" title="Checklist for adding / removing a new source / header file">developers-file</docanchor>
    <docanchor file="developers" title="Checklist for adding / removing a symbol">developers-symbol</docanchor>
    <docanchor file="developers" title="Checklist for adding a new CMake documentation page">developers-page</docanchor>
    <docanchor file="developers" title="Checklist for deprecating a feature">developers-deprecation</docanchor>
    <docanchor file="developers" title="Checklist for deprecating a whole library">developers-deprecation-library</docanchor>
    <docanchor file="developers" title="Checklist for removing a feature">developers-removing</docanchor>
    <docanchor file="developers" title="Checklist for adding / removing GL versions and extensions">developers-gl-extensions</docanchor>
    <docanchor file="developers" title="Checklist for adding / removing GL functionality">developers-gl-functionality</docanchor>
    <docanchor file="developers" title="Checklist for adding / removing a driver workaround">developers-driver-workaround</docanchor>
    <docanchor file="developers" title="Checklist for adding / removing OpenAL versions and extensions">developers-al-extensions</docanchor>
    <docanchor file="developers" title="Checklist for adding / removing OpenAL functionality">developers-al-functionality</docanchor>
    <docanchor file="developers" title="Checklist for adding / removing Vulkan versions and extensions">developers-vk-extensions</docanchor>
    <docanchor file="developers" title="Checklist for adding / removing Vulkan functionality">developers-vk-functionality</docanchor>
    <docanchor file="developers" title="Checklist for adding, removing or updating a dependency">developers-dependency</docanchor>
    <docanchor file="developers" title="Checklist for adding or removing a port">developers-port</docanchor>
    <docanchor file="developers" title="Checklist for updating the bootstrap repo">developers-bootstrap</docanchor>
    <docanchor file="developers" title="Checklist for updating copyright year">developers-copyright-year</docanchor>
    <docanchor file="developers" title="Checklist for uploading documentation">developers-documentation</docanchor>
    <docanchor file="developers" title="Checklist for merging a PR">developers-pr</docanchor>
    <docanchor file="developers" title="Checklist for making a release">developers-release</docanchor>
  </compound>
  <compound kind="page">
    <name>coding-style</name>
    <title>Coding style</title>
    <filename>coding-style</filename>
    <docanchor file="coding-style" title="C++ code">coding-style-cpp</docanchor>
    <docanchor file="coding-style" title="Headers">coding-style-cpp-headers</docanchor>
    <docanchor file="coding-style" title="Code format">coding-style-cpp-format</docanchor>
    <docanchor file="coding-style" title="Builtin types">coding-style-cpp-types</docanchor>
    <docanchor file="coding-style" title="Naming">coding-style-cpp-naming</docanchor>
    <docanchor file="coding-style" title="Forward declarations and forward declaration headers">coding-style-cpp-forward-declarations</docanchor>
    <docanchor file="coding-style" title="Compatibility with various OpenGL editions">coding-style-compatibility</docanchor>
    <docanchor file="coding-style" title="Doxygen documentation">coding-style-documentation</docanchor>
    <docanchor file="coding-style" title="Special documentation commands">coding-style-documentation-commands</docanchor>
    <docanchor file="coding-style" title="Code">coding-style-documentation-commands-code</docanchor>
    <docanchor file="coding-style" title="Links to OpenGL, Vulkan and OpenAL extensions">coding-style-documentation-commands-extension</docanchor>
    <docanchor file="coding-style" title="Links to related OpenGL, Vulkan, OpenAL functions and definitions">coding-style-documentation-commands-ref</docanchor>
    <docanchor file="coding-style" title="Classes and functions requiring specific OpenGL, Vulkan, OpenAL version or extensions">coding-style-documentation-commands-requires</docanchor>
    <docanchor file="coding-style" title="Section ordering">coding-style-documentation-ordering</docanchor>
    <docanchor file="coding-style" title="Unit tests">coding-style-unit-tests</docanchor>
  </compound>
  <compound kind="page">
    <name>credits-contributors</name>
    <title>Contributors</title>
    <filename>credits-contributors</filename>
    <docanchor file="credits-contributors" title="Magnum Plugins">credits-contributors-plugins</docanchor>
    <docanchor file="credits-contributors" title="Magnum Integration">credits-contributors-integration</docanchor>
    <docanchor file="credits-contributors" title="Magnum Examples">credits-contributors-examples</docanchor>
    <docanchor file="credits-contributors" title="Magnum Extras">credits-contributors-extras</docanchor>
  </compound>
  <compound kind="page">
    <name>animation</name>
    <title>Keyframe-based animation</title>
    <filename>animation</filename>
  </compound>
  <compound kind="page">
    <name>building</name>
    <title>Downloading and building</title>
    <filename>building</filename>
    <docanchor file="building" title="Prepared packages">building-packages</docanchor>
    <docanchor file="building" title="Hunter package">building-packages-hunter</docanchor>
    <docanchor file="building" title="Vcpkg packages on Windows">building-packages-vcpkg</docanchor>
    <docanchor file="building" title="ArchLinux packages">building-packages-arch</docanchor>
    <docanchor file="building" title="MSYS2 packages">building-packages-msys</docanchor>
    <docanchor file="building" title="Packages for Debian, Ubuntu and derivatives">building-packages-deb</docanchor>
    <docanchor file="building" title="Gentoo Linux ebuilds">building-packages-gentoo</docanchor>
    <docanchor file="building" title="Homebrew formulas for macOS">building-packages-brew</docanchor>
    <docanchor file="building" title="Manual build">building-manual</docanchor>
    <docanchor file="building" title="Downloading the sources">building-download</docanchor>
    <docanchor file="building" title="Via command-line (on Linux/Unix)">building-linux</docanchor>
    <docanchor file="building" title="Building on Windows">building-windows</docanchor>
    <docanchor file="building" title="Using Visual Studio">building-windows-msvc</docanchor>
    <docanchor file="building" title="Using QtCreator">building-windows-qtcreator</docanchor>
    <docanchor file="building" title="Enabling or disabling features">building-features</docanchor>
    <docanchor file="building" title="Building and running tests">building-tests</docanchor>
    <docanchor file="building" title="Building documentation">building-doc</docanchor>
    <docanchor file="building" title="Building for ANGLE on Windows">building-windows-angle</docanchor>
    <docanchor file="building" title="Cross-compiling">building-cross</docanchor>
    <docanchor file="building" title="Cross-compiling for Windows RT">building-cross-winrt</docanchor>
    <docanchor file="building" title="Cross-compiling for Windows using MinGW-w64">building-cross-win</docanchor>
    <docanchor file="building" title="Cross-compiling for Emscripten">building-cross-emscripten</docanchor>
    <docanchor file="building" title="Cross-compiling for iOS">building-cross-ios</docanchor>
    <docanchor file="building" title="Crosscompiling for Android">building-cross-android</docanchor>
    <docanchor file="building" title="Continuous Integration">building-ci</docanchor>
    <docanchor file="building" title="Travis">building-ci-travis</docanchor>
    <docanchor file="building" title="AppVeyor">building-ci-appveyor</docanchor>
    <docanchor file="building" title="Codecov.io">building-ci-coverage</docanchor>
  </compound>
  <compound kind="page">
    <name>cmake</name>
    <title>Usage with CMake</title>
    <filename>cmake</filename>
    <docanchor file="cmake" title="Other CMake modules">cmake-modules</docanchor>
  </compound>
  <compound kind="page">
    <name>compilation-speedup</name>
    <title>Speeding up compilation</title>
    <filename>compilation-speedup</filename>
    <docanchor file="compilation-speedup" title="Forward declarations instead of includes">compilation-forward-declarations</docanchor>
    <docanchor file="compilation-speedup" title="Templates">compilation-speedup-templates</docanchor>
    <docanchor file="compilation-speedup" title="Template headers and implementation files">compilation-speedup-hpp</docanchor>
    <docanchor file="compilation-speedup" title="Extern templates">compilation-speedup-extern-templates</docanchor>
  </compound>
  <compound kind="page">
    <name>custom-buildsystems</name>
    <title>Using Magnum with custom buildsystems</title>
    <filename>custom-buildsystems</filename>
    <docanchor file="custom-buildsystems" title="Using already built Magnum with a custom buildsystem">custom-buildsystems-usage</docanchor>
    <docanchor file="custom-buildsystems" title="Library dependency order">custom-buildsystems-usage-dependency-order</docanchor>
    <docanchor file="custom-buildsystems" title="Static plugins">custom-buildsystems-usage-static-plugins</docanchor>
    <docanchor file="custom-buildsystems" title="Resource compilation">custom-buildsystems-usage-resource-compilation</docanchor>
    <docanchor file="custom-buildsystems" title="Cross-compilation">custom-buildsystems-usage-toolchains</docanchor>
    <docanchor file="custom-buildsystems" title="Building Magnum with a custom buildsystem">custom-buildsystems-building</docanchor>
    <docanchor file="custom-buildsystems" title="Magnum Plugins">custom-buildsystems-plugins</docanchor>
    <docanchor file="custom-buildsystems" title="Magnum Integration">custom-buildsystems-integration</docanchor>
    <docanchor file="custom-buildsystems" title="Magnum Extras">custom-buildsystems-extras</docanchor>
  </compound>
  <compound kind="page">
    <name>debug-tools</name>
    <title>Debugging helpers</title>
    <filename>debug-tools</filename>
    <docanchor file="debug-tools" title="Debug renderers">debug-tools-renderers</docanchor>
  </compound>
  <compound kind="page">
    <name>matrix-vector</name>
    <title>Operations with matrices and vectors</title>
    <filename>matrix-vector</filename>
    <docanchor file="matrix-vector" title="Matrix and vector classes">matrix-vector-hierarchy</docanchor>
    <docanchor file="matrix-vector" title="Constructing matrices and vectors">matrix-vector-construction</docanchor>
    <docanchor file="matrix-vector" title="Accessing matrix and vector components">matrix-vector-component-access</docanchor>
    <docanchor file="matrix-vector" title="Converting between different underlying types">matrix-vector-conversion</docanchor>
    <docanchor file="matrix-vector" title="Operations with matrices and vectors">matrix-vector-operations</docanchor>
    <docanchor file="matrix-vector" title="Component-wise and inter-vector operations">matrix-vector-componentwise</docanchor>
    <docanchor file="matrix-vector" title="Matrices are column-major and vectors are columns">matrix-vector-column-major</docanchor>
  </compound>
  <compound kind="page">
    <name>method-chaining</name>
    <title>Method chaining</title>
    <filename>method-chaining</filename>
  </compound>
  <compound kind="page">
    <name>openal-support</name>
    <title>Support state</title>
    <filename>openal-support</filename>
    <docanchor file="openal-support" title="OpenAL implementation state">openal-support-state</docanchor>
    <docanchor file="openal-support" title="Extensions">openal-extension-support</docanchor>
    <docanchor file="openal-support" title="OpenAL Soft Extensions">openal-extension-support-soft</docanchor>
  </compound>
  <compound kind="page">
    <name>opengl-mapping</name>
    <title>Command mapping</title>
    <filename>opengl-mapping</filename>
    <docanchor file="opengl-mapping" title="Functions">opengl-mapping-functions</docanchor>
    <docanchor file="opengl-mapping" title="A">opengl-mapping-functions-a</docanchor>
    <docanchor file="opengl-mapping" title="B">opengl-mapping-functions-b</docanchor>
    <docanchor file="opengl-mapping" title="C">opengl-mapping-functions-c</docanchor>
    <docanchor file="opengl-mapping" title="D">opengl-mapping-functions-d</docanchor>
    <docanchor file="opengl-mapping" title="E">opengl-mapping-functions-e</docanchor>
    <docanchor file="opengl-mapping" title="F">opengl-mapping-functions-f</docanchor>
    <docanchor file="opengl-mapping" title="G">opengl-mapping-functions-g</docanchor>
    <docanchor file="opengl-mapping" title="H">opengl-mapping-functions-h</docanchor>
    <docanchor file="opengl-mapping" title="I">opengl-mapping-functions-i</docanchor>
    <docanchor file="opengl-mapping" title="L">opengl-mapping-functions-l</docanchor>
    <docanchor file="opengl-mapping" title="M">opengl-mapping-functions-m</docanchor>
    <docanchor file="opengl-mapping" title="O">opengl-mapping-functions-o</docanchor>
    <docanchor file="opengl-mapping" title="P">opengl-mapping-functions-p</docanchor>
    <docanchor file="opengl-mapping" title="Q">opengl-mapping-functions-q</docanchor>
    <docanchor file="opengl-mapping" title="R">opengl-mapping-functions-r</docanchor>
    <docanchor file="opengl-mapping" title="S">opengl-mapping-functions-s</docanchor>
    <docanchor file="opengl-mapping" title="T">opengl-mapping-functions-t</docanchor>
    <docanchor file="opengl-mapping" title="U">opengl-mapping-functions-u</docanchor>
    <docanchor file="opengl-mapping" title="V">opengl-mapping-functions-v</docanchor>
    <docanchor file="opengl-mapping" title="W">opengl-mapping-functions-w</docanchor>
    <docanchor file="opengl-mapping" title="Limit and state queries">opengl-mapping-state</docanchor>
  </compound>
  <compound kind="page">
    <name>opengl-support</name>
    <title>Support state</title>
    <filename>opengl-support</filename>
    <docanchor file="opengl-support" title="OpenGL implementation state">opengl-support-state</docanchor>
    <docanchor file="opengl-support" title="OpenGL 2.1">opengl-support-21</docanchor>
    <docanchor file="opengl-support" title="OpenGL 3.0">opengl-support-30</docanchor>
    <docanchor file="opengl-support" title="OpenGL 3.1">opengl-support-31</docanchor>
    <docanchor file="opengl-support" title="OpenGL 3.2">opengl-support-32</docanchor>
    <docanchor file="opengl-support" title="OpenGL 3.3">opengl-support-33</docanchor>
    <docanchor file="opengl-support" title="OpenGL 4.0">opengl-support-40</docanchor>
    <docanchor file="opengl-support" title="OpenGL 4.1">opengl-support-41</docanchor>
    <docanchor file="opengl-support" title="OpenGL 4.2">opengl-support-42</docanchor>
    <docanchor file="opengl-support" title="OpenGL 4.3">opengl-support-43</docanchor>
    <docanchor file="opengl-support" title="OpenGL 4.4">opengl-support-44</docanchor>
    <docanchor file="opengl-support" title="OpenGL 4.5">opengl-support-45</docanchor>
    <docanchor file="opengl-support" title="OpenGL 4.6">opengl-support-46</docanchor>
    <docanchor file="opengl-support" title="ARB / Khronos OpenGL extensions">opengl-support-extensions</docanchor>
    <docanchor file="opengl-support" title="Vendor OpenGL extensions">opengl-support-extensions-vendor</docanchor>
    <docanchor file="opengl-support" title="OpenGL ES 2.0">opengl-support-es20</docanchor>
    <docanchor file="opengl-support" title="OpenGL ES 3.0">opengl-support-es30</docanchor>
    <docanchor file="opengl-support" title="OpenGL ES 3.1">opengl-support-es31</docanchor>
    <docanchor file="opengl-support" title="OpenGL ES 3.2">opengl-support-es32</docanchor>
    <docanchor file="opengl-support" title="OpenGL ES 2.0 extensions to match ES 3.0 functionality">opengl-support-es30-extensions</docanchor>
    <docanchor file="opengl-support" title="OpenGL ES extensions">opengl-support-es-extensions</docanchor>
    <docanchor file="opengl-support" title="WebGL 1.0">opengl-support-webgl10</docanchor>
    <docanchor file="opengl-support" title="WebGL 2.0">opengl-support-webgl20</docanchor>
    <docanchor file="opengl-support" title="WebGL 1.0 extensions to match WebGL 2.0 functionality">opengl-support-webgl20-extensions</docanchor>
    <docanchor file="opengl-support" title="WebGL extensions to match desktop functionality">opengl-support-webgl-extensions</docanchor>
    <docanchor file="opengl-support" title="Unsupported OpenGL features">opengl-unsupported</docanchor>
    <docanchor file="opengl-support" title="Unsupported features">opengl-unsupported-features</docanchor>
    <docanchor file="opengl-support" title="Unsupported ARB / Khronos extensions">opengl-unsupported-extensions</docanchor>
    <docanchor file="opengl-support" title="Unsupported vendor extensions">opengl-unsupported-extensions-vendor</docanchor>
  </compound>
  <compound kind="page">
    <name>opengl-workarounds</name>
    <title>Driver workarounds</title>
    <filename>opengl-workarounds</filename>
  </compound>
  <compound kind="page">
    <name>opengl-wrapping</name>
    <title>OpenGL wrapping layer</title>
    <filename>opengl-wrapping</filename>
    <docanchor file="opengl-wrapping" title="OpenGL object wrapper instances">opengl-wrapping-instances</docanchor>
    <docanchor file="opengl-wrapping" title="State tracking and interaction with third-party code">opengl-state-tracking</docanchor>
    <docanchor file="opengl-wrapping" title="Extension-dependent functionality">opengl-wrapping-dsa</docanchor>
  </compound>
  <compound kind="page">
    <name>platform</name>
    <title>Platform support</title>
    <filename>platform</filename>
    <docanchor file="platform" title="Windowed applications">platform-windowed</docanchor>
    <docanchor file="platform" title="Responding to viewport size changes">platform-windowed-viewport</docanchor>
    <docanchor file="platform" title="Windowless applications">platform-windowless</docanchor>
    <docanchor file="platform" title="Compilation with CMake">platform-compilation</docanchor>
    <docanchor file="platform" title="Specifying configuration">platform-configuration</docanchor>
    <docanchor file="platform" title="Using custom platform toolkits">platform-custom</docanchor>
    <docanchor file="platform" title="Manually managing windowless contexts">platform-windowless-contexts</docanchor>
  </compound>
  <compound kind="page">
    <name>platforms-android</name>
    <title>Android</title>
    <filename>platforms-android</filename>
    <docanchor file="platforms-android" title="Building and running console applications">platforms-android-console</docanchor>
    <docanchor file="platforms-android" title="Building and installing graphics apps">platforms-android-apps</docanchor>
    <docanchor file="platforms-android" title="Android manifest file">platforms-android-apps-manifest</docanchor>
    <docanchor file="platforms-android">platforms-android-apps-manifest-screen-compatibility-mode</docanchor>
    <docanchor file="platforms-android">platforms-android-apps-manifest-screen-resize</docanchor>
    <docanchor file="platforms-android" title="Using CMake">platforms-android-apps-cmake</docanchor>
    <docanchor file="platforms-android" title="Using Gradle">platforms-android-apps-gradle</docanchor>
    <docanchor file="platforms-android" title="Building for multiple ABIs and system versions">platforms-android-multiple-abis</docanchor>
    <docanchor file="platforms-android" title="Redirecting output to Android log buffer">platforms-android-output-redirection</docanchor>
    <docanchor file="platforms-android" title="Using system-wide CMake installation">platforms-android-system-cmake</docanchor>
    <docanchor file="platforms-android" title="Using gradlew wrappers instead of a system installation">platforms-android-gradlew</docanchor>
    <docanchor file="platforms-android" title="Setting up Android build on Travis CI">platforms-android-travis</docanchor>
    <docanchor file="platforms-android" title="Running tests on the emulator">platforms-android-travis-run</docanchor>
    <docanchor file="platforms-android" title="APK bundle creation">platforms-android-travis-bundle</docanchor>
    <docanchor file="platforms-android" title="Troubleshooting">platforms-android-troubleshooting</docanchor>
    <docanchor file="platforms-android" title="ADB fails when more devices are connected">platforms-android-troubleshooting-multiple-devices</docanchor>
    <docanchor file="platforms-android" title="Signing the APK using CMake fails">platforms-android-troubleshooting-signing-failed</docanchor>
    <docanchor file="platforms-android" title="Gradle CMake can&apos;t find dependencies">platforms-android-troubleshooting-cant-find</docanchor>
    <docanchor file="platforms-android" title="App can&apos;t launch">platforms-android-troubleshooting-cant-launch</docanchor>
    <docanchor file="platforms-android" title="Gradle aborting due to too new Java">platforms-android-troubleshooting-java8</docanchor>
    <docanchor file="platforms-android" title="Gradle aborting due to termcap">platforms-android-troubleshooting-term</docanchor>
    <docanchor file="platforms-android" title="Accepting SDK licenses for Gradle">platforms-android-troubleshooting-licenses</docanchor>
    <docanchor file="platforms-android" title="Android SDK directory permissions">platforms-android-troubleshooting-permissions</docanchor>
  </compound>
  <compound kind="page">
    <name>platforms-gl</name>
    <title>OpenGL and OpenGL ES platforms</title>
    <filename>platforms-gl</filename>
    <docanchor file="platforms-gl" title="OpenGL best practices">platforms-gl-best-practices</docanchor>
    <docanchor file="platforms-gl" title="OpenGL ES">platforms-gl-es</docanchor>
    <docanchor file="platforms-gl" title="OpenGL ES best practices">platforms-gl-es-best-practices</docanchor>
    <docanchor file="platforms-gl" title="Differences to desktop GL">platforms-gl-es-differences</docanchor>
    <docanchor file="platforms-gl" title="ANGLE">platforms-gl-es-angle</docanchor>
  </compound>
  <compound kind="page">
    <name>platforms-html5</name>
    <title>JavaScript, HTML5 and WebGL</title>
    <filename>platforms-html5</filename>
    <docanchor file="platforms-html5" title="Building and running console applications">platforms-html5-console</docanchor>
    <docanchor file="platforms-html5" title="Building and deploying graphical apps">platforms-html5-apps</docanchor>
    <docanchor file="platforms-html5" title="Building and deploying windowless apps">platforms-html5-windowless-apps</docanchor>
    <docanchor file="platforms-html5" title="Modifying page style, canvas size and aspect ratio">platforms-html5-layout</docanchor>
    <docanchor file="platforms-html5" title="Controlling event behavior">platforms-html5-events</docanchor>
    <docanchor file="platforms-html5" title="Keyboard events">platforms-html5-events-keyboard</docanchor>
    <docanchor file="platforms-html5" title="Context menu">platforms-html5-events-contextmenu</docanchor>
    <docanchor file="platforms-html5" title="Terminal output, environment and command-line arguments">platforms-html5-environment</docanchor>
    <docanchor file="platforms-html5" title="Differences between WebGL and OpenGL ES">platforms-html5-webgl</docanchor>
    <docanchor file="platforms-html5" title="Compilation time / code size tradeoffs">platforms-html5-code-size</docanchor>
    <docanchor file="platforms-html5" title="Server-side compression">platforms-html5-code-size-server</docanchor>
    <docanchor file="platforms-html5" title="Troubleshooting">platforms-html5-troubleshooting</docanchor>
    <docanchor file="platforms-html5" title="Setting up Emscripten on macOS">platforms-html5-troubleshooting-macos</docanchor>
    <docanchor file="platforms-html5" title="First Emscripten run takes long or fails">platforms-html5-troubleshooting-bootstrap</docanchor>
    <docanchor file="platforms-html5" title="CMake can&apos;t find _CORRADE_MODULE_DIR">platforms-html5-troubleshooting-corrade-not-found</docanchor>
    <docanchor file="platforms-html5" title="Application fails to load">platforms-html5-troubleshooting-loading-failed</docanchor>
    <docanchor file="platforms-html5" title="Incorrect response MIME type">platforms-html5-troubleshooting-mime</docanchor>
    <docanchor file="platforms-html5" title="Warnings about $ characters when using EM_ASM">platforms-html5-troubleshooting-emasm</docanchor>
  </compound>
  <compound kind="page">
    <name>platforms-ios</name>
    <title>iOS</title>
    <filename>platforms-ios</filename>
    <docanchor file="platforms-ios" title="Bundle creation">platforms-ios-bundle</docanchor>
    <docanchor file="platforms-ios" title="Xcode">platforms-ios-xcode</docanchor>
    <docanchor file="platforms-ios" title="CMake can&apos;t find a compiler">platforms-ios-xcode-cmake</docanchor>
    <docanchor file="platforms-ios" title="Deploying iOS apps">platforms-ios-deploying</docanchor>
    <docanchor file="platforms-ios" title="Application signing">platform-ios-deploying-signing</docanchor>
    <docanchor file="platforms-ios" title="Certificate trusting">platform-ios-deploying-certificate</docanchor>
    <docanchor file="platforms-ios" title="Deployment target">platform-ios-deploying-target</docanchor>
    <docanchor file="platforms-ios" title="Best practices">platforms-ios-best-practices</docanchor>
    <docanchor file="platforms-ios" title="Troubleshooting">platforms-ios-troubleshooting</docanchor>
  </compound>
  <compound kind="page">
    <name>platforms-linux</name>
    <title>Linux</title>
    <filename>platforms-linux</filename>
    <docanchor file="platforms-linux" title="Setting up Linux build on Travis CI">platforms-linux-travis</docanchor>
  </compound>
  <compound kind="page">
    <name>platforms-macos</name>
    <title>macOS</title>
    <filename>platforms-macos</filename>
    <docanchor file="platforms-macos" title="Bundle creation">platforms-macos-bundle</docanchor>
    <docanchor file="platforms-macos" title="HiDPI (Retina) support">platforms-macos-hidpi</docanchor>
    <docanchor file="platforms-macos" title="Clang version mapping">platforms-macos-clang-version-mapping</docanchor>
    <docanchor file="platforms-macos" title="Best practices">platforms-macos-opengl-best-practices</docanchor>
    <docanchor file="platforms-macos" title="Setting up macOS build on Travis CI">platforms-macos-travis</docanchor>
    <docanchor file="platforms-macos" title="Troubleshooting">platforms-macos-troubleshooting</docanchor>
  </compound>
  <compound kind="page">
    <name>platforms-windows</name>
    <title>Windows</title>
    <filename>platforms-windows</filename>
    <docanchor file="platforms-windows" title="HiDPI support">platforms-windows-hidpi</docanchor>
    <docanchor file="platforms-windows" title="Unicode support">platforms-windows-unicode</docanchor>
    <docanchor file="platforms-windows" title="Colored terminal output">platform-windows-terminal-colors</docanchor>
    <docanchor file="platforms-windows" title="Hiding console window">platform-windows-hiding-console</docanchor>
    <docanchor file="platforms-windows" title="Windows RT">platforms-windows-rt</docanchor>
    <docanchor file="platforms-windows" title="MSVC version mapping">platforms-windows-msvc-version-mapping</docanchor>
    <docanchor file="platforms-windows" title="Troubleshooting">platforms-windows-troubleshooting</docanchor>
    <docanchor file="platforms-windows" title="Ninja spams the output with tons of include file notices">platforms-windows-troubleshooting-ninja-includes</docanchor>
    <docanchor file="platforms-windows" title="Code page warnings with MSVC">platforms-windows-troubleshooting-file-encoding</docanchor>
  </compound>
  <compound kind="page">
    <name>plugins</name>
    <title>Loading and using plugins</title>
    <filename>plugins</filename>
    <docanchor file="plugins" title="Plugin interfaces">plugins-types</docanchor>
    <docanchor file="plugins" title="Loading and instantiating plugins">plugins-loading</docanchor>
    <docanchor file="plugins" title="Plugin dependencies">plugins-dependencies</docanchor>
    <docanchor file="plugins" title="Static plugins">plugins-static</docanchor>
    <docanchor file="plugins" title="Plugin aliases and &quot;any&quot; plugins">plugins-aliases</docanchor>
    <docanchor file="plugins" title="Plugin-specific configuration">plugins-configuration</docanchor>
    <docanchor file="plugins" title="Direct usage of plugins">plugins-direct</docanchor>
    <docanchor file="plugins" title="Developing your own plugins">plugins-develop</docanchor>
  </compound>
  <compound kind="page">
    <name>portability</name>
    <title>Writing portable applications</title>
    <filename>portability</filename>
    <docanchor file="portability" title="Target-specific code">portability-target</docanchor>
    <docanchor file="portability" title="Compiler- and platform-specific code">portability-compiler</docanchor>
    <docanchor file="portability" title="Extension-aware code">portability-extensions</docanchor>
    <docanchor file="portability" title="Writing portable shaders">portability-shaders</docanchor>
    <docanchor file="portability" title="Platform-specific application support">portability-applications</docanchor>
  </compound>
  <compound kind="page">
    <name>scenegraph</name>
    <title>Using the scene graph</title>
    <filename>scenegraph</filename>
    <docanchor file="scenegraph" title="Basic concepts">scenegraph-basic-concepts</docanchor>
    <docanchor file="scenegraph" title="Transformations">scenegraph-transformation</docanchor>
    <docanchor file="scenegraph" title="Scene hierarchy">scenegraph-hierarchy</docanchor>
    <docanchor file="scenegraph" title="Object features">scenegraph-features</docanchor>
    <docanchor file="scenegraph" title="Transformation caching in features">scenegraph-features-caching</docanchor>
    <docanchor file="scenegraph" title="Polymorphic access to object transformation">scenegraph-features-transformation</docanchor>
    <docanchor file="scenegraph" title="Construction and destruction order">scenegraph-construction-order</docanchor>
    <docanchor file="scenegraph" title="Object hierarchy">scenegraph-object-construction-order</docanchor>
    <docanchor file="scenegraph" title="Member and inherited features">scenegraph-feature-construction-order</docanchor>
  </compound>
  <compound kind="page">
    <name>shaders</name>
    <title>Builtin shaders</title>
    <filename>shaders</filename>
    <docanchor file="shaders" title="Usage">shaders-usage</docanchor>
    <docanchor file="shaders" title="Generic vertex attributes">shaders-generic</docanchor>
  </compound>
  <compound kind="page">
    <name>singles</name>
    <title>Single-header libraries</title>
    <filename>singles</filename>
    <docanchor file="singles" title="Behavior">singles-behavior</docanchor>
    <docanchor file="singles" title="Customization points">singles-customization</docanchor>
  </compound>
  <compound kind="page">
    <name>transformations</name>
    <title>2D and 3D transformations</title>
    <filename>transformations</filename>
    <docanchor file="transformations" title="Representing transformations">transformations-representation</docanchor>
    <docanchor file="transformations" title="Transformation types">transformations-types</docanchor>
    <docanchor file="transformations" title="Default (identity) transformation">transformations-default</docanchor>
    <docanchor file="transformations" title="Rotation">transformations-rotation</docanchor>
    <docanchor file="transformations" title="Translation">transformations-translation</docanchor>
    <docanchor file="transformations" title="Scaling and reflection">transformations-scaling</docanchor>
    <docanchor file="transformations" title="Projective transformations">transformations-projective</docanchor>
    <docanchor file="transformations" title="Composing and inverting transformations">transformations-composing</docanchor>
    <docanchor file="transformations" title="Transforming vectors and points">transformations-transforming</docanchor>
    <docanchor file="transformations" title="Transformation properties and conversion">transformations-properties</docanchor>
    <docanchor file="transformations" title="Transformation interpolation">transformations-interpolation</docanchor>
    <docanchor file="transformations" title="Normalizing transformations">transformations-normalization</docanchor>
    <docanchor file="transformations" title="Model/view terminology and Magnum">transformations-modelview</docanchor>
  </compound>
  <compound kind="page">
    <name>troubleshooting</name>
    <title>Troubleshooting</title>
    <filename>troubleshooting</filename>
    <docanchor file="troubleshooting" title="Building issues">troubleshooting-building</docanchor>
    <docanchor file="troubleshooting" title="Rendering issues">troubleshooting-rendering</docanchor>
    <docanchor file="troubleshooting" title="Debugging rendering">troubleshooting-debugging</docanchor>
  </compound>
  <compound kind="page">
    <name>types</name>
    <title>Math type system</title>
    <filename>types</filename>
    <docanchor file="types" title="Builtin types">types-builtin</docanchor>
    <docanchor file="types" title="Matrix/vector types">types-matrix</docanchor>
    <docanchor file="types" title="Binary representation">types-binary</docanchor>
    <docanchor file="types" title="Special types">types-special</docanchor>
    <docanchor file="types" title="Other types">types-other</docanchor>
    <docanchor file="types" title="Initialization">types-initialization</docanchor>
    <docanchor file="types" title="Integration with types from 3rd party APIs">types-thirdparty-integration</docanchor>
  </compound>
  <compound kind="page">
    <name>building-plugins</name>
    <title>Downloading and building plugins</title>
    <filename>building-plugins</filename>
    <docanchor file="building-plugins" title="Prepared packages">building-plugins-packages</docanchor>
    <docanchor file="building-plugins" title="Vcpkg packages on Windows">building-plugins-packages-vcpkg</docanchor>
    <docanchor file="building-plugins" title="ArchLinux packages">building-plugins-packages-arch</docanchor>
    <docanchor file="building-plugins" title="MSYS2 packages">building-plugins-packages-msys</docanchor>
    <docanchor file="building-plugins" title="Packages for Debian, Ubuntu and derivatives">building-plugins-packages-deb</docanchor>
    <docanchor file="building-plugins" title="Gentoo Linux ebuilds">building-plugins-packages-gentoo</docanchor>
    <docanchor file="building-plugins" title="Homebrew formulas for macOS">building-plugins-packages-brew</docanchor>
    <docanchor file="building-plugins" title="Manual build">building-plugins-manual</docanchor>
    <docanchor file="building-plugins" title="Enabling or disabling features">building-plugins-features</docanchor>
    <docanchor file="building-plugins" title="Building documentation">building-plugins-doc</docanchor>
    <docanchor file="building-plugins" title="Continuous Integration">building-plugins-ci</docanchor>
    <docanchor file="building-plugins" title="Travis">building-plugins-ci-travis</docanchor>
    <docanchor file="building-plugins" title="AppVeyor">building-plugins-ci-appveyor</docanchor>
    <docanchor file="building-plugins" title="Codecov.io">building-plugins-ci-coverage</docanchor>
  </compound>
  <compound kind="page">
    <name>changelog-plugins-old</name>
    <title>Plugins</title>
    <filename>changelog-plugins-old</filename>
    <docanchor file="changelog-plugins-old" title="2015.05">changelog-plugins-2015-05</docanchor>
    <docanchor file="changelog-plugins-old" title="New features">changelog-plugins-2015-05-new</docanchor>
    <docanchor file="changelog-plugins-old" title="Potential compatibility breakages, removed APIs">changelog-plugins-2015-05-compatibility</docanchor>
    <docanchor file="changelog-plugins-old" title="Build system">changelog-plugins-2015-05-buildsystem</docanchor>
    <docanchor file="changelog-plugins-old" title="2014.06">changelog-plugins-2014-06</docanchor>
    <docanchor file="changelog-plugins-old" title="Dependency changes">changelog-plugins-2014-06-dependencies</docanchor>
    <docanchor file="changelog-plugins-old" title="Changes">changelog-plugins-2014-06-changes</docanchor>
    <docanchor file="changelog-plugins-old" title="2014.01">changelog-plugins-2014-01</docanchor>
    <docanchor file="changelog-plugins-old" title="Dependency changes">changelog-plugins-2014-01-dependencies</docanchor>
    <docanchor file="changelog-plugins-old" title="New features">changelog-plugins-2014-01-new</docanchor>
    <docanchor file="changelog-plugins-old" title="Changes">changelog-plugins-2014-01-changes</docanchor>
    <docanchor file="changelog-plugins-old" title="Bug fixes">changelog-plugins-2014-01-bugfixes</docanchor>
    <docanchor file="changelog-plugins-old" title="Internal changes">changelog-plugins-2014-01-internal</docanchor>
    <docanchor file="changelog-plugins-old" title="2013.10">changelog-plugins-2013-10</docanchor>
    <docanchor file="changelog-plugins-old" title="Dependency changes">changelog-plugins-2013-10-dependencies</docanchor>
    <docanchor file="changelog-plugins-old" title="New features">changelog-plugins-2013-10-new</docanchor>
    <docanchor file="changelog-plugins-old" title="Changes">changelog-plugins-2013-10-changes</docanchor>
    <docanchor file="changelog-plugins-old" title="Bug fixes">changelog-plugins-2013-10-bugfixes</docanchor>
    <docanchor file="changelog-plugins-old" title="2013.08">changelog-plugins-2013-08</docanchor>
  </compound>
  <compound kind="page">
    <name>changelog-plugins</name>
    <title>Plugins</title>
    <filename>changelog-plugins</filename>
    <docanchor file="changelog-plugins" title="Changes since 2019.01">changelog-plugins-latest</docanchor>
    <docanchor file="changelog-plugins" title="New features">changelog-plugins-latest-new</docanchor>
    <docanchor file="changelog-plugins" title="Changes and improvements">changelog-plugins-latest-changes</docanchor>
    <docanchor file="changelog-plugins" title="Build system">changelog-plugins-latest-buildsystem</docanchor>
    <docanchor file="changelog-plugins" title="Bug fixes">changelog-plugins-latest-bugfixes</docanchor>
    <docanchor file="changelog-plugins" title="Potential compatibility breakages, removed APIs">changelog-plugins-latest-compatibility</docanchor>
    <docanchor file="changelog-plugins" title="2019.01">changelog-plugins-2019-01</docanchor>
    <docanchor file="changelog-plugins" title="Dependency changes">changelog-plugins-2019-01-dependencies</docanchor>
    <docanchor file="changelog-plugins" title="New features">changelog-plugins-2019-01-new</docanchor>
    <docanchor file="changelog-plugins" title="Changes and improvements">changelog-plugins-2019-01-changes</docanchor>
    <docanchor file="changelog-plugins" title="Build system">changelog-plugins-2019-01-buildsystem</docanchor>
    <docanchor file="changelog-plugins" title="Potential compatibility breakages, removed APIs">changelog-plugins-2019-01-compatibility</docanchor>
    <docanchor file="changelog-plugins" title="2018.10">changelog-plugins-2018-10</docanchor>
    <docanchor file="changelog-plugins" title="New features">changelog-plugins-2018-10-new</docanchor>
    <docanchor file="changelog-plugins" title="Changes and improvements">changelog-plugins-2018-10-changes</docanchor>
    <docanchor file="changelog-plugins" title="Build system">changelog-plugins-2018-10-buildsystem</docanchor>
    <docanchor file="changelog-plugins" title="Bug fixes">changelog-plugins-2018-10-bugfixes</docanchor>
    <docanchor file="changelog-plugins" title="Deprecated APIs">corrade-changelog-2018-10-deprecated</docanchor>
    <docanchor file="changelog-plugins" title="2018.04">changelog-plugins-2018-04</docanchor>
    <docanchor file="changelog-plugins" title="Dependency changes">changelog-plugins-2018-04-dependencies</docanchor>
    <docanchor file="changelog-plugins" title="New features">changelog-plugins-2018-04-new</docanchor>
    <docanchor file="changelog-plugins" title="Changes and improvements">changelog-plugins-2018-04-changes</docanchor>
    <docanchor file="changelog-plugins" title="Build system">changelog-plugins-2018-04-buildsystem</docanchor>
    <docanchor file="changelog-plugins" title="Bug fixes">changelog-plugins-2018-04-bugfixes</docanchor>
    <docanchor file="changelog-plugins" title="Deprecated APIs">changelog-plugins-2018-04-deprecated</docanchor>
    <docanchor file="changelog-plugins" title="Potential compatibility breakages">changelog-plugins-2018-04-compatibility</docanchor>
    <docanchor file="changelog-plugins" title="2018.02">changelog-plugins-2018-02</docanchor>
    <docanchor file="changelog-plugins" title="Dependency changes">changelog-plugins-2018-02-dependencies</docanchor>
    <docanchor file="changelog-plugins" title="New features">changelog-plugins-2018-02-new</docanchor>
    <docanchor file="changelog-plugins" title="Changes and improvements">changelog-plugins-2018-02-changes</docanchor>
    <docanchor file="changelog-plugins" title="Build system">changelog-plugins-2018-02-buildsystem</docanchor>
    <docanchor file="changelog-plugins" title="Bug fixes">changelog-plugins-2018-02-bugfixes</docanchor>
    <docanchor file="changelog-plugins" title="Potential compatibility breakages">changelog-plugins-2018-02-compatibility</docanchor>
    <docanchor file="changelog-plugins" title="Documentation">changelog-plugins-2018-02-documentation</docanchor>
  </compound>
  <compound kind="page">
    <name>cmake-plugins</name>
    <title>Plugin usage with CMake</title>
    <filename>cmake-plugins</filename>
    <docanchor file="cmake-plugins" title="Other CMake modules">cmake-plugins-modules</docanchor>
  </compound>
  <compound kind="page">
    <name>building-integration</name>
    <title>Downloading and building integration libraries</title>
    <filename>building-integration</filename>
    <docanchor file="building-integration" title="Prepared packages">building-integration-packages</docanchor>
    <docanchor file="building-integration" title="Vcpkg packages on Windows">building-integration-packages-vcpkg</docanchor>
    <docanchor file="building-integration" title="ArchLinux packages">building-integration-packages-arch</docanchor>
    <docanchor file="building-integration" title="MSYS2 packages">building-integration-packages-msys</docanchor>
    <docanchor file="building-integration" title="Packages for Debian, Ubuntu and derivatives">building-integration-packages-deb</docanchor>
    <docanchor file="building-integration" title="Gentoo Linux ebuilds">building-integration-packages-gentoo</docanchor>
    <docanchor file="building-integration" title="Homebrew formulas for macOS">building-integration-packages-brew</docanchor>
    <docanchor file="building-integration" title="Manual build">building-integration-manual</docanchor>
    <docanchor file="building-integration" title="Enabling or disabling features">building-integration-features</docanchor>
    <docanchor file="building-integration" title="Building documentation">building-integration-doc</docanchor>
    <docanchor file="building-integration" title="Continuous Integration">building-integration-ci</docanchor>
    <docanchor file="building-integration" title="Travis">building-integration-ci-travis</docanchor>
    <docanchor file="building-integration" title="AppVeyor">building-integration-ci-appveyor</docanchor>
    <docanchor file="building-integration" title="Codecov.io">building-integration-ci-coverage</docanchor>
  </compound>
  <compound kind="page">
    <name>changelog-integration-old</name>
    <title>Integration</title>
    <filename>changelog-integration-old</filename>
    <docanchor file="changelog-integration-old" title="2015.05">changelog-integration-2015-05</docanchor>
    <docanchor file="changelog-integration-old" title="Build system">changelog-integration-2015-05-buildsystem</docanchor>
    <docanchor file="changelog-integration-old" title="Deprecated APIs">changelog-integration-2015-05-deprecated</docanchor>
    <docanchor file="changelog-integration-old" title="Potential compatibility breakages, removed APIs">changelog-integration-2015-05-compatibility</docanchor>
    <docanchor file="changelog-integration-old" title="2014.06">changelog-integration-2014-06</docanchor>
    <docanchor file="changelog-integration-old" title="Dependency changes">changelog-integration-2014-06-dependencies</docanchor>
    <docanchor file="changelog-integration-old" title="Changes">changelog-integration-2014-06-changes</docanchor>
    <docanchor file="changelog-integration-old" title="Deprecated APIs">changelog-integration-2014-06-deprecated</docanchor>
    <docanchor file="changelog-integration-old" title="Potential compatibility breakages, removed APIs">changelog-integration-2014-06-compatibility</docanchor>
    <docanchor file="changelog-integration-old" title="2014.01">changelog-integration-2014-01</docanchor>
    <docanchor file="changelog-integration-old" title="Dependency changes">changelog-integration-2014-01-dependencies</docanchor>
    <docanchor file="changelog-integration-old" title="New features">changelog-integration-2014-01-new</docanchor>
    <docanchor file="changelog-integration-old" title="Deprecated APIs">changelog-integration-2014-01-deprecated</docanchor>
    <docanchor file="changelog-integration-old" title="Potential compatibility breakages, removed APIs">changelog-integration-2014-01-compatibility</docanchor>
    <docanchor file="changelog-integration-old" title="Internal changes">changelog-integration-2014-01-internal</docanchor>
    <docanchor file="changelog-integration-old" title="2013.10">changelog-integration-2013-10</docanchor>
    <docanchor file="changelog-integration-old" title="Dependency changes">changelog-integration-2013-10-dependencies</docanchor>
    <docanchor file="changelog-integration-old" title="Changes">changelog-integration-2013-10-changes</docanchor>
    <docanchor file="changelog-integration-old" title="Deprecated APIs">changelog-integration-2013-10-deprecated</docanchor>
    <docanchor file="changelog-integration-old" title="Potential compatibility breakages, removed APIs">changelog-integration-2013-10-compatibility</docanchor>
    <docanchor file="changelog-integration-old" title="2013.08">changelog-integration-2013-08</docanchor>
  </compound>
  <compound kind="page">
    <name>changelog-integration</name>
    <title>Integration</title>
    <filename>changelog-integration</filename>
    <docanchor file="changelog-integration" title="Changes since 2019.01">changelog-integration-latest</docanchor>
    <docanchor file="changelog-integration" title="New features">changelog-integration-latest-new</docanchor>
    <docanchor file="changelog-integration" title="Changes and improvements">changelog-integration-latest-changes</docanchor>
    <docanchor file="changelog-integration" title="Build system">changelog-integration-latest-buildsystem</docanchor>
    <docanchor file="changelog-integration" title="Bug fixes">changelog-integration-latest-bugfixes</docanchor>
    <docanchor file="changelog-integration" title="Potential compatibility breakages, removed APIs">changelog-integration-latest-compatibility</docanchor>
    <docanchor file="changelog-integration" title="Documentation">changelog-integration-latest-documentation</docanchor>
    <docanchor file="changelog-integration" title="2019.01">changelog-integration-2019-01</docanchor>
    <docanchor file="changelog-integration" title="Dependency changes">changelog-integration-2019-01-dependencies</docanchor>
    <docanchor file="changelog-integration" title="New features">changelog-integration-2019-01-new</docanchor>
    <docanchor file="changelog-integration" title="Bug fixes">changelog-integration-2019-01-bugfixes</docanchor>
    <docanchor file="changelog-integration" title="Deprecated APIs">changelog-integration-2019-01-deprecated</docanchor>
    <docanchor file="changelog-integration" title="Potential compatibility breakages, removed APIs">changelog-integration-2019-01-compatibility</docanchor>
    <docanchor file="changelog-integration" title="Documentation">changelog-integration-2019-01-documentation</docanchor>
    <docanchor file="changelog-integration" title="2018.10">changelog-integration-2018-10</docanchor>
    <docanchor file="changelog-integration" title="New features">changelog-integration-2018-10-new</docanchor>
    <docanchor file="changelog-integration" title="Changes and improvements">changelog-integration-2018-10-changes</docanchor>
    <docanchor file="changelog-integration" title="Build system">changelog-integration-2018-10-buildsystem</docanchor>
    <docanchor file="changelog-integration" title="Bug fixes">changelog-integration-2018-10-bugfixes</docanchor>
    <docanchor file="changelog-integration" title="Deprecated APIs">changelog-integration-2018-10-deprecated</docanchor>
    <docanchor file="changelog-integration" title="2018.04">changelog-integration-2018-04</docanchor>
    <docanchor file="changelog-integration" title="Dependency changes">changelog-integration-2018-04-dependencies</docanchor>
    <docanchor file="changelog-integration" title="Changes and improvements">changelog-integration-2018-04-changes</docanchor>
    <docanchor file="changelog-integration" title="Build system">changelog-integration-2018-04-buildsystem</docanchor>
    <docanchor file="changelog-integration" title="2018.02">changelog-integration-2018-02</docanchor>
    <docanchor file="changelog-integration" title="Dependency changes">changelog-integration-2018-02-dependencies</docanchor>
    <docanchor file="changelog-integration" title="New features">changelog-integration-2018-02-new</docanchor>
    <docanchor file="changelog-integration" title="Changes and improvements">changelog-integration-2018-02-changes</docanchor>
    <docanchor file="changelog-integration" title="Build system">changelog-integration-2018-02-buildsystem</docanchor>
    <docanchor file="changelog-integration" title="Bug fixes">changelog-integration-2018-02-bugfixes</docanchor>
    <docanchor file="changelog-integration" title="Deprecated APIs">changelog-integration-2018-02-deprecated</docanchor>
    <docanchor file="changelog-integration" title="Potential compatibility breakages, removed APIs">changelog-integration-2018-02-compatibility</docanchor>
    <docanchor file="changelog-integration" title="Documentation">changelog-integration-2018-02-documentation</docanchor>
  </compound>
  <compound kind="page">
    <name>cmake-integration</name>
    <title>Integration library usage with CMake</title>
    <filename>cmake-integration</filename>
    <docanchor file="cmake-integration" title="Other CMake modules">cmake-integration-modules</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-arealights</name>
    <title>Area lights</title>
    <filename>examples-arealights</filename>
    <docanchor file="examples-arealights" title="Controls">examples-arealights-controls</docanchor>
    <docanchor file="examples-arealights" title="Credits">examples-arealights-credits</docanchor>
    <docanchor file="examples-arealights" title="Source">examples-arealights-source</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-audio</name>
    <title>Audio</title>
    <filename>examples-audio</filename>
    <docanchor file="examples-audio" title="Key controls">examples-audio-controls</docanchor>
    <docanchor file="examples-audio" title="Credits">examples-audio-credits</docanchor>
    <docanchor file="examples-audio" title="Source">examples-audio-source</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-box2d</name>
    <title>Box2D</title>
    <filename>examples-box2d</filename>
    <docanchor file="examples-box2d" title="Key controls">examples-box2d-controls</docanchor>
    <docanchor file="examples-box2d" title="Credits">examples-box2d-credits</docanchor>
    <docanchor file="examples-box2d" title="Source">examples-box2d-source</docanchor>
  </compound>
  <compound kind="page">
    <name>building-examples</name>
    <title>Downloading and building examples</title>
    <filename>building-examples</filename>
    <docanchor file="building-examples" title="Prepared packages">building-examples-packages</docanchor>
    <docanchor file="building-examples" title="Vcpkg packages on Windows">building-examples-packages-vcpkg</docanchor>
    <docanchor file="building-examples" title="ArchLinux packages">building-examples-packages-arch</docanchor>
    <docanchor file="building-examples" title="Packages for Debian, Ubuntu and derivatives">building-examples-packages-deb</docanchor>
    <docanchor file="building-examples" title="Gentoo Linux ebuilds">building-examples-packages-gentoo</docanchor>
    <docanchor file="building-examples" title="Homebrew formulas for macOS">building-examples-packages-brew</docanchor>
    <docanchor file="building-examples" title="Manual build">building-examples-manual</docanchor>
    <docanchor file="building-examples" title="Enabling or disabling features">building-examples-features</docanchor>
    <docanchor file="building-examples" title="Building documentation">building-examples-doc</docanchor>
    <docanchor file="building-examples" title="Continuous Integration">building-examples-ci</docanchor>
    <docanchor file="building-examples" title="Travis">building-examples-ci-travis</docanchor>
    <docanchor file="building-examples" title="AppVeyor">building-examples-ci-appveyor</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-bullet</name>
    <title>Bullet Physics</title>
    <filename>examples-bullet</filename>
    <docanchor file="examples-bullet" title="Key controls">examples-bullet-controls</docanchor>
    <docanchor file="examples-bullet" title="Credits">examples-bullet-credits</docanchor>
    <docanchor file="examples-bullet" title="Source">examples-bullet-source</docanchor>
  </compound>
  <compound kind="page">
    <name>changelog-examples-old</name>
    <title>Examples</title>
    <filename>changelog-examples-old</filename>
    <docanchor file="changelog-examples-old" title="2015.05">changelog-examples-2015-05</docanchor>
    <docanchor file="changelog-examples-old" title="Changes">changelog-examples-2015-05-changes</docanchor>
    <docanchor file="changelog-examples-old" title="Bug fixes">changelog-examples-2015-05-bugfixes</docanchor>
    <docanchor file="changelog-examples-old" title="Build system">changelog-examples-2015-05-buildsystem</docanchor>
    <docanchor file="changelog-examples-old" title="Documentation">changelog-examples-2015-05-documentation</docanchor>
    <docanchor file="changelog-examples-old" title="2014.06">changelog-examples-2014-06</docanchor>
    <docanchor file="changelog-examples-old" title="Bug fixes">changelog-examples-2014-06-bugfixes</docanchor>
  </compound>
  <compound kind="page">
    <name>changelog-examples</name>
    <title>Examples</title>
    <filename>changelog-examples</filename>
    <docanchor file="changelog-examples" title="Changes since 2019.01">changelog-examples-latest</docanchor>
    <docanchor file="changelog-examples" title="New features">changelog-examples-latest-new</docanchor>
    <docanchor file="changelog-examples" title="Changes and improvements">changelog-examples-latest-changes</docanchor>
    <docanchor file="changelog-examples" title="Bug fixes">changelog-examples-latest-bugfixes</docanchor>
    <docanchor file="changelog-examples" title="2019.01">changelog-examples-2019-01</docanchor>
    <docanchor file="changelog-examples" title="Dependency changes">changelog-examples-2019-01-dependencies</docanchor>
    <docanchor file="changelog-examples" title="New features">changelog-examples-2019-01-new</docanchor>
    <docanchor file="changelog-examples" title="Changes and improvements">changelog-examples-2019-01-changes</docanchor>
    <docanchor file="changelog-examples" title="Documentation">changelog-examples-2019-01-documentation</docanchor>
    <docanchor file="changelog-examples" title="2018.10">changelog-examples-2018-10</docanchor>
    <docanchor file="changelog-examples" title="New features">changelog-examples-2018-10-new</docanchor>
    <docanchor file="changelog-examples" title="Changes and improvements">changelog-examples-2018-10-changes</docanchor>
    <docanchor file="changelog-examples" title="Build system">changelog-examples-2018-10-buildsystem</docanchor>
    <docanchor file="changelog-examples" title="Documentation">changelog-examples-2018-10-documentation</docanchor>
    <docanchor file="changelog-examples" title="2018.04">changelog-examples-2018-04</docanchor>
    <docanchor file="changelog-examples" title="Dependency changes">changelog-examples-2018-04-dependencies</docanchor>
    <docanchor file="changelog-examples" title="New features">changelog-examples-2018-04-new</docanchor>
    <docanchor file="changelog-examples" title="Changes and improvements">changelog-examples-2018-04-changes</docanchor>
    <docanchor file="changelog-examples" title="Build system">changelog-examples-2018-04-buildsystem</docanchor>
    <docanchor file="changelog-examples" title="Bug fixes">changelog-examples-2018-04-bugfixes</docanchor>
    <docanchor file="changelog-examples" title="2018.02">changelog-examples-2018-02</docanchor>
    <docanchor file="changelog-examples" title="Dependency changes">changelog-examples-2018-02-dependencies</docanchor>
    <docanchor file="changelog-examples" title="New features">changelog-examples-2018-02-new</docanchor>
    <docanchor file="changelog-examples" title="Changes and improvements">changelog-examples-2018-02-changes</docanchor>
    <docanchor file="changelog-examples" title="Build system">changelog-examples-2018-02-buildsystem</docanchor>
    <docanchor file="changelog-examples" title="Bug fixes">changelog-examples-2018-02-bugfixes</docanchor>
    <docanchor file="changelog-examples" title="Documentation">changelog-examples-2018-02-documentation</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-cubemap</name>
    <title>Cube map</title>
    <filename>examples-cubemap</filename>
    <docanchor file="examples-cubemap" title="Usage">examples-cubemap-usage</docanchor>
    <docanchor file="examples-cubemap" title="Key controls">examples-cubemap-controls</docanchor>
    <docanchor file="examples-cubemap" title="Credits">examples-cubemap-credits</docanchor>
    <docanchor file="examples-cubemap" title="Source">examples-cubemap-source</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-dart</name>
    <title>DART Physics</title>
    <filename>examples-dart</filename>
    <docanchor file="examples-dart" title="Key controls">examples-dart-controls</docanchor>
    <docanchor file="examples-dart" title="Credits">examples-dart-credits</docanchor>
    <docanchor file="examples-dart" title="Source">examples-dart-source</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-imgui</name>
    <title>ImGui</title>
    <filename>examples-imgui</filename>
    <docanchor file="examples-imgui" title="Controls">examples-imgui-controls</docanchor>
    <docanchor file="examples-imgui" title="Credits">examples-imgui-credits</docanchor>
    <docanchor file="examples-imgui" title="Source">examples-imgui-source</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-leapmotion</name>
    <title>Leap Motion</title>
    <filename>examples-leapmotion</filename>
    <docanchor file="examples-leapmotion" title="Usage">examples-leapmotion-usage</docanchor>
    <docanchor file="examples-leapmotion" title="Controls">examples-leapmotion-controls</docanchor>
    <docanchor file="examples-leapmotion" title="Credits">examples-leapmotion-credits</docanchor>
    <docanchor file="examples-leapmotion" title="Source">examples-leapmotion-source</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-motionblur</name>
    <title>Motion blur</title>
    <filename>examples-motionblur</filename>
    <docanchor file="examples-motionblur" title="Source">examples-motionblur-source</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-mouseinteraction</name>
    <title>Mouse Interaction</title>
    <filename>examples-mouseinteraction</filename>
    <docanchor file="examples-mouseinteraction" title="Controls">examples-mouseinteraction-controls</docanchor>
    <docanchor file="examples-mouseinteraction" title="Credits">examples-mouseinteraction-credits</docanchor>
    <docanchor file="examples-mouseinteraction" title="Source">examples-mouseinteraction-source</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-ovr</name>
    <title>Oculus VR</title>
    <filename>examples-ovr</filename>
    <docanchor file="examples-ovr" title="Usage">examples-ovr-usage</docanchor>
    <docanchor file="examples-ovr" title="Key controls">examples-ovr-controls</docanchor>
    <docanchor file="examples-ovr" title="Credits">examples-ovr-credits</docanchor>
    <docanchor file="examples-ovr" title="Source">examples-ovr-source</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-picking</name>
    <title>Object picking</title>
    <filename>examples-picking</filename>
    <docanchor file="examples-picking" title="Key controls">examples-picking-controls</docanchor>
    <docanchor file="examples-picking" title="Source">examples-picking-source</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-primitives</name>
    <title>Primitives</title>
    <filename>examples-primitives</filename>
    <docanchor file="examples-primitives" title="Setting up">examples-primitives-setup</docanchor>
    <docanchor file="examples-primitives" title="Preparing the mesh">examples-primitives-mesh</docanchor>
    <docanchor file="examples-primitives" title="Rendering">examples-primitives-rendering</docanchor>
    <docanchor file="examples-primitives" title="Mouse event handling">examples-primitives-events</docanchor>
    <docanchor file="examples-primitives" title="Compilation">examples-primitives-compilation</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-shadows</name>
    <title>Shadow map</title>
    <filename>examples-shadows</filename>
    <docanchor file="examples-shadows" title="Key controls">examples-shadows-controls</docanchor>
    <docanchor file="examples-shadows" title="Credits">examples-shadows-credits</docanchor>
    <docanchor file="examples-shadows" title="Source">examples-shadows-source</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-text</name>
    <title>Text rendering</title>
    <filename>examples-text</filename>
    <docanchor file="examples-text" title="Usage">examples-text-usage</docanchor>
    <docanchor file="examples-text" title="Credits">examples-text-credits</docanchor>
    <docanchor file="examples-text" title="Source">examples-text-source</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-textured-triangle</name>
    <title>Textured triangle</title>
    <filename>examples-textured-triangle</filename>
    <docanchor file="examples-textured-triangle" title="Basic skeleton">examples-textured-triangle-skeleton</docanchor>
    <docanchor file="examples-textured-triangle" title="Textured triangle shader">examples-textured-triangle-shader</docanchor>
    <docanchor file="examples-textured-triangle" title="Setting up the mesh and texture">examples-textured-triangle-setup</docanchor>
    <docanchor file="examples-textured-triangle" title="Compilation">examples-textured-triangle-compilation</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-triangle-plain-glfw</name>
    <title>Triangle using plain GLFW</title>
    <filename>examples-triangle-plain-glfw</filename>
  </compound>
  <compound kind="page">
    <name>examples-triangle-sokol</name>
    <title>Triangle using sokol_gfx</title>
    <filename>examples-triangle-sokol</filename>
    <docanchor file="examples-triangle-sokol" title="Credits">examples-triangle-sokol-credits</docanchor>
    <docanchor file="examples-triangle-sokol" title="Source">examples-triangle-sokol-source</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-triangle-vulkan</name>
    <title>Triangle using Vulkan</title>
    <filename>examples-triangle-vulkan</filename>
    <docanchor file="examples-triangle-vulkan" title="Source">examples-triangle-vulkan-source</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-triangle</name>
    <title>Your first triangle</title>
    <filename>examples-triangle</filename>
  </compound>
  <compound kind="page">
    <name>examples-viewer</name>
    <title>Model viewer</title>
    <filename>examples-viewer</filename>
    <docanchor file="examples-viewer" title="Scene graph">examples-viewer-scenegraph</docanchor>
    <docanchor file="examples-viewer" title="Setting up and initializing the scene graph">examples-viewer-setup</docanchor>
    <docanchor file="examples-viewer" title="Importing the data">examples-viewer-import</docanchor>
    <docanchor file="examples-viewer" title="Drawable objects">examples-viewer-objects</docanchor>
    <docanchor file="examples-viewer" title="Event handling">examples-viewer-interactivity</docanchor>
    <docanchor file="examples-viewer" title="Compilation">examples-viewer-compilation</docanchor>
    <docanchor file="examples-viewer" title="Credits">examples-viewer-credits</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-webvr</name>
    <title>WebVR</title>
    <filename>examples-webvr</filename>
    <docanchor file="examples-webvr" title="Controls">examples-webvr-controls</docanchor>
    <docanchor file="examples-webvr" title="Credits">examples-webvr-credits</docanchor>
    <docanchor file="examples-webvr" title="Source">examples-webvr-source</docanchor>
  </compound>
  <compound kind="page">
    <name>magnum-ui-gallery</name>
    <title>Magnum::Ui Gallery</title>
    <filename>magnum-ui-gallery</filename>
    <docanchor file="magnum-ui-gallery" title="Usage">magnum-ui-gallery-usage</docanchor>
  </compound>
  <compound kind="page">
    <name>building-extras</name>
    <title>Downloading and building extras</title>
    <filename>building-extras</filename>
    <docanchor file="building-extras" title="Prepared packages">building-extras-packages</docanchor>
    <docanchor file="building-extras" title="Vcpkg packages on Windows">building-extras-packages-vcpkg</docanchor>
    <docanchor file="building-extras" title="ArchLinux packages">building-extras-packages-arch</docanchor>
    <docanchor file="building-extras" title="Packages for Debian, Ubuntu and derivatives">building-extras-packages-deb</docanchor>
    <docanchor file="building-extras" title="Gentoo Linux ebuilds">building-extras-packages-gentoo</docanchor>
    <docanchor file="building-extras" title="Homebrew formulas for macOS">building-extras-packages-brew</docanchor>
    <docanchor file="building-extras" title="Manual build">building-extras-manual</docanchor>
    <docanchor file="building-extras" title="Enabling or disabling features">building-extras-features</docanchor>
    <docanchor file="building-extras" title="Building documentation">building-extras-doc</docanchor>
    <docanchor file="building-extras" title="Continuous Integration">building-extras-ci</docanchor>
    <docanchor file="building-extras" title="Travis">building-extras-ci-travis</docanchor>
    <docanchor file="building-extras" title="AppVeyor">building-extras-ci-appveyor</docanchor>
    <docanchor file="building-extras" title="Codecov.io">building-extras-ci-coverage</docanchor>
  </compound>
  <compound kind="page">
    <name>changelog-extras</name>
    <title>Extras</title>
    <filename>changelog-extras</filename>
    <docanchor file="changelog-extras" title="Changes since 2019.01">changelog-extras-latest</docanchor>
    <docanchor file="changelog-extras" title="New features">changelog-extras-latest-new</docanchor>
    <docanchor file="changelog-extras" title="Changes and improvements">changelog-extras-latest-changes</docanchor>
    <docanchor file="changelog-extras" title="Build system">changelog-extras-latest-buildsystem</docanchor>
    <docanchor file="changelog-extras" title="2019.01">changelog-extras-2019-01</docanchor>
    <docanchor file="changelog-extras" title="Dependency changes">changelog-extras-2019-01-dependencies</docanchor>
    <docanchor file="changelog-extras" title="2018.10">changelog-extras-2018-10</docanchor>
    <docanchor file="changelog-extras" title="New features">changelog-extras-2018-10-new</docanchor>
    <docanchor file="changelog-extras" title="Changes and improvements">changelog-extras-2018-10-changes</docanchor>
    <docanchor file="changelog-extras" title="Build system">changelog-extras-2018-10-buildsystem</docanchor>
    <docanchor file="changelog-extras" title="Bug fixes">changelog-extras-2018-10-bugfixed</docanchor>
    <docanchor file="changelog-extras" title="2018.04">changelog-extras-2018-04</docanchor>
    <docanchor file="changelog-extras" title="Dependency changes">changelog-extras-2018-04-dependencies</docanchor>
    <docanchor file="changelog-extras" title="Build system">changelog-extras-2018-04-buildsystem</docanchor>
    <docanchor file="changelog-extras" title="2018.02">changelog-extras-2018-02</docanchor>
    <docanchor file="changelog-extras" title="New features">changelog-extras-2018-02-new</docanchor>
    <docanchor file="changelog-extras" title="Build system">changelog-extras-2018-02-buildsystem</docanchor>
    <docanchor file="changelog-extras" title="Deprecated APIs">changelog-extras-2018-02-deprecated</docanchor>
    <docanchor file="changelog-extras" title="Documentation">changelog-extras-2018-02-documentation</docanchor>
  </compound>
  <compound kind="page">
    <name>cmake-extras</name>
    <title>Extras library usage with CMake</title>
    <filename>cmake-extras</filename>
    <docanchor file="cmake-extras" title="Other CMake modules">cmake-extras-modules</docanchor>
  </compound>
  <compound kind="page">
    <name>magnum-player</name>
    <title>Magnum Player</title>
    <filename>magnum-player</filename>
    <docanchor file="magnum-player" title="Controls">magnum-player-controls</docanchor>
    <docanchor file="magnum-player" title="Usage">magnum-player-usage</docanchor>
    <docanchor file="magnum-player" title="Credits">magnum-player-credits</docanchor>
  </compound>
  <compound kind="page">
    <name>ui</name>
    <title>UI library</title>
    <filename>ui</filename>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>Magnum</title>
    <filename>index</filename>
    <docanchor file="index" title="What&apos;s new?">mainpage-whats-new</docanchor>
    <docanchor file="index" title="Getting started">mainpage-getting-started</docanchor>
    <docanchor file="index" title="Contact &amp; support">mainpage-contact</docanchor>
    <docanchor file="index" title="License">mainpage-license</docanchor>
  </compound>
</tagfile>
